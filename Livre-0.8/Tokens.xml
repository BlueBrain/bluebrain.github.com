<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>LIVRECORE_VERSION_MAJOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>ac9852ea1b24b73320a1832e3cd440037</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIVRECORE_VERSION_MINOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a82969504e3fb17490c7619bd4d0b9420</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIVRECORE_VERSION_PATCH</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>aadfb91755a4d9630a233502678175531</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIVRECORE_VERSION_REVISION</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>ad6a31dc418b4533d01581aa17deb9cc9</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIVRECORE_VERSION_ABI</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a70bc347a9599d84be08ae86d1e25a5de</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIVRECORE_VERSION_GT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a70dac920a927523d96c1a076876947fb</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIVRECORE_VERSION_GE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a922dd9c7d4ea429be563a27eea94b183</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIVRECORE_VERSION_LT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>aa7062263956f494a7793f56ff09a6937</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIVRECORE_VERSION_LE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>ae08b586e95e6dba50dd3ab896ff855c0</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Changelog</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>Changelog.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Technical_Overview</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>Technical_Overview.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tuvok_Tool</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>Tuvok_Tool.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>User_Guide</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>User_Guide.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>livre::AllocMemoryUnit</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>livre::AllocMemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_alloc_memory_unit.html</Path>
    <Abstract>The AllocMemoryUnit class shows an allocated memory pointer to keep track of memory consumption...</Abstract>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AllocMemoryUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::AllocMemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_alloc_memory_unit.html</Path>
    <Anchor>aa5940f5b76c06cf0590b030e41987381</Anchor>
    <Abstract>Allocate and copy the data from the given source and size. </Abstract>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AllocMemoryUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::AllocMemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_alloc_memory_unit.html</Path>
    <Anchor>aefedb5a333c10b812f5381333a76643a</Anchor>
    <Abstract>&quot;void&quot; specialization of the constructor </Abstract>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AllocMemoryUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::AllocMemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_alloc_memory_unit.html</Path>
    <Anchor>a35bae6d366e2d412d4af5d96098df6d7</Anchor>
    <Abstract>Allocate and copy the data from the given source and size. </Abstract>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AllocMemoryUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::AllocMemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_alloc_memory_unit.html</Path>
    <Anchor>a7e23fa2287ce767fd284cd07a0ca0a4c</Anchor>
    <Abstract>Allocates memory in bytes in given size. </Abstract>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAllocSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::AllocMemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_alloc_memory_unit.html</Path>
    <Anchor>a0bc6bab5010fb6566108f5ff6ddb2651</Anchor>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::MemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_memory_unit.html</Path>
    <Anchor>a82d8fab91d99213f62d4c448fea76965</Anchor>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::MemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_memory_unit.html</Path>
    <Anchor>a7e274c23c4da91dea630f3905da2c557</Anchor>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>livre::ConstMemoryUnit</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>livre::ConstMemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_const_memory_unit.html</Path>
    <Abstract>The ConstMemoryUnit class shows a arbitrary memory pointer. </Abstract>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::MemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_memory_unit.html</Path>
    <Anchor>a82d8fab91d99213f62d4c448fea76965</Anchor>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::MemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_memory_unit.html</Path>
    <Anchor>a7e274c23c4da91dea630f3905da2c557</Anchor>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAllocSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::ConstMemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_const_memory_unit.html</Path>
    <Anchor>a42af63510d3647a9b6fd23fd7b2bd11d</Anchor>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::ConstMemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_const_memory_unit.html</Path>
    <Anchor>a6c2b11528cac49833d196968409ca69d</Anchor>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::ConstMemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_const_memory_unit.html</Path>
    <Anchor>ad52cfb396c5e717871fced78b956816a</Anchor>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>livre::DataSourcePlugin</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>livre::DataSourcePlugin</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_data_source_plugin.html</Path>
    <Abstract>Interface for volume data sources. </Abstract>
    <DeclaredIn>DataSourcePlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InterfaceT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>livre::DataSourcePlugin</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_data_source_plugin.html</Path>
    <Anchor>a77e2457796b1d27454af3349cefd3306</Anchor>
    <Abstract>Needed by the PluginRegisterer. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InitDataT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>livre::DataSourcePlugin</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_data_source_plugin.html</Path>
    <Anchor>a862a0794cdd6abf334db665583086d33</Anchor>
    <Abstract>Needed by the PluginRegisterer. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVolumeInfo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::DataSourcePlugin</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_data_source_plugin.html</Path>
    <Anchor>a9f121a2fbcc31c95ea58326963dd2099</Anchor>
    <DeclaredIn>DataSourcePlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeGL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::DataSourcePlugin</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_data_source_plugin.html</Path>
    <Anchor>a1219e01f6a9132de4f3e0a07cf03aa50</Anchor>
    <Abstract>Initializes the GL specific functions. </Abstract>
    <DeclaredIn>DataSourcePlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::DataSourcePlugin</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_data_source_plugin.html</Path>
    <Anchor>a4414349bdcac3e76a820d04ec79ddfcf</Anchor>
    <Abstract>Read the data for a given node. </Abstract>
    <DeclaredIn>DataSourcePlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>internalNodeToLODNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::DataSourcePlugin</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_data_source_plugin.html</Path>
    <Anchor>ac62bcd839931bd6cfa0c07e2615ed185</Anchor>
    <Abstract>Converts internal node to lod node. </Abstract>
    <DeclaredIn>DataSourcePlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::DataSourcePlugin</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_data_source_plugin.html</Path>
    <Anchor>a3df26fd289c14867d90a16006e18d3b8</Anchor>
    <Abstract>Updates the data source. </Abstract>
    <DeclaredIn>DataSourcePlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::DataSourcePlugin</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_data_source_plugin.html</Path>
    <Anchor>a94912dce35d46c61d454214869e8b41f</Anchor>
    <DeclaredIn>DataSourcePlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>livre::DataSourcePluginData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>livre::DataSourcePluginData</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_data_source_plugin_data.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>livre::DeleteArray</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>livre::DeleteArray</Scope>
    </TokenIdentifier>
    <Path>structlivre_1_1_delete_array.html</Path>
    <Abstract>Helper classes for shared_ptr objects. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>livre::DeleteObject</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>livre::DeleteObject</Scope>
    </TokenIdentifier>
    <Path>structlivre_1_1_delete_object.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>livre::DontDeleteObject</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>livre::DontDeleteObject</Scope>
    </TokenIdentifier>
    <Path>structlivre_1_1_dont_delete_object.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>livre::GLContext</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>livre::GLContext</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_g_l_context.html</Path>
    <Abstract>The GLContext class is the warpper for different kinds of OpenGL contexts. </Abstract>
    <DeclaredIn>GLContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>share</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::GLContext</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_g_l_context.html</Path>
    <Anchor>a506eb24a015d3ef6839dea55c92037c5</Anchor>
    <Abstract>Shares the context with the source context. </Abstract>
    <DeclaredIn>GLContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::GLContext</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_g_l_context.html</Path>
    <Anchor>a7b76f389693ecf78ec59c92a30579f43</Anchor>
    <DeclaredIn>GLContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::GLContext</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_g_l_context.html</Path>
    <Anchor>a19ff075882cba25a29393a8af8e024c4</Anchor>
    <Abstract>Makes the context current. </Abstract>
    <DeclaredIn>GLContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doneCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::GLContext</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_g_l_context.html</Path>
    <Anchor>a59a5e015110f679d9e0c3802bec8de00</Anchor>
    <Abstract>Clears the current context. </Abstract>
    <DeclaredIn>GLContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glewGetContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::GLContext</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_g_l_context.html</Path>
    <Anchor>aababae9e9df08744799de278ad89518b</Anchor>
    <DeclaredIn>GLContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>livre::GLContext</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_g_l_context.html</Path>
    <Anchor>ab8c3f4a7a2888ae8096e984abe03fa71</Anchor>
    <Abstract>Gets the current context. </Abstract>
    <DeclaredIn>GLContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>livre::GLSLShaders</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>livre::GLSLShaders</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_g_l_s_l_shaders.html</Path>
    <Abstract>Loads vertex, fragment and geometry shaders with GLSL include directive support. </Abstract>
    <DeclaredIn>GLSLShaders.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadShaders</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::GLSLShaders</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_g_l_s_l_shaders.html</Path>
    <Anchor>aaf763753a677c54f2e98361987d71754</Anchor>
    <Abstract>Load shaders from strings with glsl&amp;#39;s include directive support. </Abstract>
    <DeclaredIn>GLSLShaders.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProgram</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::GLSLShaders</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_g_l_s_l_shaders.html</Path>
    <Anchor>abf9c5ddad548a8cf99932031ffb4e00a</Anchor>
    <DeclaredIn>GLSLShaders.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkOpenGLExtension</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::GLSLShaders</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_g_l_s_l_shaders.html</Path>
    <Anchor>a9bf9f746b591f6973537480385d87a16</Anchor>
    <Abstract>Check if an OpenGL extension is available. </Abstract>
    <DeclaredIn>GLSLShaders.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>livre::Histogram</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>livre::Histogram</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_histogram.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Histogram</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::Histogram</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_histogram.html</Path>
    <Anchor>a33d900bbdc6f89c553f2a2911e573b66</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Histogram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Histogram</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::Histogram</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_histogram.html</Path>
    <Anchor>a8c7a4833e878454a85087fc41217f442</Anchor>
    <Abstract>Copy the histogram. </Abstract>
    <DeclaredIn>Histogram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::Histogram</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_histogram.html</Path>
    <Anchor>a68d9f9a04ab140f9b9695fe0e5b8231b</Anchor>
    <Abstract>Computes the addition of two histograms and modifies the object. </Abstract>
    <DeclaredIn>Histogram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDataUniform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::Histogram</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_histogram.html</Path>
    <Anchor>aec7bfa1fbd662c3de91aea4a4a6ba5e8</Anchor>
    <Abstract>Queries uniformity of the data. </Abstract>
    <DeclaredIn>Histogram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::Histogram</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_histogram.html</Path>
    <Anchor>ae1bdfd90cdd3b46e872977b78fdbf3af</Anchor>
    <DeclaredIn>Histogram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::Histogram</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_histogram.html</Path>
    <Anchor>a5b97bb91400a9cd6000ce488198d287f</Anchor>
    <DeclaredIn>Histogram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::Histogram</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_histogram.html</Path>
    <Anchor>a12765883c0becef8b799a1e3a9fc6cc3</Anchor>
    <DeclaredIn>Histogram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::Histogram</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_histogram.html</Path>
    <Anchor>aa0096e379da321c850b843d7105c8269</Anchor>
    <DeclaredIn>Histogram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::Histogram</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_histogram.html</Path>
    <Anchor>a8db504dc2444889798575ec216342734</Anchor>
    <DeclaredIn>Histogram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::Histogram</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_histogram.html</Path>
    <Anchor>a8d62edf1af6d65defa5c78e17dc186db</Anchor>
    <Abstract>Computes the ratio of the value at a given index. </Abstract>
    <DeclaredIn>Histogram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::Histogram</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_histogram.html</Path>
    <Anchor>a1a76788fa3496d52c7c4491c4e4c2455</Anchor>
    <Abstract>Sets the number of bins to newSize and clears the histogram. </Abstract>
    <DeclaredIn>Histogram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>livre::LODNode</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>livre::LODNode</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_l_o_d_node.html</Path>
    <Abstract>Defines the spatial structure of a node in terms of world space, size and voxel dimensions. </Abstract>
    <DeclaredIn>LODNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LODNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::LODNode</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_l_o_d_node.html</Path>
    <Anchor>a4cf4b267cb54d38abb35a134bc4c8c45</Anchor>
    <Abstract>Construct an invalid LODNode. </Abstract>
    <DeclaredIn>LODNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LODNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::LODNode</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_l_o_d_node.html</Path>
    <Anchor>aa024d23a9e0d5b7e61fb8ef72f7f68fc</Anchor>
    <Abstract>Compute the world position from given information. </Abstract>
    <DeclaredIn>LODNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LODNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::LODNode</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_l_o_d_node.html</Path>
    <Anchor>a5324f3d52f15362ef28b22f54ff43f4b</Anchor>
    <Abstract>Compute the world position from given information. </Abstract>
    <DeclaredIn>LODNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAbsolutePosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::LODNode</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_l_o_d_node.html</Path>
    <Anchor>a7485ed533fe911e1337fdc04883d1611</Anchor>
    <Abstract>Get the absolute node position wrt its level. </Abstract>
    <DeclaredIn>LODNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRelativePosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::LODNode</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_l_o_d_node.html</Path>
    <Anchor>a6ae4cffe00c659bcf2c3dc32643e8e1e</Anchor>
    <DeclaredIn>LODNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVoxelBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::LODNode</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_l_o_d_node.html</Path>
    <Anchor>ad6f94287d0e1aa322b560a8f9d6c3150</Anchor>
    <DeclaredIn>LODNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWorldBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::LODNode</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_l_o_d_node.html</Path>
    <Anchor>af0c1b5a3d325729b76953d482b652d95</Anchor>
    <DeclaredIn>LODNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRefLevel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::LODNode</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_l_o_d_node.html</Path>
    <Anchor>ae08e05e94db5b43977747969e8a7fac2</Anchor>
    <DeclaredIn>LODNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNodeId</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::LODNode</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_l_o_d_node.html</Path>
    <Anchor>ade7b069cb004366db643c06f20b927d5</Anchor>
    <DeclaredIn>LODNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::LODNode</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_l_o_d_node.html</Path>
    <Anchor>af49d77ed9d87141aa5c4fc8bdf140c49</Anchor>
    <DeclaredIn>LODNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::LODNode</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_l_o_d_node.html</Path>
    <Anchor>a20d3d51080be16e06b13f8aab9a4155f</Anchor>
    <DeclaredIn>LODNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::LODNode</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_l_o_d_node.html</Path>
    <Anchor>adb82e5c1d29ae1f6e370b85be6ec826e</Anchor>
    <DeclaredIn>LODNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBlockSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::LODNode</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_l_o_d_node.html</Path>
    <Anchor>acbb0375e0458d74fc22d2edbc71ed8d4</Anchor>
    <DeclaredIn>LODNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>livre::MemoryUnit</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>livre::MemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_memory_unit.html</Path>
    <Abstract>The MemoryUnit class the base class for carrying memory information. </Abstract>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::MemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_memory_unit.html</Path>
    <Anchor>a82d8fab91d99213f62d4c448fea76965</Anchor>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::MemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_memory_unit.html</Path>
    <Anchor>a7e274c23c4da91dea630f3905da2c557</Anchor>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAllocSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::MemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_memory_unit.html</Path>
    <Anchor>a1b2910da2acb0ce7604cabf7ba5c51e2</Anchor>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::MemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_memory_unit.html</Path>
    <Anchor>a79cabea93060ae9f7cfad5568e70a7de</Anchor>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::MemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_memory_unit.html</Path>
    <Anchor>a73ca4bb80738eb20b7733a15df356d86</Anchor>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>livre::NodeId</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>livre::NodeId</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_node_id.html</Path>
    <Abstract>Identifier for octree LOD nodes. </Abstract>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NodeId</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NodeId</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_node_id.html</Path>
    <Anchor>a54ded1e37d499635cbe4bd57457a18aa</Anchor>
    <Abstract>Constructs an invalid NodeId. </Abstract>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NodeId</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NodeId</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_node_id.html</Path>
    <Anchor>a4c724b95437fa40b2cbce95a3deb3a45</Anchor>
    <Abstract>Constructs a LOD identifier. </Abstract>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NodeId</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NodeId</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_node_id.html</Path>
    <Anchor>a05c6f427377aa350c68b949e343ba563</Anchor>
    <Abstract>Constructs a LOD identifier. </Abstract>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLevel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NodeId</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_node_id.html</Path>
    <Anchor>a55a71a3b1fa35f1a0b564c1e9b11cd0b</Anchor>
    <Abstract>The octree level. </Abstract>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimeStep</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NodeId</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_node_id.html</Path>
    <Anchor>aade941df3202b1552d5d35f953a0da2d</Anchor>
    <Abstract>Temporal position. </Abstract>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NodeId</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_node_id.html</Path>
    <Anchor>a498a467e132c1a8938d80ecc5540ab7d</Anchor>
    <Abstract>Is one of the root nodes. </Abstract>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NodeId</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_node_id.html</Path>
    <Anchor>ae9177230097c51052ba832a3c8cd03dd</Anchor>
    <Abstract>Return position in current level of octree. </Abstract>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NodeId</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_node_id.html</Path>
    <Anchor>af0fb469f709c56e429b6666f075e94aa</Anchor>
    <Abstract>Return all parents. </Abstract>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NodeId</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_node_id.html</Path>
    <Anchor>aa79c4414cd868e0bf2cfe8f1c79c329e</Anchor>
    <Abstract>Return direct parent. </Abstract>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NodeId</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_node_id.html</Path>
    <Anchor>addb8721d58196b914b6fea2ebc11971b</Anchor>
    <Abstract>Is parentNodeId my parent. </Abstract>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isChild</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NodeId</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_node_id.html</Path>
    <Anchor>a0f9b7337250e5c80ef39a50a7b68e640</Anchor>
    <Abstract>Is childNodeId my child. </Abstract>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NodeId</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_node_id.html</Path>
    <Anchor>a5ea5d3783baee8336c7518b9847c26ba</Anchor>
    <Abstract>Is valid node id. </Abstract>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChildren</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NodeId</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_node_id.html</Path>
    <Anchor>a64bb86d3874465371e389891bd941b5e</Anchor>
    <Abstract>Returns children. </Abstract>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NodeId</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_node_id.html</Path>
    <Anchor>a90bfb5a7f074b640774af27ebcfee8cf</Anchor>
    <Abstract>Return root node. </Abstract>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NodeId</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_node_id.html</Path>
    <Anchor>aaa407b8187a8dbce9e4e20b73f53a3e6</Anchor>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NodeId</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_node_id.html</Path>
    <Anchor>af59a6e540bf24057482af38071191384</Anchor>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NodeId</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_node_id.html</Path>
    <Anchor>a94a65cea0652953f09d109f0a8319378</Anchor>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NodeId</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_node_id.html</Path>
    <Anchor>aa18a7457c07e89136308b0a40cc12ae9</Anchor>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NodeId</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_node_id.html</Path>
    <Anchor>a92c2fc16fb38a9eb356bc8dc80a4d095</Anchor>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NodeId</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_node_id.html</Path>
    <Anchor>a6cd7437d9bcf75e9bdf7fa004937f7d6</Anchor>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>livre::NoMemoryUnit</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>livre::NoMemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_no_memory_unit.html</Path>
    <Abstract>MemoryUnit holding no data at all. </Abstract>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAllocSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NoMemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_no_memory_unit.html</Path>
    <Anchor>ac4d473c9ba1ccda6fc03c2c4b8ea97ed</Anchor>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::MemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_memory_unit.html</Path>
    <Anchor>a82d8fab91d99213f62d4c448fea76965</Anchor>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::MemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_memory_unit.html</Path>
    <Anchor>a7e274c23c4da91dea630f3905da2c557</Anchor>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>livre::RootNode</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>livre::RootNode</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_root_node.html</Path>
    <Abstract>Holds the number of levels of an LOD tree and the number of blocks at its root. </Abstract>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RootNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::RootNode</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_root_node.html</Path>
    <Anchor>a70d4e398a21b5653fed35627576e4988</Anchor>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDepth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::RootNode</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_root_node.html</Path>
    <Anchor>a38f5710a885354374324561de49482b0</Anchor>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBlockSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::RootNode</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_root_node.html</Path>
    <Anchor>a1b30503d8f9d992b8570d983b3ffa85d</Anchor>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>livre::ShaderData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>livre::ShaderData</Scope>
    </TokenIdentifier>
    <Path>structlivre_1_1_shader_data.html</Path>
    <Abstract>The ShaderData structure holds all the informations for the shader (strings for vertex, geometry, fragment shader and strings for separate glsl code used with glsl&amp;#39;s include directive). </Abstract>
    <DeclaredIn>GLSLShaders.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>livre::VolumeInformation</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>livre::VolumeInformation</Scope>
    </TokenIdentifier>
    <Path>structlivre_1_1_volume_information.html</Path>
    <Abstract>Properties of the volumetric data. </Abstract>
    <DeclaredIn>VolumeInformation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBytesPerVoxel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>livre::VolumeInformation</Scope>
    </TokenIdentifier>
    <Path>structlivre_1_1_volume_information.html</Path>
    <Anchor>aba6f9b7e2797e9f52f5a9767fa6aee59</Anchor>
    <DeclaredIn>VolumeInformation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bigEndian</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>livre::VolumeInformation</Scope>
    </TokenIdentifier>
    <Path>structlivre_1_1_volume_information.html</Path>
    <Anchor>a275946016782c16d2f79afabbd67b9ca</Anchor>
    <Abstract>The endianness of the data. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>livre::VolumeInformation</Scope>
    </TokenIdentifier>
    <Path>structlivre_1_1_volume_information.html</Path>
    <Anchor>a73e99fefb8c72b146af1b8cfe03d5212</Anchor>
    <Abstract>The component count of voxel. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dataType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>livre::VolumeInformation</Scope>
    </TokenIdentifier>
    <Path>structlivre_1_1_volume_information.html</Path>
    <Anchor>a7accaca6d02ccdf79c117a3df56c533e</Anchor>
    <Abstract>The data type of every component of voxel. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>overlap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>livre::VolumeInformation</Scope>
    </TokenIdentifier>
    <Path>structlivre_1_1_volume_information.html</Path>
    <Anchor>aa64dd5a2b03f0ae280999e3ef456df03</Anchor>
    <Abstract>The overlap voxels between blocks. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maximumBlockSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>livre::VolumeInformation</Scope>
    </TokenIdentifier>
    <Path>structlivre_1_1_volume_information.html</Path>
    <Anchor>a7f58df57b66e81d07df72c398c1b9dfd</Anchor>
    <Abstract>The maximum voxel size of a block. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>voxels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>livre::VolumeInformation</Scope>
    </TokenIdentifier>
    <Path>structlivre_1_1_volume_information.html</Path>
    <Anchor>ad633acafd86040a13e9cccc05b899c44</Anchor>
    <Abstract>The size (number of voxels) in each dimension. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>worldSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>livre::VolumeInformation</Scope>
    </TokenIdentifier>
    <Path>structlivre_1_1_volume_information.html</Path>
    <Anchor>a0f07c31b2ef19bc5d504adb21ac67253</Anchor>
    <Abstract>The normalized size of the volume. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dataToLivreTransform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>livre::VolumeInformation</Scope>
    </TokenIdentifier>
    <Path>structlivre_1_1_volume_information.html</Path>
    <Anchor>a1d41a4d1e5f1cffeb1e39b005104bcf3</Anchor>
    <Abstract>The transformation matrix between data space and livre space. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resolution</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>livre::VolumeInformation</Scope>
    </TokenIdentifier>
    <Path>structlivre_1_1_volume_information.html</Path>
    <Anchor>a178af1f8de49129c710cbc18a2e1c96e</Anchor>
    <Abstract>The resolution in &quot;data units&quot;/voxel. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>worldSpacePerVoxel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>livre::VolumeInformation</Scope>
    </TokenIdentifier>
    <Path>structlivre_1_1_volume_information.html</Path>
    <Anchor>aa87a078506535e6dfe5b1c71c981c243</Anchor>
    <Abstract>The world space per voxel. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>meterToDataUnitRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>livre::VolumeInformation</Scope>
    </TokenIdentifier>
    <Path>structlivre_1_1_volume_information.html</Path>
    <Anchor>a4ac1a3924b611e51bf6b06e0a33b3793</Anchor>
    <Abstract>The ratio between a meter and the unit used by the data. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rootNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>livre::VolumeInformation</Scope>
    </TokenIdentifier>
    <Path>structlivre_1_1_volume_information.html</Path>
    <Anchor>a3afc8abaf0803c82c837604d3b45cfcc</Anchor>
    <Abstract>Root node info keeps level count, number of blocks, number of frames. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>livre::VolumeInformation</Scope>
    </TokenIdentifier>
    <Path>structlivre_1_1_volume_information.html</Path>
    <Anchor>a38580093238052e2283658bf5d778de5</Anchor>
    <Abstract>The frame range for the data sources. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>description</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>livre::VolumeInformation</Scope>
    </TokenIdentifier>
    <Path>structlivre_1_1_volume_information.html</Path>
    <Anchor>a8d9ebcce24cc17ffe6cd271b12be1e66</Anchor>
    <Abstract>Optional description for end users. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>livrecore::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>livrecore::Version</Scope>
    </TokenIdentifier>
    <Path>classlivrecore_1_1_version.html</Path>
    <Abstract>Information about the current LivreCore version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>livrecore::Version</Scope>
    </TokenIdentifier>
    <Path>classlivrecore_1_1_version.html</Path>
    <Anchor>ac7fae924c506e38def00f88cbe924d97</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>livrecore::Version</Scope>
    </TokenIdentifier>
    <Path>classlivrecore_1_1_version.html</Path>
    <Anchor>a70a2b01332da98f450cada3b37cadc9d</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>livrecore::Version</Scope>
    </TokenIdentifier>
    <Path>classlivrecore_1_1_version.html</Path>
    <Anchor>af21985e9ea26ed0784ae176773bafa7b</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>livrecore::Version</Scope>
    </TokenIdentifier>
    <Path>classlivrecore_1_1_version.html</Path>
    <Anchor>a31549ebc68a8aad426660114ba4f6203</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>livrecore::Version</Scope>
    </TokenIdentifier>
    <Path>classlivrecore_1_1_version.html</Path>
    <Anchor>a5788187dccd2c32b9a23436925c896bb</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>livrecore::Version</Scope>
    </TokenIdentifier>
    <Path>classlivrecore_1_1_version.html</Path>
    <Anchor>ae2daf23c2851ed1f1e1f260d123f3b09</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>livrecore::Version</Scope>
    </TokenIdentifier>
    <Path>classlivrecore_1_1_version.html</Path>
    <Anchor>ab36a4f4c03bdcfef4af8ad004a133da1</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>livrecore::Version</Scope>
    </TokenIdentifier>
    <Path>classlivrecore_1_1_version.html</Path>
    <Anchor>a0ff444127e34e0c35278ba354a492129</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSchema</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>livrecore::Version</Scope>
    </TokenIdentifier>
    <Path>classlivrecore_1_1_version.html</Path>
    <Anchor>a6ace949450bf47952a9e329ee552ce58</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toJSON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>livrecore::Version</Scope>
    </TokenIdentifier>
    <Path>classlivrecore_1_1_version.html</Path>
    <Anchor>a932384e641be44c113a87512318b2240</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
</Tokens>
