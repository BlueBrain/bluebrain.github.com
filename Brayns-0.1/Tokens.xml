<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_MAJOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>af6fac12cc372fa2c0d4a7276646db3e2</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_MINOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>ad1d30abb92c583df9555702986df6cd5</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_PATCH</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>aec3b431747b4611d046a5be799c36a85</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_REVISION</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a4d697b7dac7e97b28fecf7714fea4d8f</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_ABI</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a689d3561485abd45ee50411137295ee0</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_GT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>aac4931ce9e04b54374731ac24b40f8a7</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_GE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>ac1dab11cf9192d1fb2bbf6776f06e7b6</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_LT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a8c4f31b5c9c92ad83721cef2c6571c05</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_LE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a58b8404ff1a22c4a5cb7dd868280c078</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Changelog</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>_changelog.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>todo</Name>
      <APILanguage>unknown</APILanguage>
    </TokenIdentifier>
    <Path>todo.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::AbstractManipulator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Abstract>Base class for camera manipulators. </Abstract>
    <DeclaredIn>AbstractManipulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>motion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>ae2cdbab64ca9854470e29a83574941fb</Anchor>
    <Abstract>This is the fct that gets called when the mouse moved in the associated window. </Abstract>
    <DeclaredIn>AbstractManipulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>button</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>adfea94d97dc94cc33716d5a0a44a9bb7</Anchor>
    <Abstract>This is the fct that gets called when any mouse button got pressed or released in the associated wind...</Abstract>
    <DeclaredIn>AbstractManipulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dragLeft</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>ae7f2d8d1bc7e8fda651dc09c9f81804b</Anchor>
    <Abstract>helper functions called from the default &amp;#39;motion&amp;#39; function </Abstract>
    <DeclaredIn>AbstractManipulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::AbstractParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Abstract>Base class defining command line parameters. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>af8c4e3e33c6d75a71893d7d48f0e4fec</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>a23279a7de7c2c0becbf81c1d242775bf</Anchor>
    <Abstract>Parses parameters managed by the class. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>usage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>aea979c57e60d5cdb9569dc154382af58</Anchor>
    <Abstract>Displays the usage of registered parameters. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>a998b0175fc8d8a20c08d1e5ee4bb147e</Anchor>
    <Abstract>Displays values of registered parameters. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>a54da8b217bcd52a00a4b039b98abfcbd</Anchor>
    <Abstract>Sets a parameter. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ApplicationParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Abstract>Manages application parameters. </Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>aa2e0d98422af63c78df7f14a65fa4b6c</Anchor>
    <Abstract>Displays values of registered parameters. </Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWindowSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>a6e87fdfee6a6590c5d9ff7c4ee7dc0ee</Anchor>
    <Abstract>window size </Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCamera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>ad6d4ad54b3b988c628d9812887f1e8e3</Anchor>
    <Abstract>camera name (e.g. </Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDeflectHostname</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>ab79ece5fbf273d9265c1128dc549e241</Anchor>
    <Abstract>DisplayCluster server host. </Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDeflectStreamname</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>a9038cbb5d54166ce91b557971cfbc214</Anchor>
    <Abstract>Application stream name for DisplayCluster. </Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBenchmarking</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>a0baa53fd46c9a6aecddeec70d2546ce2</Anchor>
    <Abstract>Benchmarking. </Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getJpegCompression</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>a38a68927f124fcf473143d89e6cebda9</Anchor>
    <Abstract>JPEG compression quality. </Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getJpegSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>ad8d3a90aba5289d9a8dcdd488fbd016c</Anchor>
    <Abstract>JPEG size. </Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>af8c4e3e33c6d75a71893d7d48f0e4fec</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>a23279a7de7c2c0becbf81c1d242775bf</Anchor>
    <Abstract>Parses parameters managed by the class. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>usage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>aea979c57e60d5cdb9569dc154382af58</Anchor>
    <Abstract>Displays the usage of registered parameters. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>a54da8b217bcd52a00a4b039b98abfcbd</Anchor>
    <Abstract>Sets a parameter. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::BadParameter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::BadParameter</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_bad_parameter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::BaseWindow</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setViewPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>a36dee963394afbbcaf581ce7b1ab770c</Anchor>
    <DeclaredIn>BaseWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forceRedraw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>a8066e55a1117d1a1921719459c287117</Anchor>
    <DeclaredIn>BaseWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTitle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>a8f917d5d11eb4d7dc70cb49b6d808920</Anchor>
    <DeclaredIn>BaseWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTitle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>a3e56ecff8226f4585ea9cf0b79e1a198</Anchor>
    <DeclaredIn>BaseWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getViewPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>a9d0a0bb144bc2e98a7bc00de5aebfda1</Anchor>
    <DeclaredIn>BaseWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>display</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>a2424df86e37a3ecc9032511153b27855</Anchor>
    <DeclaredIn>BaseWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>activate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>a1be84537c702138c4b1af159bdef0cc9</Anchor>
    <DeclaredIn>BaseWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearPixels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>ae0e94dfedc88deaadf55573801a51321</Anchor>
    <DeclaredIn>BaseWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>drawPixels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>a3809d89a769ef3de442e779fbd2407d7</Anchor>
    <DeclaredIn>BaseWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>drawPixels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>a514e56a329220a8a185bf0341b8fd0d0</Anchor>
    <DeclaredIn>BaseWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>saveFrameToDisk</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>a8ce72982bdec9284b615da1e19cbe60f</Anchor>
    <Abstract>Saves current frame to disk. </Abstract>
    <DeclaredIn>BaseWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLastMousePos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>acbddb1ba5d163003071a0b35bd1a33da</Anchor>
    <DeclaredIn>BaseWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentMousePos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>a7508fafdf41a5c0f416ab52db7433675</Anchor>
    <DeclaredIn>BaseWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUpVectorFromCmdLine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>a70c81a29ba1e3f4caafa437d700b1f7e</Anchor>
    <DeclaredIn>BaseWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_manipulator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>a28186afa39802e3c8cb8e858b752fb0f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_defaultInitSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>addd591463e1330d7e9233e0ee20f4f47</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_currMousePos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>a33a00f1cd06ce75f249593f148cf439b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_lastButtonState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>af38cceaac3ea5f5da0de91661e217b66</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_motionSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>a8fa02338c974f975e57d2354090e5213</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rotateSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>afaf125bf36babe80a6a60bca2f54b39b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glut3dReshape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>a4b9e69b4301d025a43ae2cb26d5dace2</Anchor>
    <DeclaredIn>BaseWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Brayns</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Abstract>Brayns is a minimalistic library that allows optimized ray-tracing rendering of meshes and parametric...</Abstract>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>a40a8a684cb1caf39e10f4b56dce58292</Anchor>
    <Abstract>Renders color and depth buffers of the current scene, according to specified parameters. </Abstract>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>a422f64427d348600f7ad59f9041f8248</Anchor>
    <Abstract>Renders color and depth buffers of the current scene, according to default parameters. </Abstract>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>a93a5857586361eac2e0975dc0528a774</Anchor>
    <Abstract>Commits the changes held by scene and camera objects so that attributes become available to the under...</Abstract>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParametersManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>ad68939e00e940e6df3255bbf9e8a761f</Anchor>
    <Abstract>Gets parameters manager. </Abstract>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaterials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>af7cb6e3892459a99db34ee1db7f0135b</Anchor>
    <Abstract>Sets materials for the current scene. </Abstract>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reshape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>a999879af1acfdad5a0558a319d4deb35</Anchor>
    <Abstract>Reshapes the current frame buffers. </Abstract>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScene</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>ac7ce4e318bbc743c850997775e1f7a1f</Anchor>
    <Abstract>Gets the current scene. </Abstract>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCamera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>ab0e367c78f96ebf4bf695e51084c9b1a</Anchor>
    <Abstract>Gets the current camera. </Abstract>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>aefa0fc98a1a9bb2c28b5e0773573b085</Anchor>
    <Abstract>Gets the current frame buffer. </Abstract>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Camera</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Abstract>Camera object. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Camera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a4196e54bb40f2270f6f3c82433296745</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a24fbf4b846ae2029c707ab9c31230be4</Anchor>
    <Abstract>Sets position, target and up vector. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a0922ca991159fe5fc401bae15597230e</Anchor>
    <Abstract>Gets camera type. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>ad3ccec7616d8d86e5719a53512c39c68</Anchor>
    <Abstract>Sets camera position. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>af2a3a1200c668a03daeaa9f80255c6c2</Anchor>
    <Abstract>Gets camera position. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTarget</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>ac93d24c8fe13e55d1092817bb94983a1</Anchor>
    <Abstract>Sets camera target. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTarget</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a87ddb41917ebae248c1ea6a81bb161ee</Anchor>
    <Abstract>Gets camera target. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUpVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a4325b007e87c888b9f14f229bb3bdcf7</Anchor>
    <Abstract>Sets camera up vector. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUpVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a7cbdb47214fbc4dae2fe596854f2c04d</Anchor>
    <Abstract>Gets camera up vector. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a0354f79ac970081e142566d3b7f8d93e</Anchor>
    <Abstract>Commits the changes held by the camera object so that attributes become available to the underlying r...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>aeda21b6f02421dedc266b992fbfe89a4</Anchor>
    <Abstract>Set the aspect ratio of the camera. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>afb30957156d54cefd98ba65c29638dc9</Anchor>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAperture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a9873a3ba6d6c346e4b5051a11b2ff748</Anchor>
    <Abstract>The aperture determines how collimated the admitted rays are, which is of great importance for the ap...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAperture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>add438a8d6757cc35d463e89bb213e768</Anchor>
    <Abstract>The aperture determines how collimated the admitted rays are, which is of great importance for the ap...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFocalLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>adb7e9f91916e49cd6d2a4370908c8a82</Anchor>
    <Abstract>The focal length of an optical system is a measure of how strongly the system converges or diverges l...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFocalLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a6fc8b59a7b5e13317810e3299f1928a4</Anchor>
    <Abstract>The focal length of an optical system is a measure of how strongly the system converges or diverges l...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a0378b8d85d011a5b524746f4e23e34e6</Anchor>
    <Abstract>Resets the camera to its initial values. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSerializable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a2f23e2260a19ad81e160cb69574a111f</Anchor>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Cone</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Cone</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_cone.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Cylinder</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Cylinder</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_cylinder.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::DeflectPlugin</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::DeflectPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_deflect_plugin.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DeflectPlugin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::DeflectPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_deflect_plugin.html</Path>
    <Anchor>a1d17873ecdee6769d4b8afb2fa9693c4</Anchor>
    <Abstract>Constructs the object and initializes default plugins according to application parameters. </Abstract>
    <DeclaredIn>DeflectPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::DeflectPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_deflect_plugin.html</Path>
    <Anchor>a13f6d1c433fc985416bfef49c110fd6f</Anchor>
    <DeclaredIn>DeflectPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::DirectionalLight</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::DirectionalLight</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_directional_light.html</Path>
    <Abstract>Directional light. </Abstract>
    <DeclaredIn>DirectionalLight.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DirectionalLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::DirectionalLight</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_directional_light.html</Path>
    <Anchor>a104db0999b3e707e9c62b60f333e9708</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>DirectionalLight.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDirection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::DirectionalLight</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_directional_light.html</Path>
    <Anchor>a7b30ca18ef5beeb3ad887dfec000e28f</Anchor>
    <Abstract>Light source direction. </Abstract>
    <DeclaredIn>DirectionalLight.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Light</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_light.html</Path>
    <Anchor>ac418f89179bfb0698b73c001729d9423</Anchor>
    <Abstract>Light source RGB color. </Abstract>
    <DeclaredIn>Light.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIntensity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Light</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_light.html</Path>
    <Anchor>a7219ba01bccbf75a30e2be20b3f62fb7</Anchor>
    <Abstract>Light source intensity. </Abstract>
    <DeclaredIn>Light.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Exception</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Exception</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_exception.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ExtendedCones</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ExtendedCones</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_extended_cones.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ExtendedCylinders</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ExtendedCylinders</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_extended_cylinders.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ExtendedOBJRenderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ExtendedOBJRenderer</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_extended_o_b_j_renderer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ExtendedSpheres</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ExtendedSpheres</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_extended_spheres.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ExtensionPlugin</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ExtensionPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_extension_plugin.html</Path>
    <Abstract>Defines the abstract representation of a extension plug-in. </Abstract>
    <DeclaredIn>ExtensionPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ExtensionPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_extension_plugin.html</Path>
    <Anchor>a99fdcc5eb29e84c43518ed54941aad4c</Anchor>
    <Abstract>Executes the core functionnalities of the plugin and modifies the ExtensionParameters accordingly...</Abstract>
    <DeclaredIn>ExtensionPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ExtensionPluginFactory</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ExtensionPluginFactory</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_extension_plugin_factory.html</Path>
    <Abstract>Manages plug-ins such as Deflect Streamer or HTTP server. </Abstract>
    <DeclaredIn>ExtensionPluginFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExtensionPluginFactory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ExtensionPluginFactory</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_extension_plugin_factory.html</Path>
    <Anchor>a7af941dd75dd7757c33ee149165ab4b9</Anchor>
    <Abstract>Constructs the object and initializes default plugins according to application parameters. </Abstract>
    <DeclaredIn>ExtensionPluginFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ExtensionPluginFactory</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_extension_plugin_factory.html</Path>
    <Anchor>a3f2268cf183286874d8c3e47a1ca9860</Anchor>
    <Abstract>Registers a new plug-in. </Abstract>
    <DeclaredIn>ExtensionPluginFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ExtensionPluginFactory</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_extension_plugin_factory.html</Path>
    <Anchor>aed9a3a7689696f8e6c82eeb64fd52c21</Anchor>
    <Abstract>Unregisters an existing plug-in. </Abstract>
    <DeclaredIn>ExtensionPluginFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ExtensionPluginFactory</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_extension_plugin_factory.html</Path>
    <Anchor>a7cc708c0b64298493774d19ca6df8636</Anchor>
    <Abstract>Unregisters all registered plug-ins. </Abstract>
    <DeclaredIn>ExtensionPluginFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ExtensionPluginFactory</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_extension_plugin_factory.html</Path>
    <Anchor>a9e1903f0e94813a742434f9d4a86d8d2</Anchor>
    <Abstract>Executes code specific to every registered plugin. </Abstract>
    <DeclaredIn>ExtensionPluginFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::FlyingModeManipulator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::FlyingModeManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_flying_mode_manipulator.html</Path>
    <Abstract>Defines a flying mode camera manipulator, like in a flight simulator! </Abstract>
    <DeclaredIn>FlyingModeManipulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>motion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>ae2cdbab64ca9854470e29a83574941fb</Anchor>
    <Abstract>This is the fct that gets called when the mouse moved in the associated window. </Abstract>
    <DeclaredIn>AbstractManipulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dragLeft</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::FlyingModeManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_flying_mode_manipulator.html</Path>
    <Anchor>a88f6315921a7bd469f49847ac907487c</Anchor>
    <Abstract>helper functions called from the default &amp;#39;motion&amp;#39; function </Abstract>
    <DeclaredIn>FlyingModeManipulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>button</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::FlyingModeManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_flying_mode_manipulator.html</Path>
    <Anchor>a46906d2c706ace7a2a2d0e89f863df31</Anchor>
    <Abstract>This is the fct that gets called when any mouse button got pressed or released in the associated wind...</Abstract>
    <DeclaredIn>FlyingModeManipulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::FPSCounter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::FPSCounter</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_f_p_s_counter.html</Path>
    <DeclaredIn>BaseWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::FrameBuffer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::FrameBuffer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_frame_buffer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Geometry</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Geometry</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::GeometryParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Abstract>Manages geometry parameters. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GeometryParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a96a7875f7d452448da35b193921725dc</Anchor>
    <Abstract>Parse the command line parameters and populates according class members. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a8c92a909fef870a14d015a6e838f3f63</Anchor>
    <Abstract>Displays values of registered parameters. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMorphologyFolder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a668776d2476e6a3d38136a1f1257b484</Anchor>
    <Abstract>folder containing SWC and H5 files </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPDBFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>aeb6f71ab6b7b1dfcdefd6964dcca76ef</Anchor>
    <Abstract>PDB file. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMeshFolder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>abb3c4e24aafb3052a009a1da12124050</Anchor>
    <Abstract>folder containing mesh files </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCircuitConfiguration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>ab7bb21c279fa084747beabae49b5942a</Anchor>
    <Abstract>file containing circuit configuration </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLoadCacheFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a5d8d0e635fc3ccc9b177958b356899a5</Anchor>
    <Abstract>Binary representation of a scene to load. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSaveCacheFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a7a08766aaee1cfe6e0feb6a6f8bd4d8f</Anchor>
    <Abstract>Binary representation of a scene to save. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTarget</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>aa0c7b6bdb7d00fc38f39b96d9d4e76a7</Anchor>
    <Abstract>Circuit target. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getReport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a213477d2d7165338b138cada21ef8eed</Anchor>
    <Abstract>Circuit compartment report. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a84357b8641b2628bd8f36d0e85b2874d</Anchor>
    <Abstract>Radius multiplier applied to spheres, cones and cylinders. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getColorScheme</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a0cefb9cea6665e61900ebc08846bc6e3</Anchor>
    <Abstract>Enables a different color for every morphology/mesh when loading them from a given folder...</Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSceneEnvironment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a685b7032dd4e7aefadd50cf751f88c6d</Anchor>
    <Abstract>Scene environment (0: none, 1: ground, 2: box ) </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGeometryQuality</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a30dd81996271f03f798942c4d69703ec</Anchor>
    <Abstract>Morphology quality. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMorphologySectionTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>ace161e62a3faa72c980e176dd7a39a6e</Anchor>
    <Abstract>Morphology section types. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMorphologyLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a6ff28e9ddeb7faf36d074fd7538a7a80</Anchor>
    <Abstract>Morphology layout. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNonSimulatedCells</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a010fbea450dbc9ced438ceb9ba5377f1</Anchor>
    <Abstract>Defines if cells with no simulation data should be loaded. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLastSimulationFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>ab8d126fede7422519b8bc62161f986d7</Anchor>
    <Abstract>Defines the range of frames to be loaded for the simulation This is related to the current size of th...</Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGenerateMultipleModels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a2b88be75feb41785ab4205eec05d66d2</Anchor>
    <Abstract>Defines if multiple models should be generated to increase the rendering performance. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>af8c4e3e33c6d75a71893d7d48f0e4fec</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>a23279a7de7c2c0becbf81c1d242775bf</Anchor>
    <Abstract>Parses parameters managed by the class. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>usage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>aea979c57e60d5cdb9569dc154382af58</Anchor>
    <Abstract>Displays the usage of registered parameters. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>a54da8b217bcd52a00a4b039b98abfcbd</Anchor>
    <Abstract>Sets a parameter. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::InspectCenterManipulator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::InspectCenterManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_inspect_center_manipulator.html</Path>
    <Abstract>Defines an inspect center camera manipulators. </Abstract>
    <DeclaredIn>InspectCenterManipulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dragLeft</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::InspectCenterManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_inspect_center_manipulator.html</Path>
    <Anchor>acba54af9e9820b0a3a22dcea3e2edd4a</Anchor>
    <Abstract>helper functions called from the default &amp;#39;motion&amp;#39; function </Abstract>
    <DeclaredIn>InspectCenterManipulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>button</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::InspectCenterManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_inspect_center_manipulator.html</Path>
    <Anchor>a1caeb02fbf27d9640d6bea44d7cd6587</Anchor>
    <Abstract>This is the fct that gets called when any mouse button got pressed or released in the associated wind...</Abstract>
    <DeclaredIn>InspectCenterManipulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>motion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>ae2cdbab64ca9854470e29a83574941fb</Anchor>
    <Abstract>This is the fct that gets called when the mouse moved in the associated window. </Abstract>
    <DeclaredIn>AbstractManipulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Light</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Light</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_light.html</Path>
    <Abstract>Light object. </Abstract>
    <DeclaredIn>Light.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Light</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_light.html</Path>
    <Anchor>ac418f89179bfb0698b73c001729d9423</Anchor>
    <Abstract>Light source RGB color. </Abstract>
    <DeclaredIn>Light.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIntensity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Light</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_light.html</Path>
    <Anchor>a7219ba01bccbf75a30e2be20b3f62fb7</Anchor>
    <Abstract>Light source intensity. </Abstract>
    <DeclaredIn>Light.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Material</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Material</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_material.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::MeshContainer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::MeshContainer</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_mesh_container.html</Path>
    <Abstract>structure containing references to triangles, materials and bounding for for all meshes ...</Abstract>
    <DeclaredIn>MeshLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::MeshLoader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::MeshLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_mesh_loader.html</Path>
    <Abstract>Loads meshes from files using the assimp library http://assimp.sourceforge.net. </Abstract>
    <DeclaredIn>MeshLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importMeshFromFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::MeshLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_mesh_loader.html</Path>
    <Anchor>a67054bdee23e8096bf3be602b009209f</Anchor>
    <Abstract>Imports meshes from a given file. </Abstract>
    <DeclaredIn>MeshLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exportMeshToFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::MeshLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_mesh_loader.html</Path>
    <Anchor>ab2d5a6fd34581fc6ef9ef7a1be2085bf</Anchor>
    <Abstract>Exports meshes to a given file. </Abstract>
    <DeclaredIn>MeshLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::MorphologyLayout</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::MorphologyLayout</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_morphology_layout.html</Path>
    <Abstract>Defines how morphologies should be organized in space when the layout mode is selected. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::MorphologyLoader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::MorphologyLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_morphology_loader.html</Path>
    <Abstract>Loads morphologies from SWC and H5 files. </Abstract>
    <DeclaredIn>MorphologyLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importMorphology</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::MorphologyLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_morphology_loader.html</Path>
    <Anchor>a9a91bdb7ddeb4ee2ddd443b1856578a4</Anchor>
    <Abstract>Imports morphology from a given SWC or H5 file. </Abstract>
    <DeclaredIn>MorphologyLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importCircuit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::MorphologyLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_morphology_loader.html</Path>
    <Anchor>a7424c8e01cf0e7acd9f17e4d0b0f3e02</Anchor>
    <Abstract>Imports morphology from a circuit for the given target name. </Abstract>
    <DeclaredIn>MorphologyLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importCircuit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::MorphologyLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_morphology_loader.html</Path>
    <Anchor>a72a34bf7fa5436a10663cfc41112c373</Anchor>
    <Abstract>Imports morphology from a circuit for the given target name. </Abstract>
    <DeclaredIn>MorphologyLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importSimulationIntoTexture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::MorphologyLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_morphology_loader.html</Path>
    <Anchor>abed3885030161998b2bf10fac388545f</Anchor>
    <Abstract>Imports simulation data into a texture. </Abstract>
    <DeclaredIn>MorphologyLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::OSPRayCamera</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::OSPRayCamera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_camera.html</Path>
    <Abstract>OPSRAY specific camera. </Abstract>
    <DeclaredIn>OSPRayCamera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayCamera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_camera.html</Path>
    <Anchor>a4d0d1cd0dc21287c004888322417da9f</Anchor>
    <Abstract>Commits the changes held by the camera object so that attributes become available to the OSPRay rende...</Abstract>
    <DeclaredIn>OSPRayCamera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ospImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayCamera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_camera.html</Path>
    <Anchor>aa1b7190d4414395b081675b8ad5c8c22</Anchor>
    <Abstract>Gets the OSPRay implementation of the camera object. </Abstract>
    <DeclaredIn>OSPRayCamera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Camera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a4196e54bb40f2270f6f3c82433296745</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a24fbf4b846ae2029c707ab9c31230be4</Anchor>
    <Abstract>Sets position, target and up vector. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a0922ca991159fe5fc401bae15597230e</Anchor>
    <Abstract>Gets camera type. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>ad3ccec7616d8d86e5719a53512c39c68</Anchor>
    <Abstract>Sets camera position. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>af2a3a1200c668a03daeaa9f80255c6c2</Anchor>
    <Abstract>Gets camera position. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTarget</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>ac93d24c8fe13e55d1092817bb94983a1</Anchor>
    <Abstract>Sets camera target. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTarget</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a87ddb41917ebae248c1ea6a81bb161ee</Anchor>
    <Abstract>Gets camera target. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUpVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a4325b007e87c888b9f14f229bb3bdcf7</Anchor>
    <Abstract>Sets camera up vector. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUpVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a7cbdb47214fbc4dae2fe596854f2c04d</Anchor>
    <Abstract>Gets camera up vector. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>aeda21b6f02421dedc266b992fbfe89a4</Anchor>
    <Abstract>Set the aspect ratio of the camera. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>afb30957156d54cefd98ba65c29638dc9</Anchor>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAperture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a9873a3ba6d6c346e4b5051a11b2ff748</Anchor>
    <Abstract>The aperture determines how collimated the admitted rays are, which is of great importance for the ap...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAperture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>add438a8d6757cc35d463e89bb213e768</Anchor>
    <Abstract>The aperture determines how collimated the admitted rays are, which is of great importance for the ap...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFocalLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>adb7e9f91916e49cd6d2a4370908c8a82</Anchor>
    <Abstract>The focal length of an optical system is a measure of how strongly the system converges or diverges l...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFocalLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a6fc8b59a7b5e13317810e3299f1928a4</Anchor>
    <Abstract>The focal length of an optical system is a measure of how strongly the system converges or diverges l...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a0378b8d85d011a5b524746f4e23e34e6</Anchor>
    <Abstract>Resets the camera to its initial values. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSerializable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a2f23e2260a19ad81e160cb69574a111f</Anchor>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::OSPRayFrameBuffer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::OSPRayFrameBuffer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_frame_buffer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::OSPRayRenderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::OSPRayRenderer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_renderer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::OSPRayScene</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::OSPRayScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_scene.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildGeometry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_scene.html</Path>
    <Anchor>ae66bac0fc386bc938be08d31ed718c65</Anchor>
    <Abstract>Converts scene geometry into rendering engine specific data structures. </Abstract>
    <DeclaredIn>OSPRayScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitLights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_scene.html</Path>
    <Anchor>a98df27705bcc48b935d22ed0256cf89c</Anchor>
    <Abstract>Commit lights to renderers. </Abstract>
    <DeclaredIn>OSPRayScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitMaterials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_scene.html</Path>
    <Anchor>aff8ee0e211d66e28dd2d0581ffec9228</Anchor>
    <Abstract>Commit materials to renderers. </Abstract>
    <DeclaredIn>OSPRayScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Scene</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>acdfb14dfb311be0e2aeedbcdca3f1e4d</Anchor>
    <Abstract>Creates a scene object responsible for handling geometry, materials and light sources. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaterials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a03b683c4387bb66372559543c66afeba</Anchor>
    <Abstract>Creates the materials handled by the scene, and available to the scene geometry. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaterial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ac5680622d9c059134de36ab356364689</Anchor>
    <Abstract>Returns the material object for a given index. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWorldBounds</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ae1c099a5104acb90e3d6f84a69fe90e4</Anchor>
    <Abstract>Returns the bounding box for the whole scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildEnvironment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a49c9856f08fe184d3b956b4a0e55657b</Anchor>
    <Abstract>Build an environment in addition to the loaded data, and according to the geometry parameters (comman...</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a7d89afe05548c882153522a0a4f751ac</Anchor>
    <Abstract>Attaches a light source to the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>aa918d868eaed44684a990f669b333249</Anchor>
    <Abstract>Gets a light source from the scene for a given index. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a681a8a7e95f279226a0ac02f2b8f4201</Anchor>
    <Abstract>Removes a light source from the scene for a given index. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearLights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a922c519f4acc99228313732f25ee5ec6</Anchor>
    <Abstract>Removes all light sources from the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ParametersManager</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Abstract>Class managing all parameters registered by the application. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>af1446cfbea9a2fb9348a8625bd69bb18</Anchor>
    <Abstract>Registers specific parameters to the manager. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printHelp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>a98fcd92dc4a9d11517d547088c8bb187</Anchor>
    <Abstract>Displays help screen for registered parameters. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>a0a0967c0597705f2c6f936a2cfc98b3c</Anchor>
    <Abstract>Displays values registered parameters. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>a512452ae6195a30b5c733f75c7ea1c54</Anchor>
    <Abstract>Parses registered parameters. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRenderingParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>a3558f229417081e9ed7eee77acfa73f0</Anchor>
    <Abstract>Gets rendering parameters. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGeometryParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>a42770db58f8d661744cd2e029b314295</Anchor>
    <Abstract>Gets geometry parameters. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getApplicationParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>aa1bd17b18fd4fe6d75abf1165e19830a</Anchor>
    <Abstract>Gets application parameters. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSceneParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>a2bc6a8dbef296ff837e33911cf3e4e55</Anchor>
    <Abstract>Gets scene parameters. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>a1d25e34639dbb420f9a3405b556a88b0</Anchor>
    <Abstract>Sets a parameter (application, geometry, rendering, etc). </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::PointLight</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::PointLight</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_point_light.html</Path>
    <Abstract>Point light object. </Abstract>
    <DeclaredIn>PointLight.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PointLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PointLight</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_point_light.html</Path>
    <Anchor>ac360885334a6778949e00d7070c8a9ae</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>PointLight.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PointLight</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_point_light.html</Path>
    <Anchor>a14c49779d4e61b944511e07c7f7cad13</Anchor>
    <Abstract>Light source position. </Abstract>
    <DeclaredIn>PointLight.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCutoffDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PointLight</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_point_light.html</Path>
    <Anchor>a782a3fb04f2cf4a089a738e5bc105698</Anchor>
    <Abstract>Light source cutoff distance. </Abstract>
    <DeclaredIn>PointLight.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Light</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_light.html</Path>
    <Anchor>ac418f89179bfb0698b73c001729d9423</Anchor>
    <Abstract>Light source RGB color. </Abstract>
    <DeclaredIn>Light.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIntensity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Light</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_light.html</Path>
    <Anchor>a7219ba01bccbf75a30e2be20b3f62fb7</Anchor>
    <Abstract>Light source intensity. </Abstract>
    <DeclaredIn>Light.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Primitive</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Primitive</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_primitive.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ProteinLoader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ProteinLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_protein_loader.html</Path>
    <Abstract>Loads protein from PDB files http://www.rcsb.org. </Abstract>
    <DeclaredIn>ProteinLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importPDBFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ProteinLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_protein_loader.html</Path>
    <Anchor>a75df22ddde420113e3409eb00b064346</Anchor>
    <Abstract>Imports atoms from a given PDB file. </Abstract>
    <DeclaredIn>ProteinLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaterialKd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ProteinLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_protein_loader.html</Path>
    <Anchor>a934f2432230920217d7a4b76e5a0b481</Anchor>
    <Abstract>Returns the RGB composants for a given atom index, and according to the JMol scheme. </Abstract>
    <DeclaredIn>ProteinLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ProximityRenderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ProximityRenderer</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_proximity_renderer.html</Path>
    <Abstract>The ProximityRenderer uses an algorithm similar to ambient occlusion to identify touches between geom...</Abstract>
    <DeclaredIn>ProximityRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>brayns::ProximityRenderer</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_proximity_renderer.html</Path>
    <Anchor>a8913afa2bde0a0a81cd8215beebef08b</Anchor>
    <Abstract>Returns the class name as a string. </Abstract>
    <DeclaredIn>ProximityRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>brayns::ProximityRenderer</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_proximity_renderer.html</Path>
    <Anchor>aa4caa1d5f633f2a4dca4b63e7aa74bdd</Anchor>
    <Abstract>Commits the changes held by the object so that attributes become available to the OSPRay rendering en...</Abstract>
    <DeclaredIn>ProximityRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Renderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Renderer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_renderer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::RenderingParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Abstract>Manages rendering parameters. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a59da280f420719c169f81144aabe97a4</Anchor>
    <Abstract>Displays values of registered parameters. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getModule</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a92b938bead94e14d11f9bae17be326c7</Anchor>
    <Abstract>OSPRay module. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a6d499c5087bbf5a442b1be044840607f</Anchor>
    <Abstract>OSPRay renderer. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRenderers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a820bd18f7c4a7a607ff4bcd1307e911b</Anchor>
    <Abstract>OSPRay supported renderers. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getShadows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a81085e5b16cf49767d7b89d6ba934bfd</Anchor>
    <Abstract>Shadows. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSoftShadows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a308deaa41e01b30bd0a92e2a8bcc36dd</Anchor>
    <Abstract>Softs Shadows generated by randomizing light source position. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAmbientOcclusionStrength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>adcfbde4abb46d610c27c3a6ec8361cff</Anchor>
    <Abstract>Ambient occlusion. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaterialType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>aab80751b0380c2ea4511636f18514169</Anchor>
    <Abstract>Material type applied to the geometry. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSamplesPerPixel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a3a32a9dbae70efeab2d8d668e4bd6a6f</Anchor>
    <Abstract>Number of samples per pixel. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLightEmittingMaterials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a25ef04f2741d3931b9a024fb933df22d</Anchor>
    <Abstract>Enables photon emission according to the radiance value of the material. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDetectionDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a32a712c082135bfe6d201d24bcd2a36e</Anchor>
    <Abstract>Defines the maximum distance between intersection and surrounding geometry for touch detection render...</Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDetectionOnDifferentMaterial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a6e398cbd42338b7af0613f2959e7b6ca</Anchor>
    <Abstract>Defines if touch detection applies if the material of the surrounding geometry is different from the ...</Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDetectionNearColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>aba00b850152ff2e80ea4fae3b1c6a1cf</Anchor>
    <Abstract>Near color used by touch detection renderer. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDetectionFarColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>ace5b6ac9558b8aa5b952c0f4df37d3ec</Anchor>
    <Abstract>Far color used by touch detection renderer. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEpsilon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>aa67ca19a55214d45bf79ca1a905557be</Anchor>
    <Abstract>Raytracers have to deal with the finite precision of computer calculations. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCameraType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>aa00ac300694d6ee5cb52a4e2f636b7c1</Anchor>
    <Abstract>Camera type. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEpsilon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>abc66474540605dc0c643e1dae19027a6</Anchor>
    <Abstract>Epsilon. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHDRI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a442ae715879d80e6f9d2f165b6622cfa</Anchor>
    <Abstract>file name of the HDRI image used for the skybox </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSunOnCamera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a0fa9cf5fce704962a7d3d04eda8fae1f</Anchor>
    <Abstract>Sun follows the camera direction. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>af8c4e3e33c6d75a71893d7d48f0e4fec</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>a23279a7de7c2c0becbf81c1d242775bf</Anchor>
    <Abstract>Parses parameters managed by the class. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>usage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>aea979c57e60d5cdb9569dc154382af58</Anchor>
    <Abstract>Displays the usage of registered parameters. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>a54da8b217bcd52a00a4b039b98abfcbd</Anchor>
    <Abstract>Sets a parameter. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::RenderInput</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::RenderInput</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_render_input.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::RenderOutput</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::RenderOutput</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_render_output.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Scene</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Abstract>Scene object. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Scene</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>acdfb14dfb311be0e2aeedbcdca3f1e4d</Anchor>
    <Abstract>Creates a scene object responsible for handling geometry, materials and light sources. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaterials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a03b683c4387bb66372559543c66afeba</Anchor>
    <Abstract>Creates the materials handled by the scene, and available to the scene geometry. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaterial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ac5680622d9c059134de36ab356364689</Anchor>
    <Abstract>Returns the material object for a given index. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitMaterials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ac5521b855bcdce23583403365fbabf2c</Anchor>
    <Abstract>Commit materials to renderers. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitLights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a35078348f0e81f34c915bf44d0e69e2c</Anchor>
    <Abstract>Commit lights to renderers. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildGeometry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ac186f12a5217a53ebd1a8d149c8fa71f</Anchor>
    <Abstract>Converts scene geometry into rendering engine specific data structures. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWorldBounds</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ae1c099a5104acb90e3d6f84a69fe90e4</Anchor>
    <Abstract>Returns the bounding box for the whole scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildEnvironment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a49c9856f08fe184d3b956b4a0e55657b</Anchor>
    <Abstract>Build an environment in addition to the loaded data, and according to the geometry parameters (comman...</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a7d89afe05548c882153522a0a4f751ac</Anchor>
    <Abstract>Attaches a light source to the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>aa918d868eaed44684a990f669b333249</Anchor>
    <Abstract>Gets a light source from the scene for a given index. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a681a8a7e95f279226a0ac02f2b8f4201</Anchor>
    <Abstract>Removes a light source from the scene for a given index. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearLights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a922c519f4acc99228313732f25ee5ec6</Anchor>
    <Abstract>Removes all light sources from the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::SceneParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::SceneParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene_parameters.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::SceneParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene_parameters.html</Path>
    <Anchor>ae69b42b281f99d368ef62167a3a63a8f</Anchor>
    <Abstract>Displays values of registered parameters. </Abstract>
    <DeclaredIn>SceneParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimestamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::SceneParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene_parameters.html</Path>
    <Anchor>adca6b3968cc4aa2d969e18f2400fee21</Anchor>
    <Abstract>Defines the current timestamp for the scene. </Abstract>
    <DeclaredIn>SceneParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>af8c4e3e33c6d75a71893d7d48f0e4fec</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>a23279a7de7c2c0becbf81c1d242775bf</Anchor>
    <Abstract>Parses parameters managed by the class. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>usage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>aea979c57e60d5cdb9569dc154382af58</Anchor>
    <Abstract>Displays the usage of registered parameters. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>a54da8b217bcd52a00a4b039b98abfcbd</Anchor>
    <Abstract>Sets a parameter. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::SimulationData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::SimulationData</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_simulation_data.html</Path>
    <Abstract>Simulation data hold the pointers to data contained by one single frame of the simulation. </Abstract>
    <DeclaredIn>MorphologyLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::SimulationRenderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::SimulationRenderer</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_simulation_renderer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Sphere</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Sphere</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_sphere.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::StereoCamera</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::StereoCamera</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_stereo_camera.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Texture2D</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Texture2D</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_texture2_d.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::TextureLoader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::TextureLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_texture_loader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::TrianglesMesh</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::TrianglesMesh</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_triangles_mesh.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Abstract>Information about the current braynsUI version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ad4caded283f86362198a2ba1eb478eba</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ac28a55327f904d62ab90dc172be1b440</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a74c8402e7ceed27e0c773cf39e8e01b0</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a7230a3f09fc682b33cf1cfff19bebce7</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a778d800ac9abaa8f6f9208959634c6bb</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>af99a8b1956c6cb800290c9f8d303f36a</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a6b194dfa87bafdc9a6512fe7ad57794c</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a4b4666df38d8c345e91425821c18c8e0</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Viewport</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Viewport</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_viewport.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_modify</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Viewport</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_viewport.html</Path>
    <Anchor>a890a99acfefd51bc271af58ebe484648</Anchor>
    <DeclaredIn>Viewport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ZeroBufPlugin</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ZeroBufPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_zero_buf_plugin.html</Path>
    <Abstract>The ZeroBufPlugin is in charge of exposing a both a http/REST and a ZeroEQ interface to the outside w...</Abstract>
    <DeclaredIn>ZeroBufPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ZeroBufPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_zero_buf_plugin.html</Path>
    <Anchor>a944d0440847c23fc092b75b7b16a6b27</Anchor>
    <DeclaredIn>ZeroBufPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::obj::ExtendedOBJMaterial</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::obj::ExtendedOBJMaterial</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1obj_1_1_extended_o_b_j_material.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map_d</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::obj::ExtendedOBJMaterial</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1obj_1_1_extended_o_b_j_material.html</Path>
    <Anchor>a403863295195b5747082227c93eaf3d7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map_refraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::obj::ExtendedOBJMaterial</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1obj_1_1_extended_o_b_j_material.html</Path>
    <Anchor>a778cee5c3b9423ae0933cd7b596db5fb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map_reflection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::obj::ExtendedOBJMaterial</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1obj_1_1_extended_o_b_j_material.html</Path>
    <Anchor>abead9c1ebaee14b7340fcc922660044b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map_a</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::obj::ExtendedOBJMaterial</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1obj_1_1_extended_o_b_j_material.html</Path>
    <Anchor>a3a85e2c595afb0fb62dd70d921f3adc7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map_Kd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::obj::ExtendedOBJMaterial</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1obj_1_1_extended_o_b_j_material.html</Path>
    <Anchor>a65d6ae063e53c9feeac32bb2be89052d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map_Ks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::obj::ExtendedOBJMaterial</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1obj_1_1_extended_o_b_j_material.html</Path>
    <Anchor>a98296de2b3f73249a66b9a012cd3f959</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map_Ns</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::obj::ExtendedOBJMaterial</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1obj_1_1_extended_o_b_j_material.html</Path>
    <Anchor>ad3fb0d75f30229abea5c442c7659e9b6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map_Normal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::obj::ExtendedOBJMaterial</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1obj_1_1_extended_o_b_j_material.html</Path>
    <Anchor>ae84decba8322cd710eb05f17707dab6b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map_Bump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::obj::ExtendedOBJMaterial</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1obj_1_1_extended_o_b_j_material.html</Path>
    <Anchor>aa751a568ed6aa42d9d5938ae59a3acb0</Anchor>
  </Token>
</Tokens>
