digraph "brayns::ExtendedOBJRenderer"
{
  edge [fontname="Sans",fontsize="10",labelfontname="Sans",labelfontsize="10"];
  node [fontname="Sans",fontsize="10",shape=record];
  Node1 [label="{brayns::ExtendedOBJRenderer\n|+ world\l+ materialData\l+ lightData\l+ shadowsEnabled\l+ softShadowsEnabled\l+ ambientOcclusionStrength\l+ shadingEnabled\l+ electronShadingEnabled\l+ gradientBackgroundEnabled\l+ randomNumber\l+ moving\l+ timestamp\l+ spp\l|+ ExtendedOBJRenderer()\l+ toString()\l+ commit()\l+ createMaterial()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Sans"];
  Node2 [label="{ospray::Renderer\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +materialArray\n+lightArray" ,arrowhead="odiamond",fontname="Sans"];
  Node3 [label="{std::vector\< void * \>\n|+ elements\l|}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node4 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +camera" ,arrowhead="odiamond",fontname="Sans"];
  Node4 [label="{brayns::Camera\n||+ Camera()\l+ ~Camera()\l+ set()\l+ setInitialState()\l+ getType()\l+ setPosition()\l+ getPosition()\l+ setTarget()\l+ getTarget()\l+ setUpVector()\land 10 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbrayns_1_1_camera.html",tooltip="Camera object. "];
}
