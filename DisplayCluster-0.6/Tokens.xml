<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>DC_VERSION_MAJOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>core_2version_8h.html</Path>
    <Anchor>a82ea268131eae490ddf0f75e56064ec3</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DC_VERSION_MINOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>core_2version_8h.html</Path>
    <Anchor>a5dd953e3047ac173c0ea8a7bcb6efe26</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DC_VERSION_PATCH</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>core_2version_8h.html</Path>
    <Anchor>aa1aa6bf1b50ddb282deaeb11ec4914d2</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DC_VERSION_REVISION</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>core_2version_8h.html</Path>
    <Anchor>a6056f06660485c2522c54c5f001c4c68</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DC_VERSION_ABI</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>core_2version_8h.html</Path>
    <Anchor>a7874e68f03908e39b166bc1ea4244288</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DC_VERSION_GT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>core_2version_8h.html</Path>
    <Anchor>abe16f7ee45db0bb1469341286c580e94</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DC_VERSION_GE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>core_2version_8h.html</Path>
    <Anchor>a41a9b73578609e4e50735a14e6a5e73c</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DC_VERSION_LT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>core_2version_8h.html</Path>
    <Anchor>ae93c3f99a5fab5cbbd188ac2d618017d</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DC_VERSION_LE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>core_2version_8h.html</Path>
    <Anchor>a8f40e76dd9133f8c499d2cafbf28b40f</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DC_VERSION_MAJOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>mock_2version_8h.html</Path>
    <Anchor>a82ea268131eae490ddf0f75e56064ec3</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>mock/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DC_VERSION_MINOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>mock_2version_8h.html</Path>
    <Anchor>a5dd953e3047ac173c0ea8a7bcb6efe26</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>mock/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DC_VERSION_PATCH</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>mock_2version_8h.html</Path>
    <Anchor>aa1aa6bf1b50ddb282deaeb11ec4914d2</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>mock/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DC_VERSION_REVISION</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>mock_2version_8h.html</Path>
    <Anchor>a6056f06660485c2522c54c5f001c4c68</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>mock/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DC_VERSION_ABI</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>mock_2version_8h.html</Path>
    <Anchor>a7874e68f03908e39b166bc1ea4244288</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>mock/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DC_VERSION_GT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>mock_2version_8h.html</Path>
    <Anchor>abe16f7ee45db0bb1469341286c580e94</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>mock/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DC_VERSION_GE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>mock_2version_8h.html</Path>
    <Anchor>a41a9b73578609e4e50735a14e6a5e73c</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>mock/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DC_VERSION_LT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>mock_2version_8h.html</Path>
    <Anchor>ae93c3f99a5fab5cbbd188ac2d618017d</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>mock/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DC_VERSION_LE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>mock_2version_8h.html</Path>
    <Anchor>a8f40e76dd9133f8c499d2cafbf28b40f</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>mock/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DC_VERSION_MAJOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>webservice_2version_8h.html</Path>
    <Anchor>a82ea268131eae490ddf0f75e56064ec3</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>webservice/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DC_VERSION_MINOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>webservice_2version_8h.html</Path>
    <Anchor>a5dd953e3047ac173c0ea8a7bcb6efe26</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>webservice/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DC_VERSION_PATCH</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>webservice_2version_8h.html</Path>
    <Anchor>aa1aa6bf1b50ddb282deaeb11ec4914d2</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>webservice/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DC_VERSION_REVISION</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>webservice_2version_8h.html</Path>
    <Anchor>a6056f06660485c2522c54c5f001c4c68</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>webservice/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DC_VERSION_ABI</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>webservice_2version_8h.html</Path>
    <Anchor>a7874e68f03908e39b166bc1ea4244288</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>webservice/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DC_VERSION_GT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>webservice_2version_8h.html</Path>
    <Anchor>abe16f7ee45db0bb1469341286c580e94</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>webservice/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DC_VERSION_GE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>webservice_2version_8h.html</Path>
    <Anchor>a41a9b73578609e4e50735a14e6a5e73c</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>webservice/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DC_VERSION_LT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>webservice_2version_8h.html</Path>
    <Anchor>ae93c3f99a5fab5cbbd188ac2d618017d</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>webservice/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DC_VERSION_LE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>webservice_2version_8h.html</Path>
    <Anchor>a8f40e76dd9133f8c499d2cafbf28b40f</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>webservice/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentation</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>documentation.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReleaseNotes</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>_release_notes.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>userguide</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>userguide.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>todo</Name>
      <APILanguage>unknown</APILanguage>
    </TokenIdentifier>
    <Path>todo.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AsciiToQtKeyCodeMapper</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>AsciiToQtKeyCodeMapper</Scope>
    </TokenIdentifier>
    <Path>class_ascii_to_qt_key_code_mapper.html</Path>
    <Abstract>Map Ascii key codes to Qt key codes. </Abstract>
    <DeclaredIn>AsciiToQtKeyCodeMapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AsciiToQtKeyCodeMapper</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>AsciiToQtKeyCodeMapper</Scope>
    </TokenIdentifier>
    <Path>class_ascii_to_qt_key_code_mapper.html</Path>
    <Anchor>a5cccca313512372853b6a3b96048f94b</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>AsciiToQtKeyCodeMapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getQtKeyCode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>AsciiToQtKeyCodeMapper</Scope>
    </TokenIdentifier>
    <Path>class_ascii_to_qt_key_code_mapper.html</Path>
    <Anchor>a3de6f7247f24f627ef44bd8ef22858fd</Anchor>
    <Abstract>Get the Qt key code for and ascii char. </Abstract>
    <DeclaredIn>AsciiToQtKeyCodeMapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AsyncImageLoader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>AsyncImageLoader</Scope>
    </TokenIdentifier>
    <Path>class_async_image_loader.html</Path>
    <Abstract>Load image thumbnails for supported content types. </Abstract>
    <DeclaredIn>AsyncImageLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>AsyncImageLoader</Scope>
    </TokenIdentifier>
    <Path>class_async_image_loader.html</Path>
    <Anchor>a8cffc984e73379f724784ff9e57027a6</Anchor>
    <Abstract>Load an image thumbnail. </Abstract>
    <DeclaredIn>AsyncImageLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>imageLoaded</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>AsyncImageLoader</Scope>
    </TokenIdentifier>
    <Path>class_async_image_loader.html</Path>
    <Anchor>aee70a4bafde61b7a897d12578b74e09f</Anchor>
    <Abstract>Emitted when an image could be successfully loaded by loadImage(). </Abstract>
    <DeclaredIn>AsyncImageLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>imageLoadingFinished</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>AsyncImageLoader</Scope>
    </TokenIdentifier>
    <Path>class_async_image_loader.html</Path>
    <Anchor>a4740438a2e9d95ae2e8a7c7bd1e729e0</Anchor>
    <Abstract>Emitted whenever loadImage() has finished (successful or not). </Abstract>
    <DeclaredIn>AsyncImageLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AsyncImageLoader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>AsyncImageLoader</Scope>
    </TokenIdentifier>
    <Path>class_async_image_loader.html</Path>
    <Anchor>a06eca9683f23016ba38225c2b7aae9b4</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>AsyncImageLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommandLineOptions</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>CommandLineOptions</Scope>
    </TokenIdentifier>
    <Path>class_command_line_options.html</Path>
    <Abstract>Command line options to pass startup parameters to a localstreamer application. </Abstract>
    <DeclaredIn>CommandLineOptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommandLineOptions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandLineOptions</Scope>
    </TokenIdentifier>
    <Path>class_command_line_options.html</Path>
    <Anchor>ad470c893b63d2f91ebf0b65824473727</Anchor>
    <Abstract>Construct an empty instance. </Abstract>
    <DeclaredIn>CommandLineOptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommandLineOptions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandLineOptions</Scope>
    </TokenIdentifier>
    <Path>class_command_line_options.html</Path>
    <Anchor>a2dde83b128fd9b439e8cd9f080e6db30</Anchor>
    <Abstract>Construct from command line parameters. </Abstract>
    <DeclaredIn>CommandLineOptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showSyntax</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandLineOptions</Scope>
    </TokenIdentifier>
    <Path>class_command_line_options.html</Path>
    <Anchor>a7afe005172796945c93d08dfe495eb92</Anchor>
    <Abstract>Print syntax to std::out. </Abstract>
    <DeclaredIn>CommandLineOptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCommandLineArguments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandLineOptions</Scope>
    </TokenIdentifier>
    <Path>class_command_line_options.html</Path>
    <Anchor>ab5f3af16b94d02c33fa42c6caefcb301</Anchor>
    <Abstract>Get the command line arguments corresponding to this object. </Abstract>
    <DeclaredIn>CommandLineOptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCommandLine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandLineOptions</Scope>
    </TokenIdentifier>
    <Path>class_command_line_options.html</Path>
    <Anchor>a3d8b4c329b6a3634e20a2d661a1e0453</Anchor>
    <Abstract>Get the command line arguments joined in a single line (convenience function) </Abstract>
    <DeclaredIn>CommandLineOptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Configuration</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Abstract>The Configuration class manages all the settings needed by a DisplayCluster application. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Configuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a4f41abbe40c7e1345a325369c86aaaca</Anchor>
    <Abstract>Create a new configuration from an xml file. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Configuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a1226f87dc3c27be16eb16e53301eb2f3</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalScreenCountX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aca560ac9d3b46ef39444287ab4ba800f</Anchor>
    <Abstract>Get the total number of screens along the x axis. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalScreenCountY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a0f61e23c663322c808a33b8deeab198e</Anchor>
    <Abstract>Get the total number of screens along the y axis. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScreenWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a957a6e17a77943ca1469a599c4116987</Anchor>
    <Abstract>Get the width of a screen. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScreenHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>acac053b8e85c8e13dc1b24f829d70b25</Anchor>
    <Abstract>Get the height of a screen. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMullionWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aa4f921578b584411cab548d015e9ceba</Anchor>
    <Abstract>Get the padding nedded to compensate for the physical displays&amp;#39; bezel. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMullionHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aebf3438c6130ea0a50ed85d0ed2bde93</Anchor>
    <Abstract>Get the padding nedded to compensate for the physical displays&amp;#39; bezel. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aa7b4b828ea7bc8afcf2bed3857007eaa</Anchor>
    <Abstract>Get the total width of the DisplayWall, including the Mullion padding. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aba8af0457ab8769b5baab775ecebb8ba</Anchor>
    <Abstract>Get the total height of the DisplayWall, including the Mullion padding. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a3c3e0bc67693859c0450d4c5f4a79318</Anchor>
    <Abstract>Get the total size of the DisplayWall, including Mullion padding. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a1031736dbddf1becee943184afb27dda</Anchor>
    <Abstract>Get the aspect ratio of the DisplayWall, including Mullion padding. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScreenRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>ad9220206ff95419518e3b1eb6712b5d9</Anchor>
    <Abstract>Get the coordinates and dimensions of a screen in pixel units. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFullscreen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a3d38c54f965dce34f3839867a508779a</Anchor>
    <Abstract>Display the windows in fullscreen mode. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>filename_</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a43ad513bddcdfe68ff36f6254a843c1b</Anchor>
    <Abstract>The path to the xml configuration file. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Content</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Abstract>An abstract Content displayed in a ContentWindow. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a44c022cb6fed6fb1b0dff45e39ececb9</Anchor>
    <Abstract>Emitted by any Content subclass when its state has been modified. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Content</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ae491288d2efce7fa63d3e777580630b4</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a887d2b952cd824d70f64106ae048a5f8</Anchor>
    <Abstract>Get the content URI. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af9e369355bb2be4ab07ed23f0f82113d</Anchor>
    <Abstract>Get the content type. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMetadata</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a6822bf4cf94ae866c561b23e62506303</Anchor>
    <Abstract>Read content metadata from the data source. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>aa4681ca97acea99fbe88e20f0e664bc0</Anchor>
    <Abstract>Get the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a70fbc6b9c9dfd95c426819a1c14464f9</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a1b7a6f49f447c124b497b0a844fd6ea6</Anchor>
    <Abstract>Set the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a113bd8ba35685e77bcf8a8650fab636a</Anchor>
    <Abstract>Get the aspect ratio. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFixedAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>adceac372a702843a1e0bd207f670680a</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getActions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a7ae29df27d493e89dd7dccd775efbff8</Anchor>
    <Abstract>Get the actions from QML. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af5fc9d76b3c2899937927c9cd65689d5</Anchor>
    <Abstract>Serialize for sending to Wall applications. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_members_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a6787ec5cdec336c8f25c5e9671977598</Anchor>
    <Abstract>Serialize for saving to an xml file. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_for_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a4c9c0b425c1197cdf34f2d62119b6f4d</Anchor>
    <Abstract>Loading from xml. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_for_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a8d0e71e26ce26abdd7b414dee1ca2c9e</Anchor>
    <Abstract>Saving to xml. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentAction</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ContentAction</Scope>
    </TokenIdentifier>
    <Path>class_content_action.html</Path>
    <Abstract>A content-specific action for use in QML by ContentActionsModel. </Abstract>
    <DeclaredIn>ContentAction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>ContentAction</Scope>
    </TokenIdentifier>
    <Path>class_content_action.html</Path>
    <Anchor>ad38737ffd4ee0b2623f00f0326136df3</Anchor>
    <Abstract>Trigger the action. </Abstract>
    <DeclaredIn>ContentAction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checked</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentAction</Scope>
    </TokenIdentifier>
    <Path>class_content_action.html</Path>
    <Anchor>a563fe54bba76599da58a0da5d1eaf21e</Anchor>
    <Abstract>The action has been checked. </Abstract>
    <DeclaredIn>ContentAction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unchecked</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentAction</Scope>
    </TokenIdentifier>
    <Path>class_content_action.html</Path>
    <Anchor>a0246cbdec2ccc7db7d3dc8821a499725</Anchor>
    <Abstract>The action has been unchecked. </Abstract>
    <DeclaredIn>ContentAction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>triggered</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentAction</Scope>
    </TokenIdentifier>
    <Path>class_content_action.html</Path>
    <Anchor>af765b684f7082cb90c1728cd7e3708a6</Anchor>
    <Abstract>The action has been triggered. </Abstract>
    <DeclaredIn>ContentAction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentAction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentAction</Scope>
    </TokenIdentifier>
    <Path>class_content_action.html</Path>
    <Anchor>a89c834fd1dbfffe821032d135895aa56</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ContentAction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentActionsModel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ContentActionsModel</Scope>
    </TokenIdentifier>
    <Path>class_content_actions_model.html</Path>
    <Abstract>Exposes the actions of a Content for viewing in a QML ListView. </Abstract>
    <DeclaredIn>ContentActionsModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentActionsModel</Scope>
    </TokenIdentifier>
    <Path>class_content_actions_model.html</Path>
    <Anchor>a9a9cb3b60ae95fb603176530cf22ba0e</Anchor>
    <Abstract>Add an action and retains ownership by setting itself as the parent. </Abstract>
    <DeclaredIn>ContentActionsModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentFactory</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ContentFactory</Scope>
    </TokenIdentifier>
    <Path>class_content_factory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentFactory</Scope>
    </TokenIdentifier>
    <Path>class_content_factory.html</Path>
    <Anchor>afe819dd6acbe85688da779e3c538b72a</Anchor>
    <Abstract>Get a Content object of the appropriate derived type based on the URI given. </Abstract>
    <DeclaredIn>ContentFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelStreamContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentFactory</Scope>
    </TokenIdentifier>
    <Path>class_content_factory.html</Path>
    <Anchor>a543b86956c936cd618405ba7bda7f254</Anchor>
    <Abstract>Special case: PixelStreamContent type cannot be derived from its uri. </Abstract>
    <DeclaredIn>ContentFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getErrorContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentFactory</Scope>
    </TokenIdentifier>
    <Path>class_content_factory.html</Path>
    <Anchor>aad3eaa9c3888b86779172e381f3a6692</Anchor>
    <Abstract>Get a Content object representing a loading error. </Abstract>
    <DeclaredIn>ContentFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSupportedExtensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentFactory</Scope>
    </TokenIdentifier>
    <Path>class_content_factory.html</Path>
    <Anchor>a34aeae89b1319f4c53e2ec6a270fe436</Anchor>
    <Abstract>Get all the supported file extensions. </Abstract>
    <DeclaredIn>ContentFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSupportedFilesFilter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentFactory</Scope>
    </TokenIdentifier>
    <Path>class_content_factory.html</Path>
    <Anchor>aa50bde011337a7eedf6a36629eddcf30</Anchor>
    <Abstract>Get all the supported file extensions prefixed with &amp;#39;. </Abstract>
    <DeclaredIn>ContentFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSupportedFilesFilterAsString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentFactory</Scope>
    </TokenIdentifier>
    <Path>class_content_factory.html</Path>
    <Anchor>a86e8179fd94acab556d60f47eef1423e</Anchor>
    <Abstract>Get all the file extensions prefixed with &amp;#39;. </Abstract>
    <DeclaredIn>ContentFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentInteractionDelegate</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ContentInteractionDelegate</Scope>
    </TokenIdentifier>
    <Path>class_content_interaction_delegate.html</Path>
    <Abstract>Handle user interaction with the Content of a ContentWindow. </Abstract>
    <DeclaredIn>ContentInteractionDelegate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentItem</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ContentItem</Scope>
    </TokenIdentifier>
    <Path>class_content_item.html</Path>
    <Abstract>Render a Content in Qml. </Abstract>
    <DeclaredIn>ContentItem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentItem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentItem</Scope>
    </TokenIdentifier>
    <Path>class_content_item.html</Path>
    <Anchor>a9b15790fb9ba092df795280cd2b282f7</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ContentItem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>paint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentItem</Scope>
    </TokenIdentifier>
    <Path>class_content_item.html</Path>
    <Anchor>afc082e2bc0f6f58b6bc9ede6bc408420</Anchor>
    <Abstract>Draw call, reimplemented from QGraphicsItem. </Abstract>
    <DeclaredIn>ContentItem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWallContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentItem</Scope>
    </TokenIdentifier>
    <Path>class_content_item.html</Path>
    <Anchor>af79eaaac1991d6ff56e4de436255b4ae</Anchor>
    <Abstract>Set the factory object to be rendered. </Abstract>
    <DeclaredIn>ContentItem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRole</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentItem</Scope>
    </TokenIdentifier>
    <Path>class_content_item.html</Path>
    <Anchor>a12a160ac9af6daf3880025bc9ed32976</Anchor>
    <Abstract>Get the role of this item. </Abstract>
    <DeclaredIn>ContentItem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSceneRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentItem</Scope>
    </TokenIdentifier>
    <Path>class_content_item.html</Path>
    <Anchor>aba677d0e5b6ffc1197537aaf0f0f45df</Anchor>
    <Abstract>Get the scene coordinates of the item. </Abstract>
    <DeclaredIn>ContentItem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAnimating</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentItem</Scope>
    </TokenIdentifier>
    <Path>class_content_item.html</Path>
    <Anchor>a6c6a528eec81116fe472477de5b60f21</Anchor>
    <Abstract>Check if the item&amp;#39;s size or position is being animated from QML. </Abstract>
    <DeclaredIn>ContentItem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentLoader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ContentLoader</Scope>
    </TokenIdentifier>
    <Path>class_content_loader.html</Path>
    <Abstract>Helper class to open Content on a DisplayGroup. </Abstract>
    <DeclaredIn>ContentLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentLoader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentLoader</Scope>
    </TokenIdentifier>
    <Path>class_content_loader.html</Path>
    <Anchor>a8849d8193ac2e3ffe2cb93ac68775608</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ContentLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentLoader</Scope>
    </TokenIdentifier>
    <Path>class_content_loader.html</Path>
    <Anchor>a3001ad42bf2610f9cd3bf727ba53b3f0</Anchor>
    <Abstract>Load a Content from a file and create a window for it. </Abstract>
    <DeclaredIn>ContentLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentWindow</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Abstract>A window for displaying Content on the Wall. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contentModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a4e489035e70456bcedc092b70b66b9f9</Anchor>
    <Abstract>Emitted when the Content signals that it has been modified. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a32931ee8f5106d270e959e998b34d14c</Anchor>
    <Abstract>Emitted whenever this object is modified. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>coordinatesChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a2124659668dfee637f722e31aa3eed53</Anchor>
    <Abstract>Emitted when setCoordinates has been called. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>af8f2f1ba64930d9e670f51c91cb691fa</Anchor>
    <Abstract>Create a new window. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ContentWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a048c11ac7d49072c2655e7adb0737844</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a57e025ed7564316980c09ca48f8b78e4</Anchor>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getContentPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a73da45d8ecfcc73d79a00cdc1c30ff4c</Anchor>
    <Abstract>Get the content from QML. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a8b06006200dda25a6afbd03025e14d37</Anchor>
    <Abstract>Get the content. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>ad6d59fb6f13898f2f12bc027672cda0f</Anchor>
    <Abstract>Set the content, replacing the existing one. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getController</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a3193f989f93139504794baf48826b007</Anchor>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getController</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>ae6fb0b346d66c89f1b22ad14830f78f7</Anchor>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setController</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a5ee93aada445d75e591e8fb5ac06dc1e</Anchor>
    <Abstract>Assign a controller. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCoordinates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>ac4a6c11c1a4cf8e83c4bca9bff8c1115</Anchor>
    <Abstract>Set the coordinates in pixel units. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>aea67c1d692ce6e4e072bc180dcc9e0a1</Anchor>
    <Abstract>Get the zoom rectangle in normalized coordinates, [0,0,1,1] default. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a79801e17be17cf720c6b115ae7823930</Anchor>
    <Abstract>Set the zoom rectangle in normalized coordinates. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBorder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a9ae563eccf799a8f67140be4dadc7a01</Anchor>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>abf8ec51962379b4bd3fb6837ee04ba0b</Anchor>
    <Abstract>Get the current state. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBorder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a1aa3a04a2f9f1f9eb6f4310ba2ea3320</Anchor>
    <Abstract>Set the current active resize border. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFocused</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>ab81535e0639c5bf3582f4df57e6ec7e2</Anchor>
    <Abstract>Is the window focused. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFocused</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a7a09ee2b11ba7edf67319a0a4061bb52</Anchor>
    <Abstract>Set the window in focused mode. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFocusedCoordinates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a1ee56f12f78de8b6f5941f6a008420f2</Anchor>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFocusedCoordinates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a54fbc8b177ae6997a5ca0f3cb8388626</Anchor>
    <Abstract>Set the focused coordinates of this window. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a139cb8e6dd3fc0bbdc4b45774c54fa46</Anchor>
    <Abstract>Set the current state. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toggleSelectedState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a28d570085afd07cf318ee86dd8744729</Anchor>
    <Abstract>Toggle the state (selected / unselected). </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSelected</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a385e1d496a6f6155ddf9d40c328e02ab</Anchor>
    <Abstract>Check if selected. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMoving</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>ac557a80bb17253cb4c2ecb3f5f468f1a</Anchor>
    <Abstract>Check if moving. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isResizing</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>ab29dccf5622f243136a0f2d7409542b6</Anchor>
    <Abstract>Check if resizing. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isHidden</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a5d8a2935e14cb43f890e776a1c9f2315</Anchor>
    <Abstract>Check if hidden. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInteractionDelegate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a3282541923caeefe51c2ef39491f8fa5</Anchor>
    <Abstract>Get the interaction delegate. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLabel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a707246cc3cd2f5b79c74259e36c5edca</Anchor>
    <Abstract>Get the label for the window. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getControlsVisible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a37c96044fcb6b57432c2fa548ae942f1</Anchor>
    <Abstract>Get the visibility of the window control buttons. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setControlsVisible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>aa17b3d88e6a5928efe395ee36edc4367</Anchor>
    <Abstract>Set the visibility of the window control buttons. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxContentScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a83a0e838a360e277db666fea32c74b68</Anchor>
    <Abstract>Set the maximum factor for zoom and resize; value times content size. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxContentScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a15d282aee0c736e4143785e21ef3eb70</Anchor>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentWindowController</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ContentWindowController</Scope>
    </TokenIdentifier>
    <Path>class_content_window_controller.html</Path>
    <Abstract>Controller for moving and resizing windows. </Abstract>
    <DeclaredIn>ContentWindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindowController</Scope>
    </TokenIdentifier>
    <Path>class_content_window_controller.html</Path>
    <Anchor>a0069301d97e2ab70db7abffb74f6d15d</Anchor>
    <Abstract>Resize the window. </Abstract>
    <DeclaredIn>ContentWindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resizeRelative</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindowController</Scope>
    </TokenIdentifier>
    <Path>class_content_window_controller.html</Path>
    <Anchor>a3a20b4c22eb64fa0c094a44df766c138</Anchor>
    <Abstract>Resize the window relative to the current active window border. </Abstract>
    <DeclaredIn>ContentWindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindowController</Scope>
    </TokenIdentifier>
    <Path>class_content_window_controller.html</Path>
    <Anchor>a0692b71b65e4d3fcae4e6648a7c2f93a</Anchor>
    <Abstract>Scale the window by the given pixel delta (around the given center). </Abstract>
    <DeclaredIn>ContentWindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>adjustSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindowController</Scope>
    </TokenIdentifier>
    <Path>class_content_window_controller.html</Path>
    <Anchor>a42007dfd0544667544dcaef7e3fea231</Anchor>
    <Abstract>Adjust the window coordinates to match the desired state. </Abstract>
    <DeclaredIn>ContentWindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>adjustSizeOneToOne</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindowController</Scope>
    </TokenIdentifier>
    <Path>class_content_window_controller.html</Path>
    <Anchor>ad121ca248b1a4ea27f86f5cef4d69ff7</Anchor>
    <Abstract>Adjust the window coordinates to match the Content dimensions. </Abstract>
    <DeclaredIn>ContentWindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindowController</Scope>
    </TokenIdentifier>
    <Path>class_content_window_controller.html</Path>
    <Anchor>ac675e17bebe6711f1f35e0a8e499756e</Anchor>
    <Abstract>Move the window to the desired position. </Abstract>
    <DeclaredIn>ContentWindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveCenterTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindowController</Scope>
    </TokenIdentifier>
    <Path>class_content_window_controller.html</Path>
    <Anchor>ab5311fc946d3a957af4447c1be37a8e0</Anchor>
    <Abstract>Move the center of the window to the desired position. </Abstract>
    <DeclaredIn>ContentWindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindowController</Scope>
    </TokenIdentifier>
    <Path>class_content_window_controller.html</Path>
    <Anchor>aa1ff2ae84100c3cd50ddc1d827a72cc0</Anchor>
    <DeclaredIn>ContentWindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindowController</Scope>
    </TokenIdentifier>
    <Path>class_content_window_controller.html</Path>
    <Anchor>aa749c1d5555254079c7250bead04fbf3</Anchor>
    <DeclaredIn>ContentWindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxContentSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindowController</Scope>
    </TokenIdentifier>
    <Path>class_content_window_controller.html</Path>
    <Anchor>a3995ee27f3024d4a7d386ec3b51c0d59</Anchor>
    <DeclaredIn>ContentWindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>constrainSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindowController</Scope>
    </TokenIdentifier>
    <Path>class_content_window_controller.html</Path>
    <Anchor>a1b88c694e55003f2a30ab9d1f488557b</Anchor>
    <Abstract>Constrain the given size between getMinSize() and getMaxSize(). </Abstract>
    <DeclaredIn>ContentWindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scaleRectAroundPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentWindowController</Scope>
    </TokenIdentifier>
    <Path>class_content_window_controller.html</Path>
    <Anchor>a1279562400102db76a46ce1b20566f2a</Anchor>
    <Abstract>Helper function to resize a rectangle (window, zoom rectangle) around a point of interest (pinch cent...</Abstract>
    <DeclaredIn>ContentWindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Coordinates</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Coordinates</Scope>
    </TokenIdentifier>
    <Path>class_coordinates.html</Path>
    <Abstract>Exposes the coordinates of a rectangle as QProperties for QML binding. </Abstract>
    <DeclaredIn>Coordinates.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultThumbnailGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>DefaultThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_default_thumbnail_generator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DisplayGroup</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Abstract>A collection of ContentWindows. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a0c10092c41d5dee217dd49f52c7e2302</Anchor>
    <Abstract>Clear all ContentWindows. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setShowWindowTitles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a4dd36607509226c8a2be889c044bd288</Anchor>
    <Abstract>Enable/Disable the visibility of window titles. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeWindowLater</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>ac1f675d4906600bf534fe42f094f10bc</Anchor>
    <Abstract>Remove a content window later (using a Qt::QueuedConnection). </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeContentWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a29eff017c9c16b6959a0991f13a3f5a5</Anchor>
    <Abstract>Remove a content window. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveContentWindowToFront</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>ac9fdb362fa9fe16bcb43f4d438815537</Anchor>
    <Abstract>Remove a content window. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveContentWindowToFront</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a426a5219ee17a10f991dad5f2f35a21e</Anchor>
    <Abstract>Move a content window to the front. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a2d45f47c71869da3799d9e1c88274cbd</Anchor>
    <Abstract>Emitted whenever the DisplayGroup is modified. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contentWindowAdded</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a7d776c2d2ae02dcbd1a0011446a1c5de</Anchor>
    <Abstract>Emitted when a content window is added. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contentWindowRemoved</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a2901850c2b9893e2c3826cbdf6b1795a</Anchor>
    <Abstract>Emitted when a content window is removed. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contentWindowMovedToFront</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a018a418c963074c2fee79896c327e950</Anchor>
    <Abstract>Emitted when a content window is moved to the front. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFocusedWindowsChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a40f1bb735ad449fb1637d4c9fb24657b</Anchor>
    <Abstract>Notifier for the hasFocusedWindows property. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DisplayGroup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a779255c3aa959085ad613850286dd43d</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~DisplayGroup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>ae621c03bd2408c8ece4a61237efca355</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addContentWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a979fd60adf1b87cecd02fe848d9d8add</Anchor>
    <Abstract>Add a content window. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getShowWindowTitles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a1da05076e3571e8efd80f40e99973abc</Anchor>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a2bd3c3a118c0a2be043c10bb6ca8c3dd</Anchor>
    <Abstract>Is the DisplayGroup empty. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getActiveWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>ac369a679a2abf36c39e3ea6bfd034cf0</Anchor>
    <Abstract>Get the active window. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getContentWindows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>aa1940079d2bc1464f59e38c52ac1bffb</Anchor>
    <Abstract>Get all windows. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getContentWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a1b578c1cd18a8b8c8fe637de45b4302b</Anchor>
    <Abstract>Get a single window by its id. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContentWindows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>aef0625b115fe22908ff5e9d1f1cc4d56</Anchor>
    <Abstract>Replace the content windows. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFocusedWindows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a24a30aa05f0ca717c9b559aed1b6c50d</Anchor>
    <Abstract>Are there focused windows. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>focus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>abe8c0ccc90732fa127118db09877e000</Anchor>
    <Abstract>Focus a window. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unfocus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>af09535f73c71da284b767b32e293d2e8</Anchor>
    <Abstract>Unfocus a window. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFocusedWindows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>ad34ce28749abdf4530486c499c84cc9c</Anchor>
    <Abstract>Get the set of focused windows. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DisplayGroupAdapter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>DisplayGroupAdapter</Scope>
    </TokenIdentifier>
    <Path>class_display_group_adapter.html</Path>
    <Abstract>Adapter class for DisplayGroup with virtual methods for unit testing. </Abstract>
    <DeclaredIn>DisplayGroupAdapter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DisplayGroupAdapter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupAdapter</Scope>
    </TokenIdentifier>
    <Path>class_display_group_adapter.html</Path>
    <Anchor>af0572a3abf0c9bd2e6778f9cc6d670f3</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>DisplayGroupAdapter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~DisplayGroupAdapter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupAdapter</Scope>
    </TokenIdentifier>
    <Path>class_display_group_adapter.html</Path>
    <Anchor>a512a4830b15f93f8dc63c27e12e0441d</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>DisplayGroupAdapter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasWindows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupAdapter</Scope>
    </TokenIdentifier>
    <Path>class_display_group_adapter.html</Path>
    <Anchor>adfb107f68a813c4cdef0d07025fd6edd</Anchor>
    <Abstract>Does the DisplayGroup have any windows. </Abstract>
    <DeclaredIn>DisplayGroupAdapter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DisplayGroupRenderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>DisplayGroupRenderer</Scope>
    </TokenIdentifier>
    <Path>class_display_group_renderer.html</Path>
    <Abstract>Renders a DisplayGroup. </Abstract>
    <DeclaredIn>DisplayGroupRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDisplayGroup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>DisplayGroupRenderer</Scope>
    </TokenIdentifier>
    <Path>class_display_group_renderer.html</Path>
    <Anchor>ace9e977654ad391c3626e6aaf8815250</Anchor>
    <Abstract>Set the DisplayGroup to render, replacing the previous one. </Abstract>
    <DeclaredIn>DisplayGroupRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DisplayGroupRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupRenderer</Scope>
    </TokenIdentifier>
    <Path>class_display_group_renderer.html</Path>
    <Anchor>aa208c4f1dba3c0620e2042cc0ef1e842</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>DisplayGroupRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRenderingOptions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupRenderer</Scope>
    </TokenIdentifier>
    <Path>class_display_group_renderer.html</Path>
    <Anchor>ada0e93d084100854df430f175abb0b92</Anchor>
    <Abstract>Set different options used for rendering. </Abstract>
    <DeclaredIn>DisplayGroupRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DockPixelStreamer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>DockPixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_dock_pixel_streamer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Anchor>a3a59b36c4477a063e71de6a95b6a97c0</Anchor>
    <Abstract>Process an Event. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>imageUpdated</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Anchor>ae9f831bd8e004763f4e2fd05b17a21a1</Anchor>
    <Abstract>Emit this signal after a new image has been generated. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendCommand</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Anchor>ad3be94b21aba5fb409fa24bbff6454e5</Anchor>
    <Abstract>Emit this signal to send a command to the receiver. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DockPixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_dock_pixel_streamer.html</Path>
    <Anchor>a8bf76ee5cddb35c8f13e9d30352c12a1</Anchor>
    <Abstract>Get the size of the images generated by this streamer. </Abstract>
    <DeclaredIn>DockPixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Anchor>ad3d2288e104737dd9de180fdd9f27e74</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PixelStreamer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Anchor>ac9d996a5dadc05b54dcfa0824eb1a573</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DockToolbar</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>DockToolbar</Scope>
    </TokenIdentifier>
    <Path>class_dock_toolbar.html</Path>
    <Abstract>A Toolbar for the Dock. </Abstract>
    <DeclaredIn>DockToolbar.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DockToolbar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DockToolbar</Scope>
    </TokenIdentifier>
    <Path>class_dock_toolbar.html</Path>
    <Anchor>a155b7ec8ba3fc4e3dc2b2d2072ec6651</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>DockToolbar.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~DockToolbar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DockToolbar</Scope>
    </TokenIdentifier>
    <Path>class_dock_toolbar.html</Path>
    <Anchor>a3125d403fff234d97a60fcbc7d6cc152</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>DockToolbar.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addButton</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DockToolbar</Scope>
    </TokenIdentifier>
    <Path>class_dock_toolbar.html</Path>
    <Anchor>aeb4a7779ce269b5614a8f69a4cd8a148</Anchor>
    <Abstract>Add a button to the right of the Toolbar. </Abstract>
    <DeclaredIn>DockToolbar.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DockToolbar</Scope>
    </TokenIdentifier>
    <Path>class_dock_toolbar.html</Path>
    <Anchor>a189d0957cd88f5b12539f2fe7db56136</Anchor>
    <Abstract>Get the size in pixels. </Abstract>
    <DeclaredIn>DockToolbar.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DockToolbar</Scope>
    </TokenIdentifier>
    <Path>class_dock_toolbar.html</Path>
    <Anchor>ab2ca6a8613bdd6b1c8148c99967a826a</Anchor>
    <Abstract>Get the image, regenerating it if required. </Abstract>
    <DeclaredIn>DockToolbar.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getButtonAt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DockToolbar</Scope>
    </TokenIdentifier>
    <Path>class_dock_toolbar.html</Path>
    <Anchor>ac81f009b1dd0bc2a7c64ffb7a5b7f186</Anchor>
    <Abstract>Get the button at the given position. </Abstract>
    <DeclaredIn>DockToolbar.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DoubleTapGestureRecognizer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>DoubleTapGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_double_tap_gesture_recognizer.html</Path>
    <Abstract>Gesture recognizer for a doubletap gesture. </Abstract>
    <DeclaredIn>DoubleTapGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DoubleTapGestureRecognizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DoubleTapGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_double_tap_gesture_recognizer.html</Path>
    <Anchor>ab59b6ca10f6ac6a453550938a88c4194</Anchor>
    <Abstract>Construct a new doubletap gesture recognizer object. </Abstract>
    <DeclaredIn>DoubleTapGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DoubleTapGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_double_tap_gesture_recognizer.html</Path>
    <Anchor>a525ef12c050e52ebb08cac6bf6d86613</Anchor>
    <DeclaredIn>DoubleTapGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recognize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DoubleTapGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_double_tap_gesture_recognizer.html</Path>
    <Anchor>af5076763e4b8439a945d0fb0f2918011</Anchor>
    <DeclaredIn>DoubleTapGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DoubleTapGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_double_tap_gesture_recognizer.html</Path>
    <Anchor>ad2b438050ccb539b5be87fbed26a166c</Anchor>
    <DeclaredIn>DoubleTapGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>install</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>DoubleTapGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_double_tap_gesture_recognizer.html</Path>
    <Anchor>ad6d5a7109604f21fa5d554bc68140c01</Anchor>
    <Abstract>Installs the doubletap recognizer in the current QApplication. </Abstract>
    <DeclaredIn>DoubleTapGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uninstall</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>DoubleTapGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_double_tap_gesture_recognizer.html</Path>
    <Anchor>abb2caf1d13da4c473dbb1cb8f5f40673</Anchor>
    <Abstract>Uninstalls the doubletap recognizer from the current QApplication. </Abstract>
    <DeclaredIn>DoubleTapGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>DoubleTapGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_double_tap_gesture_recognizer.html</Path>
    <Anchor>aba02d05aa3df105fb642fb5d28be3989</Anchor>
    <DeclaredIn>DoubleTapGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Drawable</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Drawable</Scope>
    </TokenIdentifier>
    <Path>class_drawable.html</Path>
    <Abstract>An abstract drawable object that can be rendered using a QPainter. </Abstract>
    <DeclaredIn>Drawable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Drawable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Drawable</Scope>
    </TokenIdentifier>
    <Path>class_drawable.html</Path>
    <Anchor>aac88608db6081da479c772c96636acb1</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Drawable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Drawable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Drawable</Scope>
    </TokenIdentifier>
    <Path>class_drawable.html</Path>
    <Anchor>abdc2e2d82c51c1703656a2dfba0feabd</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>Drawable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>draw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Drawable</Scope>
    </TokenIdentifier>
    <Path>class_drawable.html</Path>
    <Anchor>a7c85d542cb361ea4ee5e930b2d60b774</Anchor>
    <Abstract>Render the object. </Abstract>
    <DeclaredIn>Drawable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isVisible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Drawable</Scope>
    </TokenIdentifier>
    <Path>class_drawable.html</Path>
    <Anchor>aa0c7ca2271d543fb7217e3806188f6f2</Anchor>
    <Abstract>Check if the object is visible. </Abstract>
    <DeclaredIn>Drawable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVisible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Drawable</Scope>
    </TokenIdentifier>
    <Path>class_drawable.html</Path>
    <Anchor>ae50ce7016cbc9a2e243255ea6113e40f</Anchor>
    <Abstract>Change the visibility of this object. </Abstract>
    <DeclaredIn>Drawable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DynamicTexture</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>DynamicTexture</Scope>
    </TokenIdentifier>
    <Path>class_dynamic_texture.html</Path>
    <Abstract>A dynamically loaded large scale image. </Abstract>
    <DeclaredIn>DynamicTexture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DynamicTexture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DynamicTexture</Scope>
    </TokenIdentifier>
    <Path>class_dynamic_texture.html</Path>
    <Anchor>a191421943158516c192366d066a5b2b1</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>DynamicTexture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~DynamicTexture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DynamicTexture</Scope>
    </TokenIdentifier>
    <Path>class_dynamic_texture.html</Path>
    <Anchor>af84c674998841fd53badf7679aaea3e4</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>DynamicTexture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DynamicTexture</Scope>
    </TokenIdentifier>
    <Path>class_dynamic_texture.html</Path>
    <Anchor>aa51eb5823775f1bd910edf93d0784ecf</Anchor>
    <Abstract>Get the size of the full resolution texture. </Abstract>
    <DeclaredIn>DynamicTexture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DynamicTexture</Scope>
    </TokenIdentifier>
    <Path>class_dynamic_texture.html</Path>
    <Anchor>a17a0ce3445fbc6dc483c529772a3cee7</Anchor>
    <Abstract>Render the dynamic texture. </Abstract>
    <DeclaredIn>DynamicTexture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderPreview</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DynamicTexture</Scope>
    </TokenIdentifier>
    <Path>class_dynamic_texture.html</Path>
    <Anchor>aec2c28d253e717716523fa1859a5abe3</Anchor>
    <Abstract>Render the preview. </Abstract>
    <DeclaredIn>DynamicTexture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preRenderUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DynamicTexture</Scope>
    </TokenIdentifier>
    <Path>class_dynamic_texture.html</Path>
    <Anchor>a166cf90db05bfd1a1f6e8a213333b77e</Anchor>
    <Abstract>Pre render step. </Abstract>
    <DeclaredIn>DynamicTexture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postRenderSync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DynamicTexture</Scope>
    </TokenIdentifier>
    <Path>class_dynamic_texture.html</Path>
    <Anchor>a99dfa49b0ce794e9b2831ce8be50ddca</Anchor>
    <Abstract>Post render step. </Abstract>
    <DeclaredIn>DynamicTexture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRootImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DynamicTexture</Scope>
    </TokenIdentifier>
    <Path>class_dynamic_texture.html</Path>
    <Anchor>af115a1ad9786f6f34c724a9eb27d4975</Anchor>
    <Abstract>Get the root image of the pyramid. </Abstract>
    <DeclaredIn>DynamicTexture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateImagePyramid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DynamicTexture</Scope>
    </TokenIdentifier>
    <Path>class_dynamic_texture.html</Path>
    <Anchor>a82d97653b185389c42295eac18922bab</Anchor>
    <Abstract>Generate an image Pyramid from the current uri and save it to the disk. </Abstract>
    <DeclaredIn>DynamicTexture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DynamicTexture</Scope>
    </TokenIdentifier>
    <Path>class_dynamic_texture.html</Path>
    <Anchor>a6353ae75d0386fefe824ce8cfe38e94a</Anchor>
    <Abstract>Load the image for this part of the texture. </Abstract>
    <DeclaredIn>DynamicTexture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decrementGlobalThreadCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DynamicTexture</Scope>
    </TokenIdentifier>
    <Path>class_dynamic_texture.html</Path>
    <Anchor>ad1cc18b890629c2e154ccfa3e0e03217</Anchor>
    <Abstract>Decrement the global count of loading threads. </Abstract>
    <DeclaredIn>DynamicTexture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~WallContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallContent</Scope>
    </TokenIdentifier>
    <Path>class_wall_content.html</Path>
    <Anchor>a9bf85393c18ce6669f161becabc93229</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>WallContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preRenderSync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallContent</Scope>
    </TokenIdentifier>
    <Path>class_wall_content.html</Path>
    <Anchor>a531f1539ea2dce68b82eb91c249afaee</Anchor>
    <Abstract>Optional synchronization step before rendering. </Abstract>
    <DeclaredIn>WallContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setQmlItem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallContent</Scope>
    </TokenIdentifier>
    <Path>class_wall_content.html</Path>
    <Anchor>abafc1082fda8da69084e323cdee028e5</Anchor>
    <Abstract>Set a reference to the Qml item using this content. </Abstract>
    <DeclaredIn>WallContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pyramidFileExtension</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>DynamicTexture</Scope>
    </TokenIdentifier>
    <Path>class_dynamic_texture.html</Path>
    <Anchor>af74abe9e07c976642bb60a60ca0c5cc4</Anchor>
    <Abstract>The exension of pyramid metadata files. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pyramidFolderSuffix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>DynamicTexture</Scope>
    </TokenIdentifier>
    <Path>class_dynamic_texture.html</Path>
    <Anchor>a15d1b98be5671aa2b56ea62f99b36d65</Anchor>
    <Abstract>The standard suffix for pyramid image folders. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>WallContent</Scope>
    </TokenIdentifier>
    <Path>class_wall_content.html</Path>
    <Anchor>afbaa3448bfc8c02404f8134a7b968f9d</Anchor>
    <Abstract>Create an object corresponding to the given content. </Abstract>
    <DeclaredIn>WallContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallContent</Scope>
    </TokenIdentifier>
    <Path>class_wall_content.html</Path>
    <Anchor>a03e64cc8e59e04efcc79b47c2cbaabe9</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WallContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DynamicTextureContent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>DynamicTextureContent</Scope>
    </TokenIdentifier>
    <Path>class_dynamic_texture_content.html</Path>
    <Abstract>The Content object for a dynamically loaded large scale image. </Abstract>
    <DeclaredIn>DynamicTextureContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DynamicTextureContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DynamicTextureContent</Scope>
    </TokenIdentifier>
    <Path>class_dynamic_texture_content.html</Path>
    <Anchor>a1ce069ea636880f9785dbd3c74aec486</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>DynamicTextureContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DynamicTextureContent</Scope>
    </TokenIdentifier>
    <Path>class_dynamic_texture_content.html</Path>
    <Anchor>a8154cd2bf6b8ba7302b4193173e91490</Anchor>
    <Abstract>Get the content type. </Abstract>
    <DeclaredIn>DynamicTextureContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMetadata</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DynamicTextureContent</Scope>
    </TokenIdentifier>
    <Path>class_dynamic_texture_content.html</Path>
    <Anchor>ad98b51096a5a4b553b35d8c650909f99</Anchor>
    <Abstract>Read texture informations from the source URI. </Abstract>
    <DeclaredIn>DynamicTextureContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Content</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ae491288d2efce7fa63d3e777580630b4</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a887d2b952cd824d70f64106ae048a5f8</Anchor>
    <Abstract>Get the content URI. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>aa4681ca97acea99fbe88e20f0e664bc0</Anchor>
    <Abstract>Get the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a70fbc6b9c9dfd95c426819a1c14464f9</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a1b7a6f49f447c124b497b0a844fd6ea6</Anchor>
    <Abstract>Set the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a113bd8ba35685e77bcf8a8650fab636a</Anchor>
    <Abstract>Get the aspect ratio. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFixedAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>adceac372a702843a1e0bd207f670680a</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getActions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a7ae29df27d493e89dd7dccd775efbff8</Anchor>
    <Abstract>Get the actions from QML. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a44c022cb6fed6fb1b0dff45e39ececb9</Anchor>
    <Abstract>Emitted by any Content subclass when its state has been modified. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af5fc9d76b3c2899937927c9cd65689d5</Anchor>
    <Abstract>Serialize for sending to Wall applications. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_members_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a6787ec5cdec336c8f25c5e9671977598</Anchor>
    <Abstract>Serialize for saving to an xml file. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_for_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a4c9c0b425c1197cdf34f2d62119b6f4d</Anchor>
    <Abstract>Loading from xml. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_for_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a8d0e71e26ce26abdd7b414dee1ca2c9e</Anchor>
    <Abstract>Saving to xml. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ElapsedTimer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ElapsedTimer</Scope>
    </TokenIdentifier>
    <Path>class_elapsed_timer.html</Path>
    <Abstract>Simple timer to mesures time differences. </Abstract>
    <DeclaredIn>ElapsedTimer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ElapsedTimer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ElapsedTimer</Scope>
    </TokenIdentifier>
    <Path>class_elapsed_timer.html</Path>
    <Anchor>a898261990fc2ab88f0ac3c35f0de83d0</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ElapsedTimer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCurrentTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ElapsedTimer</Scope>
    </TokenIdentifier>
    <Path>class_elapsed_timer.html</Path>
    <Anchor>adb326c5e59181f360b985b00768e91df</Anchor>
    <Abstract>Set the current time. </Abstract>
    <DeclaredIn>ElapsedTimer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getElapsedTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ElapsedTimer</Scope>
    </TokenIdentifier>
    <Path>class_elapsed_timer.html</Path>
    <Anchor>a7b19ebb48d1788a3e9d3e505705e21f2</Anchor>
    <Abstract>Get the elapsed time between the last two calls to setCurrentTime(). </Abstract>
    <DeclaredIn>ElapsedTimer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFMPEGFrame</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FFMPEGFrame</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_frame.html</Path>
    <Abstract>A frame of an FFMPEG movie. </Abstract>
    <DeclaredIn>FFMPEGFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFMPEGFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGFrame</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_frame.html</Path>
    <Anchor>a3c21a094e496afc9c64efe76e74fb609</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>FFMPEGFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FFMPEGFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGFrame</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_frame.html</Path>
    <Anchor>ad233e8ca905bf16f4361665ba24a7661</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>FFMPEGFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimestamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGFrame</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_frame.html</Path>
    <Anchor>aacf90ac6c1bcbc0d2226a81ac9c5b484</Anchor>
    <DeclaredIn>FFMPEGFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGFrame</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_frame.html</Path>
    <Anchor>a42c9d33780d5c82c9e843dd39c1cd114</Anchor>
    <DeclaredIn>FFMPEGFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAVFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGFrame</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_frame.html</Path>
    <Anchor>a8e7dbdeeb04ac81ce77da9100d3e0e9f</Anchor>
    <Abstract>Get the FFMPEG frame. </Abstract>
    <DeclaredIn>FFMPEGFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFMPEGMovie</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Abstract>Read and play movies using the FFMPEG library. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFMPEGMovie</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>a9fcab46d4c344400975ade1f085fa098</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FFMPEGMovie</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>ada29015e30fd77182119418abe0356cd</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>a0e0248f752f4b4fc318d3fc3b22069b4</Anchor>
    <Abstract>Is the movie valid. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>a9a0ec22f9170bb513afdce6b2095eb85</Anchor>
    <Abstract>Get the frame width. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>af925db8310451b645f8645941e054837</Anchor>
    <Abstract>Get the frame height. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>a1a4fccc1a7b190fd7ad462b0c568709a</Anchor>
    <Abstract>Get the current time position in seconds. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAtEOF</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>a3447a5bac6e7a0c51d7109e91dc88e5b</Anchor>
    <Abstract>True when the EOF was reached and no more frames can be obtained. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>ac79b8e3e5c0774e96849ffd57809311c</Anchor>
    <Abstract>Get the movie duration in seconds. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>ab8b72d1dd991fbdd0b527648314b7001</Anchor>
    <Abstract>Get the duration of a frame in seconds. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startDecoding</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>a3f922f6c52f6618feefe3aee1ac87a2e</Anchor>
    <Abstract>Start decoding the movie from the given position. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stopDecoding</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>aff0300a40b46b4e983fbd8f625e6d201</Anchor>
    <Abstract>Stop decoding the movie. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDecoding</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>ac1c60c8f399de0c79f8737df5720186f</Anchor>
    <Abstract>Check if the movie is currently decoding. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>a0f02c52b0b091d3208a956ad27073a20</Anchor>
    <Abstract>Get a frame at the given position in seconds. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFMPEGPicture</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FFMPEGPicture</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_picture.html</Path>
    <Abstract>A frame of an FFMPEG movie with picture data allocated. </Abstract>
    <DeclaredIn>FFMPEGFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFMPEGPicture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGPicture</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_picture.html</Path>
    <Anchor>a074f9a024384cbe9a44f39e71e5f339d</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>FFMPEGFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FFMPEGPicture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGPicture</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_picture.html</Path>
    <Anchor>a567d83133c1489d0e0f01ea5973d3da5</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>FFMPEGFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFMPEGFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGFrame</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_frame.html</Path>
    <Anchor>a3c21a094e496afc9c64efe76e74fb609</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>FFMPEGFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FFMPEGFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGFrame</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_frame.html</Path>
    <Anchor>ad233e8ca905bf16f4361665ba24a7661</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>FFMPEGFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimestamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGFrame</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_frame.html</Path>
    <Anchor>aacf90ac6c1bcbc0d2226a81ac9c5b484</Anchor>
    <DeclaredIn>FFMPEGFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGFrame</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_frame.html</Path>
    <Anchor>a42c9d33780d5c82c9e843dd39c1cd114</Anchor>
    <DeclaredIn>FFMPEGFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAVFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGFrame</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_frame.html</Path>
    <Anchor>a8e7dbdeeb04ac81ce77da9100d3e0e9f</Anchor>
    <Abstract>Get the FFMPEG frame. </Abstract>
    <DeclaredIn>FFMPEGFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFMPEGVideoFrameConverter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FFMPEGVideoFrameConverter</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_frame_converter.html</Path>
    <Abstract>Converts FFMPEG&amp;#39;s AVFrame format to a data buffer of user-defined format. </Abstract>
    <DeclaredIn>FFMPEGVideoFrameConverter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFMPEGVideoFrameConverter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoFrameConverter</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_frame_converter.html</Path>
    <Anchor>a6800ff65cd8c48178c7e95ae01a4a5a3</Anchor>
    <Abstract>Create a new converter. </Abstract>
    <DeclaredIn>FFMPEGVideoFrameConverter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FFMPEGVideoFrameConverter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoFrameConverter</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_frame_converter.html</Path>
    <Anchor>aeefb0051a145deb3d6b6fd58bb4906ac</Anchor>
    <Abstract>Desturctor. </Abstract>
    <DeclaredIn>FFMPEGVideoFrameConverter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convert</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoFrameConverter</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_frame_converter.html</Path>
    <Anchor>aea4dc6cf3c964266be7f24c7f19893e6</Anchor>
    <Abstract>Convert an AVFrame to the target data format. </Abstract>
    <DeclaredIn>FFMPEGVideoFrameConverter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFMPEGVideoStream</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Abstract>A video stream from an FFMPEG file. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFMPEGVideoStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>a3462dbb6d35dbca8ae9692320765ea70</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FFMPEGVideoStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>ac156456c4ed8b05d38a475d562de746e</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>a740cc6e53585987ed948ce75de986b1b</Anchor>
    <Abstract>Decode a video packet. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decodeTimestamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>a59a72231402aae3c00200f20129329b3</Anchor>
    <Abstract>Partially decode a video packet to determine its timestamp. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decodePictureForLastPacket</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>a3ee83f7561e1fc56cceb14bc613f5b0e</Anchor>
    <Abstract>Call after a successful decodeTimestamp to get the corresponding picture. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>a2a229012cd32b78f4fce8790b5621968</Anchor>
    <Abstract>Get the width of the video stream. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>a5bf7b63236263fae23dc4338c119ec74</Anchor>
    <Abstract>Get the height of the video stream. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>a6751a0e306c8f0c176681496d5448982</Anchor>
    <Abstract>Get the video stream duration in seconds. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>a6aa24924ff435f71adf39625d0a4f8a4</Anchor>
    <Abstract>Get the duration of a frame in seconds. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>afd2dc7e4aca544cf9e63604be3640560</Anchor>
    <Abstract>Get the frameIndex corresponding to the given time in seconds. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimestamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>aeb13ff830c91d0644e28092fe71c3a96</Anchor>
    <Abstract>Get the timestamp corresponding to the given time in seconds. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimestamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>a7f8ddef524406c30c3973190428d9d6e</Anchor>
    <Abstract>Get the timestamp corresponding to the given frameIndex. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>abd1bbcc36fc1f0e6d38df4fae161ec8a</Anchor>
    <Abstract>Get the frameIndex corresponding to the given timestamp. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPositionInSec</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>a6e0f039858303528e97219efa68a087b</Anchor>
    <Abstract>Convert a timestamp to a time in seconds. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>seekToNearestFullframe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>ab78b40e3d19ec1de95c31ea52163937c</Anchor>
    <Abstract>Seek to the nearest full frame in the video. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FileCommandHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FileCommandHandler</Scope>
    </TokenIdentifier>
    <Path>class_file_command_handler.html</Path>
    <Abstract>Handle file Commands. </Abstract>
    <DeclaredIn>FileCommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FileCommandHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FileCommandHandler</Scope>
    </TokenIdentifier>
    <Path>class_file_command_handler.html</Path>
    <Anchor>ab124d2c13c024bdd5722ac02c228c26e</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>FileCommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FileCommandHandler</Scope>
    </TokenIdentifier>
    <Path>class_file_command_handler.html</Path>
    <Anchor>ac93b38845d78a403cf795ae937d1298e</Anchor>
    <Abstract>Get the type of commands handled by the implementation. </Abstract>
    <DeclaredIn>FileCommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FileCommandHandler</Scope>
    </TokenIdentifier>
    <Path>class_file_command_handler.html</Path>
    <Anchor>a50bf768c218a366751ce8b7fb4421852</Anchor>
    <Abstract>Handle a file Command. </Abstract>
    <DeclaredIn>FileCommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FolderThumbnailGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FolderThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_folder_thumbnail_generator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FpsCounter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FpsCounter</Scope>
    </TokenIdentifier>
    <Path>class_fps_counter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FpsRenderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FpsRenderer</Scope>
    </TokenIdentifier>
    <Path>class_fps_renderer.html</Path>
    <Abstract>Displays rendering performance using an FpsCounter. </Abstract>
    <DeclaredIn>FpsRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FpsRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FpsRenderer</Scope>
    </TokenIdentifier>
    <Path>class_fps_renderer.html</Path>
    <Anchor>ac5b45f3512cdabbb910914ff82847b03</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>FpsRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>draw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FpsRenderer</Scope>
    </TokenIdentifier>
    <Path>class_fps_renderer.html</Path>
    <Anchor>af131d2906b2b5882829db2fd3ebfb73a</Anchor>
    <Abstract>Render the object. </Abstract>
    <DeclaredIn>FpsRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Drawable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Drawable</Scope>
    </TokenIdentifier>
    <Path>class_drawable.html</Path>
    <Anchor>aac88608db6081da479c772c96636acb1</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Drawable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Drawable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Drawable</Scope>
    </TokenIdentifier>
    <Path>class_drawable.html</Path>
    <Anchor>abdc2e2d82c51c1703656a2dfba0feabd</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>Drawable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isVisible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Drawable</Scope>
    </TokenIdentifier>
    <Path>class_drawable.html</Path>
    <Anchor>aa0c7ca2271d543fb7217e3806188f6f2</Anchor>
    <Abstract>Check if the object is visible. </Abstract>
    <DeclaredIn>Drawable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVisible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Drawable</Scope>
    </TokenIdentifier>
    <Path>class_drawable.html</Path>
    <Anchor>ae50ce7016cbc9a2e243255ea6113e40f</Anchor>
    <Abstract>Change the visibility of this object. </Abstract>
    <DeclaredIn>Drawable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GLQuad</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>GLQuad</Scope>
    </TokenIdentifier>
    <Path>class_g_l_quad.html</Path>
    <Abstract>A simple OpenGL textured quad. </Abstract>
    <DeclaredIn>GLQuad.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GLQuad</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>GLQuad</Scope>
    </TokenIdentifier>
    <Path>class_g_l_quad.html</Path>
    <Anchor>a45da9f8e3dc33cd8e90c05160bfca7db</Anchor>
    <Abstract>Construct a unit quad. </Abstract>
    <DeclaredIn>GLQuad.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>GLQuad</Scope>
    </TokenIdentifier>
    <Path>class_g_l_quad.html</Path>
    <Anchor>afd60b9c85e032b0cb25030a91af4401a</Anchor>
    <Abstract>Draw the quad. </Abstract>
    <DeclaredIn>GLQuad.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTexCoords</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>GLQuad</Scope>
    </TokenIdentifier>
    <Path>class_g_l_quad.html</Path>
    <Anchor>a1b70e4df8b55aa21321af5ec70ae20c0</Anchor>
    <Abstract>Set the texture coordinates. </Abstract>
    <DeclaredIn>GLQuad.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTexture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>GLQuad</Scope>
    </TokenIdentifier>
    <Path>class_g_l_quad.html</Path>
    <Anchor>a46a4d394fa46268ac336ede0d2d7b0f2</Anchor>
    <Abstract>Set the texture to use for rendering. </Abstract>
    <DeclaredIn>GLQuad.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRenderMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>GLQuad</Scope>
    </TokenIdentifier>
    <Path>class_g_l_quad.html</Path>
    <Anchor>a855528f288038c258ca2883a259d4ee7</Anchor>
    <Abstract>Set the render mode [GL_QUADS|GL_LINE_LOOP] (default: GL_QUADS) </Abstract>
    <DeclaredIn>GLQuad.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableAlphaBlending</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>GLQuad</Scope>
    </TokenIdentifier>
    <Path>class_g_l_quad.html</Path>
    <Anchor>ac7ea2e00427223a322a8386920bce9e3</Anchor>
    <Abstract>Enable or disable alpha blending. </Abstract>
    <DeclaredIn>GLQuad.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Renderable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Renderable</Scope>
    </TokenIdentifier>
    <Path>class_renderable.html</Path>
    <Anchor>a97a0f6efd2a058dfb003e64e63bdb255</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Renderable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Renderable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Renderable</Scope>
    </TokenIdentifier>
    <Path>class_renderable.html</Path>
    <Anchor>a4c9e03ac345df99a010c2ad9f8632af2</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>Renderable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isVisible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Renderable</Scope>
    </TokenIdentifier>
    <Path>class_renderable.html</Path>
    <Anchor>abfb58dafbf580906de32ec1f15dcac77</Anchor>
    <Abstract>Check if the object is visible. </Abstract>
    <DeclaredIn>Renderable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVisible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Renderable</Scope>
    </TokenIdentifier>
    <Path>class_renderable.html</Path>
    <Anchor>a6308fdfedd77039d18c0ac901fc363e4</Anchor>
    <Abstract>Change the visibility of this object. </Abstract>
    <DeclaredIn>Renderable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GLTexture2D</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>GLTexture2D</Scope>
    </TokenIdentifier>
    <Path>class_g_l_texture2_d.html</Path>
    <Abstract>A 2D GLTexture object. </Abstract>
    <DeclaredIn>GLTexture2D.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GLTexture2D</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>GLTexture2D</Scope>
    </TokenIdentifier>
    <Path>class_g_l_texture2_d.html</Path>
    <Anchor>a372b5ecd3aee378901ba4ddccbeeee09</Anchor>
    <Abstract>Create an empty texture. </Abstract>
    <DeclaredIn>GLTexture2D.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~GLTexture2D</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>GLTexture2D</Scope>
    </TokenIdentifier>
    <Path>class_g_l_texture2_d.html</Path>
    <Anchor>a2a43517e4850ab7415c51c56680c2370</Anchor>
    <Abstract>Free the GLTexture. </Abstract>
    <DeclaredIn>GLTexture2D.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>GLTexture2D</Scope>
    </TokenIdentifier>
    <Path>class_g_l_texture2_d.html</Path>
    <Anchor>a5e21468d2163d7fa64d227e196a943c0</Anchor>
    <Abstract>Init the texture using the given image. </Abstract>
    <DeclaredIn>GLTexture2D.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>GLTexture2D</Scope>
    </TokenIdentifier>
    <Path>class_g_l_texture2_d.html</Path>
    <Anchor>a3eeb6b55ba57e347c684d2181593834a</Anchor>
    <Abstract>Update the texture using the given image. </Abstract>
    <DeclaredIn>GLTexture2D.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>GLTexture2D</Scope>
    </TokenIdentifier>
    <Path>class_g_l_texture2_d.html</Path>
    <Anchor>a786889586909ab70dc843a61fea9f563</Anchor>
    <Abstract>Update the texture using the given image. </Abstract>
    <DeclaredIn>GLTexture2D.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>GLTexture2D</Scope>
    </TokenIdentifier>
    <Path>class_g_l_texture2_d.html</Path>
    <Anchor>abf845a0267dc7f14a20df46ec311ac36</Anchor>
    <Abstract>Get the texture size. </Abstract>
    <DeclaredIn>GLTexture2D.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>GLTexture2D</Scope>
    </TokenIdentifier>
    <Path>class_g_l_texture2_d.html</Path>
    <Anchor>adf142642bb922e8a7d110c75579d2fe4</Anchor>
    <Abstract>Bind the texture. </Abstract>
    <DeclaredIn>GLTexture2D.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>GLTexture2D</Scope>
    </TokenIdentifier>
    <Path>class_g_l_texture2_d.html</Path>
    <Anchor>a4b64d7c28e2b962abcc34c7c89d69439</Anchor>
    <Abstract>Is the texture valid. </Abstract>
    <DeclaredIn>GLTexture2D.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>free</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>GLTexture2D</Scope>
    </TokenIdentifier>
    <Path>class_g_l_texture2_d.html</Path>
    <Anchor>a0c750220dba2b28737843b2ee40003ca</Anchor>
    <Abstract>Free the GLTexture. </Abstract>
    <DeclaredIn>GLTexture2D.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTextureId</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>GLTexture2D</Scope>
    </TokenIdentifier>
    <Path>class_g_l_texture2_d.html</Path>
    <Anchor>a6f669240d2c427ab777618b3cbe09e53</Anchor>
    <Abstract>Get the GL texture id. </Abstract>
    <DeclaredIn>GLTexture2D.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GLUtils</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>GLUtils</Scope>
    </TokenIdentifier>
    <Path>class_g_l_utils.html</Path>
    <Abstract>OpenGL utility functions. </Abstract>
    <DeclaredIn>GLUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnableVSync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>GLUtils</Scope>
    </TokenIdentifier>
    <Path>class_g_l_utils.html</Path>
    <Anchor>afaca8aac802461bd4492eaf62e26cf63</Anchor>
    <Abstract>Enable or disable VSync on a given window. </Abstract>
    <DeclaredIn>GLUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GLWindow</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>GLWindow</Scope>
    </TokenIdentifier>
    <Path>class_g_l_window.html</Path>
    <Abstract>An OpenGL widget used by WallWindows to render contents with OpenGL. </Abstract>
    <DeclaredIn>GLWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GLWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>GLWindow</Scope>
    </TokenIdentifier>
    <Path>class_g_l_window.html</Path>
    <Anchor>a4954aa931f1a5de15fdd2f1be2873ab2</Anchor>
    <Abstract>Create a new window. </Abstract>
    <DeclaredIn>GLWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImageThumbnailGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ImageThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_image_thumbnail_generator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LayoutEngine</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>LayoutEngine</Scope>
    </TokenIdentifier>
    <Path>class_layout_engine.html</Path>
    <Abstract>Layout engine for positionning windows on the wall. </Abstract>
    <DeclaredIn>LayoutEngine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFocusedCoord</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LayoutEngine</Scope>
    </TokenIdentifier>
    <Path>class_layout_engine.html</Path>
    <Anchor>a5e9fcc786df14049fcd0d3467cb8eaf3</Anchor>
    <DeclaredIn>LayoutEngine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Marker</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Marker</Scope>
    </TokenIdentifier>
    <Path>class_marker.html</Path>
    <Abstract>A marker to represent touch points. </Abstract>
    <DeclaredIn>Marker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Marker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Marker</Scope>
    </TokenIdentifier>
    <Path>class_marker.html</Path>
    <Anchor>ad4e167fa334fbde49f073e4362c4d3db</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Marker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Marker</Scope>
    </TokenIdentifier>
    <Path>class_marker.html</Path>
    <Anchor>a5fac4de8b7305659fd1f29113564e291</Anchor>
    <Abstract>Set the position. </Abstract>
    <DeclaredIn>Marker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Marker</Scope>
    </TokenIdentifier>
    <Path>class_marker.html</Path>
    <Anchor>a5168316632777d9730e865db55fd7b37</Anchor>
    <Abstract>Get the position. </Abstract>
    <DeclaredIn>Marker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>touch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Marker</Scope>
    </TokenIdentifier>
    <Path>class_marker.html</Path>
    <Anchor>ae117b14a137fa5dfa80a53d3f5582412</Anchor>
    <Abstract>Update the internal timestamp without other modifications. </Abstract>
    <DeclaredIn>Marker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Marker</Scope>
    </TokenIdentifier>
    <Path>class_marker.html</Path>
    <Anchor>a4146232a49770f84278b49d7eb4baa72</Anchor>
    <Abstract>Check if the marker is active. </Abstract>
    <DeclaredIn>Marker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MarkerRenderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MarkerRenderer</Scope>
    </TokenIdentifier>
    <Path>class_marker_renderer.html</Path>
    <Abstract>Renderer for Marker objects. </Abstract>
    <DeclaredIn>MarkerRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMarkers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>MarkerRenderer</Scope>
    </TokenIdentifier>
    <Path>class_marker_renderer.html</Path>
    <Anchor>aa9f34fec31f659d6282298243e198296</Anchor>
    <Abstract>Set the Markers to render, replacing the previous ones. </Abstract>
    <DeclaredIn>MarkerRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MarkerRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MarkerRenderer</Scope>
    </TokenIdentifier>
    <Path>class_marker_renderer.html</Path>
    <Anchor>ad13f73916be06eb07f2824de8aa0f209</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>MarkerRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MarkerRenderer</Scope>
    </TokenIdentifier>
    <Path>class_marker_renderer.html</Path>
    <Anchor>a4261da0f8723115b12d5af4e63c8a140</Anchor>
    <Abstract>Render the markers. </Abstract>
    <DeclaredIn>MarkerRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Renderable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Renderable</Scope>
    </TokenIdentifier>
    <Path>class_renderable.html</Path>
    <Anchor>a97a0f6efd2a058dfb003e64e63bdb255</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Renderable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Renderable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Renderable</Scope>
    </TokenIdentifier>
    <Path>class_renderable.html</Path>
    <Anchor>a4c9e03ac345df99a010c2ad9f8632af2</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>Renderable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isVisible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Renderable</Scope>
    </TokenIdentifier>
    <Path>class_renderable.html</Path>
    <Anchor>abfb58dafbf580906de32ec1f15dcac77</Anchor>
    <Abstract>Check if the object is visible. </Abstract>
    <DeclaredIn>Renderable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVisible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Renderable</Scope>
    </TokenIdentifier>
    <Path>class_renderable.html</Path>
    <Anchor>a6308fdfedd77039d18c0ac901fc363e4</Anchor>
    <Abstract>Change the visibility of this object. </Abstract>
    <DeclaredIn>Renderable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Markers</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Markers</Scope>
    </TokenIdentifier>
    <Path>class_markers.html</Path>
    <Abstract>Store Markers to display user interaction. </Abstract>
    <DeclaredIn>Markers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Markers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Markers</Scope>
    </TokenIdentifier>
    <Path>class_markers.html</Path>
    <Anchor>ae2bd7902a4485536ee205e3c66813b2f</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Markers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMarkers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Markers</Scope>
    </TokenIdentifier>
    <Path>class_markers.html</Path>
    <Anchor>a6616fe4a0e78b282a077ae4153a9c1fa</Anchor>
    <Abstract>Get all the markers. </Abstract>
    <DeclaredIn>Markers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MasterConfiguration</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MasterConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_master_configuration.html</Path>
    <Abstract>The MasterConfiguration class manages all the parameters needed to setup the Master process...</Abstract>
    <DeclaredIn>MasterConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MasterConfiguration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_master_configuration.html</Path>
    <Anchor>a1e9671231ef79842a80c80009584987e</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>MasterConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDockStartDir</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_master_configuration.html</Path>
    <Anchor>acab89d4f31807d1eb7ba1b6b8b85162b</Anchor>
    <Abstract>Get the Dock startup directory. </Abstract>
    <DeclaredIn>MasterConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWebServicePort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_master_configuration.html</Path>
    <Anchor>a161728807fc81592ff865956942bc4c3</Anchor>
    <Abstract>Get the port where the WebService server will be listening for incoming requests. ...</Abstract>
    <DeclaredIn>MasterConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWebBrowserDefaultURL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_master_configuration.html</Path>
    <Anchor>a7786132d2c47c7575b7cd682752d1b3c</Anchor>
    <Abstract>Get the URL used as start page when opening a Web Browser. </Abstract>
    <DeclaredIn>MasterConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBackgroundUri</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_master_configuration.html</Path>
    <Anchor>a7d2355720bfbd14a13173cc2afcc6b5a</Anchor>
    <Abstract>Get the URI to the Content to be used as background. </Abstract>
    <DeclaredIn>MasterConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBackgroundColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_master_configuration.html</Path>
    <Anchor>af2e3ee4518883e324d113434b3e4bcb2</Anchor>
    <Abstract>Get the uniform color to use for Background. </Abstract>
    <DeclaredIn>MasterConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBackgroundColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_master_configuration.html</Path>
    <Anchor>a2b83fb924d0a1259eb7ef7a1a095bd64</Anchor>
    <Abstract>Set the background color. </Abstract>
    <DeclaredIn>MasterConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBackgroundUri</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_master_configuration.html</Path>
    <Anchor>a10c504ed2c3553c900b7605233c7421d</Anchor>
    <Abstract>Set the URI to the Content to be used as background. </Abstract>
    <DeclaredIn>MasterConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>save</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_master_configuration.html</Path>
    <Anchor>aa54097d7fb4f58aca81e9fe83620858d</Anchor>
    <Abstract>Save the configuration to the current xml file. </Abstract>
    <DeclaredIn>MasterConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>save</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_master_configuration.html</Path>
    <Anchor>a51fd2b31a51c1b4aa56c0ae1527567be</Anchor>
    <Abstract>Save the configuration to the specified xml file. </Abstract>
    <DeclaredIn>MasterConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Configuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a4f41abbe40c7e1345a325369c86aaaca</Anchor>
    <Abstract>Create a new configuration from an xml file. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Configuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a1226f87dc3c27be16eb16e53301eb2f3</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalScreenCountX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aca560ac9d3b46ef39444287ab4ba800f</Anchor>
    <Abstract>Get the total number of screens along the x axis. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalScreenCountY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a0f61e23c663322c808a33b8deeab198e</Anchor>
    <Abstract>Get the total number of screens along the y axis. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScreenWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a957a6e17a77943ca1469a599c4116987</Anchor>
    <Abstract>Get the width of a screen. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScreenHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>acac053b8e85c8e13dc1b24f829d70b25</Anchor>
    <Abstract>Get the height of a screen. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMullionWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aa4f921578b584411cab548d015e9ceba</Anchor>
    <Abstract>Get the padding nedded to compensate for the physical displays&amp;#39; bezel. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMullionHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aebf3438c6130ea0a50ed85d0ed2bde93</Anchor>
    <Abstract>Get the padding nedded to compensate for the physical displays&amp;#39; bezel. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aa7b4b828ea7bc8afcf2bed3857007eaa</Anchor>
    <Abstract>Get the total width of the DisplayWall, including the Mullion padding. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aba8af0457ab8769b5baab775ecebb8ba</Anchor>
    <Abstract>Get the total height of the DisplayWall, including the Mullion padding. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a3c3e0bc67693859c0450d4c5f4a79318</Anchor>
    <Abstract>Get the total size of the DisplayWall, including Mullion padding. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a1031736dbddf1becee943184afb27dda</Anchor>
    <Abstract>Get the aspect ratio of the DisplayWall, including Mullion padding. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScreenRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>ad9220206ff95419518e3b1eb6712b5d9</Anchor>
    <Abstract>Get the coordinates and dimensions of a screen in pixel units. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFullscreen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a3d38c54f965dce34f3839867a508779a</Anchor>
    <Abstract>Display the windows in fullscreen mode. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>filename_</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a43ad513bddcdfe68ff36f6254a843c1b</Anchor>
    <Abstract>The path to the xml configuration file. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MasterFromWallChannel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MasterFromWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_from_wall_channel.html</Path>
    <Abstract>Receiving channel from the wall processes to the master application. </Abstract>
    <DeclaredIn>MasterFromWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processMessages</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>MasterFromWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_from_wall_channel.html</Path>
    <Anchor>ac0e5d6e5be039476a7895461f22f4281</Anchor>
    <Abstract>Process messages until the QUIT message is received. </Abstract>
    <DeclaredIn>MasterFromWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receivedRequestFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MasterFromWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_from_wall_channel.html</Path>
    <Anchor>ab34184bf2068baeed81bc652149c994e</Anchor>
    <Abstract>Emitted when the given pixel stream was requested to send the next frame. </Abstract>
    <DeclaredIn>MasterFromWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MasterFromWallChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterFromWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_from_wall_channel.html</Path>
    <Anchor>ae3a1dc5ffe6841e24a3df3bd78254d38</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>MasterFromWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MasterToWallChannel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MasterToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_to_wall_channel.html</Path>
    <Abstract>Sending channel from the master application to the wall processes. </Abstract>
    <DeclaredIn>MasterToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendAsync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>MasterToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_to_wall_channel.html</Path>
    <Anchor>a5d52c566dc2810af957d041759958116</Anchor>
    <Abstract>Send the given DisplayGroup to the wall processes. </Abstract>
    <DeclaredIn>MasterToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendAsync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>MasterToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_to_wall_channel.html</Path>
    <Anchor>ab363eb3caaeb7c843c1bc2d3eae219f1</Anchor>
    <Abstract>Send the given Options to the wall processes. </Abstract>
    <DeclaredIn>MasterToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendAsync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>MasterToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_to_wall_channel.html</Path>
    <Anchor>a14f4b381b5a30ceb29d5bc24a977878f</Anchor>
    <Abstract>Send the given Markers to the wall processes. </Abstract>
    <DeclaredIn>MasterToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>MasterToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_to_wall_channel.html</Path>
    <Anchor>a576ef4ee2d2b6bff8bb514b6079e234e</Anchor>
    <Abstract>Send pixel stream frame to the wall processes. </Abstract>
    <DeclaredIn>MasterToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendQuit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>MasterToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_to_wall_channel.html</Path>
    <Anchor>ad0d468ff235b833e89f854b067e16117</Anchor>
    <Abstract>Send quit message to the wall processes, terminating the application. </Abstract>
    <DeclaredIn>MasterToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MasterToWallChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_to_wall_channel.html</Path>
    <Anchor>a8f671d612ef52095bf7290d791df4fc0</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>MasterToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Movie</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Movie</Scope>
    </TokenIdentifier>
    <Path>class_movie.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~WallContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallContent</Scope>
    </TokenIdentifier>
    <Path>class_wall_content.html</Path>
    <Anchor>a9bf85393c18ce6669f161becabc93229</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>WallContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postRenderSync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallContent</Scope>
    </TokenIdentifier>
    <Path>class_wall_content.html</Path>
    <Anchor>acee0f90d632440b659f85de9711d77d4</Anchor>
    <Abstract>Optional synchronization step after rendering. </Abstract>
    <DeclaredIn>WallContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setQmlItem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallContent</Scope>
    </TokenIdentifier>
    <Path>class_wall_content.html</Path>
    <Anchor>abafc1082fda8da69084e323cdee028e5</Anchor>
    <Abstract>Set a reference to the Qml item using this content. </Abstract>
    <DeclaredIn>WallContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>WallContent</Scope>
    </TokenIdentifier>
    <Path>class_wall_content.html</Path>
    <Anchor>afbaa3448bfc8c02404f8134a7b968f9d</Anchor>
    <Abstract>Create an object corresponding to the given content. </Abstract>
    <DeclaredIn>WallContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallContent</Scope>
    </TokenIdentifier>
    <Path>class_wall_content.html</Path>
    <Anchor>a03e64cc8e59e04efcc79b47c2cbaabe9</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WallContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MovieContent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MovieContent</Scope>
    </TokenIdentifier>
    <Path>class_movie_content.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MovieContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieContent</Scope>
    </TokenIdentifier>
    <Path>class_movie_content.html</Path>
    <Anchor>a156808cda9a564dd70229ad2fe203e9c</Anchor>
    <Abstract>Create a MovieContent from the given uri. </Abstract>
    <DeclaredIn>MovieContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieContent</Scope>
    </TokenIdentifier>
    <Path>class_movie_content.html</Path>
    <Anchor>ac3277a83bcc1aa143fd82a163842f477</Anchor>
    <Abstract>Get the content type. </Abstract>
    <DeclaredIn>MovieContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMetadata</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieContent</Scope>
    </TokenIdentifier>
    <Path>class_movie_content.html</Path>
    <Anchor>ab6181c8f94aa26324a6c3ae5f3384dd3</Anchor>
    <Abstract>Read movie informations from the source URI. </Abstract>
    <DeclaredIn>MovieContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Content</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ae491288d2efce7fa63d3e777580630b4</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a887d2b952cd824d70f64106ae048a5f8</Anchor>
    <Abstract>Get the content URI. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>aa4681ca97acea99fbe88e20f0e664bc0</Anchor>
    <Abstract>Get the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a70fbc6b9c9dfd95c426819a1c14464f9</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a1b7a6f49f447c124b497b0a844fd6ea6</Anchor>
    <Abstract>Set the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a113bd8ba35685e77bcf8a8650fab636a</Anchor>
    <Abstract>Get the aspect ratio. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFixedAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>adceac372a702843a1e0bd207f670680a</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getActions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a7ae29df27d493e89dd7dccd775efbff8</Anchor>
    <Abstract>Get the actions from QML. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a44c022cb6fed6fb1b0dff45e39ececb9</Anchor>
    <Abstract>Emitted by any Content subclass when its state has been modified. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af5fc9d76b3c2899937927c9cd65689d5</Anchor>
    <Abstract>Serialize for sending to Wall applications. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_members_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a6787ec5cdec336c8f25c5e9671977598</Anchor>
    <Abstract>Serialize for saving to an xml file. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_for_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a4c9c0b425c1197cdf34f2d62119b6f4d</Anchor>
    <Abstract>Loading from xml. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_for_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a8d0e71e26ce26abdd7b414dee1ca2c9e</Anchor>
    <Abstract>Saving to xml. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MovieThumbnailGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MovieThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_movie_thumbnail_generator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MPIChannel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Abstract>Handle MPI communications between all DisplayCluster instances. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MPIChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>a3d6135b9ea469f6242b8396699ee74fd</Anchor>
    <Abstract>Create a new channel, initializing the MPI context. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MPIChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>a5c3bda8826b4a9406e6a81446a8440d4</Anchor>
    <Abstract>Create a new channel from splitting its parent channel. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MPIChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>a58250252d6b686e1d11d4144b40ca951</Anchor>
    <Abstract>Destructor, closes the MPI channel. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRank</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>ad9e9ffb350e0035706cb1e669ed6535d</Anchor>
    <Abstract>Get the rank of this process. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>a64a7a3cecb2a92ec2e24a0497ca4fa5a</Anchor>
    <Abstract>Get the number of processes in this channel. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isThreadSafe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>a900711d77dbf6314e3c81eab24aaf03f</Anchor>
    <Abstract>Is the channel thread-safe. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>globalBarrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>a4bfe098a8a43b145ade329569ea9ecb9</Anchor>
    <Abstract>Block execution until all participants have reached the barrier. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>globalSum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>a11f0e75f7cc5228d525e2abb431fea02</Anchor>
    <Abstract>Get the sum of the given local values across all processes. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>affcb2f941b2293bc591a443f2ecf0218</Anchor>
    <Abstract>Send data to a single process. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendAll</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>ae881eeeabb1b4a29fa2386af9a7fb407</Anchor>
    <Abstract>Send a signal to all processes. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>broadcast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>a78a50755b6e1f4264d84dab0f8ff9894</Anchor>
    <Abstract>Send a brodcast message to all other processes. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMessageAvailable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>ac2584270a0bbc486e27d357ffd48efd1</Anchor>
    <Abstract>Nonblocking probe for messages from a given source. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>probe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>ae2e0e01ed84b527c31a9258878108cff</Anchor>
    <Abstract>Perform a blocking probe operation that returns if a message is pending. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receiveHeader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>a9f53af4a59872a8ba7c9277e72e86d64</Anchor>
    <Abstract>Receive a header from a specific process. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>a2fc6093fc173c84da8c2cd08f97011c3</Anchor>
    <Abstract>Receive a message from a specific process. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receiveBroadcast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>aca342469d2005ae2b456fb14d2f11bff</Anchor>
    <Abstract>Recieve a broadcast. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gatherAll</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>a8295b45d744968aadf15d42bc57bde2a</Anchor>
    <Abstract>Gather the values accross all the processes. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MPIContext</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MPIContext</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_context.html</Path>
    <Abstract>A global MPI context. </Abstract>
    <DeclaredIn>MPIContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MPIContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIContext</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_context.html</Path>
    <Anchor>a1fc58d205deca92b9a9a307d49a124cb</Anchor>
    <Abstract>Constructor, initialize the MPI context. </Abstract>
    <DeclaredIn>MPIContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MPIContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIContext</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_context.html</Path>
    <Anchor>a3399b4521ba34fbe6977cc8c5358046b</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>MPIContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasMultithreadSupport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIContext</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_context.html</Path>
    <Anchor>a95db7bf4715f4f71db0954e382c81dd0</Anchor>
    <Abstract>Check if the context could be created with multithread support. </Abstract>
    <DeclaredIn>MPIContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MultiTouchListener</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MultiTouchListener</Scope>
    </TokenIdentifier>
    <Path>class_multi_touch_listener.html</Path>
    <Abstract>Listen to TUIO events and transmit the touch points to a target QGraphicsView. </Abstract>
    <DeclaredIn>MultiTouchListener.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Options</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Options</Scope>
    </TokenIdentifier>
    <Path>class_options.html</Path>
    <Abstract>Stores global display Options which can change during runtime. </Abstract>
    <DeclaredIn>Options.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBackgroundContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>Options</Scope>
    </TokenIdentifier>
    <Path>class_options.html</Path>
    <Anchor>adaef915fef86c8fc6f06fcaece08aeaa</Anchor>
    <Abstract>Set the background content. </Abstract>
    <DeclaredIn>Options.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updated</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Options</Scope>
    </TokenIdentifier>
    <Path>class_options.html</Path>
    <Anchor>a3fa6a7dee05582eb932f4fc068575216</Anchor>
    <Abstract>Emitted when a value is changed by one of the setters. </Abstract>
    <DeclaredIn>Options.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Options</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Options</Scope>
    </TokenIdentifier>
    <Path>class_options.html</Path>
    <Anchor>ab72fb640172a6109e34c8a5366563753</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Options.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PanGesture</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PanGesture</Scope>
    </TokenIdentifier>
    <Path>class_pan_gesture.html</Path>
    <Abstract>This class defines a pan gesture. </Abstract>
    <DeclaredIn>PanGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PanGesture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PanGesture</Scope>
    </TokenIdentifier>
    <Path>class_pan_gesture.html</Path>
    <Anchor>ac47c4ae14bcf9b100f85ca0c9c72d0a6</Anchor>
    <DeclaredIn>PanGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>position</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PanGesture</Scope>
    </TokenIdentifier>
    <Path>class_pan_gesture.html</Path>
    <Anchor>a8bbe53152fa764dcda05b006309d3d6f</Anchor>
    <DeclaredIn>PanGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lastOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PanGesture</Scope>
    </TokenIdentifier>
    <Path>class_pan_gesture.html</Path>
    <Anchor>a01b0240a122a2331fe35c0b534abef03</Anchor>
    <DeclaredIn>PanGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>offset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PanGesture</Scope>
    </TokenIdentifier>
    <Path>class_pan_gesture.html</Path>
    <Anchor>ae2c8e89bad11e61dcf732f1c6d357ab5</Anchor>
    <DeclaredIn>PanGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delta</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PanGesture</Scope>
    </TokenIdentifier>
    <Path>class_pan_gesture.html</Path>
    <Anchor>ae9823a48a175c0cc4e2052415794bb3d</Anchor>
    <DeclaredIn>PanGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>acceleration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PanGesture</Scope>
    </TokenIdentifier>
    <Path>class_pan_gesture.html</Path>
    <Anchor>ad5c4f4182669b302ba2d3fa78e69f54c</Anchor>
    <DeclaredIn>PanGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PanGesture</Scope>
    </TokenIdentifier>
    <Path>class_pan_gesture.html</Path>
    <Anchor>a6db44c273f321bba2a920da36d191892</Anchor>
    <Abstract>Set the center position of the pan in scene coordinates. </Abstract>
    <DeclaredIn>PanGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLastOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PanGesture</Scope>
    </TokenIdentifier>
    <Path>class_pan_gesture.html</Path>
    <Anchor>ad8cd604a7030964ad044b9585be15017</Anchor>
    <DeclaredIn>PanGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PanGesture</Scope>
    </TokenIdentifier>
    <Path>class_pan_gesture.html</Path>
    <Anchor>ac4844b9428b03cec321b2e3da9d5e4bd</Anchor>
    <DeclaredIn>PanGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAcceleration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PanGesture</Scope>
    </TokenIdentifier>
    <Path>class_pan_gesture.html</Path>
    <Anchor>a6bc3c90bf5ebc8956d43f36b08193d33</Anchor>
    <DeclaredIn>PanGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PanGestureRecognizer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PanGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_pan_gesture_recognizer.html</Path>
    <Abstract>Gesture recognizer for a pan gesture. </Abstract>
    <DeclaredIn>PanGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PanGestureRecognizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PanGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_pan_gesture_recognizer.html</Path>
    <Anchor>a9f5c85cbf1bcb54eef662b479d605bb8</Anchor>
    <Abstract>Construct a new pan gesture recognizer object. </Abstract>
    <DeclaredIn>PanGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PanGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_pan_gesture_recognizer.html</Path>
    <Anchor>a79cf2909bfb9b0ae7f4441cb18495dba</Anchor>
    <DeclaredIn>PanGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recognize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PanGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_pan_gesture_recognizer.html</Path>
    <Anchor>a03122f876823b64c5f0c0cc68d2b15f3</Anchor>
    <DeclaredIn>PanGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PanGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_pan_gesture_recognizer.html</Path>
    <Anchor>a7bc25bc37d9232d0c4b399e39130332a</Anchor>
    <DeclaredIn>PanGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>install</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>PanGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_pan_gesture_recognizer.html</Path>
    <Anchor>a25b88d804e351f8c50223efc0264859a</Anchor>
    <Abstract>Installs the pan recognizer in the current QApplication. </Abstract>
    <DeclaredIn>PanGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uninstall</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>PanGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_pan_gesture_recognizer.html</Path>
    <Anchor>a30d8aa2845f397de1e6ab1f091c2c354</Anchor>
    <Abstract>Uninstalls the pan recognizer from the current QApplication. </Abstract>
    <DeclaredIn>PanGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>PanGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_pan_gesture_recognizer.html</Path>
    <Anchor>aa629a141671ca444f137b485e2784b6c</Anchor>
    <DeclaredIn>PanGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PDFContent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PDFContent</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_content.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pageChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PDFContent</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_content.html</Path>
    <Anchor>a817129d408c9907e2081ab588659d8a4</Anchor>
    <Abstract>Emitted when the page number is changed. </Abstract>
    <DeclaredIn>PDFContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a44c022cb6fed6fb1b0dff45e39ececb9</Anchor>
    <Abstract>Emitted by any Content subclass when its state has been modified. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PDFContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFContent</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_content.html</Path>
    <Anchor>a4ae008684cb13c9a6bd52ed35f827781</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>PDFContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFContent</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_content.html</Path>
    <Anchor>a1f062a289684e4b20107fb841b356352</Anchor>
    <Abstract>Get the content type. </Abstract>
    <DeclaredIn>PDFContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMetadata</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFContent</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_content.html</Path>
    <Anchor>af7cf516a0351264f60c076b11c33a45d</Anchor>
    <Abstract>Reaad PDF informations from the source URI. </Abstract>
    <DeclaredIn>PDFContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFContent</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_content.html</Path>
    <Anchor>ac38ea78c76f4e6656f8043f95f9abcb7</Anchor>
    <DeclaredIn>PDFContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextPage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFContent</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_content.html</Path>
    <Anchor>a1e83cbc2b1b7845c39e42fb9076803f1</Anchor>
    <Abstract>Rank0 : go to next page. </Abstract>
    <DeclaredIn>PDFContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>previousPage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFContent</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_content.html</Path>
    <Anchor>a0d52e1a8ee7954872bcad5a9d74c342b</Anchor>
    <Abstract>Rank0 : go to previous page. </Abstract>
    <DeclaredIn>PDFContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFContent</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_content.html</Path>
    <Anchor>a7593da6369ce1925bcd1a98e96bf3f52</Anchor>
    <Abstract>Get the current page number. </Abstract>
    <DeclaredIn>PDFContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Content</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ae491288d2efce7fa63d3e777580630b4</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a887d2b952cd824d70f64106ae048a5f8</Anchor>
    <Abstract>Get the content URI. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>aa4681ca97acea99fbe88e20f0e664bc0</Anchor>
    <Abstract>Get the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a1b7a6f49f447c124b497b0a844fd6ea6</Anchor>
    <Abstract>Set the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a113bd8ba35685e77bcf8a8650fab636a</Anchor>
    <Abstract>Get the aspect ratio. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFixedAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>adceac372a702843a1e0bd207f670680a</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getActions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a7ae29df27d493e89dd7dccd775efbff8</Anchor>
    <Abstract>Get the actions from QML. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af5fc9d76b3c2899937927c9cd65689d5</Anchor>
    <Abstract>Serialize for sending to Wall applications. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_members_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a6787ec5cdec336c8f25c5e9671977598</Anchor>
    <Abstract>Serialize for saving to an xml file. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_for_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a4c9c0b425c1197cdf34f2d62119b6f4d</Anchor>
    <Abstract>Loading from xml. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_for_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a8d0e71e26ce26abdd7b414dee1ca2c9e</Anchor>
    <Abstract>Saving to xml. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PictureFlow</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSlide</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>a0c6a7233f5be8fdf76ca035c1ba31a01</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSlide</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>a5141d9830c68e66d67a5bc937361a749</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSlide</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>a17a30900cd399b81c8d79655502c9f52</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSlide</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>a29ede7c37a4440b743cca7bcea72b7d6</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCenterIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>a98d84480e78870b57eacdb478a3b0269</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>a4bba5b7b8b7cabd07a127f59bbacf8cb</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showPrevious</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>af5d296599b5db9287c596d7f302e0d25</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showNext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>acd98400bd8b13b51205b0955ce16df6d</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showSlide</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>a50049abdff8fee16e9eff049febeac3b</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>a32e28d7ec618c7cdb13e44d1f916e295</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>triggerRender</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>a15aaa65b4d8c06ff2b2e201043ebe3f7</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PictureFlow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>a2920588c6150bb3dc41e3dfe5620a94a</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PictureFlow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>aca38a1fca5804c95f789015b96c40224</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>backgroundColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>acd42a21bd92d7cefeba457cb18568a49</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBackgroundColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>aa5088a035a047e43f103c676ca42841c</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>slideSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>a6d2fb8537a98b91fb9f19bb8cb567d1e</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSlideSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>ab543d9b36efd4b2b9b19d7c7723c07e4</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>slideCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>a8e7ef5ada87e36e269589402bfa1830f</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>slide</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>a28d4cf8ca4b8153f4ceee15709bd4af0</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>centerIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>ab9aae9f93aac2f5428250ca44ffc3264</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reflectionEffect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>a8845f94ef8645cf92bd71072cb8b9a24</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReflectionEffect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>a0f4cac044656c8f6f8e08b71db4ccda8</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PinchGesture</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Abstract>This class defines a pinch gesture. </Abstract>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PinchGesture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>a795e869c2e7fdc8fe9ece07ae044730a</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>totalChangeFlags</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>aad1e3793d6997071706dd4deb9bd045c</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTotalChangeFlags</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>af7cfce43d2db73910ee9caf9c2e49ea6</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changeFlags</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>a67cd92d1bca096cd3558f7c93654fa72</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setChangeFlags</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>a9e90e6a5a02f2cd4330b1c0ab66dddfc</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startCenterPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>ac3fdc8a6a8fb4bfc741858ae163f9593</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lastCenterPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>a6bdff634b3a511a14dbb0f8a8eecf1fa</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>centerPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>ab3b08b7f5ae27c487b5585e0d8467482</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>position</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>a095793676e670b72ac0f32b840fac251</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStartCenterPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>abbbb99a15db652da216a508c9949dcb7</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLastCenterPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>a6eb43ffcd4ea2407c2a61ee15395122e</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCenterPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>aab9030373265d2135577ff2c53ea5319</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>a1f8863321e16d5ec97e9730661a98666</Anchor>
    <Abstract>Set the position of the center of the pinch in scene coordinates. </Abstract>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>totalScaleFactor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>a45a796d90c26cdfa5d61afd754ce8f18</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lastScaleFactor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>a96bc83e8739afebff1874e349c0b1ab3</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scaleFactor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>ac1f1723df554056f1eaf11c313248f6a</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pixelDelta</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>a2a461c0ace871da46c911239ab4dd45f</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTotalScaleFactor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>a62fa0390aecfffe739d230eef23f44a6</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLastScaleFactor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>aad753faedd32aec34a9e3d34f4fcd7d2</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScaleFactor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>ad4bc129c86f16548a7070ff8dbddf8ef</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>totalRotationAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>ac9a4a77f99de16a5776140701dd07537</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lastRotationAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>ac48162b62e321b4fcaa8325249a87f9d</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotationAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>a56325ae380827885f33a3cdec6aa084a</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTotalRotationAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>a166de24a33c5c32f3a34a3540972f226</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLastRotationAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>a58f4ad110f4b198c1bab2981a2e598a8</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRotationAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>a56e3e9cd08831875e02c0f096a63e0bb</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PinchGestureRecognizer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PinchGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture_recognizer.html</Path>
    <Abstract>Gesture recognizer for a pinch gesture. </Abstract>
    <DeclaredIn>PinchGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PinchGestureRecognizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture_recognizer.html</Path>
    <Anchor>abd33c28de7edc1a5e2712838a4aa8b8c</Anchor>
    <Abstract>Construct a new pan gesture recognizer object. </Abstract>
    <DeclaredIn>PinchGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture_recognizer.html</Path>
    <Anchor>a40424c41c68bc01153b6ca476ac10754</Anchor>
    <DeclaredIn>PinchGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recognize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture_recognizer.html</Path>
    <Anchor>ab4865f74221fd2038ecb01695651fb60</Anchor>
    <DeclaredIn>PinchGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture_recognizer.html</Path>
    <Anchor>af38e0116d7a73988e5a5e784532dc472</Anchor>
    <DeclaredIn>PinchGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>install</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>PinchGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture_recognizer.html</Path>
    <Anchor>adf7237c7f2dcc4592b7da88ea79bd9c9</Anchor>
    <Abstract>Installs the pinch recognizer in the current QApplication. </Abstract>
    <DeclaredIn>PinchGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uninstall</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>PinchGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture_recognizer.html</Path>
    <Anchor>a85d653e970d50ebd7b99cf1cc690f373</Anchor>
    <Abstract>Uninstalls the pinch recognizer from the current QApplication. </Abstract>
    <DeclaredIn>PinchGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>PinchGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture_recognizer.html</Path>
    <Anchor>a59bcf8c72037aa2c856008214e26dea1</Anchor>
    <DeclaredIn>PinchGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStream</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PixelStream</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream.html</Path>
    <Abstract>Decompress, upload and render the segments of a PixelStream. </Abstract>
    <DeclaredIn>PixelStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~WallContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallContent</Scope>
    </TokenIdentifier>
    <Path>class_wall_content.html</Path>
    <Anchor>a9bf85393c18ce6669f161becabc93229</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>WallContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postRenderSync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallContent</Scope>
    </TokenIdentifier>
    <Path>class_wall_content.html</Path>
    <Anchor>acee0f90d632440b659f85de9711d77d4</Anchor>
    <Abstract>Optional synchronization step after rendering. </Abstract>
    <DeclaredIn>WallContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setQmlItem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallContent</Scope>
    </TokenIdentifier>
    <Path>class_wall_content.html</Path>
    <Anchor>abafc1082fda8da69084e323cdee028e5</Anchor>
    <Abstract>Set a reference to the Qml item using this content. </Abstract>
    <DeclaredIn>WallContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>WallContent</Scope>
    </TokenIdentifier>
    <Path>class_wall_content.html</Path>
    <Anchor>afbaa3448bfc8c02404f8134a7b968f9d</Anchor>
    <Abstract>Create an object corresponding to the given content. </Abstract>
    <DeclaredIn>WallContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallContent</Scope>
    </TokenIdentifier>
    <Path>class_wall_content.html</Path>
    <Anchor>a03e64cc8e59e04efcc79b47c2cbaabe9</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WallContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamContent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PixelStreamContent</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_content.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamContent</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_content.html</Path>
    <Anchor>a2a0d5fbde3ac80753ad2e3e42a07327e</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>PixelStreamContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamContent</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_content.html</Path>
    <Anchor>a1da19d9ae276ac73c4a966a7b2505b34</Anchor>
    <Abstract>Get the content type. </Abstract>
    <DeclaredIn>PixelStreamContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMetadata</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamContent</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_content.html</Path>
    <Anchor>af1fde82b270db2ed217ec6542924c3e4</Anchor>
    <Abstract>Content method overload, not used for PixelStreams. </Abstract>
    <DeclaredIn>PixelStreamContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFixedAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamContent</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_content.html</Path>
    <Anchor>afceb966a24fb4275c18663a07b71676b</Anchor>
    <DeclaredIn>PixelStreamContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Content</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ae491288d2efce7fa63d3e777580630b4</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a887d2b952cd824d70f64106ae048a5f8</Anchor>
    <Abstract>Get the content URI. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>aa4681ca97acea99fbe88e20f0e664bc0</Anchor>
    <Abstract>Get the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a70fbc6b9c9dfd95c426819a1c14464f9</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a1b7a6f49f447c124b497b0a844fd6ea6</Anchor>
    <Abstract>Set the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a113bd8ba35685e77bcf8a8650fab636a</Anchor>
    <Abstract>Get the aspect ratio. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getActions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a7ae29df27d493e89dd7dccd775efbff8</Anchor>
    <Abstract>Get the actions from QML. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a44c022cb6fed6fb1b0dff45e39ececb9</Anchor>
    <Abstract>Emitted by any Content subclass when its state has been modified. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af5fc9d76b3c2899937927c9cd65689d5</Anchor>
    <Abstract>Serialize for sending to Wall applications. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_members_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a6787ec5cdec336c8f25c5e9671977598</Anchor>
    <Abstract>Serialize for saving to an xml file. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_for_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a4c9c0b425c1197cdf34f2d62119b6f4d</Anchor>
    <Abstract>Loading from xml. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_for_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a8d0e71e26ce26abdd7b414dee1ca2c9e</Anchor>
    <Abstract>Saving to xml. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Abstract>Interface for Pixel Streamers. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Anchor>a3a59b36c4477a063e71de6a95b6a97c0</Anchor>
    <Abstract>Process an Event. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>imageUpdated</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Anchor>ae9f831bd8e004763f4e2fd05b17a21a1</Anchor>
    <Abstract>Emit this signal after a new image has been generated. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendCommand</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Anchor>ad3be94b21aba5fb409fa24bbff6454e5</Anchor>
    <Abstract>Emit this signal to send a command to the receiver. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Anchor>ad3d2288e104737dd9de180fdd9f27e74</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PixelStreamer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Anchor>ac9d996a5dadc05b54dcfa0824eb1a573</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Anchor>a413ae104f919f14a0974b357e5e7d9e7</Anchor>
    <Abstract>Get the size of the images generated by this streamer. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamerFactory</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PixelStreamerFactory</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer_factory.html</Path>
    <Abstract>Factory for PixelStreamers. </Abstract>
    <DeclaredIn>PixelStreamerFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>PixelStreamerFactory</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer_factory.html</Path>
    <Anchor>a901701ac6afa91292aad59749d3782ad</Anchor>
    <Abstract>Create a PixelStreamer of the given type. </Abstract>
    <DeclaredIn>PixelStreamerFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamerLauncher</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PixelStreamerLauncher</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer_launcher.html</Path>
    <Abstract>Launch Pixel Streamers as separate processes. </Abstract>
    <DeclaredIn>PixelStreamerLauncher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openWebBrowser</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamerLauncher</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer_launcher.html</Path>
    <Anchor>a2570a4a7985d254b2e5a420f0ffda1ec</Anchor>
    <Abstract>Open a WebBrowser. </Abstract>
    <DeclaredIn>PixelStreamerLauncher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openDock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamerLauncher</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer_launcher.html</Path>
    <Anchor>aa408172d542af002cd6feda6467adbb7</Anchor>
    <Abstract>Open the Dock using default parameters. </Abstract>
    <DeclaredIn>PixelStreamerLauncher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openDock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamerLauncher</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer_launcher.html</Path>
    <Anchor>a92a1b61da144b8e9747f627ffe9854d2</Anchor>
    <Abstract>Open the Dock. </Abstract>
    <DeclaredIn>PixelStreamerLauncher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hideDock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamerLauncher</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer_launcher.html</Path>
    <Anchor>a2a1d9a2366ec0af46464c9f5ae9c894d</Anchor>
    <Abstract>Hide the Dock. </Abstract>
    <DeclaredIn>PixelStreamerLauncher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamerLauncher</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamerLauncher</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer_launcher.html</Path>
    <Anchor>aa6afe5831da8128c53d47b7527c0f332</Anchor>
    <Abstract>Create a new PixelStreamerLauncher. </Abstract>
    <DeclaredIn>PixelStreamerLauncher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamInteractionDelegate</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PixelStreamInteractionDelegate</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_interaction_delegate.html</Path>
    <Abstract>Forward user actions to a deflect::Stream using Deflect events. </Abstract>
    <DeclaredIn>PixelStreamInteractionDelegate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamInteractionDelegate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamInteractionDelegate</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_interaction_delegate.html</Path>
    <Anchor>a4fe0211dc870c9fb9ef30e15a55d86dd</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>PixelStreamInteractionDelegate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerEventReceiver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamInteractionDelegate</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_interaction_delegate.html</Path>
    <Anchor>a9b4e7e24065ec6e1e464ec77ffa7351e</Anchor>
    <Abstract>Register to receive events on this content. </Abstract>
    <DeclaredIn>PixelStreamInteractionDelegate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasEventReceivers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamInteractionDelegate</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_interaction_delegate.html</Path>
    <Anchor>a49459b91055a8b89afe5a5ceeef20f7e</Anchor>
    <Abstract>Does this delegate already have registered EventReceiver(s) </Abstract>
    <DeclaredIn>PixelStreamInteractionDelegate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamSegmentRenderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PixelStreamSegmentRenderer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_segment_renderer.html</Path>
    <Abstract>Render a single PixelStream Segment. </Abstract>
    <DeclaredIn>PixelStreamSegmentRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamSegmentRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamSegmentRenderer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_segment_renderer.html</Path>
    <Anchor>ad1b4000b5e77b685ab1e5a7cf586694d</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>PixelStreamSegmentRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamSegmentRenderer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_segment_renderer.html</Path>
    <Anchor>a8018a72048b960cfc4f599c248bf9e42</Anchor>
    <Abstract>Get the position and dimensions of this segment. </Abstract>
    <DeclaredIn>PixelStreamSegmentRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateTexture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamSegmentRenderer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_segment_renderer.html</Path>
    <Anchor>abb7998c4717817218978c84bdd931e55</Anchor>
    <Abstract>Update the texture. </Abstract>
    <DeclaredIn>PixelStreamSegmentRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textureNeedsUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamSegmentRenderer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_segment_renderer.html</Path>
    <Anchor>a380043d34d055eafb1e19d27720e75a8</Anchor>
    <Abstract>Has the texture been marked as oudated with setTextureOutdated() </Abstract>
    <DeclaredIn>PixelStreamSegmentRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTextureNeedsUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamSegmentRenderer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_segment_renderer.html</Path>
    <Anchor>a099a3b9847a021c2596e8d845eb6d47c</Anchor>
    <Abstract>Mark the texture as being outdated. </Abstract>
    <DeclaredIn>PixelStreamSegmentRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamSegmentRenderer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_segment_renderer.html</Path>
    <Anchor>aa317f6dcb5decba3bdf5c9690cb3a4e4</Anchor>
    <Abstract>Set the position and size paramters. </Abstract>
    <DeclaredIn>PixelStreamSegmentRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamSegmentRenderer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_segment_renderer.html</Path>
    <Anchor>a0eaca3e779891ca5b843ac0851f334ba</Anchor>
    <Abstract>Render the current texture. </Abstract>
    <DeclaredIn>PixelStreamSegmentRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamUpdater</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PixelStreamUpdater</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_updater.html</Path>
    <Abstract>Synchronize the update of PixelStreams and send new frame requests. </Abstract>
    <DeclaredIn>PixelStreamUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updatePixelStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamUpdater</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_updater.html</Path>
    <Anchor>a148f149b1b3ebd3d11feb6b20416b518</Anchor>
    <Abstract>Update the appropriate PixelStream with the given frame. </Abstract>
    <DeclaredIn>PixelStreamUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onWindowAdded</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamUpdater</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_updater.html</Path>
    <Anchor>a3b757cf1183930964d3b823010a3dda3</Anchor>
    <Abstract>Connect the new window to receive PixelStream frame updates. </Abstract>
    <DeclaredIn>PixelStreamUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onWindowRemoved</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamUpdater</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_updater.html</Path>
    <Anchor>a39e268af96416969e00931ad0bf34470</Anchor>
    <Abstract>Disconnect the window from PixelStream frame updates. </Abstract>
    <DeclaredIn>PixelStreamUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PixelStreamUpdater</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_updater.html</Path>
    <Anchor>aa7a5c7435ad6f310bfc66096f9dea7ee</Anchor>
    <Abstract>Emitted to request a new frame after a successful swap. </Abstract>
    <DeclaredIn>PixelStreamUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamUpdater</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamUpdater</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_updater.html</Path>
    <Anchor>a6c2d85e507658b80c95666d6b5f7c44a</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>PixelStreamUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synchronizeFramesSwap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamUpdater</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_updater.html</Path>
    <Anchor>a8598ac669ae055571d138671682e28d6</Anchor>
    <Abstract>Synchronize the update of the PixelStreams. </Abstract>
    <DeclaredIn>PixelStreamUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamWindowManager</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Abstract>Handles window creation, association and updates for pixel streamers, both local and external...</Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openPixelStreamWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>ac70533468fa0f6dfa2c761cb1d3954d3</Anchor>
    <Abstract>Open a window for a new PixelStream. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>closePixelStreamWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>a007d2144a767aef3e5e2a1840a58ab0e</Anchor>
    <Abstract>Close the window of a PixelStream. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerEventReceiver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>aa4317964b249dffd8ad5bc9fa4f49e6f</Anchor>
    <Abstract>Is called when the streamer wants to enable event handling. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateStreamDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>a212f02234877ba3df2222e0f314cae36</Anchor>
    <Abstract>Update the dimension of the content according to the stream&amp;#39;s dimension. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pixelStreamWindowClosed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>a84442417ad4ed329a06ac08051e7266a</Anchor>
    <Abstract>Is emitted when the associated content window of the streamer is closed. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eventRegistrationReply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>a1b3863d3e2718e80072d2db26004db08</Anchor>
    <Abstract>Is emitted after registerEventReceiver() was executed. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamWindowManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>a8d3cae6a2b05961dac58bf22810be44a</Anchor>
    <Abstract>Create a window manager that handles windows for streamers. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getContentWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>a4465be2e1991152689dc4bb07b22c907</Anchor>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hideWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>a74bb0eb12ff7357fef0fbbd1d9c92aff</Anchor>
    <Abstract>Hide the associated content window of the stream. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>a6e68e2ca3ba0213a872e22acd082b468</Anchor>
    <Abstract>Show the associated content window of the stream. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProbeResult</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ProbeResult</Scope>
    </TokenIdentifier>
    <Path>struct_probe_result.html</Path>
    <Abstract>The result of an MPIChannel::probe() operation. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ProbeResult</Scope>
    </TokenIdentifier>
    <Path>struct_probe_result.html</Path>
    <Anchor>a63373d9b2c6353ad460b391f00b8fde0</Anchor>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>src</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ProbeResult</Scope>
    </TokenIdentifier>
    <Path>struct_probe_result.html</Path>
    <Anchor>a1bf3e57be475361e7541e26f977aa0a6</Anchor>
    <Abstract>The source process that has sent a message. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ProbeResult</Scope>
    </TokenIdentifier>
    <Path>struct_probe_result.html</Path>
    <Anchor>a431ed1636026488911b1d35e0b97ac78</Anchor>
    <Abstract>The size of the message. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>message</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ProbeResult</Scope>
    </TokenIdentifier>
    <Path>struct_probe_result.html</Path>
    <Anchor>af15554a30e968ef7341d18a786899f95</Anchor>
    <Abstract>The type of the message. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PyramidThumbnailGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PyramidThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_pyramid_thumbnail_generator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>QmlWindowRenderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>QmlWindowRenderer</Scope>
    </TokenIdentifier>
    <Path>class_qml_window_renderer.html</Path>
    <Abstract>Provide a Qml representation of a ContentWindow on the Wall. </Abstract>
    <DeclaredIn>QmlWindowRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>QmlWindowRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>QmlWindowRenderer</Scope>
    </TokenIdentifier>
    <Path>class_qml_window_renderer.html</Path>
    <Anchor>a1b74e915d8aca16117fb5b168a208bf3</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>QmlWindowRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~QmlWindowRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>QmlWindowRenderer</Scope>
    </TokenIdentifier>
    <Path>class_qml_window_renderer.html</Path>
    <Anchor>a64b49a4fef3f1bd26e2f2b1a6fa4db3c</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>QmlWindowRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>QmlWindowRenderer</Scope>
    </TokenIdentifier>
    <Path>class_qml_window_renderer.html</Path>
    <Anchor>a342991b72a7688e64e3271559b699ca1</Anchor>
    <Abstract>Update the qml object with a new data model. </Abstract>
    <DeclaredIn>QmlWindowRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWallContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>QmlWindowRenderer</Scope>
    </TokenIdentifier>
    <Path>class_qml_window_renderer.html</Path>
    <Anchor>a2f9ddfa3f752d9ccc42ddf31bb6aea2a</Anchor>
    <Abstract>Get the WallContent. </Abstract>
    <DeclaredIn>QmlWindowRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getContentWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>QmlWindowRenderer</Scope>
    </TokenIdentifier>
    <Path>class_qml_window_renderer.html</Path>
    <Anchor>a718810ffc17b8efd7cf77c567896211f</Anchor>
    <Abstract>Get the ContentWindow. </Abstract>
    <DeclaredIn>QmlWindowRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Renderable</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Renderable</Scope>
    </TokenIdentifier>
    <Path>class_renderable.html</Path>
    <Abstract>An abstract renderable object. </Abstract>
    <DeclaredIn>Renderable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Renderable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Renderable</Scope>
    </TokenIdentifier>
    <Path>class_renderable.html</Path>
    <Anchor>a97a0f6efd2a058dfb003e64e63bdb255</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Renderable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Renderable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Renderable</Scope>
    </TokenIdentifier>
    <Path>class_renderable.html</Path>
    <Anchor>a4c9e03ac345df99a010c2ad9f8632af2</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>Renderable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Renderable</Scope>
    </TokenIdentifier>
    <Path>class_renderable.html</Path>
    <Anchor>a7d02709d871bd2bde97d41d933df5adf</Anchor>
    <Abstract>Render the object. </Abstract>
    <DeclaredIn>Renderable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isVisible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Renderable</Scope>
    </TokenIdentifier>
    <Path>class_renderable.html</Path>
    <Anchor>abfb58dafbf580906de32ec1f15dcac77</Anchor>
    <Abstract>Check if the object is visible. </Abstract>
    <DeclaredIn>Renderable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVisible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Renderable</Scope>
    </TokenIdentifier>
    <Path>class_renderable.html</Path>
    <Anchor>a6308fdfedd77039d18c0ac901fc363e4</Anchor>
    <Abstract>Change the visibility of this object. </Abstract>
    <DeclaredIn>Renderable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RenderContext</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>RenderContext</Scope>
    </TokenIdentifier>
    <Path>class_render_context.html</Path>
    <Abstract>A render context composed of multiple GL windows. </Abstract>
    <DeclaredIn>RenderContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RenderContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RenderContext</Scope>
    </TokenIdentifier>
    <Path>class_render_context.html</Path>
    <Anchor>a562f2538db5a4765ff32348db038fb4d</Anchor>
    <Abstract>Create a new RenderContext and initialize the GLWindows. </Abstract>
    <DeclaredIn>RenderContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVisibleWallArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RenderContext</Scope>
    </TokenIdentifier>
    <Path>class_render_context.html</Path>
    <Anchor>a48331d85472f0449c2a20b08d2f40240</Anchor>
    <Abstract>Get the area of the wall which is visible in this context. </Abstract>
    <DeclaredIn>RenderContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBackgroundColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RenderContext</Scope>
    </TokenIdentifier>
    <Path>class_render_context.html</Path>
    <Anchor>a6e0022d6c6da8fc42040015474e9870f</Anchor>
    <Abstract>Set the background color of all windows. </Abstract>
    <DeclaredIn>RenderContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateGLWindows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RenderContext</Scope>
    </TokenIdentifier>
    <Path>class_render_context.html</Path>
    <Anchor>a54c962a3326654a4522a0e9288a8fe9e</Anchor>
    <Abstract>Render GL objects on all windows. </Abstract>
    <DeclaredIn>RenderContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RenderContext</Scope>
    </TokenIdentifier>
    <Path>class_render_context.html</Path>
    <Anchor>a2d5f3964fb1805c30766151862b3db5c</Anchor>
    <Abstract>Swap GL buffers on all windows. </Abstract>
    <DeclaredIn>RenderContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScene</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RenderContext</Scope>
    </TokenIdentifier>
    <Path>class_render_context.html</Path>
    <Anchor>a870d956bd7c8c7b79acba5456e9d7e8a</Anchor>
    <Abstract>Get access to the scene object. </Abstract>
    <DeclaredIn>RenderContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getQmlEngine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RenderContext</Scope>
    </TokenIdentifier>
    <Path>class_render_context.html</Path>
    <Anchor>ad0dc86794a1732251afbcfc86fb2b05c</Anchor>
    <Abstract>Get the QML engine. </Abstract>
    <DeclaredIn>RenderContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>displayTestPattern</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RenderContext</Scope>
    </TokenIdentifier>
    <Path>class_render_context.html</Path>
    <Anchor>a34f2dd4f8929d65ca9a59c63e25b197f</Anchor>
    <Abstract>Display or hide the test pattern. </Abstract>
    <DeclaredIn>RenderContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>displayFps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RenderContext</Scope>
    </TokenIdentifier>
    <Path>class_render_context.html</Path>
    <Anchor>a1aab9ef76f8234efe87da54b3d3d9f55</Anchor>
    <Abstract>Display or hide the fps counter. </Abstract>
    <DeclaredIn>RenderContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RenderController</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>RenderController</Scope>
    </TokenIdentifier>
    <Path>class_render_controller.html</Path>
    <Abstract>Setup the scene and control the rendering options during runtime. </Abstract>
    <DeclaredIn>RenderController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RenderController</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RenderController</Scope>
    </TokenIdentifier>
    <Path>class_render_controller.html</Path>
    <Anchor>a965fc8fc85829253038a2cd90c5d5781</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>RenderController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDisplayGroup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RenderController</Scope>
    </TokenIdentifier>
    <Path>class_render_controller.html</Path>
    <Anchor>a51dad7216110bac1db2b2cd6156eee0d</Anchor>
    <Abstract>Get the DisplayGroup. </Abstract>
    <DeclaredIn>RenderController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelStreamUpdater</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RenderController</Scope>
    </TokenIdentifier>
    <Path>class_render_controller.html</Path>
    <Anchor>aac87cb7d158ec77c2c85114ce62eb9eb</Anchor>
    <Abstract>Get the PixelStream updater. </Abstract>
    <DeclaredIn>RenderController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preRenderUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RenderController</Scope>
    </TokenIdentifier>
    <Path>class_render_controller.html</Path>
    <Anchor>a58fc689b355311156da65c8446a5b3a7</Anchor>
    <Abstract>Update and synchronize scene objects before rendering a frame. </Abstract>
    <DeclaredIn>RenderController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postRenderUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RenderController</Scope>
    </TokenIdentifier>
    <Path>class_render_controller.html</Path>
    <Anchor>a928fb498035a14573016571a2c7f08c7</Anchor>
    <Abstract>Update and synchronize scene objects after rendering a frame. </Abstract>
    <DeclaredIn>RenderController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>quitRendering</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RenderController</Scope>
    </TokenIdentifier>
    <Path>class_render_controller.html</Path>
    <Anchor>a6d2a9aef3484b3cafdc8d4a1d5c63a45</Anchor>
    <Abstract>Do we need to stop rendering. </Abstract>
    <DeclaredIn>RenderController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Segment</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Segment</Scope>
    </TokenIdentifier>
    <Path>class_segment.html</Path>
    <Abstract>Qml Wrapper for a PixelStream segment parameters. </Abstract>
    <DeclaredIn>PixelStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SessionCommandHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SessionCommandHandler</Scope>
    </TokenIdentifier>
    <Path>class_session_command_handler.html</Path>
    <Abstract>Handle session Commands. </Abstract>
    <DeclaredIn>SessionCommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SessionCommandHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SessionCommandHandler</Scope>
    </TokenIdentifier>
    <Path>class_session_command_handler.html</Path>
    <Anchor>a3a304212563a1cd77545821c0fcc0306</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>SessionCommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SessionCommandHandler</Scope>
    </TokenIdentifier>
    <Path>class_session_command_handler.html</Path>
    <Anchor>a33693b40ed4feb92c2bd9dd4286ae810</Anchor>
    <Abstract>Get the type of commands handled by the implementation. </Abstract>
    <DeclaredIn>SessionCommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SessionCommandHandler</Scope>
    </TokenIdentifier>
    <Path>class_session_command_handler.html</Path>
    <Anchor>a14dce68f41c4c0de5bde1b96645c5c53</Anchor>
    <Abstract>Handle a session Command. </Abstract>
    <DeclaredIn>SessionCommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>State</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>State</Scope>
    </TokenIdentifier>
    <Path>class_state.html</Path>
    <Abstract>A state is the collection of opened contents which can be saved and restored using this class...</Abstract>
    <DeclaredIn>State.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>State</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>State</Scope>
    </TokenIdentifier>
    <Path>class_state.html</Path>
    <Anchor>ab91bb1dd5aa6260ab2a456581daf9ec2</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>State.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>State</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>State</Scope>
    </TokenIdentifier>
    <Path>class_state.html</Path>
    <Anchor>ab46b49d64046781249ed09988d54a8b8</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>State.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>legacyLoadXML</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>State</Scope>
    </TokenIdentifier>
    <Path>class_state.html</Path>
    <Anchor>a9d239d0be957febba6229da5a599124e</Anchor>
    <Abstract>Load content windows stored in the given XML file. </Abstract>
    <DeclaredIn>State.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVersion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>State</Scope>
    </TokenIdentifier>
    <Path>class_state.html</Path>
    <Anchor>abbc8de8c5bbedb5da2f5c6776b81d9ef</Anchor>
    <Abstract>Get the version that was last used for loading or saving. </Abstract>
    <DeclaredIn>State.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDisplayGroup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>State</Scope>
    </TokenIdentifier>
    <Path>class_state.html</Path>
    <Anchor>ace82eaefa9cff610299da27ea0024c7b</Anchor>
    <Abstract>Get the DisplayGroup. </Abstract>
    <DeclaredIn>State.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StatePreview</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>StatePreview</Scope>
    </TokenIdentifier>
    <Path>class_state_preview.html</Path>
    <Abstract>A state preview is a thumbnail image saved alongside a state file. </Abstract>
    <DeclaredIn>StatePreview.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StatePreview</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StatePreview</Scope>
    </TokenIdentifier>
    <Path>class_state_preview.html</Path>
    <Anchor>aea9bf32a2c4e97bae3d363e21eca1e33</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>StatePreview.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadFromFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StatePreview</Scope>
    </TokenIdentifier>
    <Path>class_state_preview.html</Path>
    <Anchor>adb7ad5d66ab2b54eb66e5912aa827c9a</Anchor>
    <Abstract>Load the thumbnail image from disk. </Abstract>
    <DeclaredIn>StatePreview.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StatePreview</Scope>
    </TokenIdentifier>
    <Path>class_state_preview.html</Path>
    <Anchor>aa855eb3b0bb12cc534458fe639336c04</Anchor>
    <Abstract>Retrieve the image loaded with loadFromFile() or generated with generateImage(). </Abstract>
    <DeclaredIn>StatePreview.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StatePreview</Scope>
    </TokenIdentifier>
    <Path>class_state_preview.html</Path>
    <Anchor>ad52539007cf3bcc2c37adf935a536e6a</Anchor>
    <Abstract>Generate the preview image from a list of ContentWindows. </Abstract>
    <DeclaredIn>StatePreview.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>saveToFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StatePreview</Scope>
    </TokenIdentifier>
    <Path>class_state_preview.html</Path>
    <Anchor>ab9451a422ef3233febfffae46eb82b91</Anchor>
    <Abstract>Save the thumbnail created by generateImage() to a file. </Abstract>
    <DeclaredIn>StatePreview.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFileExtension</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>StatePreview</Scope>
    </TokenIdentifier>
    <Path>class_state_preview.html</Path>
    <Anchor>a092ab0b12d351e6380a822fb02118459</Anchor>
    <Abstract>Get the file extension used for state images. </Abstract>
    <DeclaredIn>StatePreview.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StateSerializationHelper</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>StateSerializationHelper</Scope>
    </TokenIdentifier>
    <Path>class_state_serialization_helper.html</Path>
    <Abstract>Helper class to store the current session to a state file and restore it later. </Abstract>
    <DeclaredIn>StateSerializationHelper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StateSerializationHelper</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StateSerializationHelper</Scope>
    </TokenIdentifier>
    <Path>class_state_serialization_helper.html</Path>
    <Anchor>ae00036e947ae5d3f6ab7e2a60482fe47</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>StateSerializationHelper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>save</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StateSerializationHelper</Scope>
    </TokenIdentifier>
    <Path>class_state_serialization_helper.html</Path>
    <Anchor>a1632c8bfba6fbd4613b9cd48ee80ac7d</Anchor>
    <Abstract>Save the state of the application. </Abstract>
    <DeclaredIn>StateSerializationHelper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StateSerializationHelper</Scope>
    </TokenIdentifier>
    <Path>class_state_serialization_helper.html</Path>
    <Anchor>ac29de4128102d39e08eb54939aac5217</Anchor>
    <Abstract>Load the state from a given xml file. </Abstract>
    <DeclaredIn>StateSerializationHelper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StateThumbnailGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>StateThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_state_thumbnail_generator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SVG</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SVG</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~WallContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallContent</Scope>
    </TokenIdentifier>
    <Path>class_wall_content.html</Path>
    <Anchor>a9bf85393c18ce6669f161becabc93229</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>WallContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preRenderSync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallContent</Scope>
    </TokenIdentifier>
    <Path>class_wall_content.html</Path>
    <Anchor>a531f1539ea2dce68b82eb91c249afaee</Anchor>
    <Abstract>Optional synchronization step before rendering. </Abstract>
    <DeclaredIn>WallContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postRenderSync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallContent</Scope>
    </TokenIdentifier>
    <Path>class_wall_content.html</Path>
    <Anchor>acee0f90d632440b659f85de9711d77d4</Anchor>
    <Abstract>Optional synchronization step after rendering. </Abstract>
    <DeclaredIn>WallContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setQmlItem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallContent</Scope>
    </TokenIdentifier>
    <Path>class_wall_content.html</Path>
    <Anchor>abafc1082fda8da69084e323cdee028e5</Anchor>
    <Abstract>Set a reference to the Qml item using this content. </Abstract>
    <DeclaredIn>WallContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>WallContent</Scope>
    </TokenIdentifier>
    <Path>class_wall_content.html</Path>
    <Anchor>afbaa3448bfc8c02404f8134a7b968f9d</Anchor>
    <Abstract>Create an object corresponding to the given content. </Abstract>
    <DeclaredIn>WallContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallContent</Scope>
    </TokenIdentifier>
    <Path>class_wall_content.html</Path>
    <Anchor>a03e64cc8e59e04efcc79b47c2cbaabe9</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WallContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SVGContent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SVGContent</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_content.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SVGContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGContent</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_content.html</Path>
    <Anchor>a9813e8e86203ad9d19507fbc0ef7b6fb</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>SVGContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGContent</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_content.html</Path>
    <Anchor>a91f39603b508a02d634f8b67e41d1449</Anchor>
    <Abstract>Get the content type. </Abstract>
    <DeclaredIn>SVGContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMetadata</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGContent</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_content.html</Path>
    <Anchor>ab1498c71f69ee1f0720fb5686bef3ecf</Anchor>
    <Abstract>Read SVG metadata. </Abstract>
    <DeclaredIn>SVGContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGContent</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_content.html</Path>
    <Anchor>a5c5340db3f01417595871e10e01c8d4e</Anchor>
    <DeclaredIn>SVGContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Content</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ae491288d2efce7fa63d3e777580630b4</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a887d2b952cd824d70f64106ae048a5f8</Anchor>
    <Abstract>Get the content URI. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>aa4681ca97acea99fbe88e20f0e664bc0</Anchor>
    <Abstract>Get the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a1b7a6f49f447c124b497b0a844fd6ea6</Anchor>
    <Abstract>Set the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a113bd8ba35685e77bcf8a8650fab636a</Anchor>
    <Abstract>Get the aspect ratio. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFixedAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>adceac372a702843a1e0bd207f670680a</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getActions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a7ae29df27d493e89dd7dccd775efbff8</Anchor>
    <Abstract>Get the actions from QML. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a44c022cb6fed6fb1b0dff45e39ececb9</Anchor>
    <Abstract>Emitted by any Content subclass when its state has been modified. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af5fc9d76b3c2899937927c9cd65689d5</Anchor>
    <Abstract>Serialize for sending to Wall applications. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_members_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a6787ec5cdec336c8f25c5e9671977598</Anchor>
    <Abstract>Serialize for saving to an xml file. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_for_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a4c9c0b425c1197cdf34f2d62119b6f4d</Anchor>
    <Abstract>Loading from xml. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_for_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a8d0e71e26ce26abdd7b414dee1ca2c9e</Anchor>
    <Abstract>Saving to xml. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SVGTextureData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SVGTextureData</Scope>
    </TokenIdentifier>
    <Path>struct_s_v_g_texture_data.html</Path>
    <Abstract>Hold texture FBO and region rendered. </Abstract>
    <DeclaredIn>SVG.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>SVGTextureData</Scope>
    </TokenIdentifier>
    <Path>struct_s_v_g_texture_data.html</Path>
    <Anchor>ac6a3a00058e976b411852c9a2baeb558</Anchor>
    <Abstract>Frame Buffer Object. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>region</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>SVGTextureData</Scope>
    </TokenIdentifier>
    <Path>struct_s_v_g_texture_data.html</Path>
    <Anchor>ac1778675a9326aef5da2f397ff844377</Anchor>
    <Abstract>Normalized svg region. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TestPattern</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>TestPattern</Scope>
    </TokenIdentifier>
    <Path>class_test_pattern.html</Path>
    <Abstract>Render a test pattern to help setup and debug the display configuration. </Abstract>
    <DeclaredIn>TestPattern.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TestPattern</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TestPattern</Scope>
    </TokenIdentifier>
    <Path>class_test_pattern.html</Path>
    <Anchor>a770c221f310e2e624f09483fb5a6be70</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>TestPattern.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>draw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TestPattern</Scope>
    </TokenIdentifier>
    <Path>class_test_pattern.html</Path>
    <Anchor>ab15a9d692927688432485aa570a89684</Anchor>
    <Abstract>Render the test pattern. </Abstract>
    <DeclaredIn>TestPattern.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Drawable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Drawable</Scope>
    </TokenIdentifier>
    <Path>class_drawable.html</Path>
    <Anchor>aac88608db6081da479c772c96636acb1</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Drawable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Drawable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Drawable</Scope>
    </TokenIdentifier>
    <Path>class_drawable.html</Path>
    <Anchor>abdc2e2d82c51c1703656a2dfba0feabd</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>Drawable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isVisible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Drawable</Scope>
    </TokenIdentifier>
    <Path>class_drawable.html</Path>
    <Anchor>aa0c7ca2271d543fb7217e3806188f6f2</Anchor>
    <Abstract>Check if the object is visible. </Abstract>
    <DeclaredIn>Drawable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVisible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Drawable</Scope>
    </TokenIdentifier>
    <Path>class_drawable.html</Path>
    <Anchor>ae50ce7016cbc9a2e243255ea6113e40f</Anchor>
    <Abstract>Change the visibility of this object. </Abstract>
    <DeclaredIn>Drawable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TextInputDispatcher</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>TextInputDispatcher</Scope>
    </TokenIdentifier>
    <Path>class_text_input_dispatcher.html</Path>
    <Abstract>Dispatch text input from the WebServiceServer thread to the active ContentWindow. ...</Abstract>
    <DeclaredIn>TextInputDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendKeyEventToActiveWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>TextInputDispatcher</Scope>
    </TokenIdentifier>
    <Path>class_text_input_dispatcher.html</Path>
    <Anchor>a3210b53e31e50729844223455ec52463</Anchor>
    <Abstract>Send the given key event to the active (frontmost) window. </Abstract>
    <DeclaredIn>TextInputDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TextInputDispatcher</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextInputDispatcher</Scope>
    </TokenIdentifier>
    <Path>class_text_input_dispatcher.html</Path>
    <Anchor>a7a4b7d6469254d0b33cf15b14d1d85b5</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>TextInputDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~TextInputDispatcher</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextInputDispatcher</Scope>
    </TokenIdentifier>
    <Path>class_text_input_dispatcher.html</Path>
    <Anchor>aa8f6f5ed745229e60657e50e93e3c4f5</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>TextInputDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TextInputHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>TextInputHandler</Scope>
    </TokenIdentifier>
    <Path>class_text_input_handler.html</Path>
    <Abstract>Handle &amp;quot;/textinput&amp;quot; requests for the WebService. </Abstract>
    <DeclaredIn>TextInputHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receivedKeyInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>TextInputHandler</Scope>
    </TokenIdentifier>
    <Path>class_text_input_handler.html</Path>
    <Anchor>a964b2f1980b806cba699e3aff87ad799</Anchor>
    <Abstract>Emitted whenever a request is successfully handled. </Abstract>
    <DeclaredIn>TextInputHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TextInputHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextInputHandler</Scope>
    </TokenIdentifier>
    <Path>class_text_input_handler.html</Path>
    <Anchor>a421d85ec18def8266d1bb0f372a15810</Anchor>
    <Abstract>Handle TextInput requests. </Abstract>
    <DeclaredIn>TextInputHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~TextInputHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextInputHandler</Scope>
    </TokenIdentifier>
    <Path>class_text_input_handler.html</Path>
    <Anchor>a3dd9adbbef083b4c07c50d188ffcd99f</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>TextInputHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextInputHandler</Scope>
    </TokenIdentifier>
    <Path>class_text_input_handler.html</Path>
    <Anchor>ae6e0fcda886cff5d6504b26e9f4d1bcc</Anchor>
    <Abstract>Handle a request. </Abstract>
    <DeclaredIn>TextInputHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Handler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dcWebservice::Handler</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_handler.html</Path>
    <Anchor>aeb5756832851d7bef1db5feede4104f1</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>Handler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Texture</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Texture</Scope>
    </TokenIdentifier>
    <Path>class_texture.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~WallContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallContent</Scope>
    </TokenIdentifier>
    <Path>class_wall_content.html</Path>
    <Anchor>a9bf85393c18ce6669f161becabc93229</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>WallContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preRenderSync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallContent</Scope>
    </TokenIdentifier>
    <Path>class_wall_content.html</Path>
    <Anchor>a531f1539ea2dce68b82eb91c249afaee</Anchor>
    <Abstract>Optional synchronization step before rendering. </Abstract>
    <DeclaredIn>WallContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postRenderSync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallContent</Scope>
    </TokenIdentifier>
    <Path>class_wall_content.html</Path>
    <Anchor>acee0f90d632440b659f85de9711d77d4</Anchor>
    <Abstract>Optional synchronization step after rendering. </Abstract>
    <DeclaredIn>WallContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setQmlItem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallContent</Scope>
    </TokenIdentifier>
    <Path>class_wall_content.html</Path>
    <Anchor>abafc1082fda8da69084e323cdee028e5</Anchor>
    <Abstract>Set a reference to the Qml item using this content. </Abstract>
    <DeclaredIn>WallContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>WallContent</Scope>
    </TokenIdentifier>
    <Path>class_wall_content.html</Path>
    <Anchor>afbaa3448bfc8c02404f8134a7b968f9d</Anchor>
    <Abstract>Create an object corresponding to the given content. </Abstract>
    <DeclaredIn>WallContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallContent</Scope>
    </TokenIdentifier>
    <Path>class_wall_content.html</Path>
    <Anchor>a03e64cc8e59e04efcc79b47c2cbaabe9</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WallContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TextureContent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>TextureContent</Scope>
    </TokenIdentifier>
    <Path>class_texture_content.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TextureContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureContent</Scope>
    </TokenIdentifier>
    <Path>class_texture_content.html</Path>
    <Anchor>a34ede22c00496d1f2309d56c0bfcf70b</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>TextureContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureContent</Scope>
    </TokenIdentifier>
    <Path>class_texture_content.html</Path>
    <Anchor>a9cc5fa88ef8586888049572041f79225</Anchor>
    <Abstract>Get the content type. </Abstract>
    <DeclaredIn>TextureContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMetadata</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureContent</Scope>
    </TokenIdentifier>
    <Path>class_texture_content.html</Path>
    <Anchor>aac9af25e443cae0cfef848825719f56f</Anchor>
    <Abstract>Read texture metadata. </Abstract>
    <DeclaredIn>TextureContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Content</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ae491288d2efce7fa63d3e777580630b4</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a887d2b952cd824d70f64106ae048a5f8</Anchor>
    <Abstract>Get the content URI. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>aa4681ca97acea99fbe88e20f0e664bc0</Anchor>
    <Abstract>Get the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a70fbc6b9c9dfd95c426819a1c14464f9</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a1b7a6f49f447c124b497b0a844fd6ea6</Anchor>
    <Abstract>Set the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a113bd8ba35685e77bcf8a8650fab636a</Anchor>
    <Abstract>Get the aspect ratio. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFixedAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>adceac372a702843a1e0bd207f670680a</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getActions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a7ae29df27d493e89dd7dccd775efbff8</Anchor>
    <Abstract>Get the actions from QML. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a44c022cb6fed6fb1b0dff45e39ececb9</Anchor>
    <Abstract>Emitted by any Content subclass when its state has been modified. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af5fc9d76b3c2899937927c9cd65689d5</Anchor>
    <Abstract>Serialize for sending to Wall applications. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_members_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a6787ec5cdec336c8f25c5e9671977598</Anchor>
    <Abstract>Serialize for saving to an xml file. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_for_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a4c9c0b425c1197cdf34f2d62119b6f4d</Anchor>
    <Abstract>Loading from xml. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_for_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a8d0e71e26ce26abdd7b414dee1ca2c9e</Anchor>
    <Abstract>Saving to xml. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThumbnailGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThumbnailGeneratorFactory</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ThumbnailGeneratorFactory</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator_factory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ToolbarButton</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ToolbarButton</Scope>
    </TokenIdentifier>
    <Path>struct_toolbar_button.html</Path>
    <Abstract>A simple button for the DockToolbar. </Abstract>
    <DeclaredIn>DockToolbar.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ToolbarButton</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ToolbarButton</Scope>
    </TokenIdentifier>
    <Path>struct_toolbar_button.html</Path>
    <Anchor>a1f5f720526f8e5d55b679e4b7a6e4113</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>DockToolbar.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>caption</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ToolbarButton</Scope>
    </TokenIdentifier>
    <Path>struct_toolbar_button.html</Path>
    <Anchor>acd43eb85db6b0477a42c3a26cfa5bfee</Anchor>
    <Abstract>Text caption. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>icon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ToolbarButton</Scope>
    </TokenIdentifier>
    <Path>struct_toolbar_button.html</Path>
    <Anchor>a5bc2b91b85d4cdbf8a194ab340aa4ef1</Anchor>
    <Abstract>Icon image, should be square and have at least the same height as the Toolbar to avoid upscaling...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>command</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ToolbarButton</Scope>
    </TokenIdentifier>
    <Path>struct_toolbar_button.html</Path>
    <Anchor>a11a93fc3eafe3bf475e2f320a8734f4f</Anchor>
    <Abstract>User-defined command associated with this button. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallConfiguration</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WallConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_wall_configuration.html</Path>
    <Abstract>The WallConfiguration class manages all the parameters needed to setup a Wall process. </Abstract>
    <DeclaredIn>WallConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallConfiguration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_wall_configuration.html</Path>
    <Anchor>aea5753620ffbbc4459200e408c83b48e</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WallConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHost</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_wall_configuration.html</Path>
    <Anchor>ad0378a8d4da77e3f8b6f8c5c3c9e9090</Anchor>
    <Abstract>Get the name of the host on which this process is running. </Abstract>
    <DeclaredIn>WallConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDisplay</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_wall_configuration.html</Path>
    <Anchor>a876b1979b3e3ad41c10df2e6edddcf55</Anchor>
    <Abstract>Get the display identifier in string format matching the current Linux DISPLAY env_var. </Abstract>
    <DeclaredIn>WallConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScreenCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_wall_configuration.html</Path>
    <Anchor>aa6468d2eb50a4ae860593283c4420e90</Anchor>
    <Abstract>Get the number of screens/GLWindows this process has to manage. </Abstract>
    <DeclaredIn>WallConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGlobalScreenIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_wall_configuration.html</Path>
    <Anchor>a6ef9df6c529cc3685ee8ba8ca13d2166</Anchor>
    <Abstract>Get the global index for the screen. </Abstract>
    <DeclaredIn>WallConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWindowPos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_wall_configuration.html</Path>
    <Anchor>a06dc91b9aef1021a80821411a72e0384</Anchor>
    <Abstract>Get the coordinates of a screen in pixel units. </Abstract>
    <DeclaredIn>WallConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProcessIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_wall_configuration.html</Path>
    <Anchor>a520529a16c97b2fcee43558fe356a827</Anchor>
    <Abstract>Get the index of the process. </Abstract>
    <DeclaredIn>WallConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Configuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a4f41abbe40c7e1345a325369c86aaaca</Anchor>
    <Abstract>Create a new configuration from an xml file. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Configuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a1226f87dc3c27be16eb16e53301eb2f3</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalScreenCountX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aca560ac9d3b46ef39444287ab4ba800f</Anchor>
    <Abstract>Get the total number of screens along the x axis. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalScreenCountY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a0f61e23c663322c808a33b8deeab198e</Anchor>
    <Abstract>Get the total number of screens along the y axis. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScreenWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a957a6e17a77943ca1469a599c4116987</Anchor>
    <Abstract>Get the width of a screen. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScreenHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>acac053b8e85c8e13dc1b24f829d70b25</Anchor>
    <Abstract>Get the height of a screen. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMullionWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aa4f921578b584411cab548d015e9ceba</Anchor>
    <Abstract>Get the padding nedded to compensate for the physical displays&amp;#39; bezel. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMullionHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aebf3438c6130ea0a50ed85d0ed2bde93</Anchor>
    <Abstract>Get the padding nedded to compensate for the physical displays&amp;#39; bezel. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aa7b4b828ea7bc8afcf2bed3857007eaa</Anchor>
    <Abstract>Get the total width of the DisplayWall, including the Mullion padding. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aba8af0457ab8769b5baab775ecebb8ba</Anchor>
    <Abstract>Get the total height of the DisplayWall, including the Mullion padding. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a3c3e0bc67693859c0450d4c5f4a79318</Anchor>
    <Abstract>Get the total size of the DisplayWall, including Mullion padding. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a1031736dbddf1becee943184afb27dda</Anchor>
    <Abstract>Get the aspect ratio of the DisplayWall, including Mullion padding. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScreenRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>ad9220206ff95419518e3b1eb6712b5d9</Anchor>
    <Abstract>Get the coordinates and dimensions of a screen in pixel units. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFullscreen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a3d38c54f965dce34f3839867a508779a</Anchor>
    <Abstract>Display the windows in fullscreen mode. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>filename_</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a43ad513bddcdfe68ff36f6254a843c1b</Anchor>
    <Abstract>The path to the xml configuration file. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallContent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WallContent</Scope>
    </TokenIdentifier>
    <Path>class_wall_content.html</Path>
    <Abstract>A content to be rendered by Wall processes. </Abstract>
    <DeclaredIn>WallContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~WallContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallContent</Scope>
    </TokenIdentifier>
    <Path>class_wall_content.html</Path>
    <Anchor>a9bf85393c18ce6669f161becabc93229</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>WallContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallContent</Scope>
    </TokenIdentifier>
    <Path>class_wall_content.html</Path>
    <Anchor>a144974c9c4d366d45f44c17358a64d96</Anchor>
    <Abstract>Render the content. </Abstract>
    <DeclaredIn>WallContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderPreview</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallContent</Scope>
    </TokenIdentifier>
    <Path>class_wall_content.html</Path>
    <Anchor>ad977fdbc1804394a4ab9f56f8350e326</Anchor>
    <Abstract>Render the preview ( whole object at low resolution.). </Abstract>
    <DeclaredIn>WallContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preRenderUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallContent</Scope>
    </TokenIdentifier>
    <Path>class_wall_content.html</Path>
    <Anchor>a9ad3a57c6390d7eb7372168f143607d2</Anchor>
    <Abstract>Update internal state before rendering. </Abstract>
    <DeclaredIn>WallContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preRenderSync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallContent</Scope>
    </TokenIdentifier>
    <Path>class_wall_content.html</Path>
    <Anchor>a531f1539ea2dce68b82eb91c249afaee</Anchor>
    <Abstract>Optional synchronization step before rendering. </Abstract>
    <DeclaredIn>WallContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postRenderSync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallContent</Scope>
    </TokenIdentifier>
    <Path>class_wall_content.html</Path>
    <Anchor>acee0f90d632440b659f85de9711d77d4</Anchor>
    <Abstract>Optional synchronization step after rendering. </Abstract>
    <DeclaredIn>WallContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setQmlItem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallContent</Scope>
    </TokenIdentifier>
    <Path>class_wall_content.html</Path>
    <Anchor>abafc1082fda8da69084e323cdee028e5</Anchor>
    <Abstract>Set a reference to the Qml item using this content. </Abstract>
    <DeclaredIn>WallContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>WallContent</Scope>
    </TokenIdentifier>
    <Path>class_wall_content.html</Path>
    <Anchor>afbaa3448bfc8c02404f8134a7b968f9d</Anchor>
    <Abstract>Create an object corresponding to the given content. </Abstract>
    <DeclaredIn>WallContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallContent</Scope>
    </TokenIdentifier>
    <Path>class_wall_content.html</Path>
    <Anchor>a03e64cc8e59e04efcc79b47c2cbaabe9</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WallContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallFromMasterChannel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WallFromMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_from_master_channel.html</Path>
    <Abstract>Receiving channel from the master application to the wall processes. </Abstract>
    <DeclaredIn>WallFromMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processMessages</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>WallFromMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_from_master_channel.html</Path>
    <Anchor>ac31fbc2ac8f416a651cd24b736af42f9</Anchor>
    <Abstract>Process messages until the QUIT message is received. </Abstract>
    <DeclaredIn>WallFromMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>received</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>WallFromMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_from_master_channel.html</Path>
    <Anchor>ab57f20a60ab6c83820e4344915a4f109</Anchor>
    <Abstract>Emitted when a displayGroup was recieved. </Abstract>
    <DeclaredIn>WallFromMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>received</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>WallFromMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_from_master_channel.html</Path>
    <Anchor>afb6a2af77cb53d4daff226e765de3338</Anchor>
    <Abstract>Emitted when new Options were recieved. </Abstract>
    <DeclaredIn>WallFromMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>received</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>WallFromMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_from_master_channel.html</Path>
    <Anchor>a32ac04eade034a8cd78c198a1b6decfd</Anchor>
    <Abstract>Emitted when new Markers were recieved. </Abstract>
    <DeclaredIn>WallFromMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>received</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>WallFromMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_from_master_channel.html</Path>
    <Anchor>a7e9d59550c96986e0f417d86ee08f053</Anchor>
    <Abstract>Emitted when a new PixelStream frame was recieved. </Abstract>
    <DeclaredIn>WallFromMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receivedQuit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>WallFromMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_from_master_channel.html</Path>
    <Anchor>af64048387bb958cc6678929489337ebc</Anchor>
    <Abstract>Emitted when the quit message was recieved. </Abstract>
    <DeclaredIn>WallFromMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallFromMasterChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallFromMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_from_master_channel.html</Path>
    <Anchor>a8f799726df2923051e9615728de8ed36</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WallFromMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMessageAvailable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallFromMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_from_master_channel.html</Path>
    <Anchor>a34a7629d9a71d873394d4bc51e687d04</Anchor>
    <Abstract>Check if a message is available from the Master process. </Abstract>
    <DeclaredIn>WallFromMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receiveMessage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallFromMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_from_master_channel.html</Path>
    <Anchor>a8ee7bd69b551972aa732743a116c7c04</Anchor>
    <Abstract>Receive a message. </Abstract>
    <DeclaredIn>WallFromMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallGraphicsScene</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WallGraphicsScene</Scope>
    </TokenIdentifier>
    <Path>class_wall_graphics_scene.html</Path>
    <Abstract>The scene representing the whole wall area. </Abstract>
    <DeclaredIn>WallGraphicsScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallGraphicsScene</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallGraphicsScene</Scope>
    </TokenIdentifier>
    <Path>class_wall_graphics_scene.html</Path>
    <Anchor>a6a235bd921790a954375670de719d7b8</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WallGraphicsScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>displayMarkers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallGraphicsScene</Scope>
    </TokenIdentifier>
    <Path>class_wall_graphics_scene.html</Path>
    <Anchor>aecff1ce370f839d2835dc5e5ff958c8c</Anchor>
    <Abstract>Display the markers for the touch points. </Abstract>
    <DeclaredIn>WallGraphicsScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMarkersRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallGraphicsScene</Scope>
    </TokenIdentifier>
    <Path>class_wall_graphics_scene.html</Path>
    <Anchor>a816afb93d561e9c4f219a97b220fe981</Anchor>
    <Abstract>Get the MarkersRenderer. </Abstract>
    <DeclaredIn>WallGraphicsScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallToMasterChannel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WallToMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_master_channel.html</Path>
    <Abstract>Sending channel from a wall process to the master application. </Abstract>
    <DeclaredIn>WallToMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendRequestFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>WallToMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_master_channel.html</Path>
    <Anchor>a74fb74cce59cd3a2bd40b1a87e0e418e</Anchor>
    <Abstract>Send a request frame message for the given pixel stream. </Abstract>
    <DeclaredIn>WallToMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendQuit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>WallToMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_master_channel.html</Path>
    <Anchor>a41e1681f9d52ad4debdcf1b41ade7fc5</Anchor>
    <Abstract>Send quit message to the master application to stop the receiver. </Abstract>
    <DeclaredIn>WallToMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallToMasterChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_master_channel.html</Path>
    <Anchor>a566e3c97ead7e0578a81e11d2d24adcd</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WallToMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallToWallChannel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Abstract>Communication channel between the Wall processes. </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallToWallChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>aba4b1dba030d03dde3e677ded75a688f</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRank</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>a3a7e61b7880b49c94d48b9d196104d3d</Anchor>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>globalSum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>a01ed3dfc790638a104438814b6302a1d</Anchor>
    <Abstract>Get the sum of the given local values across all processes. </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>ae2cde7fe2d3fcbc7afb2de6b009355f4</Anchor>
    <Abstract>Check if all processes are ready to perform a common action. </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>a933c06ef0a4c24468d2884fe14259d60</Anchor>
    <Abstract>Get the current timestamp, synchronized accross processes. </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synchronizeClock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>a10fc64c27e001a7399fba31effaba473</Anchor>
    <Abstract>Synchronize clock time across all processes. </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>globalBarrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>acc9fd1d36ca77ac667cde210b63b3354</Anchor>
    <Abstract>Block execution until all programs have reached the barrier. </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkVersion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>addd62ca5f6199f4ca0c31c23d282066d</Anchor>
    <Abstract>Check that all processes have the same version of an object. </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>electLeader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>a947d17d21cade981e36a68f5bc7407ad</Anchor>
    <Abstract>Elect a leader amongst wall processes. </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>broadcast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>a1849ff8865aea47796d4d121020668de</Anchor>
    <Abstract>Broadcast a timestamp. </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receiveTimestampBroadcast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>a3e9656b0a41c6d18d7e3775e7cc1aa5b</Anchor>
    <Abstract>Receive a timestamp broadcasted by broadcast(timestamp). </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallWindow</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WallWindow</Scope>
    </TokenIdentifier>
    <Path>class_wall_window.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallWindow</Scope>
    </TokenIdentifier>
    <Path>class_wall_window.html</Path>
    <Anchor>ab7c4ffab20bfad903bd181d7f9796c32</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WallWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTestPattern</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallWindow</Scope>
    </TokenIdentifier>
    <Path>class_wall_window.html</Path>
    <Anchor>a576355d88011313b132378a95f8f935a</Anchor>
    <Abstract>Set the test pattern. </Abstract>
    <DeclaredIn>WallWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTestPattern</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallWindow</Scope>
    </TokenIdentifier>
    <Path>class_wall_window.html</Path>
    <Anchor>a0d13a1aba0af9ca0f6a0686bdc01e220</Anchor>
    <Abstract>Get the test pattern. </Abstract>
    <DeclaredIn>WallWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setShowFps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallWindow</Scope>
    </TokenIdentifier>
    <Path>class_wall_window.html</Path>
    <Anchor>a47e8014714838eec0025a94314c7e03e</Anchor>
    <Abstract>Show or hide the fps counter. </Abstract>
    <DeclaredIn>WallWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBlockDrawCalls</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallWindow</Scope>
    </TokenIdentifier>
    <Path>class_wall_window.html</Path>
    <Anchor>a10b1427715b46762d7cea66fc592af9a</Anchor>
    <Abstract>Block all the update() and repaint() calls. </Abstract>
    <DeclaredIn>WallWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disableVSync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallWindow</Scope>
    </TokenIdentifier>
    <Path>class_wall_window.html</Path>
    <Anchor>a90d8b06f2c73a7d7d552d236758e79ae</Anchor>
    <Abstract>Disable VSync on this window for the next swapBuffer() call. </Abstract>
    <DeclaredIn>WallWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isExposed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallWindow</Scope>
    </TokenIdentifier>
    <Path>class_wall_window.html</Path>
    <Anchor>a94600d13167b3b27159507676b8ae2d1</Anchor>
    <Abstract>Check if the window is exposed in the window system. </Abstract>
    <DeclaredIn>WallWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebbrowserCommandHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WebbrowserCommandHandler</Scope>
    </TokenIdentifier>
    <Path>class_webbrowser_command_handler.html</Path>
    <Abstract>Handle webbrowser Commands. </Abstract>
    <DeclaredIn>WebbrowserCommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openWebBrowser</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>WebbrowserCommandHandler</Scope>
    </TokenIdentifier>
    <Path>class_webbrowser_command_handler.html</Path>
    <Anchor>a383d08c8134c8d541098894435a1cad7</Anchor>
    <Abstract>Signal the PixelStreamLauncher to open a Webbrowser. </Abstract>
    <DeclaredIn>WebbrowserCommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebbrowserCommandHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebbrowserCommandHandler</Scope>
    </TokenIdentifier>
    <Path>class_webbrowser_command_handler.html</Path>
    <Anchor>a32cbd80dbc9e6d42c8fa3201c3c3fac1</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WebbrowserCommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebbrowserCommandHandler</Scope>
    </TokenIdentifier>
    <Path>class_webbrowser_command_handler.html</Path>
    <Anchor>a513c670c0681d4e782294c3bcb45491c</Anchor>
    <Abstract>Get the type of commands handled by the implementation. </Abstract>
    <DeclaredIn>WebbrowserCommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebbrowserCommandHandler</Scope>
    </TokenIdentifier>
    <Path>class_webbrowser_command_handler.html</Path>
    <Anchor>a1613cf6706194236d5b0520f36c53021</Anchor>
    <Abstract>Handles an open web browser Command. </Abstract>
    <DeclaredIn>WebbrowserCommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebkitAuthenticationHelper</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WebkitAuthenticationHelper</Scope>
    </TokenIdentifier>
    <Path>class_webkit_authentication_helper.html</Path>
    <Abstract>Handle HTTP authentication requests for a QWebView. </Abstract>
    <DeclaredIn>WebkitAuthenticationHelper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebkitAuthenticationHelper</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebkitAuthenticationHelper</Scope>
    </TokenIdentifier>
    <Path>class_webkit_authentication_helper.html</Path>
    <Anchor>a4566e282a6780eeb97b84b4d6f88930d</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WebkitAuthenticationHelper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebkitHtmlSelectReplacer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WebkitHtmlSelectReplacer</Scope>
    </TokenIdentifier>
    <Path>class_webkit_html_select_replacer.html</Path>
    <Abstract>Substitutes all &amp;lt;select&amp;gt; elements on a webpage by equivalent HTML lists. </Abstract>
    <DeclaredIn>WebkitHtmlSelectReplacer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebkitHtmlSelectReplacer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebkitHtmlSelectReplacer</Scope>
    </TokenIdentifier>
    <Path>class_webkit_html_select_replacer.html</Path>
    <Anchor>aeee70417fc142e48bb07331a33963d00</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WebkitHtmlSelectReplacer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replaceAllSelectElements</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebkitHtmlSelectReplacer</Scope>
    </TokenIdentifier>
    <Path>class_webkit_html_select_replacer.html</Path>
    <Anchor>a6a8236e75946bb10abca9b8683a9b117</Anchor>
    <Abstract>Replace all &amp;lt;select&amp;gt; elements by Html equivalents. </Abstract>
    <DeclaredIn>WebkitHtmlSelectReplacer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebkitPixelStreamer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WebkitPixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_webkit_pixel_streamer.html</Path>
    <Abstract>Stream webpages with user interaction support. </Abstract>
    <DeclaredIn>WebkitPixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>WebkitPixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_webkit_pixel_streamer.html</Path>
    <Anchor>a2c07bd48b58b94f34097d19d9c74fae1</Anchor>
    <Abstract>Process an Event. </Abstract>
    <DeclaredIn>WebkitPixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Anchor>a3a59b36c4477a063e71de6a95b6a97c0</Anchor>
    <Abstract>Process an Event. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebkitPixelStreamer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebkitPixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_webkit_pixel_streamer.html</Path>
    <Anchor>a45817a0fa98dfa974a04f60105c3e9ba</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WebkitPixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~WebkitPixelStreamer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebkitPixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_webkit_pixel_streamer.html</Path>
    <Anchor>aa0a741712313a0963f69bc28cae292e3</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>WebkitPixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebkitPixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_webkit_pixel_streamer.html</Path>
    <Anchor>a314e66c210f8d1ae19b9b36e26d4f59c</Anchor>
    <Abstract>Get the size of the webpage images. </Abstract>
    <DeclaredIn>WebkitPixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUrl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebkitPixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_webkit_pixel_streamer.html</Path>
    <Anchor>ad69dd3aadf96096e1b81360584af65b7</Anchor>
    <Abstract>Open a webpage. </Abstract>
    <DeclaredIn>WebkitPixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebkitPixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_webkit_pixel_streamer.html</Path>
    <Anchor>a24fa22352cd4b4e297889357ad3e0b6d</Anchor>
    <Abstract>Get the QWebView used internally by the streamer. </Abstract>
    <DeclaredIn>WebkitPixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Anchor>ad3d2288e104737dd9de180fdd9f27e74</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PixelStreamer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Anchor>ac9d996a5dadc05b54dcfa0824eb1a573</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>imageUpdated</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Anchor>ae9f831bd8e004763f4e2fd05b17a21a1</Anchor>
    <Abstract>Emit this signal after a new image has been generated. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendCommand</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Anchor>ad3be94b21aba5fb409fa24bbff6454e5</Anchor>
    <Abstract>Emit this signal to send a command to the receiver. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebServiceServer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WebServiceServer</Scope>
    </TokenIdentifier>
    <Path>class_web_service_server.html</Path>
    <Abstract>A Qt wrapper to run the dcWebservice::Server in a QThread. </Abstract>
    <DeclaredIn>WebServiceServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebServiceServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebServiceServer</Scope>
    </TokenIdentifier>
    <Path>class_web_service_server.html</Path>
    <Anchor>a292894e9cff3a818ea72b1708ea7ed3f</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WebServiceServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~WebServiceServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebServiceServer</Scope>
    </TokenIdentifier>
    <Path>class_web_service_server.html</Path>
    <Anchor>acac912dd6e1a709456f92175ef89a00c</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>WebServiceServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebServiceServer</Scope>
    </TokenIdentifier>
    <Path>class_web_service_server.html</Path>
    <Anchor>add4f995e1c87224bb4bef372f7eea186</Anchor>
    <Abstract>Registers a request handler with a particular regular expression. </Abstract>
    <DeclaredIn>WebServiceServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebServiceServer</Scope>
    </TokenIdentifier>
    <Path>class_web_service_server.html</Path>
    <Anchor>af466375134b674204ba153a44e59fb5f</Anchor>
    <Abstract>Stop the server. </Abstract>
    <DeclaredIn>WebServiceServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebServiceServer</Scope>
    </TokenIdentifier>
    <Path>class_web_service_server.html</Path>
    <Anchor>a4d9f2941a764fc4c5115e5fdf063ab8c</Anchor>
    <DeclaredIn>WebServiceServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ZoomInteractionDelegate</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ZoomInteractionDelegate</Scope>
    </TokenIdentifier>
    <Path>class_zoom_interaction_delegate.html</Path>
    <Abstract>Handle user interaction with a zoomable content. </Abstract>
    <DeclaredIn>ZoomInteractionDelegate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ZoomInteractionDelegate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ZoomInteractionDelegate</Scope>
    </TokenIdentifier>
    <Path>class_zoom_interaction_delegate.html</Path>
    <Anchor>a32d5bd09fd94077bbc2625d73ebf0966</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ZoomInteractionDelegate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ZoomInteractionDelegate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ZoomInteractionDelegate</Scope>
    </TokenIdentifier>
    <Path>class_zoom_interaction_delegate.html</Path>
    <Anchor>af502767e577191940a82bd0d03962908</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>ZoomInteractionDelegate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>adjustZoomToContentAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ZoomInteractionDelegate</Scope>
    </TokenIdentifier>
    <Path>class_zoom_interaction_delegate.html</Path>
    <Anchor>ad860fe134957a969f18a0a38e4ab4751</Anchor>
    <Abstract>Adjust the zoom of the window to the aspect ratio of the content. </Abstract>
    <DeclaredIn>ZoomInteractionDelegate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dc::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>dc::Version</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_version.html</Path>
    <Abstract>Information about the current dccore version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>dc::Version</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_version.html</Path>
    <Anchor>a35f0bda50d18db7282c89ecd7b166a82</Anchor>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>dc::Version</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_version.html</Path>
    <Anchor>aa0389ef659d2e0e02286632a63875825</Anchor>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>dc::Version</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_version.html</Path>
    <Anchor>a6a434a3bbf33ec0af081e8dba81d5dc4</Anchor>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>dc::Version</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_version.html</Path>
    <Anchor>a1eab6b4d3c7f5c6b71f669ae18bd9629</Anchor>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>dc::Version</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_version.html</Path>
    <Anchor>af61db3067745313eb5f2f0d1053a3166</Anchor>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>dc::Version</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_version.html</Path>
    <Anchor>a883d79a22baa27bf9dfd8f18a0b581f4</Anchor>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>dc::Version</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_version.html</Path>
    <Anchor>a13f13bc2e3a1c9a1e0437b13241f2b95</Anchor>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>dc::Version</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_version.html</Path>
    <Anchor>ad59c2979ce6452bb8a0c0d725d1f278a</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>dc::Version</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_version.html</Path>
    <Anchor>a35f0bda50d18db7282c89ecd7b166a82</Anchor>
    <DeclaredIn>mock/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>dc::Version</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_version.html</Path>
    <Anchor>aa0389ef659d2e0e02286632a63875825</Anchor>
    <DeclaredIn>mock/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>dc::Version</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_version.html</Path>
    <Anchor>a6a434a3bbf33ec0af081e8dba81d5dc4</Anchor>
    <DeclaredIn>mock/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>dc::Version</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_version.html</Path>
    <Anchor>a1eab6b4d3c7f5c6b71f669ae18bd9629</Anchor>
    <DeclaredIn>mock/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>dc::Version</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_version.html</Path>
    <Anchor>af61db3067745313eb5f2f0d1053a3166</Anchor>
    <DeclaredIn>mock/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>dc::Version</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_version.html</Path>
    <Anchor>a883d79a22baa27bf9dfd8f18a0b581f4</Anchor>
    <DeclaredIn>mock/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>dc::Version</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_version.html</Path>
    <Anchor>a13f13bc2e3a1c9a1e0437b13241f2b95</Anchor>
    <DeclaredIn>mock/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>dc::Version</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_version.html</Path>
    <Anchor>ad59c2979ce6452bb8a0c0d725d1f278a</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>mock/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>dc::Version</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_version.html</Path>
    <Anchor>a35f0bda50d18db7282c89ecd7b166a82</Anchor>
    <DeclaredIn>webservice/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>dc::Version</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_version.html</Path>
    <Anchor>aa0389ef659d2e0e02286632a63875825</Anchor>
    <DeclaredIn>webservice/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>dc::Version</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_version.html</Path>
    <Anchor>a6a434a3bbf33ec0af081e8dba81d5dc4</Anchor>
    <DeclaredIn>webservice/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>dc::Version</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_version.html</Path>
    <Anchor>a1eab6b4d3c7f5c6b71f669ae18bd9629</Anchor>
    <DeclaredIn>webservice/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>dc::Version</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_version.html</Path>
    <Anchor>af61db3067745313eb5f2f0d1053a3166</Anchor>
    <DeclaredIn>webservice/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>dc::Version</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_version.html</Path>
    <Anchor>a883d79a22baa27bf9dfd8f18a0b581f4</Anchor>
    <DeclaredIn>webservice/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>dc::Version</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_version.html</Path>
    <Anchor>a13f13bc2e3a1c9a1e0437b13241f2b95</Anchor>
    <DeclaredIn>webservice/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>dc::Version</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_version.html</Path>
    <Anchor>ad59c2979ce6452bb8a0c0d725d1f278a</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>webservice/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dcWebservice::DefaultHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>dcWebservice::DefaultHandler</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_default_handler.html</Path>
    <Abstract>Default handler that always returns a 404 Not Found response. </Abstract>
    <DeclaredIn>DefaultHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dcWebservice::DefaultHandler</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_default_handler.html</Path>
    <Anchor>ac91bf93123012ba0a97da969312c8d67</Anchor>
    <Abstract>Through this method the handling functionality is exposed. </Abstract>
    <DeclaredIn>DefaultHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Handler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dcWebservice::Handler</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_handler.html</Path>
    <Anchor>aeb5756832851d7bef1db5feede4104f1</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>Handler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dcWebservice::FastCGIWrapper</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>dcWebservice::FastCGIWrapper</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_fast_c_g_i_wrapper.html</Path>
    <Abstract>Wrapper for the FastCGI library. </Abstract>
    <DeclaredIn>FastCGIWrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FastCGIWrapper</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dcWebservice::FastCGIWrapper</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_fast_c_g_i_wrapper.html</Path>
    <Anchor>a51e61cb88be32c1e01e4a7d97c31e25e</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>FastCGIWrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FastCGIWrapper</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dcWebservice::FastCGIWrapper</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_fast_c_g_i_wrapper.html</Path>
    <Anchor>add0e383f7cea3b95eae2e717356b494d</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>FastCGIWrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dcWebservice::FastCGIWrapper</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_fast_c_g_i_wrapper.html</Path>
    <Anchor>a450323b3e85d57f55536cf4b44bdb214</Anchor>
    <Abstract>Initialize the FCGI library. </Abstract>
    <DeclaredIn>FastCGIWrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dcWebservice::FastCGIWrapper</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_fast_c_g_i_wrapper.html</Path>
    <Anchor>a308261ca6f2246c7ee08b776a29ffcc4</Anchor>
    <Abstract>Blocks until a request arrives. </Abstract>
    <DeclaredIn>FastCGIWrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dcWebservice::FastCGIWrapper</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_fast_c_g_i_wrapper.html</Path>
    <Anchor>af68920ca66e17493d1cbcf1dc2f708a6</Anchor>
    <Abstract>Get the actual FCGX_Request object associated with this wrapper. </Abstract>
    <DeclaredIn>FastCGIWrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dcWebservice::FastCGIWrapper</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_fast_c_g_i_wrapper.html</Path>
    <Anchor>ab1a6d6bfc37bd67a580d12c93f81e0ca</Anchor>
    <Abstract>Sends the message back to the requester and finalizes the request. </Abstract>
    <DeclaredIn>FastCGIWrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dcWebservice::FastCGIWrapper</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_fast_c_g_i_wrapper.html</Path>
    <Anchor>a5cbf48c656db33c226bbdb544499a8cd</Anchor>
    <Abstract>Calling this method will force the interruption of the accept blocking call. </Abstract>
    <DeclaredIn>FastCGIWrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dcWebservice::Handler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>dcWebservice::Handler</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_handler.html</Path>
    <Abstract>A request handler encapuslates the &amp;quot;service&amp;quot; code entry point of a web service. </Abstract>
    <DeclaredIn>Handler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Handler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dcWebservice::Handler</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_handler.html</Path>
    <Anchor>aeb5756832851d7bef1db5feede4104f1</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>Handler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dcWebservice::Handler</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_handler.html</Path>
    <Anchor>ab4caa2c6721a3bc902c08b20055d895a</Anchor>
    <Abstract>Through this method the handling functionality is exposed. </Abstract>
    <DeclaredIn>Handler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dcWebservice::Mapper</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>dcWebservice::Mapper</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_mapper.html</Path>
    <Abstract>Maps regular expressions to Request Handlers. </Abstract>
    <DeclaredIn>Mapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Mapper</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dcWebservice::Mapper</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_mapper.html</Path>
    <Anchor>a371d0eb38eaaba120adfdf8502265b23</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Mapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dcWebservice::Mapper</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_mapper.html</Path>
    <Anchor>aea1db2e397fcda132839427bed9bab50</Anchor>
    <Abstract>Register a handler with a regex defined by the pattern string passed as parameter. </Abstract>
    <DeclaredIn>Mapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dcWebservice::Mapper</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_mapper.html</Path>
    <Anchor>a874b852748b24cb065dce9c55207e98c</Anchor>
    <Abstract>Given a string, it returns the first handler for which positive regex match is found. </Abstract>
    <DeclaredIn>Mapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dcWebservice::Request</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>dcWebservice::Request</Scope>
    </TokenIdentifier>
    <Path>structdc_webservice_1_1_request.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>httpHeaders</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dcWebservice::Request</Scope>
    </TokenIdentifier>
    <Path>structdc_webservice_1_1_request.html</Path>
    <Anchor>a5c6e9589e11813e45ff1cc88dcae07a1</Anchor>
    <Abstract>HTTP headers table. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>url</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dcWebservice::Request</Scope>
    </TokenIdentifier>
    <Path>structdc_webservice_1_1_request.html</Path>
    <Anchor>a3c7077e06a56744b1a13473f250e30bb</Anchor>
    <Abstract>Originally requested URL. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>method</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dcWebservice::Request</Scope>
    </TokenIdentifier>
    <Path>structdc_webservice_1_1_request.html</Path>
    <Anchor>a5eefd24ec9b2890aadba110c5076348f</Anchor>
    <Abstract>HTTP request method (GET, POST, PUT, DELETE, ...) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queryString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dcWebservice::Request</Scope>
    </TokenIdentifier>
    <Path>structdc_webservice_1_1_request.html</Path>
    <Anchor>a3e427c159b034e6c50ab1ed3a8db830b</Anchor>
    <Abstract>The query string, if one is present in the url. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dcWebservice::Request</Scope>
    </TokenIdentifier>
    <Path>structdc_webservice_1_1_request.html</Path>
    <Anchor>ab3ef5e42d6a2e37cdd4397ab4ccbbe20</Anchor>
    <Abstract>The path to the resource indicated in the url. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dcWebservice::Request</Scope>
    </TokenIdentifier>
    <Path>structdc_webservice_1_1_request.html</Path>
    <Anchor>a39752457fad2b574e37d167ae161b9ef</Anchor>
    <Abstract>If a query string is present this map contains the pairs name, value for each of the parameters in th...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dcWebservice::Request</Scope>
    </TokenIdentifier>
    <Path>structdc_webservice_1_1_request.html</Path>
    <Anchor>ac96e772c2cad706e1f218dd7a2175643</Anchor>
    <Abstract>If the request contains data in its body the data is stored here. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dcWebservice::RequestBuilder</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>dcWebservice::RequestBuilder</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_request_builder.html</Path>
    <Abstract>This class encapsulates the logic necessary to extract information from a FastCGI request (FCGX_Reque...</Abstract>
    <DeclaredIn>RequestBuilder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~RequestBuilder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dcWebservice::RequestBuilder</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_request_builder.html</Path>
    <Anchor>adf72aa68366f5f3d78af43064ca6e156</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>RequestBuilder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dcWebservice::RequestBuilder</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_request_builder.html</Path>
    <Anchor>a258db08ca4c483596dd982e3903804df</Anchor>
    <Abstract>Creates a new dcWebservice::Request object using the information contained in the FastCGI request...</Abstract>
    <DeclaredIn>RequestBuilder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dcWebservice::Response</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>dcWebservice::Response</Scope>
    </TokenIdentifier>
    <Path>structdc_webservice_1_1_response.html</Path>
    <Abstract>Structure representing a HTTP reponse message as specified in http://tools.ietf.org/search/rfc2616. </Abstract>
    <DeclaredIn>Response.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Response</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dcWebservice::Response</Scope>
    </TokenIdentifier>
    <Path>structdc_webservice_1_1_response.html</Path>
    <Anchor>a08c0464034072e28357f0e4c88942cd0</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Response.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dcWebservice::Response</Scope>
    </TokenIdentifier>
    <Path>structdc_webservice_1_1_response.html</Path>
    <Anchor>aeb636ae8e66a663e0658a1747d2ce3fc</Anchor>
    <Abstract>Serialize the object into a String contaning a RFC 2616 compliant HTTP response message. </Abstract>
    <DeclaredIn>Response.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>statusCode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dcWebservice::Response</Scope>
    </TokenIdentifier>
    <Path>structdc_webservice_1_1_response.html</Path>
    <Anchor>aeb5384a678a0df6cba63db08610a4c53</Anchor>
    <Abstract>HTTP status code as defined in RFC 2616. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>statusMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dcWebservice::Response</Scope>
    </TokenIdentifier>
    <Path>structdc_webservice_1_1_response.html</Path>
    <Anchor>ab557b182a8187621cd3ba1da8c1d94db</Anchor>
    <Abstract>HTTP status message as defined in RFC 2616. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>body</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dcWebservice::Response</Scope>
    </TokenIdentifier>
    <Path>structdc_webservice_1_1_response.html</Path>
    <Anchor>ab03e67a3f0f3b95c9f961b74326d9148</Anchor>
    <Abstract>HTTP response body, as defined in RFC 2616. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>httpHeaders</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dcWebservice::Response</Scope>
    </TokenIdentifier>
    <Path>structdc_webservice_1_1_response.html</Path>
    <Anchor>aeb12400a810f0573d67f28f3bbbc9064</Anchor>
    <Abstract>HTTP response headers as defined in RFC 2616. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dcWebservice::Server</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>dcWebservice::Server</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_server.html</Path>
    <Abstract>FastCGI application server. </Abstract>
    <DeclaredIn>Server.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Server</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dcWebservice::Server</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_server.html</Path>
    <Anchor>a8d640fb0748d812d4622f09cf8ddd33a</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Server.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dcWebservice::Server</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_server.html</Path>
    <Anchor>aa6c8b914130b22705b39b35a6a072a6d</Anchor>
    <Abstract>Registers a request handler with a particular regular expression. </Abstract>
    <DeclaredIn>Server.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dcWebservice::Server</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_server.html</Path>
    <Anchor>a6174c348fe83ede5f8cb3f995968a1cf</Anchor>
    <Abstract>Binds a TCP socket in the port specified and starts listening for incoming requests. </Abstract>
    <DeclaredIn>Server.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dcWebservice::Server</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_server.html</Path>
    <Anchor>a806f8226d20b2a222cdbcd48d0af410f</Anchor>
    <Abstract>Stops the Server request processing loop. </Abstract>
    <DeclaredIn>Server.h</DeclaredIn>
  </Token>
</Tokens>
