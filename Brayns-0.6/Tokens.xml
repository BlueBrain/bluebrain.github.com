<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_MAJOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>common_2version_8h.html</Path>
    <Anchor>af6fac12cc372fa2c0d4a7276646db3e2</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_MINOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>common_2version_8h.html</Path>
    <Anchor>ad1d30abb92c583df9555702986df6cd5</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_PATCH</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>common_2version_8h.html</Path>
    <Anchor>aec3b431747b4611d046a5be799c36a85</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_REVISION</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>common_2version_8h.html</Path>
    <Anchor>a4d697b7dac7e97b28fecf7714fea4d8f</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_ABI</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>common_2version_8h.html</Path>
    <Anchor>a689d3561485abd45ee50411137295ee0</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_STRING</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>common_2version_8h.html</Path>
    <Anchor>aae1fd1122c42331f598c0152baa6572a</Anchor>
    <Abstract>The current major.minor.version as a string. </Abstract>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_REV_STRING</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>common_2version_8h.html</Path>
    <Anchor>abdfd5d63377bd1606cf51a0437943637</Anchor>
    <Abstract>The current major.minor.version.revision as a string. </Abstract>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_GT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>common_2version_8h.html</Path>
    <Anchor>ae06db9b236b4f8ed1de4c3d1cbf55fe5</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_GE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>common_2version_8h.html</Path>
    <Anchor>a4453b9a10c85cfaf4e3a599a6105fcea</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_LT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>common_2version_8h.html</Path>
    <Anchor>aa92a565dac0a7e3edbc52f24802aa925</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_LE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>common_2version_8h.html</Path>
    <Anchor>acbda0067085f5d239bc8e6c0f3ec2d12</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_MAJOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>parameters_2version_8h.html</Path>
    <Anchor>af6fac12cc372fa2c0d4a7276646db3e2</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_MINOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>parameters_2version_8h.html</Path>
    <Anchor>ad1d30abb92c583df9555702986df6cd5</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_PATCH</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>parameters_2version_8h.html</Path>
    <Anchor>aec3b431747b4611d046a5be799c36a85</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_REVISION</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>parameters_2version_8h.html</Path>
    <Anchor>a4d697b7dac7e97b28fecf7714fea4d8f</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_ABI</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>parameters_2version_8h.html</Path>
    <Anchor>a689d3561485abd45ee50411137295ee0</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_STRING</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>parameters_2version_8h.html</Path>
    <Anchor>aae1fd1122c42331f598c0152baa6572a</Anchor>
    <Abstract>The current major.minor.version as a string. </Abstract>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_REV_STRING</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>parameters_2version_8h.html</Path>
    <Anchor>abdfd5d63377bd1606cf51a0437943637</Anchor>
    <Abstract>The current major.minor.version.revision as a string. </Abstract>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_GT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>parameters_2version_8h.html</Path>
    <Anchor>ae06db9b236b4f8ed1de4c3d1cbf55fe5</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_GE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>parameters_2version_8h.html</Path>
    <Anchor>a4453b9a10c85cfaf4e3a599a6105fcea</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_LT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>parameters_2version_8h.html</Path>
    <Anchor>aa92a565dac0a7e3edbc52f24802aa925</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_LE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>parameters_2version_8h.html</Path>
    <Anchor>acbda0067085f5d239bc8e6c0f3ec2d12</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_MAJOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>pluginapi_2version_8h.html</Path>
    <Anchor>af6fac12cc372fa2c0d4a7276646db3e2</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>pluginapi/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_MINOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>pluginapi_2version_8h.html</Path>
    <Anchor>ad1d30abb92c583df9555702986df6cd5</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>pluginapi/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_PATCH</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>pluginapi_2version_8h.html</Path>
    <Anchor>aec3b431747b4611d046a5be799c36a85</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>pluginapi/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_REVISION</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>pluginapi_2version_8h.html</Path>
    <Anchor>a4d697b7dac7e97b28fecf7714fea4d8f</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>pluginapi/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_ABI</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>pluginapi_2version_8h.html</Path>
    <Anchor>a689d3561485abd45ee50411137295ee0</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>pluginapi/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_STRING</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>pluginapi_2version_8h.html</Path>
    <Anchor>aae1fd1122c42331f598c0152baa6572a</Anchor>
    <Abstract>The current major.minor.version as a string. </Abstract>
    <DeclaredIn>pluginapi/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_REV_STRING</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>pluginapi_2version_8h.html</Path>
    <Anchor>abdfd5d63377bd1606cf51a0437943637</Anchor>
    <Abstract>The current major.minor.version.revision as a string. </Abstract>
    <DeclaredIn>pluginapi/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_GT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>pluginapi_2version_8h.html</Path>
    <Anchor>ae06db9b236b4f8ed1de4c3d1cbf55fe5</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>pluginapi/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_GE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>pluginapi_2version_8h.html</Path>
    <Anchor>a4453b9a10c85cfaf4e3a599a6105fcea</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>pluginapi/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_LT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>pluginapi_2version_8h.html</Path>
    <Anchor>aa92a565dac0a7e3edbc52f24802aa925</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>pluginapi/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_LE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>pluginapi_2version_8h.html</Path>
    <Anchor>acbda0067085f5d239bc8e6c0f3ec2d12</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>pluginapi/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_MAJOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>tasks_2version_8h.html</Path>
    <Anchor>af6fac12cc372fa2c0d4a7276646db3e2</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_MINOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>tasks_2version_8h.html</Path>
    <Anchor>ad1d30abb92c583df9555702986df6cd5</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_PATCH</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>tasks_2version_8h.html</Path>
    <Anchor>aec3b431747b4611d046a5be799c36a85</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_REVISION</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>tasks_2version_8h.html</Path>
    <Anchor>a4d697b7dac7e97b28fecf7714fea4d8f</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_ABI</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>tasks_2version_8h.html</Path>
    <Anchor>a689d3561485abd45ee50411137295ee0</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_STRING</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>tasks_2version_8h.html</Path>
    <Anchor>aae1fd1122c42331f598c0152baa6572a</Anchor>
    <Abstract>The current major.minor.version as a string. </Abstract>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_REV_STRING</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>tasks_2version_8h.html</Path>
    <Anchor>abdfd5d63377bd1606cf51a0437943637</Anchor>
    <Abstract>The current major.minor.version.revision as a string. </Abstract>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_GT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>tasks_2version_8h.html</Path>
    <Anchor>ae06db9b236b4f8ed1de4c3d1cbf55fe5</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_GE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>tasks_2version_8h.html</Path>
    <Anchor>a4453b9a10c85cfaf4e3a599a6105fcea</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_LT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>tasks_2version_8h.html</Path>
    <Anchor>aa92a565dac0a7e3edbc52f24802aa925</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_LE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>tasks_2version_8h.html</Path>
    <Anchor>acbda0067085f5d239bc8e6c0f3ec2d12</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_MAJOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>af6fac12cc372fa2c0d4a7276646db3e2</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_MINOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>ad1d30abb92c583df9555702986df6cd5</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_PATCH</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>aec3b431747b4611d046a5be799c36a85</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_REVISION</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a4d697b7dac7e97b28fecf7714fea4d8f</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_ABI</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a689d3561485abd45ee50411137295ee0</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_STRING</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>aae1fd1122c42331f598c0152baa6572a</Anchor>
    <Abstract>The current major.minor.version as a string. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_REV_STRING</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>abdfd5d63377bd1606cf51a0437943637</Anchor>
    <Abstract>The current major.minor.version.revision as a string. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_GT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>ae06db9b236b4f8ed1de4c3d1cbf55fe5</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_GE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a4453b9a10c85cfaf4e3a599a6105fcea</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_LT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>aa92a565dac0a7e3edbc52f24802aa925</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_LE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>acbda0067085f5d239bc8e6c0f3ec2d12</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>md__jenkins_03_workspace_oss.Brayns.documentation_build_type_Debug_platform_cscsviz-vm_sources_doc_UserGuide</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>md__jenkins_03_workspace_oss.Brayns.documentation_build_type_Debug_platform_cscsviz-vm_sources_doc_UserGuide.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>md__jenkins_03_workspace_oss.Brayns.documentation_build_type_Debug_platform_cscsviz-vm_sources_Changelog</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>md__jenkins_03_workspace_oss.Brayns.documentation_build_type_Debug_platform_cscsviz-vm_sources_Changelog.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apps</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>apps.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>braynsBenchmark</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>braynsBenchmark.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>braynsService</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>braynsService.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>braynsViewer</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>braynsViewer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>todo</Name>
      <APILanguage>unknown</APILanguage>
    </TokenIdentifier>
    <Path>todo.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clipped_perspective_camera</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group__clipped__perspective__camera.html</Path>
    <Abstract>Implements a straightforward perspective (or &quot;pinhole&quot; camera) for perspective rendering, without support for Depth of Field or Motion Blur. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::AbstractManipulator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Abstract>Base class for camera manipulators. </Abstract>
    <DeclaredIn>AbstractManipulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_camera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>aae08537e81adbbd7275c7d6fd9ec8ed6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_keyboardHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>a1ddb4ed7cefbbb93422d8f26b5911245</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_motionSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>a3b110bb323f6163f82855d55c32ff177</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rotationSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>ac0ee65066a75352e0c5f550e1b1a0cd6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::AbstractParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Abstract>Base class defining command line parameters. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>af8c4e3e33c6d75a71893d7d48f0e4fec</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>a26266de9ad202855a31e167a16524f9e</Anchor>
    <Abstract>Parses parameters managed by the class. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>a998b0175fc8d8a20c08d1e5ee4bb147e</Anchor>
    <Abstract>Displays values of registered parameters. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::AbstractRenderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::AbstractRenderer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_renderer.html</Path>
    <Abstract>The AbstractRenderer class implements a base renderer for all Brayns custom implementations. </Abstract>
    <DeclaredIn>AbstractRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::AbstractSimulationHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Abstract>The AbstractSimulationHandler class handles simulation frames for the current circuit. </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a17cee8a8500abfebc5f9783bb92ec48d</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~AbstractSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a60e89a35d6ca992d20697637d8b7560c</Anchor>
    <Abstract>Default desctuctor. </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachSimulationToCacheFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>afbda00e17fa6bd162a4263f89a55c379</Anchor>
    <Abstract>Attaches a memory mapped file to the scene so that renderers can access the data as if it was in memo...</Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeHeader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a4d0f24d63fde4da927ac66a274322ef9</Anchor>
    <Abstract>Writes the header to a stream. </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a5090a2dbe98efbec2a7c3009332d32ee</Anchor>
    <Abstract>Writes a frame to a stream. </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a26ac8e6f42732daa22d3a703816ba47c</Anchor>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a0cdae90711c7ed059575c8f09ae22109</Anchor>
    <Abstract>returns a void pointer to the simulation data for the given frame or nullptr if the frame is not load...</Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a94eb882faba3d4a6f4cecdfa7f3af5d8</Anchor>
    <Abstract>getFrameSize return the size of the current simulation frame </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a8fa6e6c15ed6b6aad1e30004cf2c2983</Anchor>
    <Abstract>setFrameSize Sets the size of the current simulation frame </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNbFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a63756f6adb15211c556a20a04d651536</Anchor>
    <Abstract>getNbFrames returns the number of frame for the current simulation </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNbFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a6d97bbea1b840d24c754068d0b6c2cd8</Anchor>
    <Abstract>setNbFrames sets the number of frame for the current simulation </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a85da5dd39cdbcffec3e93effe92d64ec</Anchor>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a40e02361912fd67a9cae1afd91210f8a</Anchor>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHistogram</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a6c6ce62b4615c1e9f24199d43ef7542b</Anchor>
    <Abstract>getHistogram returns the Histogram of the values in the current simulation frame. ...</Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>histogramChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>acb55af876243483839a70e8d0d8d98ac</Anchor>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>aad7e9c57e1a9095c0f3c05b3fc33d332</Anchor>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::AbstractTask</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Abstract>A task is an operation that can be scheduled (directly, async, ...) and has support for progress repo...</Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cancel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>af1019fe39fea3201341ea4301186a911</Anchor>
    <Abstract>Cancels the task if is either waiting to be scheduled or already running. </Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finishCancel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a12c64d0b0aa5bc8916d656fbffd5e8dd</Anchor>
    <Abstract>Indicate that cancel processing has finished and call the function given to cancel(). </Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canceled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a108ebfd245dbddf0df673e9624702f1f</Anchor>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>schedule</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>ad0836f14b82f490ec6d12a043f9f7cee</Anchor>
    <Abstract>Schedule the execution of the task. </Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>progress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a9c4958935de14f9db7480e9bb3566735</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ActionInterface</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ActionInterface</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_action_interface.html</Path>
    <Abstract>Interface for registering actions, namely notifications which have no return values with an optional ...</Abstract>
    <DeclaredIn>ActionInterface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerNotification</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ActionInterface</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_action_interface.html</Path>
    <Anchor>a95e883e26046da3bb55228e683826fcd</Anchor>
    <Abstract>Register an action with no parameter and no return value. </Abstract>
    <DeclaredIn>ActionInterface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerNotification</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ActionInterface</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_action_interface.html</Path>
    <Anchor>ae77375d7cf3277aa2a876d58bb519c59</Anchor>
    <Abstract>Register an action with a parameter and no return value. </Abstract>
    <DeclaredIn>ActionInterface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ActionInterface</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_action_interface.html</Path>
    <Anchor>aa848f4a0c303b0686ccdcc72c9e1d6c7</Anchor>
    <Abstract>Register an action with a parameter and a return value. </Abstract>
    <DeclaredIn>ActionInterface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ActionInterface</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_action_interface.html</Path>
    <Anchor>a67f15a5be2bc8ece423e2bb494dee99c</Anchor>
    <Abstract>Register an action with no parameter and a return value. </Abstract>
    <DeclaredIn>ActionInterface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::AddModelFromBlobTask</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::AddModelFromBlobTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_add_model_from_blob_task.html</Path>
    <Abstract>A task which receives a file blob, triggers loading of the received blob and adds the loaded model to...</Abstract>
    <DeclaredIn>AddModelFromBlobTask.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Task</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task&lt; ModelDescriptorPtr &gt;</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>adb4c824ce065c30129e25c2973b5760b</Anchor>
    <Abstract>Create an empty task; use task() and async++ to do something meaningful. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Task</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task&lt; ModelDescriptorPtr &gt;</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>ac5558024a92ce91fe5c6d8cc3ffd84ee</Anchor>
    <Abstract>Create and schedule a task with the given functor or lambda. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>schedule</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task&lt; ModelDescriptorPtr &gt;</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>abfc3f1e06d95e8923df75e9651b1f0f4</Anchor>
    <Abstract>NOP for this task; tasks are running after construction. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>result</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task&lt; ModelDescriptorPtr &gt;</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>a9a6c0675ba8c6321bff7ffbf044fdc99</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task&lt; ModelDescriptorPtr &gt;</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>aa4f761290010bd3a0c7a026629524042</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cancel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>af1019fe39fea3201341ea4301186a911</Anchor>
    <Abstract>Cancels the task if is either waiting to be scheduled or already running. </Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finishCancel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a12c64d0b0aa5bc8916d656fbffd5e8dd</Anchor>
    <Abstract>Indicate that cancel processing has finished and call the function given to cancel(). </Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canceled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a108ebfd245dbddf0df673e9624702f1f</Anchor>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>progress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a9c4958935de14f9db7480e9bb3566735</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::AddModelTask</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::AddModelTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_add_model_task.html</Path>
    <Abstract>A task which loads data from the path of the given params and adds the loaded model to the engines&amp;#39; s...</Abstract>
    <DeclaredIn>AddModelTask.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Task</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task&lt; ModelDescriptorPtr &gt;</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>adb4c824ce065c30129e25c2973b5760b</Anchor>
    <Abstract>Create an empty task; use task() and async++ to do something meaningful. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Task</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task&lt; ModelDescriptorPtr &gt;</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>ac5558024a92ce91fe5c6d8cc3ffd84ee</Anchor>
    <Abstract>Create and schedule a task with the given functor or lambda. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>schedule</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task&lt; ModelDescriptorPtr &gt;</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>abfc3f1e06d95e8923df75e9651b1f0f4</Anchor>
    <Abstract>NOP for this task; tasks are running after construction. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>result</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task&lt; ModelDescriptorPtr &gt;</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>a9a6c0675ba8c6321bff7ffbf044fdc99</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task&lt; ModelDescriptorPtr &gt;</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>aa4f761290010bd3a0c7a026629524042</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cancel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>af1019fe39fea3201341ea4301186a911</Anchor>
    <Abstract>Cancels the task if is either waiting to be scheduled or already running. </Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finishCancel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a12c64d0b0aa5bc8916d656fbffd5e8dd</Anchor>
    <Abstract>Indicate that cancel processing has finished and call the function given to cancel(). </Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canceled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a108ebfd245dbddf0df673e9624702f1f</Anchor>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>progress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a9c4958935de14f9db7480e9bb3566735</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::AnimationParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::AnimationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_animation_parameters.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AnimationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_animation_parameters.html</Path>
    <Anchor>af192debb91abc150a4ef5ac29cac9f1f</Anchor>
    <Abstract>Displays values of registered parameters. </Abstract>
    <DeclaredIn>AnimationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDelta</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AnimationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_animation_parameters.html</Path>
    <Anchor>a9b0f3a0e5bdf2d4e249ba6402e0a7697</Anchor>
    <Abstract>The (frame) delta to apply for animations to select the next frame. </Abstract>
    <DeclaredIn>AnimationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>af8c4e3e33c6d75a71893d7d48f0e4fec</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ApplicationParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Abstract>Manages application parameters. </Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>aa2e0d98422af63c78df7f14a65fa4b6c</Anchor>
    <Abstract>Displays values of registered parameters. </Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPlugins</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>a2d1f26fe17585f689efc2c83f60a4c56</Anchor>
    <Abstract>Runtime plugins to load in Brayns::loadPlugins. </Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWindowSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>a6e87fdfee6a6590c5d9ff7c4ee7dc0ee</Anchor>
    <Abstract>window size </Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBenchmarking</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>a0baa53fd46c9a6aecddeec70d2546ce2</Anchor>
    <Abstract>Benchmarking. </Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJpegCompression</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>a9fdb360a50c27ab8242fff3d0f2170cb</Anchor>
    <Abstract>JPEG compression quality. </Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getImageStreamFPS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>a0746ff08049a8588d79f8633e33e899a</Anchor>
    <Abstract>Image stream FPS. </Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTmpFolder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>a4c2e7a22aad865a23b1be1eb8b1d6175</Anchor>
    <Abstract>Folder used by the application to store temporary files. </Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSynchronousMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>adad26e22e52a305f855514bfe011bf28</Anchor>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>af8c4e3e33c6d75a71893d7d48f0e4fec</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>a5be6af2d2178a0a5c6696692e5a1f394</Anchor>
    <Abstract>Parses parameters managed by the class. </Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::BadParameter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::BadParameter</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_bad_parameter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::BaseObject</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::BasicRenderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::BasicRenderer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_basic_renderer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BasicRenderer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_basic_renderer.html</Path>
    <Anchor>a14d511c6e0fd0ee083ada8f252a43992</Anchor>
    <Abstract>Returns the class name as a string. </Abstract>
    <DeclaredIn>BasicRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::BinaryError</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::BinaryError</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_binary_error.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::BinaryParam</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::BinaryParam</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_binary_param.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::BinaryParam</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_binary_param.html</Path>
    <Anchor>a50964aa1d6ec351c6f186ffe924da95b</Anchor>
    <Abstract>size in bytes of file </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::BinaryParam</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_binary_param.html</Path>
    <Anchor>a8a398a1478bc43ad918b91be5d83ca0b</Anchor>
    <Abstract>file extension or type (MESH, POINTS, CIRCUIT) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::BinaryTaskError</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::BinaryTaskError</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_binary_task_error.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Blob</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Blob</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_blob.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Brayns</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Abstract>Brayns is a minimalistic library that allows optimized ray-tracing rendering of meshes and parametric...</Abstract>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadPlugins</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>a13ee3507d5f761f803383c0993bc8035</Anchor>
    <Abstract>Creates built-in plugins and loads specified dynamic plugins. </Abstract>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEngine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>acc8b3d8d54f59a2b5bb1ca70c07c7047</Anchor>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParametersManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>ad68939e00e940e6df3255bbf9e8a761f</Anchor>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKeyboardHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>a8af015ef5e738482177f3e4a9dfc4699</Anchor>
    <Abstract>Gets the keyboard handler. </Abstract>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCameraManipulator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>a86278a6f267a457c0473e85cef65c54f</Anchor>
    <Abstract>Gets the camera manipulator. </Abstract>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>a40a8a684cb1caf39e10f4b56dce58292</Anchor>
    <Abstract>Renders color and depth buffers of the current scene, according to specified parameters. </Abstract>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>a775ea688fc1a445393a5a8172fe28864</Anchor>
    <Abstract>Renders color and depth buffers of the current scene, according to default parameters. </Abstract>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preRender</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>af6ee14b3ac90d1d7bf2c1c044babfb6b</Anchor>
    <Abstract>Handle events, update animation, call preRender() on plugins and commit changes on the engine...</Abstract>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderOnly</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>aba196920e95b281191a234bedaf62963</Anchor>
    <Abstract>Render a frame into the current framebuffer. </Abstract>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postRender</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>add9f68bde6583471ac00f32f20e53933</Anchor>
    <Abstract>Call postRender() on engine and plugins to signal finish of renderOnly(). </Abstract>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildScene</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>afefbd02f955a375c53140e3d2e6a6909</Anchor>
    <Abstract>Unloads current scene and loads new scene according to parameters. </Abstract>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::CADiffusionSimulationHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::CADiffusionSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_c_a_diffusion_simulation_handler.html</Path>
    <Abstract>The CADiffusionSimulationHandler class handles simulation frames for Calcium diffusion. </Abstract>
    <DeclaredIn>CADiffusionSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CADiffusionSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::CADiffusionSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_c_a_diffusion_simulation_handler.html</Path>
    <Anchor>a53ecc8e7dafa8e277c33991808060f24</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>CADiffusionSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::CADiffusionSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_c_a_diffusion_simulation_handler.html</Path>
    <Anchor>ad960ca0302cf21edcfbd940b01364b85</Anchor>
    <Abstract>setFrame Sets the frame to load </Abstract>
    <DeclaredIn>CADiffusionSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNbFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::CADiffusionSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_c_a_diffusion_simulation_handler.html</Path>
    <Anchor>ad5c1e8fb12d05ae0b40b8dbca0f7a422</Anchor>
    <DeclaredIn>CADiffusionSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Camera</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Abstract>Camera object. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Camera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a4b4dbbc0c49614d9ee6cef116cedd7bc</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>aa9c603ed3a0047c98a670480bcda8b51</Anchor>
    <Abstract>Sets position, target and up vector. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a0922ca991159fe5fc401bae15597230e</Anchor>
    <Abstract>Gets camera type. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a9e019f22770dd3dff66e399965d326f3</Anchor>
    <Abstract>Sets camera position. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a36cac1e98a3ea0be98b1813cba7f75e3</Anchor>
    <Abstract>Gets camera position. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTarget</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>ac9a741fa01ace6c9cf2723a56afac43c</Anchor>
    <Abstract>Sets camera target. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTarget</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a488bad48faaa17a0c1d2ba27bd6c19c6</Anchor>
    <Abstract>Gets camera target. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a6f0cf030cd4e0330bfa2b0abdb016267</Anchor>
    <Abstract>Sets camera up vector. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>aea0f9370d5b1662f8192f11030fe3af8</Anchor>
    <Abstract>Gets camera up vector. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRotationMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a921c85b3e42db5156f172387cd93b4b7</Anchor>
    <Abstract>Gets the camera rotation matrix. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a063a6910bde97fe29b7b31ada55e5c57</Anchor>
    <Abstract>Commits the changes held by the camera object so that attributes become available to the underlying r...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFieldOfView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>aa208347c05a1f47ae0562950547343bc</Anchor>
    <Abstract>The field of view is the extent of the observable world that is seen at any given moment...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFieldOfView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a60c233a5b53c7d8bbad0a88ea753fca9</Anchor>
    <Abstract>Set the field of view of the camera. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>aeda21b6f02421dedc266b992fbfe89a4</Anchor>
    <Abstract>Set the aspect ratio of the camera. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>afb30957156d54cefd98ba65c29638dc9</Anchor>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAperture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a9873a3ba6d6c346e4b5051a11b2ff748</Anchor>
    <Abstract>The aperture determines how collimated the admitted rays are, which is of great importance for the ap...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAperture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>add438a8d6757cc35d463e89bb213e768</Anchor>
    <Abstract>The aperture determines how collimated the admitted rays are, which is of great importance for the ap...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFocalLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>adb7e9f91916e49cd6d2a4370908c8a82</Anchor>
    <Abstract>The focal length of an optical system is a measure of how strongly the system converges or diverges l...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFocalLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a6fc8b59a7b5e13317810e3299f1928a4</Anchor>
    <Abstract>The focal length of an optical system is a measure of how strongly the system converges or diverges l...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStereoMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>aff5c0e3449b4dfc1d0359dcfd66994cb</Anchor>
    <Abstract>Sets the stereo mode of the camera (Left eye, Right eye or Side by Side) </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEyeSeparation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a6f4f1b8f69cbf91e671c68e055fb9f92</Anchor>
    <Abstract>Sets the eye separation of the stereo camera. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEyeSeparation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>ab637fd07f7b224e27e24136285eb6a12</Anchor>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a0378b8d85d011a5b524746f4e23e34e6</Anchor>
    <Abstract>Resets the camera to its initial values. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnvironmentMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>ab15da040b0164a18d30faed9740237b5</Anchor>
    <Abstract>Enable/disables environment mapping. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setClipPlanes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>ac5076f27474c37ab25469772802eb382</Anchor>
    <Abstract>Sets the camera clip planes. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getClipPlanes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>ac1a9f9761c247311992d156a49aef7fe</Anchor>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Chunk</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Chunk</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_chunk.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::CircuitConfiguration</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::CircuitConfiguration</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_circuit_configuration.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Cone</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Cone</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_cone.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ConnectivityConfiguration</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ConnectivityConfiguration</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_connectivity_configuration.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Cylinder</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Cylinder</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_cylinder.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::DeferredTask</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>brayns::DeferredTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_deferred_task.html</Path>
    <Abstract>A task type which allows for deferred scheduling after construction using schedule(). </Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>schedule</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::DeferredTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_deferred_task.html</Path>
    <Anchor>aa0c6a2de0df76b4bcf74c80413514bd0</Anchor>
    <Abstract>NOP for this task; tasks are running after construction. </Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Task</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>adb4c824ce065c30129e25c2973b5760b</Anchor>
    <Abstract>Create an empty task; use task() and async++ to do something meaningful. </Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Task</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>ac5558024a92ce91fe5c6d8cc3ffd84ee</Anchor>
    <Abstract>Create and schedule a task with the given functor or lambda. </Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>result</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>a9a6c0675ba8c6321bff7ffbf044fdc99</Anchor>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>aa4f761290010bd3a0c7a026629524042</Anchor>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cancel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>af1019fe39fea3201341ea4301186a911</Anchor>
    <Abstract>Cancels the task if is either waiting to be scheduled or already running. </Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finishCancel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a12c64d0b0aa5bc8916d656fbffd5e8dd</Anchor>
    <Abstract>Indicate that cancel processing has finished and call the function given to cancel(). </Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canceled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a108ebfd245dbddf0df673e9624702f1f</Anchor>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>progress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a9c4958935de14f9db7480e9bb3566735</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::DirectionalLight</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::DirectionalLight</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_directional_light.html</Path>
    <Abstract>Directional light. </Abstract>
    <DeclaredIn>DirectionalLight.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DirectionalLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::DirectionalLight</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_directional_light.html</Path>
    <Anchor>a104db0999b3e707e9c62b60f333e9708</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>DirectionalLight.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDirection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::DirectionalLight</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_directional_light.html</Path>
    <Anchor>a7b30ca18ef5beeb3ad887dfec000e28f</Anchor>
    <Abstract>Light source direction. </Abstract>
    <DeclaredIn>DirectionalLight.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Light</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_light.html</Path>
    <Anchor>ac418f89179bfb0698b73c001729d9423</Anchor>
    <Abstract>Light source RGB color. </Abstract>
    <DeclaredIn>Light.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIntensity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Light</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_light.html</Path>
    <Anchor>a7219ba01bccbf75a30e2be20b3f62fb7</Anchor>
    <Abstract>Light source intensity. </Abstract>
    <DeclaredIn>Light.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Engine</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Abstract>Abstract implementation of the ray-tracing engine. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Engine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a9b750d4a7b2e945f2f7cb0726540f27d</Anchor>
    <Abstract>Engine constructor. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>ae0c323db5ffc02b9c774038d2a3305a2</Anchor>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>aa0652f4c99164ea4127d8db5ad5fe502</Anchor>
    <Abstract>Commits changes to the engine. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>addcc1b550a6783cf5ea893a58cdc4faa</Anchor>
    <Abstract>Renders the current scene and populates the frame buffer accordingly. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preRender</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>ae4df6a7c3480fd5a2c99d2669d7ddbee</Anchor>
    <Abstract>Executes engine specific pre-render operations. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postRender</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a75dcc0f335ea1f2b268d0085ad2f4ce1</Anchor>
    <Abstract>Executes engine specific post-render operations. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScene</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>aa7447c013f31279eecf99d3420ce641d</Anchor>
    <Abstract>Gets the scene. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a651d4f6e12e6f6ea73089150ee37b8b0</Anchor>
    <Abstract>Gets the frame buffer. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCamera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a05478fdf6ae8dd3b0716bc8be93c83f9</Anchor>
    <Abstract>Gets the camera. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>af961a55c58767fdc61b67497abcbf7bb</Anchor>
    <Abstract>Gets the renderer. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setActiveRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a65a906caa0f052f74d57a646d7457a05</Anchor>
    <Abstract>Active renderer. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reshape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a840980ce1525d0e767140ca591deafb0</Anchor>
    <Abstract>Reshapes the current frame buffers. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultEpsilon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a09847c925ccc8aa4c98a2b5a7d7f1fec</Anchor>
    <Abstract>Sets default epsilon to scene bounding box. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultCamera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a206d534f22b8265dd2d9c5d335980487</Anchor>
    <Abstract>Sets initial camera position for the scene handled by the engine. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeMaterials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a4d39c844e28b872a2513edf2df42f9c0</Anchor>
    <Abstract>Initializes materials for the current scene. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>markRebuildScene</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a3371ca3d62222ab1c91e3f9aec744a2e</Anchor>
    <Abstract>Mark the scene for building with Brayns::buildScene(). </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rebuildScene</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a3efab35bba64eda0a9e384b8dc246518</Anchor>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSupportedFrameSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a5dc71a22ec526b9792836221b2832be0</Anchor>
    <Abstract>Adapts the size of the frame buffer according to camera requirements. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinimumFrameSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>aa8ae6d776485d6b2275cc16fb1032e2f</Anchor>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>haveDeflectPixelOp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a49c13d75aac81d4ce47e50ceb95a7b1a</Anchor>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setKeepRunning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a9eeb56f21e8fc9c34eb926f6d706a546</Anchor>
    <Abstract>Keep continue to run the engine, aka the user did not request to stop rendering. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKeepRunning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a415ac09f74a17fd73e3b6b616d2d8a11</Anchor>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>continueRendering</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a84b7fb62801d98aa94c325dc8f725313</Anchor>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a3ad20ce149c67448d40110da4f573f35</Anchor>
    <Abstract>Factory method to create an engine-specific framebuffer. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createCamera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a193b3610b6a3db0a4cfd425ce541ad4e</Anchor>
    <Abstract>Factory method to create an engine-specific camera. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>triggerRender</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>acc472e64b447113d098d54273244f4b6</Anchor>
    <Abstract>Callback when a new frame shall be triggered. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Exception</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Exception</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_exception.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ExtensionPlugin</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ExtensionPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_extension_plugin.html</Path>
    <Abstract>Defines the abstract representation of an extension plug-in. </Abstract>
    <DeclaredIn>ExtensionPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preRender</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ExtensionPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_extension_plugin.html</Path>
    <Anchor>a67dab4a796a7de090ff4c28e8be39bc9</Anchor>
    <Abstract>Called from Brayns::preRender() to prepare the engine based on the plugins&amp;#39; need for an upcoming rend...</Abstract>
    <DeclaredIn>ExtensionPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postRender</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ExtensionPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_extension_plugin.html</Path>
    <Anchor>a6e17e99715fadee1d5a883168b3c9764</Anchor>
    <Abstract>Called from Brayns::postRender() after render() has finished. </Abstract>
    <DeclaredIn>ExtensionPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postSceneLoading</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ExtensionPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_extension_plugin.html</Path>
    <Anchor>af59d228813c5942cbebed2a01a7366df</Anchor>
    <Abstract>Called after scene has finished loading. </Abstract>
    <DeclaredIn>ExtensionPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::FlyingModeManipulator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::FlyingModeManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_flying_mode_manipulator.html</Path>
    <Abstract>Defines a flying mode camera manipulator, like in a flight simulator. </Abstract>
    <DeclaredIn>FlyingModeManipulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_camera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>aae08537e81adbbd7275c7d6fd9ec8ed6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_keyboardHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>a1ddb4ed7cefbbb93422d8f26b5911245</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_motionSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>a3b110bb323f6163f82855d55c32ff177</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rotationSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>ac0ee65066a75352e0c5f550e1b1a0cd6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::FrameBuffer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::FrameBuffer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_frame_buffer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::GeometryParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Abstract>Manages geometry parameters. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GeometryParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a96a7875f7d452448da35b193921725dc</Anchor>
    <Abstract>Parse the command line parameters and populates according class members. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a8c92a909fef870a14d015a6e838f3f63</Anchor>
    <Abstract>Displays values of registered parameters. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNESTCircuit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a8d41febca2bc5337b30fe13eaed3a395</Anchor>
    <Abstract>getNESTCircuit </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCircuitConfiguration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a9c638f145833504619e4b2ef89452c57</Anchor>
    <Abstract>file containing circuit configuration </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLoadCacheFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a4074a7994afbeddbf8d96cf4786a3f0b</Anchor>
    <Abstract>Binary representation of a scene to load. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSaveCacheFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a714f28f1069bc6ea579b96300214f23f</Anchor>
    <Abstract>Binary representation of a scene to save. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCircuitTargets</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a25a7829d755ede1f39504a3d1480f85b</Anchor>
    <Abstract>Circuit targets. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCircuitReport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a5e8e6c69f07fa54bcb6a9f6b3d68e190</Anchor>
    <Abstract>Circuit compartment report. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCircuitMeshFolder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a1b417a74dbc460c91c08fec66a3073a0</Anchor>
    <Abstract>Defines the folder where morphologies meshes are stored. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCircuitDensity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a997c8833a1dbc94925bf051f4bd25292</Anchor>
    <Abstract>ensity of cells in the circuit in percent (Mainly for testing purposes) </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCircuitBoundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a2959b208a4b8af1d1114dd2c7db9cab2</Anchor>
    <Abstract>Defines a bounding box outside of which geometry of a circuit will not be loaded. ...</Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCircuitUseSimulationModel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a8030ea887fe8686908ed37f5f3c2885b</Anchor>
    <Abstract>Defines if a different model is used to handle the simulation geometry. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCircuitMeshFilenamePattern</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>abfd90a72db2701ab4cc8fbef0906d2ea</Anchor>
    <Abstract>Return the filename pattern use to load meshes. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRadiusMultiplier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a39e145c39048b4ae3c8be29999bb89a4</Anchor>
    <Abstract>Radius multiplier applied to spheres, cones and cylinders. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRadiusCorrection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a6bbfa8e688f9395347b8d3d535b93834</Anchor>
    <Abstract>Radius correction applied to spheres and cylinders. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getColorScheme</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a0cefb9cea6665e61900ebc08846bc6e3</Anchor>
    <Abstract>Enables a different color for every molecule/morphology/mesh when loading them from a given folder...</Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSceneEnvironment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a685b7032dd4e7aefadd50cf751f88c6d</Anchor>
    <Abstract>Scene environment (none, ground, wall, bounding_box ) </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGeometryQuality</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a30dd81996271f03f798942c4d69703ec</Anchor>
    <Abstract>Morphology quality. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMorphologySectionTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a8e659f352d620e67764b3721aa478934</Anchor>
    <Abstract>Morphology section types. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMorphologyLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a6ff28e9ddeb7faf36d074fd7538a7a80</Anchor>
    <Abstract>Morphology layout. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCircuitEndSimulationTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a81db92e082e45cf5f00eaf82bf46b2a6</Anchor>
    <Abstract>Defines the range of frames to be loaded for the simulation. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCircuitSimulationHistogramSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>afced4e2eecd722d9e420ff31f39310cb</Anchor>
    <Abstract>Size of the simulation histogram. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCircuitMeshTransformation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>af79071ad6af5da63b76f6117c7abe56f</Anchor>
    <Abstract>Size of the simulation histogram. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMolecularSystemConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>ab144d6cb2cc77c85b4f5b796e4c4c9b9</Anchor>
    <Abstract>Biological assembly. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMetaballsGridSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>af08fd8f25c3ad8caf65c121fad5c5419</Anchor>
    <Abstract>Metaballs grid size. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMetaballsThreshold</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>aa81c5eec8288be8852085101d48d9832</Anchor>
    <Abstract>Metaballs threshold. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMetaballsSamplesFromSoma</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>ac1a28b8320f3b27633cdc5621f259ae8</Anchor>
    <Abstract>Metaballs samples from soma. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useRealisticSomas</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a8c7aa469406719775f1eb2fac2f69c6f</Anchor>
    <Abstract>Realistic somas enabled? </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMemoryMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a42ed816fb28e78cdb9322c70f1ac4ff4</Anchor>
    <Abstract>Defines what memory mode should be used between Brayns and the underlying renderer. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConnectivityFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>af8614f2d05738dee69214ddfd5210ebb</Anchor>
    <Abstract>File containing neuron matrix. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConnectivityMatrixId</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a122db9f9390dcb43ef795b7e3acbdca4</Anchor>
    <Abstract>Matrix id. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConnectivityShowConnections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a391e6ba87925bc3ba707ae4548814888</Anchor>
    <Abstract>Show/Hide connection in matrix. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConnectivityDimensionRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a2e7b32f2d5b62c5e6f60dbd2b169e24d</Anchor>
    <Abstract>Range of dimensions. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConnectivityScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>ac44939931c5fcb349040dbb3bb39c4eb</Anchor>
    <Abstract>Range of dimensions. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>af8c4e3e33c6d75a71893d7d48f0e4fec</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a73ac7de16c966b974774c339df0cc881</Anchor>
    <Abstract>Parses parameters managed by the class. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Histogram</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Histogram</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_histogram.html</Path>
    <Abstract>The Histogram struct contains the range as well as the values of the simulation histogram for a given...</Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ImageManager</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ImageManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_image_manager.html</Path>
    <Abstract>The ImageManager class uses the ImageMagick++ libray to manipulate images. </Abstract>
    <DeclaredIn>ImageManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exportFrameBufferToFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::ImageManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_image_manager.html</Path>
    <Anchor>a839c00f53751fd524c2ac4d8c1d1bf24</Anchor>
    <Abstract>Exports the contents of a frame buffer to a file. </Abstract>
    <DeclaredIn>ImageManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importTextureFromFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::ImageManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_image_manager.html</Path>
    <Anchor>a99321a976fee5f2efddd773066b2a55d</Anchor>
    <Abstract>Import a Texture from file. </Abstract>
    <DeclaredIn>ImageManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::InspectCenterManipulator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::InspectCenterManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_inspect_center_manipulator.html</Path>
    <Abstract>Camera manipulator to rotate and zoom around a central point. </Abstract>
    <DeclaredIn>InspectCenterManipulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_camera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>aae08537e81adbbd7275c7d6fd9ec8ed6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_keyboardHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>a1ddb4ed7cefbbb93422d8f26b5911245</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_motionSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>a3b110bb323f6163f82855d55c32ff177</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rotationSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>ac0ee65066a75352e0c5f550e1b1a0cd6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::KeyboardHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::KeyboardHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_keyboard_handler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Light</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Light</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_light.html</Path>
    <Abstract>Light object. </Abstract>
    <DeclaredIn>Light.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Light</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_light.html</Path>
    <Anchor>ac418f89179bfb0698b73c001729d9423</Anchor>
    <Abstract>Light source RGB color. </Abstract>
    <DeclaredIn>Light.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIntensity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Light</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_light.html</Path>
    <Anchor>a7219ba01bccbf75a30e2be20b3f62fb7</Anchor>
    <Abstract>Light source intensity. </Abstract>
    <DeclaredIn>Light.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Loader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Loader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader.html</Path>
    <Abstract>A base class for data loaders to unify loading data from blobs and files, and provide progress feedba...</Abstract>
    <DeclaredIn>Loader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UpdateCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brayns::Loader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader.html</Path>
    <Anchor>a59c6fb7227bfb5cd353d10b7306573e8</Anchor>
    <Abstract>The callback for each progress update with the signature (message, fraction of progress in 0...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importFromBlob</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Loader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader.html</Path>
    <Anchor>af999f38f667c81b601dd1da6f2fea5c4</Anchor>
    <Abstract>Import the data from the blob and return the created model. </Abstract>
    <DeclaredIn>Loader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importFromFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Loader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader.html</Path>
    <Anchor>a77df9331ed63d00c30f0ae1486d5fa4c</Anchor>
    <Abstract>Import the data from the given file and return the created model. </Abstract>
    <DeclaredIn>Loader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProgressCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Loader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader.html</Path>
    <Anchor>ac957d6047e9738bd7995827825024771</Anchor>
    <Abstract>Set a new callback function which is called on each updateProgress(). </Abstract>
    <DeclaredIn>Loader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateProgress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Loader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader.html</Path>
    <Anchor>a0618feaaee1cefc7a2ae781513f1646e</Anchor>
    <Abstract>Update the current progress of an operation. </Abstract>
    <DeclaredIn>Loader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::LoaderRegistry</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::LoaderRegistry</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader_registry.html</Path>
    <Abstract>Holds information about registered loaders and helps invoking the appropriate loader for a given blob...</Abstract>
    <DeclaredIn>LoaderRegistry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerLoader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LoaderRegistry</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader_registry.html</Path>
    <Anchor>a9f965b62e7ea55f296e921c58e81d062</Anchor>
    <Abstract>Register the given loader. </Abstract>
    <DeclaredIn>LoaderRegistry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSupported</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LoaderRegistry</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader_registry.html</Path>
    <Anchor>a0b906f66a2a61c3cee2b04d6877e3b32</Anchor>
    <DeclaredIn>LoaderRegistry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportedTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LoaderRegistry</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader_registry.html</Path>
    <Anchor>a44b725bbc98952a99e69feb9fb362820</Anchor>
    <DeclaredIn>LoaderRegistry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createLoader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LoaderRegistry</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader_registry.html</Path>
    <Anchor>a8691c54eefd2046b9c717094d60dd121</Anchor>
    <Abstract>Create a loader that can load the given type (from blob or filename). </Abstract>
    <DeclaredIn>LoaderRegistry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LoaderRegistry</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader_registry.html</Path>
    <Anchor>af7043cedcdd7a515ca26c9bad3720918</Anchor>
    <Abstract>Load the given file or folder into the given scene by choosing the first matching loader based on the...</Abstract>
    <DeclaredIn>LoaderRegistry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::LoaderRegistry::LoaderInfo</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::LoaderRegistry::LoaderInfo</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_loader_registry_1_1_loader_info.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportedTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::LoaderRegistry::LoaderInfo</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_loader_registry_1_1_loader_info.html</Path>
    <Anchor>a55a2aff0dc2f65cc3fd2ca6f6a66f8c1</Anchor>
    <Abstract>The function that returns the supported types (extension, filename patterns) of the loader...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createLoader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::LoaderRegistry::LoaderInfo</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_loader_registry_1_1_loader_info.html</Path>
    <Anchor>a71049e352f80543c166129fc8b153885</Anchor>
    <Abstract>The function to create the loader. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::LoadModelFunctor</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::LoadModelFunctor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_load_model_functor.html</Path>
    <Abstract>A task functor which loads data from blob or file path and adds the loaded data to the scene...</Abstract>
    <DeclaredIn>LoadModelFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProgressFunc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::TaskFunctor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task_functor.html</Path>
    <Anchor>ad8283ae7984fbd41e7d5e61e57238ad3</Anchor>
    <Abstract>Set the function when progress() is called. </Abstract>
    <DeclaredIn>TaskFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>progress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::TaskFunctor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task_functor.html</Path>
    <Anchor>a0dab436f8eb57c24de929b894069f2cd</Anchor>
    <Abstract>Report progress using the provided callback from setProgressFunc() and also check if the execution ha...</Abstract>
    <DeclaredIn>TaskFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCancelToken</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::TaskFunctor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task_functor.html</Path>
    <Anchor>a0463073aa21dd20ffa10309757d2e52b</Anchor>
    <Abstract>Set the cancel token from e.g. </Abstract>
    <DeclaredIn>TaskFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cancelCheck</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::TaskFunctor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task_functor.html</Path>
    <Anchor>ac32d29d096272b4f62383f83eaae88e4</Anchor>
    <Abstract>Checks if the execution has been cancelled. </Abstract>
    <DeclaredIn>TaskFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProgressFunc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brayns::TaskFunctor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task_functor.html</Path>
    <Anchor>af5ae54477aeecf3b89c696867171a980</Anchor>
    <Abstract>message, increment, amount </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Material</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Material</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_material.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Material</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_material.html</Path>
    <Anchor>a09778f0633b347188536eeb0c9634761</Anchor>
    <Abstract>Called after material change. </Abstract>
    <DeclaredIn>Material.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::MeshLoader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::MeshLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_mesh_loader.html</Path>
    <Abstract>Loads meshes from files using the assimp library http://assimp.sourceforge.net. </Abstract>
    <DeclaredIn>MeshLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importFromFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::MeshLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_mesh_loader.html</Path>
    <Anchor>a0fdd0c3ab458eb01ed2a2ed42c524e86</Anchor>
    <Abstract>Import the data from the given file and return the created model. </Abstract>
    <DeclaredIn>MeshLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importFromBlob</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::MeshLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_mesh_loader.html</Path>
    <Anchor>aed54433b85129c7e78029f3baa6a8fbd</Anchor>
    <Abstract>Import the data from the blob and return the created model. </Abstract>
    <DeclaredIn>MeshLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMeshFilenameFromGID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::MeshLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_mesh_loader.html</Path>
    <Anchor>ac331f9fc5f4796c5175e9b092f3b366d</Anchor>
    <Abstract>getMeshFilenameFromGID Returns the name of the mesh file according to the –circuit-mesh-folder, –circuit-mesh-filename-pattern command line arguments and a GID </Abstract>
    <DeclaredIn>MeshLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProgressCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Loader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader.html</Path>
    <Anchor>ac957d6047e9738bd7995827825024771</Anchor>
    <Abstract>Set a new callback function which is called on each updateProgress(). </Abstract>
    <DeclaredIn>Loader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateProgress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Loader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader.html</Path>
    <Anchor>a0618feaaee1cefc7a2ae781513f1646e</Anchor>
    <Abstract>Update the current progress of an operation. </Abstract>
    <DeclaredIn>Loader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UpdateCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brayns::Loader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader.html</Path>
    <Anchor>a59c6fb7227bfb5cd353d10b7306573e8</Anchor>
    <Abstract>The callback for each progress update with the signature (message, fraction of progress in 0...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::MetaballsGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::MetaballsGenerator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_metaballs_generator.html</Path>
    <Abstract>Generated a mesh according to given set of metaballs. </Abstract>
    <DeclaredIn>MetaballsGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateMesh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::MetaballsGenerator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_metaballs_generator.html</Path>
    <Anchor>a8377721da02038259ab534e4337f95f8</Anchor>
    <Abstract>Generates a triangle based mesh model according to provided metaballs, grid granularity and threshold...</Abstract>
    <DeclaredIn>MetaballsGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Model</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Abstract>The abstract Model class holds the geometry attached to an asset of the scene (mesh, circuit, volume, etc). </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>empty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>aa686c6b25b25c7664f2a020c0b5d4f3a</Anchor>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>af459e225d811eb15f2a52b03a7a0d64d</Anchor>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBounds</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>ae43809af76609c7d87f1d12b1dae385d</Anchor>
    <Abstract>Returns the bounds for the Model. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSpheres</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a26c668d1fd31350700654ee3853d2f0b</Anchor>
    <Abstract>Returns spheres handled by the Model. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSphere</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a850d89a566652c7194081aae85773aa7</Anchor>
    <Abstract>Adds a sphere to the model. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCylinders</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a661a78b3060a811b6f53ddde23085430</Anchor>
    <Abstract>Returns cylinders handled by the model. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addCylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a11568ec350edbaa36305f927e1eb2178</Anchor>
    <Abstract>Adds a cylinder to the model. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCones</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>ae00997d5d60dfdad6d4230e865c3d7f8</Anchor>
    <Abstract>Returns cones handled by the model. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addCone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a3d2d006a3ee2f20a1ac875faa7039e83</Anchor>
    <Abstract>Adds a cone to the model. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSDFGeometry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a884fb214767b5ca7700e05e49d66f615</Anchor>
    <Abstract>Adds a SDFGeometry to the scene. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateSDFGeometryNeighbours</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>ad81368b78bef55126b476fc3bc439557</Anchor>
    <Abstract>Update the list of neighbours for a SDF geometry. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTrianglesMeshes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a98411416e2520f56676805606102f46b</Anchor>
    <Abstract>Returns triangle meshes handled by the model. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logInformation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>ab0edfc4d1a5f0ca5ae2a66ea5a51b59d</Anchor>
    <Abstract>logInformation Logs information about the model, like the number of primitives, and the associated me...</Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaterialsColorMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a22b6060a15871d0a6a16d6f2a1e9a897</Anchor>
    <Abstract>Sets the materials handled by the model, and available to the geometry. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMaterial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a0156b8880c15bda28f3610fc36947f7c</Anchor>
    <Abstract>Factory method to create an engine-specific material. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMissingMaterials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a560bb63289ddf5e2aa4e8bf717aff7bf</Anchor>
    <Abstract>createMissingMaterials Checks that all materials exist for existing geometry in the model...</Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaterials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a42395676f75406327be584ce89e1f296</Anchor>
    <Abstract>getMaterials Returns a reference to the map of materials handled by the model </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaterial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a857aaf14d279e72aa3f1c2d640b70847</Anchor>
    <Abstract>getMaterial Returns a pointer to a specific material </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSizeInBytes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a029cbe6154b1ca5903486132c414cfe5</Anchor>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Model::SDFGeometryData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Model::SDFGeometryData</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_model_1_1_s_d_f_geometry_data.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ModelDescriptor</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ModelDescriptor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model_descriptor.html</Path>
    <Abstract>The ModelDescriptor struct defines the metadata attached to a model. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ModelInstance</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ModelInstance</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model_instance.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ModelParams</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ModelParams</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model_params.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::MolecularSystemReader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::MolecularSystemReader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_molecular_system_reader.html</Path>
    <Abstract>The MolecularSystemReader class loads proteins and meshes according to parameters defined in a Molecu...</Abstract>
    <DeclaredIn>MolecularSystemReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importFromFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::MolecularSystemReader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_molecular_system_reader.html</Path>
    <Anchor>a1b9706ad363deea7ecdbfa07d0e0fa20</Anchor>
    <Abstract>Import the data from the given file and return the created model. </Abstract>
    <DeclaredIn>MolecularSystemReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importFromBlob</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::MolecularSystemReader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_molecular_system_reader.html</Path>
    <Anchor>a4be9b5d2d11fb693a32b7a1ec3549597</Anchor>
    <Abstract>Import the data from the blob and return the created model. </Abstract>
    <DeclaredIn>MolecularSystemReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProgressCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Loader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader.html</Path>
    <Anchor>ac957d6047e9738bd7995827825024771</Anchor>
    <Abstract>Set a new callback function which is called on each updateProgress(). </Abstract>
    <DeclaredIn>Loader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateProgress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Loader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader.html</Path>
    <Anchor>a0618feaaee1cefc7a2ae781513f1646e</Anchor>
    <Abstract>Update the current progress of an operation. </Abstract>
    <DeclaredIn>Loader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UpdateCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brayns::Loader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader.html</Path>
    <Anchor>a59c6fb7227bfb5cd353d10b7306573e8</Anchor>
    <Abstract>The callback for each progress update with the signature (message, fraction of progress in 0...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::MorphologyLayout</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::MorphologyLayout</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_morphology_layout.html</Path>
    <Abstract>Defines how morphologies should be organized in space when the layout mode is selected. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::OSPRayCamera</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::OSPRayCamera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_camera.html</Path>
    <Abstract>OPSRAY specific camera. </Abstract>
    <DeclaredIn>OSPRayCamera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayCamera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_camera.html</Path>
    <Anchor>a4d0d1cd0dc21287c004888322417da9f</Anchor>
    <Abstract>Commits the changes held by the camera object so that attributes become available to the OSPRay rende...</Abstract>
    <DeclaredIn>OSPRayCamera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>impl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayCamera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_camera.html</Path>
    <Anchor>a5790eff76579edc1639f952921a24a11</Anchor>
    <Abstract>Gets the OSPRay implementation of the camera object. </Abstract>
    <DeclaredIn>OSPRayCamera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnvironmentMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayCamera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_camera.html</Path>
    <Anchor>ab0b292441fd978c5a3f98285e6d70249</Anchor>
    <Abstract>Enable/disables environment mapping. </Abstract>
    <DeclaredIn>OSPRayCamera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Camera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a4b4dbbc0c49614d9ee6cef116cedd7bc</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>aa9c603ed3a0047c98a670480bcda8b51</Anchor>
    <Abstract>Sets position, target and up vector. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a0922ca991159fe5fc401bae15597230e</Anchor>
    <Abstract>Gets camera type. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a9e019f22770dd3dff66e399965d326f3</Anchor>
    <Abstract>Sets camera position. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a36cac1e98a3ea0be98b1813cba7f75e3</Anchor>
    <Abstract>Gets camera position. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTarget</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>ac9a741fa01ace6c9cf2723a56afac43c</Anchor>
    <Abstract>Sets camera target. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTarget</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a488bad48faaa17a0c1d2ba27bd6c19c6</Anchor>
    <Abstract>Gets camera target. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a6f0cf030cd4e0330bfa2b0abdb016267</Anchor>
    <Abstract>Sets camera up vector. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>aea0f9370d5b1662f8192f11030fe3af8</Anchor>
    <Abstract>Gets camera up vector. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRotationMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a921c85b3e42db5156f172387cd93b4b7</Anchor>
    <Abstract>Gets the camera rotation matrix. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFieldOfView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>aa208347c05a1f47ae0562950547343bc</Anchor>
    <Abstract>The field of view is the extent of the observable world that is seen at any given moment...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFieldOfView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a60c233a5b53c7d8bbad0a88ea753fca9</Anchor>
    <Abstract>Set the field of view of the camera. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>aeda21b6f02421dedc266b992fbfe89a4</Anchor>
    <Abstract>Set the aspect ratio of the camera. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>afb30957156d54cefd98ba65c29638dc9</Anchor>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAperture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a9873a3ba6d6c346e4b5051a11b2ff748</Anchor>
    <Abstract>The aperture determines how collimated the admitted rays are, which is of great importance for the ap...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAperture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>add438a8d6757cc35d463e89bb213e768</Anchor>
    <Abstract>The aperture determines how collimated the admitted rays are, which is of great importance for the ap...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFocalLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>adb7e9f91916e49cd6d2a4370908c8a82</Anchor>
    <Abstract>The focal length of an optical system is a measure of how strongly the system converges or diverges l...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFocalLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a6fc8b59a7b5e13317810e3299f1928a4</Anchor>
    <Abstract>The focal length of an optical system is a measure of how strongly the system converges or diverges l...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStereoMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>aff5c0e3449b4dfc1d0359dcfd66994cb</Anchor>
    <Abstract>Sets the stereo mode of the camera (Left eye, Right eye or Side by Side) </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEyeSeparation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a6f4f1b8f69cbf91e671c68e055fb9f92</Anchor>
    <Abstract>Sets the eye separation of the stereo camera. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEyeSeparation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>ab637fd07f7b224e27e24136285eb6a12</Anchor>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a0378b8d85d011a5b524746f4e23e34e6</Anchor>
    <Abstract>Resets the camera to its initial values. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setClipPlanes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>ac5076f27474c37ab25469772802eb382</Anchor>
    <Abstract>Sets the camera clip planes. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getClipPlanes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>ac1a9f9761c247311992d156a49aef7fe</Anchor>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::OSPRayEngine</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::OSPRayEngine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_engine.html</Path>
    <Abstract>OSPRay implementation of the ray-tracing engine. </Abstract>
    <DeclaredIn>OSPRayEngine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayEngine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_engine.html</Path>
    <Anchor>a7c9f310f686fe062947b3320672b1b3f</Anchor>
    <DeclaredIn>OSPRayEngine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayEngine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_engine.html</Path>
    <Anchor>a03db1cc79ac850a139d4f3e1730340b0</Anchor>
    <Abstract>Commits changes to the engine. </Abstract>
    <DeclaredIn>OSPRayEngine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preRender</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayEngine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_engine.html</Path>
    <Anchor>a8013acb4c26a1f64da41a055035dcd78</Anchor>
    <Abstract>Executes engine specific pre-render operations. </Abstract>
    <DeclaredIn>OSPRayEngine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSupportedFrameSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayEngine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_engine.html</Path>
    <Anchor>a879bc415aecede0e68ed6e6b60406886</Anchor>
    <Abstract>Constrain size to multiples of the OSPRay tile size in case of streaming using the DeflectPixelOp...</Abstract>
    <DeclaredIn>OSPRayEngine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinimumFrameSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayEngine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_engine.html</Path>
    <Anchor>ab95e9bb89f2c5b0f9aa734b56789d415</Anchor>
    <DeclaredIn>OSPRayEngine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>haveDeflectPixelOp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayEngine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_engine.html</Path>
    <Anchor>a6b0edc0c82065dda0378b57113f329d9</Anchor>
    <DeclaredIn>OSPRayEngine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayEngine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_engine.html</Path>
    <Anchor>a289a41199522b39287c056f8e5d72662</Anchor>
    <Abstract>Factory method to create an engine-specific framebuffer. </Abstract>
    <DeclaredIn>OSPRayEngine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createCamera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayEngine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_engine.html</Path>
    <Anchor>a7d59b2ca3678537687311fc8e0096293</Anchor>
    <Abstract>Factory method to create an engine-specific camera. </Abstract>
    <DeclaredIn>OSPRayEngine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Engine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a9b750d4a7b2e945f2f7cb0726540f27d</Anchor>
    <Abstract>Engine constructor. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>addcc1b550a6783cf5ea893a58cdc4faa</Anchor>
    <Abstract>Renders the current scene and populates the frame buffer accordingly. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postRender</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a75dcc0f335ea1f2b268d0085ad2f4ce1</Anchor>
    <Abstract>Executes engine specific post-render operations. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScene</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>aa7447c013f31279eecf99d3420ce641d</Anchor>
    <Abstract>Gets the scene. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a651d4f6e12e6f6ea73089150ee37b8b0</Anchor>
    <Abstract>Gets the frame buffer. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCamera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a05478fdf6ae8dd3b0716bc8be93c83f9</Anchor>
    <Abstract>Gets the camera. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>af961a55c58767fdc61b67497abcbf7bb</Anchor>
    <Abstract>Gets the renderer. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setActiveRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a65a906caa0f052f74d57a646d7457a05</Anchor>
    <Abstract>Active renderer. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reshape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a840980ce1525d0e767140ca591deafb0</Anchor>
    <Abstract>Reshapes the current frame buffers. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultEpsilon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a09847c925ccc8aa4c98a2b5a7d7f1fec</Anchor>
    <Abstract>Sets default epsilon to scene bounding box. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultCamera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a206d534f22b8265dd2d9c5d335980487</Anchor>
    <Abstract>Sets initial camera position for the scene handled by the engine. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeMaterials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a4d39c844e28b872a2513edf2df42f9c0</Anchor>
    <Abstract>Initializes materials for the current scene. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>markRebuildScene</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a3371ca3d62222ab1c91e3f9aec744a2e</Anchor>
    <Abstract>Mark the scene for building with Brayns::buildScene(). </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rebuildScene</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a3efab35bba64eda0a9e384b8dc246518</Anchor>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setKeepRunning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a9eeb56f21e8fc9c34eb926f6d706a546</Anchor>
    <Abstract>Keep continue to run the engine, aka the user did not request to stop rendering. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKeepRunning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a415ac09f74a17fd73e3b6b616d2d8a11</Anchor>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>continueRendering</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a84b7fb62801d98aa94c325dc8f725313</Anchor>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>triggerRender</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>acc472e64b447113d098d54273244f4b6</Anchor>
    <Abstract>Callback when a new frame shall be triggered. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::OSPRayFrameBuffer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::OSPRayFrameBuffer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_frame_buffer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::OSPRayMaterial</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::OSPRayMaterial</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_material.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayMaterial</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_material.html</Path>
    <Anchor>a300f18d4b35e631d525e27450f8ad53a</Anchor>
    <Abstract>Called after material change. </Abstract>
    <DeclaredIn>OSPRayMaterial.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::OSPRayModel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::OSPRayModel</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_model.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMaterial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayModel</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_model.html</Path>
    <Anchor>a3581e95c6264bcc1913712773bec4fc6</Anchor>
    <Abstract>Factory method to create an engine-specific material. </Abstract>
    <DeclaredIn>OSPRayModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>empty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>aa686c6b25b25c7664f2a020c0b5d4f3a</Anchor>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>af459e225d811eb15f2a52b03a7a0d64d</Anchor>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBounds</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>ae43809af76609c7d87f1d12b1dae385d</Anchor>
    <Abstract>Returns the bounds for the Model. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSpheres</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a26c668d1fd31350700654ee3853d2f0b</Anchor>
    <Abstract>Returns spheres handled by the Model. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSphere</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a850d89a566652c7194081aae85773aa7</Anchor>
    <Abstract>Adds a sphere to the model. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCylinders</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a661a78b3060a811b6f53ddde23085430</Anchor>
    <Abstract>Returns cylinders handled by the model. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addCylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a11568ec350edbaa36305f927e1eb2178</Anchor>
    <Abstract>Adds a cylinder to the model. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCones</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>ae00997d5d60dfdad6d4230e865c3d7f8</Anchor>
    <Abstract>Returns cones handled by the model. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addCone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a3d2d006a3ee2f20a1ac875faa7039e83</Anchor>
    <Abstract>Adds a cone to the model. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSDFGeometry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a884fb214767b5ca7700e05e49d66f615</Anchor>
    <Abstract>Adds a SDFGeometry to the scene. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateSDFGeometryNeighbours</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>ad81368b78bef55126b476fc3bc439557</Anchor>
    <Abstract>Update the list of neighbours for a SDF geometry. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTrianglesMeshes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a98411416e2520f56676805606102f46b</Anchor>
    <Abstract>Returns triangle meshes handled by the model. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logInformation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>ab0edfc4d1a5f0ca5ae2a66ea5a51b59d</Anchor>
    <Abstract>logInformation Logs information about the model, like the number of primitives, and the associated me...</Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaterialsColorMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a22b6060a15871d0a6a16d6f2a1e9a897</Anchor>
    <Abstract>Sets the materials handled by the model, and available to the geometry. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMissingMaterials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a560bb63289ddf5e2aa4e8bf717aff7bf</Anchor>
    <Abstract>createMissingMaterials Checks that all materials exist for existing geometry in the model...</Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaterials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a42395676f75406327be584ce89e1f296</Anchor>
    <Abstract>getMaterials Returns a reference to the map of materials handled by the model </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaterial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a857aaf14d279e72aa3f1c2d640b70847</Anchor>
    <Abstract>getMaterial Returns a pointer to a specific material </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSizeInBytes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a029cbe6154b1ca5903486132c414cfe5</Anchor>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::OSPRayRenderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::OSPRayRenderer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_renderer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVariance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayRenderer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_renderer.html</Path>
    <Anchor>a0cf1becca27646545363789aa5ed9d7f</Anchor>
    <DeclaredIn>OSPRayRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::OSPRayScene</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::OSPRayScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_scene.html</Path>
    <Abstract>OSPRay specific scene. </Abstract>
    <DeclaredIn>OSPRayScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_scene.html</Path>
    <Anchor>a8178ceb54f910c39059b1888f8de8ba3</Anchor>
    <Abstract>Called after scene-related changes have been made before rendering the scene. </Abstract>
    <DeclaredIn>OSPRayScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitLights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_scene.html</Path>
    <Anchor>a9480b03927f23195e6ca1a0ad6f16cd1</Anchor>
    <Abstract>Commits lights to renderers. </Abstract>
    <DeclaredIn>OSPRayScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitSimulationData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_scene.html</Path>
    <Anchor>a9e0681a7603fbec2f8e9ca4284137b28</Anchor>
    <Abstract>Commits simulation data to renderers. </Abstract>
    <DeclaredIn>OSPRayScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitVolumeData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_scene.html</Path>
    <Anchor>a94d873e266c0cb3b17a4791d07bafea7</Anchor>
    <Abstract>Commits volume data to renderers. </Abstract>
    <DeclaredIn>OSPRayScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitTransferFunctionData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_scene.html</Path>
    <Anchor>afb35ff0103c2b8472a66ace60452c8e5</Anchor>
    <Abstract>Commits transfer function data to renderers. </Abstract>
    <DeclaredIn>OSPRayScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isVolumeSupported</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_scene.html</Path>
    <Anchor>ae4904bea5fbd897256145650bfbebbe2</Anchor>
    <DeclaredIn>OSPRayScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Scene</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a6d329a3d29fa2950da8ab1fc8e73738b</Anchor>
    <Abstract>Creates a scene object responsible for handling geometry, volumes, materials and light sources...</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBounds</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a7d531db1a51d4dbd9f21c9e740806b7d</Anchor>
    <Abstract>Returns the bounding box of the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a7d89afe05548c882153522a0a4f751ac</Anchor>
    <Abstract>Attaches a light source to the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>aa918d868eaed44684a990f669b333249</Anchor>
    <Abstract>Gets a light source from the scene for a given index. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a681a8a7e95f279226a0ac02f2b8f4201</Anchor>
    <Abstract>Removes a light source from the scene for a given index. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearLights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a922c519f4acc99228313732f25ee5ec6</Anchor>
    <Abstract>Removes all light sources from the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addModel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ae7ff498e3f3fa699b087577959af8f5a</Anchor>
    <Abstract>Adds a model to the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeModel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a584399067b238f719a1d0d6ad2460f29</Anchor>
    <Abstract>Removes a model from the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildDefault</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a13667f2db068b46530102270f3b0e0ce</Anchor>
    <Abstract>Builds a default scene made of a Cornell box, a reflective cube, and a transparent sphere...</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>empty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a637be3e4e463527da2f316b520c20bcd</Anchor>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a35ecec341354107001f1369f68500aaa</Anchor>
    <Abstract>Returns the simulutation handler. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a0ebde9602b22c831f46ca3fa07db6795</Anchor>
    <Abstract>Sets the simulation handler. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVolumeHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a5074d2cb2ed54551637fdcd21b25809c</Anchor>
    <Abstract>Returns volume data. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCADiffusionSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a6dd8458feefbd6d61c5e9a44b477acdd</Anchor>
    <Abstract>Sets the Calcium diffusion simulation handler. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCADiffusionSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ae18fcfd7021a6ef3c5624c0e466dbc3c</Anchor>
    <Abstract>Gets the Calcium diffusion simulation handler. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTransferFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ae0c3581183ef65ffedff254c0817eaf5</Anchor>
    <Abstract>Build a color map from a file, according to the colormap-file scene parameters. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadFromCacheFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ade17e86cbdea01b469f9ad6fbaa4a794</Anchor>
    <Abstract>Loads geometry a binary cache file defined by the –load-cache-file command line parameter. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>saveToCacheFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a0d835b82330c961a0d7967ac08f96567</Anchor>
    <Abstract>Saves geometry a binary cache file defined by the –save-cache-file command line parameter. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSizeInBytes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a361219416ee29d355f3c8e2101a449c7</Anchor>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumModels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a1bb0d2bf02bd495f33cdcb8b3c0d7ad2</Anchor>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaterialsColorMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a52fa731a8e9151be10333853a44aad0d</Anchor>
    <Abstract>initializeMaterials Initializes materials for all models in the scene </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a3921dd41b45318e67ac241a9394ddd87</Anchor>
    <Abstract>Load the data from the given blob. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a64fe20e158fb95feb2b0d4d82b211c6d</Anchor>
    <Abstract>Load the data from the given file. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLoaderRegistry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a654d1a0eb616ba1e7e1f95c672b9cfac</Anchor>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ParametersManager</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Abstract>Class managing all parameters registered by the application. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>af1446cfbea9a2fb9348a8625bd69bb18</Anchor>
    <Abstract>Registers specific parameters to the manager. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>usage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>a2fc48e699c64648868460809b3343a51</Anchor>
    <Abstract>Displays usage of registered parameters. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>a0a0967c0597705f2c6f936a2cfc98b3c</Anchor>
    <Abstract>Displays values registered parameters. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>a512452ae6195a30b5c733f75c7ea1c54</Anchor>
    <Abstract>Parses registered parameters. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAnimationParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>a7d8bac86d95437486b9e8bb2e1e26254</Anchor>
    <Abstract>Gets animation parameters. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRenderingParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>a3558f229417081e9ed7eee77acfa73f0</Anchor>
    <Abstract>Gets rendering parameters. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGeometryParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>a42770db58f8d661744cd2e029b314295</Anchor>
    <Abstract>Gets geometry parameters. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getApplicationParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>aa1bd17b18fd4fe6d75abf1165e19830a</Anchor>
    <Abstract>Gets application parameters. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSceneParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>a2bc6a8dbef296ff837e33911cf3e4e55</Anchor>
    <Abstract>Gets scene parameters. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStreamParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>af0a2f6ace6b34e1d9782841eec23180b</Anchor>
    <Abstract>Gets stream parameters. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVolumeParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>af96aa3d61e0e96870b7027570c832829</Anchor>
    <Abstract>Gets volume parameters. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>a1d25e34639dbb420f9a3405b556a88b0</Anchor>
    <Abstract>Sets a parameter (application, geometry, rendering, etc). </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>a0c96d24bee61aaa727c92db0aeeeb0c0</Anchor>
    <Abstract>Call resetModified on all parameters. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAnyModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>a56137d99df36dc76edb3ffd9d285c88e</Anchor>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ParticleRenderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ParticleRenderer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_particle_renderer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParticleRenderer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_particle_renderer.html</Path>
    <Anchor>af77fad98b58d93e68c2b716fb3d69b30</Anchor>
    <Abstract>Returns the class name as a string. </Abstract>
    <DeclaredIn>ParticleRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::PluginAPI</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::PluginAPI</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_plugin_a_p_i.html</Path>
    <Abstract>The API that plugins can use to interact with Brayns. </Abstract>
    <DeclaredIn>PluginAPI.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScene</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PluginAPI</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_plugin_a_p_i.html</Path>
    <Anchor>af60f973776379660bb8e439c1a825f44</Anchor>
    <DeclaredIn>PluginAPI.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParametersManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PluginAPI</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_plugin_a_p_i.html</Path>
    <Anchor>aaea89cf1573db310a3622430159680ee</Anchor>
    <DeclaredIn>PluginAPI.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getActionInterface</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PluginAPI</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_plugin_a_p_i.html</Path>
    <Anchor>a6015a4863d500bcb3cc6ae319fa40326</Anchor>
    <DeclaredIn>PluginAPI.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKeyboardHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PluginAPI</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_plugin_a_p_i.html</Path>
    <Anchor>aab6259aa4eba7dba2fc14ecb665fcada</Anchor>
    <DeclaredIn>PluginAPI.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCameraManipulator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PluginAPI</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_plugin_a_p_i.html</Path>
    <Anchor>a62b48682ae9c377730c78af26e02d232</Anchor>
    <DeclaredIn>PluginAPI.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCamera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PluginAPI</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_plugin_a_p_i.html</Path>
    <Anchor>a434a7c355627ff17f36a71d054ee0914</Anchor>
    <DeclaredIn>PluginAPI.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::PointLight</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::PointLight</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_point_light.html</Path>
    <Abstract>Point light object. </Abstract>
    <DeclaredIn>PointLight.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PointLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PointLight</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_point_light.html</Path>
    <Anchor>ac360885334a6778949e00d7070c8a9ae</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>PointLight.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PointLight</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_point_light.html</Path>
    <Anchor>a14c49779d4e61b944511e07c7f7cad13</Anchor>
    <Abstract>Light source position. </Abstract>
    <DeclaredIn>PointLight.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCutoffDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PointLight</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_point_light.html</Path>
    <Anchor>a782a3fb04f2cf4a089a738e5bc105698</Anchor>
    <Abstract>Light source cutoff distance. </Abstract>
    <DeclaredIn>PointLight.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Light</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_light.html</Path>
    <Anchor>ac418f89179bfb0698b73c001729d9423</Anchor>
    <Abstract>Light source RGB color. </Abstract>
    <DeclaredIn>Light.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIntensity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Light</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_light.html</Path>
    <Anchor>a7219ba01bccbf75a30e2be20b3f62fb7</Anchor>
    <Abstract>Light source intensity. </Abstract>
    <DeclaredIn>Light.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Progress</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Progress</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_progress.html</Path>
    <Abstract>A progress object which offers thread-safe progress updates and thread-safe consumption of the curren...</Abstract>
    <DeclaredIn>Progress.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Progress</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_progress.html</Path>
    <Anchor>a11abbe394dc77f68ce0d5c4fd3a366d6</Anchor>
    <Abstract>Update the progress with a new absolute amount. </Abstract>
    <DeclaredIn>Progress.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>increment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Progress</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_progress.html</Path>
    <Anchor>a040143c55476623a620e1f28c2fdc903</Anchor>
    <Abstract>Update the progress with the given increment. </Abstract>
    <DeclaredIn>Progress.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>consume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Progress</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_progress.html</Path>
    <Anchor>a3e56606ed9283c4e4189b0d5b3b6b7cf</Anchor>
    <Abstract>Call the provided callback with the current progress if it has changed since the last invokation...</Abstract>
    <DeclaredIn>Progress.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ProteinLoader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ProteinLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_protein_loader.html</Path>
    <Abstract>Loads protein from PDB files http://www.rcsb.org. </Abstract>
    <DeclaredIn>ProteinLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importFromFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ProteinLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_protein_loader.html</Path>
    <Anchor>a0f3cf4e5744684102a5ae2adff8df53d</Anchor>
    <Abstract>Import the data from the given file and return the created model. </Abstract>
    <DeclaredIn>ProteinLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importFromBlob</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ProteinLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_protein_loader.html</Path>
    <Anchor>af9fa69b7ca4483360322d0e0205325b2</Anchor>
    <Abstract>Import the data from the blob and return the created model. </Abstract>
    <DeclaredIn>ProteinLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProgressCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Loader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader.html</Path>
    <Anchor>ac957d6047e9738bd7995827825024771</Anchor>
    <Abstract>Set a new callback function which is called on each updateProgress(). </Abstract>
    <DeclaredIn>Loader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateProgress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Loader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader.html</Path>
    <Anchor>a0618feaaee1cefc7a2ae781513f1646e</Anchor>
    <Abstract>Update the current progress of an operation. </Abstract>
    <DeclaredIn>Loader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UpdateCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brayns::Loader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader.html</Path>
    <Anchor>a59c6fb7227bfb5cd353d10b7306573e8</Anchor>
    <Abstract>The callback for each progress update with the signature (message, fraction of progress in 0...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ProximityRenderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ProximityRenderer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_proximity_renderer.html</Path>
    <Abstract>The ProximityRenderer uses an algorithm similar to ambient occlusion to identify touches between geom...</Abstract>
    <DeclaredIn>ProximityRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ProximityRenderer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_proximity_renderer.html</Path>
    <Anchor>ac927f95ac68c10d74a0afeb819eb05f3</Anchor>
    <Abstract>Returns the class name as a string. </Abstract>
    <DeclaredIn>ProximityRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ProximityRenderer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_proximity_renderer.html</Path>
    <Anchor>aa4caa1d5f633f2a4dca4b63e7aa74bdd</Anchor>
    <Abstract>Commits the changes held by the object so that attributes become available to the OSPRay rendering en...</Abstract>
    <DeclaredIn>ProximityRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Renderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Renderer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_renderer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVariance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Renderer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_renderer.html</Path>
    <Anchor>ab4e9a833c165e3e679d8eb7fe9eb18e6</Anchor>
    <DeclaredIn>Renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Renderer::PickResult</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Renderer::PickResult</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_renderer_1_1_pick_result.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::RenderingParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Abstract>Manages rendering parameters. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a59da280f420719c169f81144aabe97a4</Anchor>
    <Abstract>Displays values of registered parameters. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEngine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>ad777e35bac5501cd04f37e59aa7c4f33</Anchor>
    <Abstract>Engine. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getModule</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a92b938bead94e14d11f9bae17be326c7</Anchor>
    <Abstract>OSPRay module. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeDefaultRenderers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>ad757f946c741873c82e46e69231e36ad</Anchor>
    <Abstract>OSPRay renderer. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRenderers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a4c01720746de6ba46178db830d24e1d1</Anchor>
    <Abstract>OSPRay supported renderers. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getShadows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>ade7ee7e3226529b435fa3ffefd46c7e7</Anchor>
    <Abstract>Shadows. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSoftShadows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>abc86470c43608043d4579f2ac566a76e</Anchor>
    <Abstract>Softs Shadows generated by randomizing light source position. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAmbientOcclusionStrength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>adcfbde4abb46d610c27c3a6ec8361cff</Anchor>
    <Abstract>Ambient occlusion. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getShading</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a0dcd0049807d927c1c68ab78da95c228</Anchor>
    <Abstract>Shading applied to the geometry. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSamplesPerPixel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>abcf9f98c39218db3f8c95b6aa7df3b6c</Anchor>
    <Abstract>Number of samples per pixel. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLightEmittingMaterials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a25ef04f2741d3931b9a024fb933df22d</Anchor>
    <Abstract>Enables photon emission according to the radiance value of the material. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDetectionDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a32a712c082135bfe6d201d24bcd2a36e</Anchor>
    <Abstract>Defines the maximum distance between intersection and surrounding geometry for touch detection render...</Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDetectionOnDifferentMaterial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a6e398cbd42338b7af0613f2959e7b6ca</Anchor>
    <Abstract>Defines if touch detection applies if the material of the surrounding geometry is different from the ...</Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDetectionNearColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>aba00b850152ff2e80ea4fae3b1c6a1cf</Anchor>
    <Abstract>Near color used by touch detection renderer. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDetectionFarColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>ace5b6ac9558b8aa5b952c0f4df37d3ec</Anchor>
    <Abstract>Far color used by touch detection renderer. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEpsilon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>aa67ca19a55214d45bf79ca1a905557be</Anchor>
    <Abstract>Raytracers have to deal with the finite precision of computer calculations. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeDefaultCameras</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>aae0ed47a19b6f78280ec32e6c190598f</Anchor>
    <Abstract>Camera type. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEpsilon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>abc66474540605dc0c643e1dae19027a6</Anchor>
    <Abstract>Epsilon. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeadLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a5a0b99764433a5484679dcde5489fd89</Anchor>
    <Abstract>Light source follow camera origin. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAccumulation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a2df3b549c61199b65ddf134b334a2de5</Anchor>
    <Abstract>If the rendering should be refined by accumulating multiple passes. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVarianceThreshold</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a2e15eaf4a39b43a5bb324469f118fe8b</Anchor>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVarianceThreshold</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>aadf26c0def3d1eb724491b48a4b94c19</Anchor>
    <Abstract>The threshold where accumulation stops if the variance error reaches this value. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxAccumFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a98779393dd60f8ed99638cdb049a1f9a</Anchor>
    <Abstract>The maximum number of accumulation frames before engine signals to stop continuation of rendering...</Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSamplesPerRay</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a09b4edd3e71bf1b6f39dc00212ef91b3</Anchor>
    <Abstract>Defines the number of samples per ray for ray-casting rendering (typically volumes) ...</Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>af8c4e3e33c6d75a71893d7d48f0e4fec</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a0597328ac9cf2d922dde652eeb1f8eb9</Anchor>
    <Abstract>Parses parameters managed by the class. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::RenderInput</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::RenderInput</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_render_input.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::RenderOutput</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::RenderOutput</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_render_output.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Scene</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Abstract>Scene object. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Scene</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a6d329a3d29fa2950da8ab1fc8e73738b</Anchor>
    <Abstract>Creates a scene object responsible for handling geometry, volumes, materials and light sources...</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ac87b6e21aa844c490f10382b4ae8cd76</Anchor>
    <Abstract>Called after scene-related changes have been made before rendering the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitLights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a0319ce64948a242a206b8c7cdd7d0a2f</Anchor>
    <Abstract>Commits lights to renderers. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitSimulationData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a79cea4e226ed9ede10cdf166784b2b83</Anchor>
    <Abstract>Commits simulation data to renderers. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitVolumeData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a23345a15530057246e56d50ca032684a</Anchor>
    <Abstract>Commits volume data to renderers. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitTransferFunctionData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a1050f001aa9a33e578e634f5b46b20e4</Anchor>
    <Abstract>Commits transfer function data to renderers. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBounds</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a7d531db1a51d4dbd9f21c9e740806b7d</Anchor>
    <Abstract>Returns the bounding box of the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a7d89afe05548c882153522a0a4f751ac</Anchor>
    <Abstract>Attaches a light source to the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>aa918d868eaed44684a990f669b333249</Anchor>
    <Abstract>Gets a light source from the scene for a given index. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a681a8a7e95f279226a0ac02f2b8f4201</Anchor>
    <Abstract>Removes a light source from the scene for a given index. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearLights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a922c519f4acc99228313732f25ee5ec6</Anchor>
    <Abstract>Removes all light sources from the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addModel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ae7ff498e3f3fa699b087577959af8f5a</Anchor>
    <Abstract>Adds a model to the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeModel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a584399067b238f719a1d0d6ad2460f29</Anchor>
    <Abstract>Removes a model from the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildDefault</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a13667f2db068b46530102270f3b0e0ce</Anchor>
    <Abstract>Builds a default scene made of a Cornell box, a reflective cube, and a transparent sphere...</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>empty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a637be3e4e463527da2f316b520c20bcd</Anchor>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a35ecec341354107001f1369f68500aaa</Anchor>
    <Abstract>Returns the simulutation handler. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a0ebde9602b22c831f46ca3fa07db6795</Anchor>
    <Abstract>Sets the simulation handler. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVolumeHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a5074d2cb2ed54551637fdcd21b25809c</Anchor>
    <Abstract>Returns volume data. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCADiffusionSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a6dd8458feefbd6d61c5e9a44b477acdd</Anchor>
    <Abstract>Sets the Calcium diffusion simulation handler. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCADiffusionSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ae18fcfd7021a6ef3c5624c0e466dbc3c</Anchor>
    <Abstract>Gets the Calcium diffusion simulation handler. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTransferFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ae0c3581183ef65ffedff254c0817eaf5</Anchor>
    <Abstract>Build a color map from a file, according to the colormap-file scene parameters. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadFromCacheFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ade17e86cbdea01b469f9ad6fbaa4a794</Anchor>
    <Abstract>Loads geometry a binary cache file defined by the –load-cache-file command line parameter. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>saveToCacheFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a0d835b82330c961a0d7967ac08f96567</Anchor>
    <Abstract>Saves geometry a binary cache file defined by the –save-cache-file command line parameter. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isVolumeSupported</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a86009585882ba32e2938dde100097eea</Anchor>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSizeInBytes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a361219416ee29d355f3c8e2101a449c7</Anchor>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumModels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a1bb0d2bf02bd495f33cdcb8b3c0d7ad2</Anchor>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaterialsColorMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a52fa731a8e9151be10333853a44aad0d</Anchor>
    <Abstract>initializeMaterials Initializes materials for all models in the scene </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a3921dd41b45318e67ac241a9394ddd87</Anchor>
    <Abstract>Load the data from the given blob. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a64fe20e158fb95feb2b0d4d82b211c6d</Anchor>
    <Abstract>Load the data from the given file. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLoaderRegistry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a654d1a0eb616ba1e7e1f95c672b9cfac</Anchor>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::SceneParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::SceneParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene_parameters.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::SceneParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene_parameters.html</Path>
    <Anchor>ae69b42b281f99d368ef62167a3a63a8f</Anchor>
    <Abstract>Displays values of registered parameters. </Abstract>
    <DeclaredIn>SceneParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEnvironmentMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::SceneParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene_parameters.html</Path>
    <Anchor>a365e760a80a1eb586614a95cd53ec696</Anchor>
    <Abstract>file name of the environment map </Abstract>
    <DeclaredIn>SceneParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>af8c4e3e33c6d75a71893d7d48f0e4fec</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::SceneParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene_parameters.html</Path>
    <Anchor>a60f38dbe23eabee57fb2b4d8db149260</Anchor>
    <Abstract>Parses parameters managed by the class. </Abstract>
    <DeclaredIn>SceneParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::SDFGeometry</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::SDFGeometry</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_s_d_f_geometry.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ShortcutInformation</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ShortcutInformation</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_shortcut_information.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::SimulationRenderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::SimulationRenderer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_simulation_renderer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::SimulationRenderer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_simulation_renderer.html</Path>
    <Anchor>a4280c3da33ea1c1e327550870e676f00</Anchor>
    <Abstract>Returns the class name as a string. </Abstract>
    <DeclaredIn>SimulationRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Sphere</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Sphere</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_sphere.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::SpikeSimulationHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::SpikeSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_spike_simulation_handler.html</Path>
    <Abstract>The SpikeSimulationHandler class handles simulation frames for the current circuit. </Abstract>
    <DeclaredIn>SpikeSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpikeSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::SpikeSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_spike_simulation_handler.html</Path>
    <Anchor>aae5dc41c31d6b1a5473075eaf0c54fc9</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>SpikeSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::SpikeSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_spike_simulation_handler.html</Path>
    <Anchor>a7e9ef61e6eb81d73387c4471134046e4</Anchor>
    <Abstract>Returns a pointer to requested frame in the memory mapped file. </Abstract>
    <DeclaredIn>SpikeSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a17cee8a8500abfebc5f9783bb92ec48d</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~AbstractSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a60e89a35d6ca992d20697637d8b7560c</Anchor>
    <Abstract>Default desctuctor. </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachSimulationToCacheFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>afbda00e17fa6bd162a4263f89a55c379</Anchor>
    <Abstract>Attaches a memory mapped file to the scene so that renderers can access the data as if it was in memo...</Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeHeader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a4d0f24d63fde4da927ac66a274322ef9</Anchor>
    <Abstract>Writes the header to a stream. </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a5090a2dbe98efbec2a7c3009332d32ee</Anchor>
    <Abstract>Writes a frame to a stream. </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a26ac8e6f42732daa22d3a703816ba47c</Anchor>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a94eb882faba3d4a6f4cecdfa7f3af5d8</Anchor>
    <Abstract>getFrameSize return the size of the current simulation frame </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a8fa6e6c15ed6b6aad1e30004cf2c2983</Anchor>
    <Abstract>setFrameSize Sets the size of the current simulation frame </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNbFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a63756f6adb15211c556a20a04d651536</Anchor>
    <Abstract>getNbFrames returns the number of frame for the current simulation </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNbFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a6d97bbea1b840d24c754068d0b6c2cd8</Anchor>
    <Abstract>setNbFrames sets the number of frame for the current simulation </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a85da5dd39cdbcffec3e93effe92d64ec</Anchor>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a40e02361912fd67a9cae1afd91210f8a</Anchor>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHistogram</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a6c6ce62b4615c1e9f24199d43ef7542b</Anchor>
    <Abstract>getHistogram returns the Histogram of the values in the current simulation frame. ...</Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>histogramChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>acb55af876243483839a70e8d0d8d98ac</Anchor>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>aad7e9c57e1a9095c0f3c05b3fc33d332</Anchor>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Statistics</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Statistics</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_statistics.html</Path>
    <Abstract>Captures various statistics about rendering, scenes, etc. </Abstract>
    <DeclaredIn>Statistics.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::StreamParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::StreamParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_stream_parameters.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::StreamParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_stream_parameters.html</Path>
    <Anchor>aadc8ce7e7a5a74ac8b8bb6f89dbc53bc</Anchor>
    <Abstract>Displays values of registered parameters. </Abstract>
    <DeclaredIn>StreamParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEnabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::StreamParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_stream_parameters.html</Path>
    <Anchor>a4cdd3d732b39cc934bb71b3203578b85</Anchor>
    <Abstract>Streaming enabled. </Abstract>
    <DeclaredIn>StreamParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCompression</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::StreamParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_stream_parameters.html</Path>
    <Anchor>a249dd6d75a30e1052a54a2d9a4aed910</Anchor>
    <Abstract>Stream compression enabled. </Abstract>
    <DeclaredIn>StreamParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getQuality</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::StreamParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_stream_parameters.html</Path>
    <Anchor>a15f5932a44ab771bd516ae7a54a50d4e</Anchor>
    <Abstract>Stream compression quality, 1 (worst) to 100 (best) </Abstract>
    <DeclaredIn>StreamParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getId</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::StreamParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_stream_parameters.html</Path>
    <Anchor>a9b27e23cec72ce3d6826edb9e24d370e</Anchor>
    <Abstract>Stream ID; defaults to DEFLECT_ID if empty. </Abstract>
    <DeclaredIn>StreamParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHostname</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::StreamParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_stream_parameters.html</Path>
    <Anchor>ae3e75a5d3fbf3196437a0fad09bbed3f</Anchor>
    <Abstract>Stream hostname; defaults to DEFLECT_HOST if empty. </Abstract>
    <DeclaredIn>StreamParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::StreamParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_stream_parameters.html</Path>
    <Anchor>a0ac4da4e8b03ecfa7d60e3c1a3fb0c86</Anchor>
    <Abstract>Stream port; defaults to 1701 if empty. </Abstract>
    <DeclaredIn>StreamParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>af8c4e3e33c6d75a71893d7d48f0e4fec</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Task</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>brayns::Task</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Abstract>A task type which is directly scheduled after creation. </Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Task</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>adb4c824ce065c30129e25c2973b5760b</Anchor>
    <Abstract>Create an empty task; use task() and async++ to do something meaningful. </Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Task</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>ac5558024a92ce91fe5c6d8cc3ffd84ee</Anchor>
    <Abstract>Create and schedule a task with the given functor or lambda. </Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>schedule</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>abfc3f1e06d95e8923df75e9651b1f0f4</Anchor>
    <Abstract>NOP for this task; tasks are running after construction. </Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>result</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>a9a6c0675ba8c6321bff7ffbf044fdc99</Anchor>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>aa4f761290010bd3a0c7a026629524042</Anchor>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cancel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>af1019fe39fea3201341ea4301186a911</Anchor>
    <Abstract>Cancels the task if is either waiting to be scheduled or already running. </Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finishCancel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a12c64d0b0aa5bc8916d656fbffd5e8dd</Anchor>
    <Abstract>Indicate that cancel processing has finished and call the function given to cancel(). </Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canceled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a108ebfd245dbddf0df673e9624702f1f</Anchor>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>progress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a9c4958935de14f9db7480e9bb3566735</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::TaskFunctor</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::TaskFunctor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task_functor.html</Path>
    <Abstract>A base class for functors that can be used for Tasks. </Abstract>
    <DeclaredIn>TaskFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProgressFunc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brayns::TaskFunctor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task_functor.html</Path>
    <Anchor>af5ae54477aeecf3b89c696867171a980</Anchor>
    <Abstract>message, increment, amount </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProgressFunc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::TaskFunctor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task_functor.html</Path>
    <Anchor>ad8283ae7984fbd41e7d5e61e57238ad3</Anchor>
    <Abstract>Set the function when progress() is called. </Abstract>
    <DeclaredIn>TaskFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>progress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::TaskFunctor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task_functor.html</Path>
    <Anchor>a0dab436f8eb57c24de929b894069f2cd</Anchor>
    <Abstract>Report progress using the provided callback from setProgressFunc() and also check if the execution ha...</Abstract>
    <DeclaredIn>TaskFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCancelToken</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::TaskFunctor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task_functor.html</Path>
    <Anchor>a0463073aa21dd20ffa10309757d2e52b</Anchor>
    <Abstract>Set the cancel token from e.g. </Abstract>
    <DeclaredIn>TaskFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cancelCheck</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::TaskFunctor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task_functor.html</Path>
    <Anchor>ac32d29d096272b4f62383f83eaae88e4</Anchor>
    <Abstract>Checks if the execution has been cancelled. </Abstract>
    <DeclaredIn>TaskFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::TaskRuntimeError</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::TaskRuntimeError</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task_runtime_error.html</Path>
    <Abstract>An exception type that shall be thrown at any point during the task execution to provide useful error...</Abstract>
    <DeclaredIn>TaskRuntimeError.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Texture2D</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Texture2D</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_texture2_d.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Timer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Timer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_timer.html</Path>
    <Abstract>Simple timer class to measure time spent in a portion of the code. </Abstract>
    <DeclaredIn>Timer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Timer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_timer.html</Path>
    <Anchor>aa4b955ae78d2e06e444eb7b4ecba62d4</Anchor>
    <Abstract>(Re)Start the timer at &amp;#39;now&amp;#39; </Abstract>
    <DeclaredIn>Timer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>elapsed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Timer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_timer.html</Path>
    <Anchor>a9930775f8b5623553604bbddf92a304a</Anchor>
    <DeclaredIn>Timer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Timer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_timer.html</Path>
    <Anchor>ab45e9548afa774cc5eaf70cb6c54975d</Anchor>
    <Abstract>Stops the timer and records the interval + a smoothed value over time. </Abstract>
    <DeclaredIn>Timer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>milliseconds</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Timer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_timer.html</Path>
    <Anchor>a8f5a63abdf4ac864d12f08e422db17c9</Anchor>
    <DeclaredIn>Timer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>seconds</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Timer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_timer.html</Path>
    <Anchor>a0a291f3215e7fb699f15e634bcbde374</Anchor>
    <DeclaredIn>Timer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>perSecond</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Timer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_timer.html</Path>
    <Anchor>a293726bf5766ee48ee904a157c0dde3a</Anchor>
    <DeclaredIn>Timer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>perSecondSmoothed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Timer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_timer.html</Path>
    <Anchor>a7d9c329c5310b950435de63138586a1d</Anchor>
    <DeclaredIn>Timer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::TransferFunction</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::TransferFunction</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_transfer_function.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::TransferFunction</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_transfer_function.html</Path>
    <Anchor>a4dd7b9c4ac8e4942617a50f412bc6d44</Anchor>
    <Abstract>Clears the data held by the transfert fonction. </Abstract>
    <DeclaredIn>TransferFunction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDiffuseColors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::TransferFunction</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_transfer_function.html</Path>
    <Anchor>a1f5738a01364bde00a8d013b200c602c</Anchor>
    <Abstract>Get diffuse colors. </Abstract>
    <DeclaredIn>TransferFunction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEmissionIntensities</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::TransferFunction</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_transfer_function.html</Path>
    <Anchor>af3ed3fbc1159fb885c3123cf6da05253</Anchor>
    <Abstract>Get emission color intensities. </Abstract>
    <DeclaredIn>TransferFunction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getContributions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::TransferFunction</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_transfer_function.html</Path>
    <Anchor>a9fdca1da05c29e8c725b033c9cdb6ac5</Anchor>
    <Abstract>Get contributions. </Abstract>
    <DeclaredIn>TransferFunction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getValuesRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::TransferFunction</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_transfer_function.html</Path>
    <Anchor>af4e9071359890513159ee40276e1b0d9</Anchor>
    <Abstract>Get transfer function range of values. </Abstract>
    <DeclaredIn>TransferFunction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::TransferFunctionLoader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::TransferFunctionLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_transfer_function_loader.html</Path>
    <Abstract>Loads transfer function from text file where every line contains a space separated list of integers f...</Abstract>
    <DeclaredIn>TransferFunctionLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadFromFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::TransferFunctionLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_transfer_function_loader.html</Path>
    <Anchor>af598d7a7ebee8f6bc6aaf732192d4462</Anchor>
    <Abstract>Loads values from a transfer function file. </Abstract>
    <DeclaredIn>TransferFunctionLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Transformation</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Transformation</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_transformation.html</Path>
    <Abstract>Defines the translation, rotation and scaling parameters to be applied to a scene asset...</Abstract>
    <DeclaredIn>Transformation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::TrianglesMesh</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::TrianglesMesh</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_triangles_mesh.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Abstract>Information about the current braynsCommon version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ad4caded283f86362198a2ba1eb478eba</Anchor>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ac28a55327f904d62ab90dc172be1b440</Anchor>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a74c8402e7ceed27e0c773cf39e8e01b0</Anchor>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a7230a3f09fc682b33cf1cfff19bebce7</Anchor>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ab23018d1ff96bba3a16b1b5a595115d3</Anchor>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>af99a8b1956c6cb800290c9f8d303f36a</Anchor>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a6b194dfa87bafdc9a6512fe7ad57794c</Anchor>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a4b4666df38d8c345e91425821c18c8e0</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSchema</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>af7fbd75a18a0d7b20f875b0669f3609c</Anchor>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toJSON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a2288688dd599d92fcaec2f4d4e89a72d</Anchor>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ad4caded283f86362198a2ba1eb478eba</Anchor>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ac28a55327f904d62ab90dc172be1b440</Anchor>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a74c8402e7ceed27e0c773cf39e8e01b0</Anchor>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a7230a3f09fc682b33cf1cfff19bebce7</Anchor>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ab23018d1ff96bba3a16b1b5a595115d3</Anchor>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>af99a8b1956c6cb800290c9f8d303f36a</Anchor>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a6b194dfa87bafdc9a6512fe7ad57794c</Anchor>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a4b4666df38d8c345e91425821c18c8e0</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSchema</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>af7fbd75a18a0d7b20f875b0669f3609c</Anchor>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toJSON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a2288688dd599d92fcaec2f4d4e89a72d</Anchor>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ad4caded283f86362198a2ba1eb478eba</Anchor>
    <DeclaredIn>pluginapi/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ac28a55327f904d62ab90dc172be1b440</Anchor>
    <DeclaredIn>pluginapi/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a74c8402e7ceed27e0c773cf39e8e01b0</Anchor>
    <DeclaredIn>pluginapi/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a7230a3f09fc682b33cf1cfff19bebce7</Anchor>
    <DeclaredIn>pluginapi/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ab23018d1ff96bba3a16b1b5a595115d3</Anchor>
    <DeclaredIn>pluginapi/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>af99a8b1956c6cb800290c9f8d303f36a</Anchor>
    <DeclaredIn>pluginapi/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a6b194dfa87bafdc9a6512fe7ad57794c</Anchor>
    <DeclaredIn>pluginapi/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a4b4666df38d8c345e91425821c18c8e0</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>pluginapi/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSchema</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>af7fbd75a18a0d7b20f875b0669f3609c</Anchor>
    <DeclaredIn>pluginapi/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toJSON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a2288688dd599d92fcaec2f4d4e89a72d</Anchor>
    <DeclaredIn>pluginapi/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ad4caded283f86362198a2ba1eb478eba</Anchor>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ac28a55327f904d62ab90dc172be1b440</Anchor>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a74c8402e7ceed27e0c773cf39e8e01b0</Anchor>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a7230a3f09fc682b33cf1cfff19bebce7</Anchor>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ab23018d1ff96bba3a16b1b5a595115d3</Anchor>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>af99a8b1956c6cb800290c9f8d303f36a</Anchor>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a6b194dfa87bafdc9a6512fe7ad57794c</Anchor>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a4b4666df38d8c345e91425821c18c8e0</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSchema</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>af7fbd75a18a0d7b20f875b0669f3609c</Anchor>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toJSON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a2288688dd599d92fcaec2f4d4e89a72d</Anchor>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ad4caded283f86362198a2ba1eb478eba</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ac28a55327f904d62ab90dc172be1b440</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a74c8402e7ceed27e0c773cf39e8e01b0</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a7230a3f09fc682b33cf1cfff19bebce7</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ab23018d1ff96bba3a16b1b5a595115d3</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>af99a8b1956c6cb800290c9f8d303f36a</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a6b194dfa87bafdc9a6512fe7ad57794c</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a4b4666df38d8c345e91425821c18c8e0</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSchema</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>af7fbd75a18a0d7b20f875b0669f3609c</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toJSON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a2288688dd599d92fcaec2f4d4e89a72d</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::VolumeHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::VolumeHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler.html</Path>
    <Abstract>VolumeHandler object. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VolumeHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler.html</Path>
    <Anchor>a39d2058806a352a3a62469ec34604d06</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler.html</Path>
    <Anchor>a16720b2fe81f275d2c2f2f49132dfbd8</Anchor>
    <Abstract>Returns the dimension of the 8bit volume. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getElementSpacing</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler.html</Path>
    <Anchor>a8d79cfa8b0080820d6fc9d664bbbe669</Anchor>
    <Abstract>Returns the voxel size of the 8bit volume. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler.html</Path>
    <Anchor>a9842a3e1eac8ed2c182bb614f71cf9bd</Anchor>
    <Abstract>Returns the position offset of the 8bit volume in world coordinates. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler.html</Path>
    <Anchor>af357f8fd6e08e61abfedb040a5f52731</Anchor>
    <Abstract>Returns the size of the 8bit volume in bytes. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler.html</Path>
    <Anchor>afeaa537e13ad45960daab5c5437c6699</Anchor>
    <Abstract>Returns a pointer to a given frame in the memory mapped file. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEpsilon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler.html</Path>
    <Anchor>aac72eca3b08d07ba2042f7303c57f501</Anchor>
    <Abstract>Returns the epsilon that defines the step used to walk along the ray when traversing the volume...</Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachVolumeToFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler.html</Path>
    <Anchor>a66fb70e7039ace4fde9250bc92afaead</Anchor>
    <Abstract>Attaches a memory mapped file to the scene so that renderers can access the data as if it was in memo...</Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIndexMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler.html</Path>
    <Anchor>a48bb37209f5697d56a459f3f4051a00e</Anchor>
    <Abstract>Sets the index mode. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIndexMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler.html</Path>
    <Anchor>a4f4d7ba8215fdb69907b49fdaa1ca5ca</Anchor>
    <Abstract>Gets the index mode. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCurrentIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler.html</Path>
    <Anchor>a52b0f63bebafd5b511046d7b37d3fbba</Anchor>
    <Abstract>Sets the index for the volume handler. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHistogram</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler.html</Path>
    <Anchor>a96bf2720442dd32493cffe4beaccf77c</Anchor>
    <Abstract>Set the histogram of the currently loaded volume. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHistogram</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler.html</Path>
    <Anchor>aa6d9df42a68164f4cbd48054a6c3fa1c</Anchor>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNbFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler.html</Path>
    <Anchor>ab8ed1cd8b3fea737cd948e9ef394d88c</Anchor>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNbFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler.html</Path>
    <Anchor>aebb55d097b0822d9347224e9c91ad770</Anchor>
    <Abstract>Sets the number of frames for the current volume. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::VolumeHandler::VolumeDescriptor</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::VolumeHandler::VolumeDescriptor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler_1_1_volume_descriptor.html</Path>
    <Abstract>The VolumeDescriptor class handles the attribute of a single volume. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler::VolumeDescriptor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler_1_1_volume_descriptor.html</Path>
    <Anchor>a2d4b737d5b886e4ce8c3e59dc480d96a</Anchor>
    <Abstract>Maps the volume to the corresponding _filename. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler::VolumeDescriptor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler_1_1_volume_descriptor.html</Path>
    <Anchor>a3c3adefe331b28d5e6e07871d3250263</Anchor>
    <Abstract>Unmaps the volume from the corresponding _filename. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCacheFileDescriptor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler::VolumeDescriptor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler_1_1_volume_descriptor.html</Path>
    <Anchor>a7dc4ef881785d2a0993a0b19977c07a9</Anchor>
    <Abstract>Returns the file descriptor for the current volume. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler::VolumeDescriptor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler_1_1_volume_descriptor.html</Path>
    <Anchor>a3957f2200339a9780daeeff87264b4e7</Anchor>
    <Abstract>Returns the size of the volume in bytes. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMemoryMapPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler::VolumeDescriptor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler_1_1_volume_descriptor.html</Path>
    <Anchor>aea105288818eeb73c6a06d0f59286b47</Anchor>
    <Abstract>Returns a pointer to volume file. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler::VolumeDescriptor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler_1_1_volume_descriptor.html</Path>
    <Anchor>ade83c0a3fcf3a915760e96def5da5c0c</Anchor>
    <Abstract>Returns the dimensions of the volume. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getElementSpacing</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler::VolumeDescriptor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler_1_1_volume_descriptor.html</Path>
    <Anchor>a95f4837562045f1460df63eededf7cc7</Anchor>
    <Abstract>Returns the voxel size of the volume. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler::VolumeDescriptor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler_1_1_volume_descriptor.html</Path>
    <Anchor>a7aeb2117a61aafef87874a0f5d165e7e</Anchor>
    <Abstract>Returns the volume position offset. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFilename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler::VolumeDescriptor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler_1_1_volume_descriptor.html</Path>
    <Anchor>a40816c48cd42fa113487a74ff2afe3a6</Anchor>
    <Abstract>Returns the volume filename. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::VolumeParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::VolumeParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_parameters.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_parameters.html</Path>
    <Anchor>a1fcb2d4b35ba14948765e01671691b4b</Anchor>
    <Abstract>Displays values of registered parameters. </Abstract>
    <DeclaredIn>VolumeParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFolder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_parameters.html</Path>
    <Anchor>ab7143e2f875fab737555d9dd8215a096</Anchor>
    <Abstract>Folder containing volume files. </Abstract>
    <DeclaredIn>VolumeParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFilename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_parameters.html</Path>
    <Anchor>a2c310eee2700b2a3dd3904044a186d2c</Anchor>
    <Abstract>File containing volume data. </Abstract>
    <DeclaredIn>VolumeParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_parameters.html</Path>
    <Anchor>aac205c6e87fabd2c003a14b59292d221</Anchor>
    <Abstract>Volume dimension. </Abstract>
    <DeclaredIn>VolumeParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getElementSpacing</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_parameters.html</Path>
    <Anchor>a02e82d5a9123769c4b1479ad2bee002e</Anchor>
    <Abstract>Volume scale. </Abstract>
    <DeclaredIn>VolumeParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_parameters.html</Path>
    <Anchor>a7d490d9ed5cb5bbfba798564dc62b48f</Anchor>
    <Abstract>Volume offset. </Abstract>
    <DeclaredIn>VolumeParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>af8c4e3e33c6d75a71893d7d48f0e4fec</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_parameters.html</Path>
    <Anchor>a1452a93f050be72357eaca1098a4db25</Anchor>
    <Abstract>Parses parameters managed by the class. </Abstract>
    <DeclaredIn>VolumeParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::XYZBLoader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::XYZBLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_x_y_z_b_loader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importFromBlob</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::XYZBLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_x_y_z_b_loader.html</Path>
    <Anchor>ad952120e7aaa9a919c23d53de76a06e4</Anchor>
    <Abstract>Import the data from the blob and return the created model. </Abstract>
    <DeclaredIn>XYZBLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importFromFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::XYZBLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_x_y_z_b_loader.html</Path>
    <Anchor>a4630fe117e596221f98b990cdf6b8d9e</Anchor>
    <Abstract>Import the data from the given file and return the created model. </Abstract>
    <DeclaredIn>XYZBLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProgressCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Loader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader.html</Path>
    <Anchor>ac957d6047e9738bd7995827825024771</Anchor>
    <Abstract>Set a new callback function which is called on each updateProgress(). </Abstract>
    <DeclaredIn>Loader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateProgress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Loader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader.html</Path>
    <Anchor>a0618feaaee1cefc7a2ae781513f1646e</Anchor>
    <Abstract>Update the current progress of an operation. </Abstract>
    <DeclaredIn>Loader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UpdateCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brayns::Loader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader.html</Path>
    <Anchor>a59c6fb7227bfb5cd353d10b7306573e8</Anchor>
    <Abstract>The callback for each progress update with the signature (message, fraction of progress in 0...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::obj::ExtendedOBJMaterial</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::obj::ExtendedOBJMaterial</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1obj_1_1_extended_o_b_j_material.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map_d</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::obj::ExtendedOBJMaterial</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1obj_1_1_extended_o_b_j_material.html</Path>
    <Anchor>a403863295195b5747082227c93eaf3d7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map_Refraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::obj::ExtendedOBJMaterial</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1obj_1_1_extended_o_b_j_material.html</Path>
    <Anchor>a3674d3e991fb6ba1d651965940a70758</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map_Reflection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::obj::ExtendedOBJMaterial</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1obj_1_1_extended_o_b_j_material.html</Path>
    <Anchor>a42a68497e600016ef5eecf00a8222c07</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map_a</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::obj::ExtendedOBJMaterial</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1obj_1_1_extended_o_b_j_material.html</Path>
    <Anchor>a3a85e2c595afb0fb62dd70d921f3adc7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map_Kd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::obj::ExtendedOBJMaterial</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1obj_1_1_extended_o_b_j_material.html</Path>
    <Anchor>a65d6ae063e53c9feeac32bb2be89052d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map_Ks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::obj::ExtendedOBJMaterial</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1obj_1_1_extended_o_b_j_material.html</Path>
    <Anchor>a98296de2b3f73249a66b9a012cd3f959</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map_Ns</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::obj::ExtendedOBJMaterial</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1obj_1_1_extended_o_b_j_material.html</Path>
    <Anchor>ad3fb0d75f30229abea5c442c7659e9b6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glossiness</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::obj::ExtendedOBJMaterial</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1obj_1_1_extended_o_b_j_material.html</Path>
    <Anchor>a8c1310fb56a9c0fb94311e447f7be4e6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map_Bump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::obj::ExtendedOBJMaterial</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1obj_1_1_extended_o_b_j_material.html</Path>
    <Anchor>aa751a568ed6aa42d9d5938ae59a3acb0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>castSimulationData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::obj::ExtendedOBJMaterial</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1obj_1_1_extended_o_b_j_material.html</Path>
    <Anchor>a131057af4b933c41009bd65dc91268a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ospray::ClippedPerspectiveCamera</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ospray::ClippedPerspectiveCamera</Scope>
    </TokenIdentifier>
    <Path>structospray_1_1_clipped_perspective_camera.html</Path>
    <Abstract>Implements a clipped perspective camera. </Abstract>
    <DeclaredIn>ClippedPerspectiveCamera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClippedPerspectiveCamera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ospray::ClippedPerspectiveCamera</Scope>
    </TokenIdentifier>
    <Path>structospray_1_1_clipped_perspective_camera.html</Path>
    <Anchor>a2a1f570dabdf4191768bb04893dc3b29</Anchor>
    <Abstract>constructor </Abstract>
    <DeclaredIn>ClippedPerspectiveCamera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ospray::ClippedPerspectiveCamera</Scope>
    </TokenIdentifier>
    <Path>structospray_1_1_clipped_perspective_camera.html</Path>
    <Anchor>af3bf2fdcc111e1f7bb25748b673a8f6e</Anchor>
    <Abstract>common function to help printf-debugging </Abstract>
    <DeclaredIn>ClippedPerspectiveCamera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ospray::ExtendedCones</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ospray::ExtendedCones</Scope>
    </TokenIdentifier>
    <Path>structospray_1_1_extended_cones.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ospray::ExtendedCylinders</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ospray::ExtendedCylinders</Scope>
    </TokenIdentifier>
    <Path>structospray_1_1_extended_cylinders.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ospray::ExtendedSDFGeometries</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ospray::ExtendedSDFGeometries</Scope>
    </TokenIdentifier>
    <Path>structospray_1_1_extended_s_d_f_geometries.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ospray::ExtendedSpheres</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ospray::ExtendedSpheres</Scope>
    </TokenIdentifier>
    <Path>structospray_1_1_extended_spheres.html</Path>
  </Token>
</Tokens>
