<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_MAJOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>af6fac12cc372fa2c0d4a7276646db3e2</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_MINOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>ad1d30abb92c583df9555702986df6cd5</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_PATCH</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>aec3b431747b4611d046a5be799c36a85</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_REVISION</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a4d697b7dac7e97b28fecf7714fea4d8f</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_ABI</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a689d3561485abd45ee50411137295ee0</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_STRING</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>aae1fd1122c42331f598c0152baa6572a</Anchor>
    <Abstract>The current major.minor.version as a string. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_REV_STRING</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>abdfd5d63377bd1606cf51a0437943637</Anchor>
    <Abstract>The current major.minor.version.revision as a string. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_GT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>ae06db9b236b4f8ed1de4c3d1cbf55fe5</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_GE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a4453b9a10c85cfaf4e3a599a6105fcea</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_LT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>aa92a565dac0a7e3edbc52f24802aa925</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_LE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>acbda0067085f5d239bc8e6c0f3ec2d12</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Changelog</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>Changelog.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>md__jenkins_03_workspace_oss.Brayns.documentation_build_type_Debug_platform_cscsviz-vm_sources_doc_UserGuide</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>md__jenkins_03_workspace_oss.Brayns.documentation_build_type_Debug_platform_cscsviz-vm_sources_doc_UserGuide.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apps</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>apps.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>braynsBenchmark</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>braynsBenchmark.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>braynsService</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>braynsService.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>braynsViewer</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>braynsViewer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>todo</Name>
      <APILanguage>unknown</APILanguage>
    </TokenIdentifier>
    <Path>todo.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clipped_perspective_camera</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group__clipped__perspective__camera.html</Path>
    <Abstract>Implements a straightforward perspective (or &quot;pinhole&quot; camera) for perspective rendering, without support for Depth of Field or Motion Blur. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BasicLight</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>BasicLight</Scope>
    </TokenIdentifier>
    <Path>struct_basic_light.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PerRayData_radiance</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PerRayData_radiance</Scope>
    </TokenIdentifier>
    <Path>struct_per_ray_data__radiance.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PerRayData_shadow</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PerRayData_shadow</Scope>
    </TokenIdentifier>
    <Path>struct_per_ray_data__shadow.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Progress</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Progress</Scope>
    </TokenIdentifier>
    <Path>class_progress.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::AbstractManipulator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Abstract>Base class for camera manipulators. </Abstract>
    <DeclaredIn>AbstractManipulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_camera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>aae08537e81adbbd7275c7d6fd9ec8ed6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_keyboardHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>a1ddb4ed7cefbbb93422d8f26b5911245</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_motionSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>a3b110bb323f6163f82855d55c32ff177</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rotationSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>ac0ee65066a75352e0c5f550e1b1a0cd6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::AbstractParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Abstract>Base class defining command line parameters. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>af8c4e3e33c6d75a71893d7d48f0e4fec</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>a23279a7de7c2c0becbf81c1d242775bf</Anchor>
    <Abstract>Parses parameters managed by the class. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>usage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>aea979c57e60d5cdb9569dc154382af58</Anchor>
    <Abstract>Displays the usage of registered parameters. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>a998b0175fc8d8a20c08d1e5ee4bb147e</Anchor>
    <Abstract>Displays values of registered parameters. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>a54da8b217bcd52a00a4b039b98abfcbd</Anchor>
    <Abstract>Sets a parameter. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::AbstractRenderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::AbstractRenderer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_renderer.html</Path>
    <Abstract>The AbstractRenderer class implements a base renderer for all Brayns custom implementations. </Abstract>
    <DeclaredIn>AbstractRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::AbstractSimulationHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Abstract>The AbstractSimulationHandler class handles simulation frames for the current circuit. </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a17cee8a8500abfebc5f9783bb92ec48d</Anchor>
    <Abstract>Default contructor. </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~AbstractSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a60e89a35d6ca992d20697637d8b7560c</Anchor>
    <Abstract>Default desctuctor. </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachSimulationToCacheFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>afbda00e17fa6bd162a4263f89a55c379</Anchor>
    <Abstract>Attaches a memory mapped file to the scene so that renderers can access the data as if it was in memo...</Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeHeader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a4d0f24d63fde4da927ac66a274322ef9</Anchor>
    <Abstract>Writes the header to a stream. </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a5090a2dbe98efbec2a7c3009332d32ee</Anchor>
    <Abstract>Writes a frame to a stream. </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTimestamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a7e7bd675c0ad2ad12872e2074d4de985</Anchor>
    <Abstract>setTimestamp sets the current timestamp for the simulation </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimestamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>aa5ddcd9137de7b9028c04cc4a92cab08</Anchor>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a4cad6b1294d06b06df1cac173869178d</Anchor>
    <Abstract>getFrameData returns a void pointer to the simulation data for the current timestamp ...</Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a94eb882faba3d4a6f4cecdfa7f3af5d8</Anchor>
    <Abstract>getFrameSize return the size of the current simulation frame </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a8fa6e6c15ed6b6aad1e30004cf2c2983</Anchor>
    <Abstract>setFrameSize Sets the size of the current simulation frame </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNbFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>af47ad371626f6abbe71cf266a2d7f34d</Anchor>
    <Abstract>getNbFrames returns the number of frame for the current simulation </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNbFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a51a2198c217fe8080a18075995c3de4d</Anchor>
    <Abstract>setNbFrames sets the number of frame for the current simulation </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>ab647206afacc1820d502b27adf4c8a59</Anchor>
    <Abstract>getCurrentFrame returns the current frame number </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCurrentFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>ae83882c292c92741cf5f370fee44b64d</Anchor>
    <Abstract>setCurrentFrame sets the current frame number </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHistogram</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a06da93216571bc02dd5e04c556be79a9</Anchor>
    <Abstract>getHistogram returns the Histogram of the values in the current simulation frame. ...</Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>histogramChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>acb55af876243483839a70e8d0d8d98ac</Anchor>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ApplicationParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Abstract>Manages application parameters. </Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>aa2e0d98422af63c78df7f14a65fa4b6c</Anchor>
    <Abstract>Displays values of registered parameters. </Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWindowSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>a6e87fdfee6a6590c5d9ff7c4ee7dc0ee</Anchor>
    <Abstract>window size </Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCamera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>ad6d4ad54b3b988c628d9812887f1e8e3</Anchor>
    <Abstract>camera name (e.g. </Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBenchmarking</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>a0baa53fd46c9a6aecddeec70d2546ce2</Anchor>
    <Abstract>Benchmarking. </Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJpegCompression</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>a9fdb360a50c27ab8242fff3d0f2170cb</Anchor>
    <Abstract>JPEG compression quality. </Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getJpegSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>ad8d3a90aba5289d9a8dcdd488fbd016c</Anchor>
    <Abstract>JPEG size. </Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAutoPublishZeroEQEvents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>aa85f82cb8c5dc5bbc4faf853fc97de36</Anchor>
    <Abstract>Auto publication of ZeroEQ events is used when several applications supporting the ZeroEQ protocol ar...</Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStreamingEnabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>af447580e607ea4e45e7d051ea7c267f4</Anchor>
    <Abstract>Streaming enabled. </Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStreamCompression</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>a3fd7cfeeacac40b807b4e64881826171</Anchor>
    <Abstract>Stream compression enabled. </Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStreamQuality</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>a1f6cfc99f6c28d7960bd6d6c00a35c50</Anchor>
    <Abstract>Stream compression quality, 1 (worst) to 100 (best) </Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>af8c4e3e33c6d75a71893d7d48f0e4fec</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>a23279a7de7c2c0becbf81c1d242775bf</Anchor>
    <Abstract>Parses parameters managed by the class. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>usage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>aea979c57e60d5cdb9569dc154382af58</Anchor>
    <Abstract>Displays the usage of registered parameters. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>a54da8b217bcd52a00a4b039b98abfcbd</Anchor>
    <Abstract>Sets a parameter. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::BadParameter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::BadParameter</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_bad_parameter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::BaseWindow</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forceRedraw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>a8066e55a1117d1a1921719459c287117</Anchor>
    <DeclaredIn>BaseWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTitle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>a8f917d5d11eb4d7dc70cb49b6d808920</Anchor>
    <DeclaredIn>BaseWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTitle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>a3e56ecff8226f4585ea9cf0b79e1a198</Anchor>
    <DeclaredIn>BaseWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>display</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>a2424df86e37a3ecc9032511153b27855</Anchor>
    <DeclaredIn>BaseWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>activate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>a1be84537c702138c4b1af159bdef0cc9</Anchor>
    <DeclaredIn>BaseWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearPixels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>ae0e94dfedc88deaadf55573801a51321</Anchor>
    <DeclaredIn>BaseWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>drawPixels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>a3809d89a769ef3de442e779fbd2407d7</Anchor>
    <DeclaredIn>BaseWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>drawPixels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>a514e56a329220a8a185bf0341b8fd0d0</Anchor>
    <DeclaredIn>BaseWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>saveFrameToDisk</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>a8ce72982bdec9284b615da1e19cbe60f</Anchor>
    <Abstract>Saves current frame to disk. </Abstract>
    <DeclaredIn>BaseWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_defaultInitSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>addd591463e1330d7e9233e0ee20f4f47</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_currMousePos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>a33a00f1cd06ce75f249593f148cf439b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_mouse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>aadc33e9b2cec154eefd08b1179426e02</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::BasicLight</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::BasicLight</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_basic_light.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Brayns</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Abstract>Brayns is a minimalistic library that allows optimized ray-tracing rendering of meshes and parametric...</Abstract>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>a40a8a684cb1caf39e10f4b56dce58292</Anchor>
    <Abstract>Renders color and depth buffers of the current scene, according to specified parameters. </Abstract>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>a422f64427d348600f7ad59f9041f8248</Anchor>
    <Abstract>Renders color and depth buffers of the current scene, according to default parameters. </Abstract>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEngine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>acc8b3d8d54f59a2b5bb1ca70c07c7047</Anchor>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParametersManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>ad68939e00e940e6df3255bbf9e8a761f</Anchor>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKeyboardHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>a8af015ef5e738482177f3e4a9dfc4699</Anchor>
    <Abstract>Gets the keyboard handler. </Abstract>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCameraManipulator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>a86278a6f267a457c0473e85cef65c54f</Anchor>
    <Abstract>Gets the camera manipulator. </Abstract>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::CADiffusionSimulationHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::CADiffusionSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_c_a_diffusion_simulation_handler.html</Path>
    <Abstract>The CADiffusionSimulationHandler class handles simulation frames for Calcium diffusion. </Abstract>
    <DeclaredIn>CADiffusionSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CADiffusionSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::CADiffusionSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_c_a_diffusion_simulation_handler.html</Path>
    <Anchor>a53ecc8e7dafa8e277c33991808060f24</Anchor>
    <Abstract>Default contructor. </Abstract>
    <DeclaredIn>CADiffusionSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::CADiffusionSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_c_a_diffusion_simulation_handler.html</Path>
    <Anchor>ad960ca0302cf21edcfbd940b01364b85</Anchor>
    <Abstract>setFrame Sets the frame to load </Abstract>
    <DeclaredIn>CADiffusionSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNbFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::CADiffusionSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_c_a_diffusion_simulation_handler.html</Path>
    <Anchor>ad5c1e8fb12d05ae0b40b8dbca0f7a422</Anchor>
    <DeclaredIn>CADiffusionSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Camera</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Abstract>Camera object. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Camera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a4196e54bb40f2270f6f3c82433296745</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a5583d0a667ef2d3ad4c5bc3ea408783b</Anchor>
    <Abstract>Sets position, target and up vector. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a0922ca991159fe5fc401bae15597230e</Anchor>
    <Abstract>Gets camera type. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>ad3ccec7616d8d86e5719a53512c39c68</Anchor>
    <Abstract>Sets camera position. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>af2a3a1200c668a03daeaa9f80255c6c2</Anchor>
    <Abstract>Gets camera position. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTarget</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>ac93d24c8fe13e55d1092817bb94983a1</Anchor>
    <Abstract>Sets camera target. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTarget</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a87ddb41917ebae248c1ea6a81bb161ee</Anchor>
    <Abstract>Gets camera target. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a60ad67b14e8b2ddc80e15a15cff132d8</Anchor>
    <Abstract>Sets camera up vector. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a6d8afdc1b8b755bef0b0a13691de115a</Anchor>
    <Abstract>Gets camera up vector. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRotationMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a696c4a2880726ac4dec01974168ad0e7</Anchor>
    <Abstract>Gets the camera rotation matrix. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a0354f79ac970081e142566d3b7f8d93e</Anchor>
    <Abstract>Commits the changes held by the camera object so that attributes become available to the underlying r...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFieldOfView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>aa208347c05a1f47ae0562950547343bc</Anchor>
    <Abstract>The field of view is the extent of the observable world that is seen at any given moment...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFieldOfView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a60c233a5b53c7d8bbad0a88ea753fca9</Anchor>
    <Abstract>Set the field of view of the camera. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>aeda21b6f02421dedc266b992fbfe89a4</Anchor>
    <Abstract>Set the aspect ratio of the camera. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>afb30957156d54cefd98ba65c29638dc9</Anchor>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAperture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a9873a3ba6d6c346e4b5051a11b2ff748</Anchor>
    <Abstract>The aperture determines how collimated the admitted rays are, which is of great importance for the ap...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAperture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>add438a8d6757cc35d463e89bb213e768</Anchor>
    <Abstract>The aperture determines how collimated the admitted rays are, which is of great importance for the ap...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFocalLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>adb7e9f91916e49cd6d2a4370908c8a82</Anchor>
    <Abstract>The focal length of an optical system is a measure of how strongly the system converges or diverges l...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFocalLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a6fc8b59a7b5e13317810e3299f1928a4</Anchor>
    <Abstract>The focal length of an optical system is a measure of how strongly the system converges or diverges l...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStereoMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a9d72938ca0b714a6a8f7132546f5033d</Anchor>
    <Abstract>Sets the stereo mode of the camera (Left eye, Right eye or Side by Side) </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStereoMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a984359963515fe34b6f12fadf105f86e</Anchor>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEyeSeparation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a6f4f1b8f69cbf91e671c68e055fb9f92</Anchor>
    <Abstract>Sets the eye separation of the stereo camera. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEyeSeparation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>ab637fd07f7b224e27e24136285eb6a12</Anchor>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a0378b8d85d011a5b524746f4e23e34e6</Anchor>
    <Abstract>Resets the camera to its initial values. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>acb0d7fd498efcabe617152ddbd198b13</Anchor>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a4215decd15d58ff06710cca077e87c2c</Anchor>
    <Abstract>Reset the modified flag. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnvironmentMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a772e27325b19ab05e7966976bc755a44</Anchor>
    <Abstract>Enable/disables environment mapping. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setClipPlanes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>ac5076f27474c37ab25469772802eb382</Anchor>
    <Abstract>Sets the camera clip planes. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getClipPlanes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>aaebbeb42dcb46f787b6ad7ef33fe8ee7</Anchor>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Cone</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Cone</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_cone.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Cylinder</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Cylinder</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_cylinder.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::DeflectPlugin</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::DeflectPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_deflect_plugin.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::DeflectPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_deflect_plugin.html</Path>
    <Anchor>aca3dd04885c41e3e0fa84fc170836d26</Anchor>
    <Abstract>Executes the core functionnalities of the plugin. </Abstract>
    <DeclaredIn>DeflectPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::DirectionalLight</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::DirectionalLight</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_directional_light.html</Path>
    <Abstract>Directional light. </Abstract>
    <DeclaredIn>DirectionalLight.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DirectionalLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::DirectionalLight</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_directional_light.html</Path>
    <Anchor>a104db0999b3e707e9c62b60f333e9708</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>DirectionalLight.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDirection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::DirectionalLight</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_directional_light.html</Path>
    <Anchor>a7b30ca18ef5beeb3ad887dfec000e28f</Anchor>
    <Abstract>Light source direction. </Abstract>
    <DeclaredIn>DirectionalLight.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Light</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_light.html</Path>
    <Anchor>ac418f89179bfb0698b73c001729d9423</Anchor>
    <Abstract>Light source RGB color. </Abstract>
    <DeclaredIn>Light.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIntensity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Light</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_light.html</Path>
    <Anchor>a7219ba01bccbf75a30e2be20b3f62fb7</Anchor>
    <Abstract>Light source intensity. </Abstract>
    <DeclaredIn>Light.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Engine</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Abstract>Abstract implementation of the ray-tracing engine. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Engine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a9b750d4a7b2e945f2f7cb0726540f27d</Anchor>
    <Abstract>Engine contructor. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>ae715b4d4dca8458191d9762d42e94e75</Anchor>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>aa0652f4c99164ea4127d8db5ad5fe502</Anchor>
    <Abstract>Commits changes to the engine. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extensionInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>aed425b47972bb4cba6a0ea1e00330b4f</Anchor>
    <Abstract>Called after the given extension plugin was created to perform engine-specific initialization on a gi...</Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a7351335ae7099b5f45b2ee36ad9ec8ab</Anchor>
    <Abstract>Renders the current scene and populates the frame buffer accordingly. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preRender</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>ae4df6a7c3480fd5a2c99d2669d7ddbee</Anchor>
    <Abstract>Executes engine specific pre-render operations. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postRender</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a75dcc0f335ea1f2b268d0085ad2f4ce1</Anchor>
    <Abstract>Executes engine specific post-render operations. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScene</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>aa7447c013f31279eecf99d3420ce641d</Anchor>
    <Abstract>Gets the scene. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a651d4f6e12e6f6ea73089150ee37b8b0</Anchor>
    <Abstract>Gets the frame buffer. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCamera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a05478fdf6ae8dd3b0716bc8be93c83f9</Anchor>
    <Abstract>Gets the camera. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>af961a55c58767fdc61b67497abcbf7bb</Anchor>
    <Abstract>Gets the renderer. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParametersManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>afd9ddbaac2d1c22d00c16a118e7b3a29</Anchor>
    <Abstract>Gets the parameters manager. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setActiveRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a65a906caa0f052f74d57a646d7457a05</Anchor>
    <Abstract>Active renderer. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reshape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a840980ce1525d0e767140ca591deafb0</Anchor>
    <Abstract>Reshapes the current frame buffers. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultCamera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a206d534f22b8265dd2d9c5d335980487</Anchor>
    <Abstract>Sets default camera according to scene bounding box. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultEpsilon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a09847c925ccc8aa4c98a2b5a7d7f1fec</Anchor>
    <Abstract>Sets default epsilon to scene bounding box. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeMaterials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a653f2aa1e6003342b6bdc91ca6972b51</Anchor>
    <Abstract>Initializes materials for the current scene. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetFrameNumber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a76208420463fc2fa30713135417373e5</Anchor>
    <Abstract>resets frame number </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameNumber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>ad7f2f97d88f39783e57fe2fb79aa348c</Anchor>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSupportedFrameSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a5dc71a22ec526b9792836221b2832be0</Anchor>
    <Abstract>Adapts the size of the frame buffer according to camera requirements. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinimumFrameSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>aa8ae6d776485d6b2275cc16fb1032e2f</Anchor>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLastOperation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a3e2bfaba8b7dd58f6233725ca015ac47</Anchor>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLastProgress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a908d7ed1babfd302fd03f848a51bbf45</Anchor>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>haveDeflectPixelOp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a49c13d75aac81d4ce47e50ceb95a7b1a</Anchor>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recreate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>af73ce5c200238ee584ac21e3a394d420</Anchor>
    <Abstract>Recreates the engine according to new parameters, e.g. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::EngineFactory</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::EngineFactory</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine_factory.html</Path>
    <Abstract>The engine factory is in charge of instanciating engines according to their name (ospray, optix or firerays). </Abstract>
    <DeclaredIn>EngineFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EngineFactory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::EngineFactory</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine_factory.html</Path>
    <Anchor>a986f53de06cee96f9102efa8b000183c</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>EngineFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::EngineFactory</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine_factory.html</Path>
    <Anchor>aff07fe95857429e76cfb3f08eb64814e</Anchor>
    <Abstract>Gets the instance of the engine corresponding the given name. </Abstract>
    <DeclaredIn>EngineFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::EngineFactory</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine_factory.html</Path>
    <Anchor>a1dfcc78f09bfdd74dcef4307c0547964</Anchor>
    <Abstract>Remove the given engine from the factory. </Abstract>
    <DeclaredIn>EngineFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Exception</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Exception</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_exception.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ExtendedOBJRenderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ExtendedOBJRenderer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_extended_o_b_j_renderer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ExtendedOBJRenderer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_extended_o_b_j_renderer.html</Path>
    <Anchor>a76e4b275c063aa67cb64f5240fd660c2</Anchor>
    <Abstract>Returns the class name as a string. </Abstract>
    <DeclaredIn>ExtendedOBJRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ExtensionPlugin</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ExtensionPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_extension_plugin.html</Path>
    <Abstract>Defines the abstract representation of a extension plug-in. </Abstract>
    <DeclaredIn>ExtensionPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ExtensionPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_extension_plugin.html</Path>
    <Anchor>a6a4528d0bfb1eb8cb02102300e7447c3</Anchor>
    <Abstract>Executes the core functionnalities of the plugin. </Abstract>
    <DeclaredIn>ExtensionPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ExtensionPluginFactory</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ExtensionPluginFactory</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_extension_plugin_factory.html</Path>
    <Abstract>Manages plug-ins such as Deflect Streamer or HTTP server. </Abstract>
    <DeclaredIn>ExtensionPluginFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ExtensionPluginFactory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ExtensionPluginFactory</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_extension_plugin_factory.html</Path>
    <Anchor>a29950d9a05329f63a51a251a935f6cfa</Anchor>
    <Abstract>Constructs the object and initializes default plugins according to application parameters. </Abstract>
    <DeclaredIn>ExtensionPluginFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ExtensionPluginFactory</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_extension_plugin_factory.html</Path>
    <Anchor>a3f2268cf183286874d8c3e47a1ca9860</Anchor>
    <Abstract>Registers a new plug-in. </Abstract>
    <DeclaredIn>ExtensionPluginFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ExtensionPluginFactory</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_extension_plugin_factory.html</Path>
    <Anchor>aed9a3a7689696f8e6c82eeb64fd52c21</Anchor>
    <Abstract>Unregisters an existing plug-in. </Abstract>
    <DeclaredIn>ExtensionPluginFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ExtensionPluginFactory</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_extension_plugin_factory.html</Path>
    <Anchor>a7cc708c0b64298493774d19ca6df8636</Anchor>
    <Abstract>Unregisters all registered plug-ins. </Abstract>
    <DeclaredIn>ExtensionPluginFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ExtensionPluginFactory</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_extension_plugin_factory.html</Path>
    <Anchor>abdfc8ed40bb68f56407b2f0a145e9ae6</Anchor>
    <Abstract>Executes code specific to every registered plugin. </Abstract>
    <DeclaredIn>ExtensionPluginFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::FlyingModeManipulator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::FlyingModeManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_flying_mode_manipulator.html</Path>
    <Abstract>Defines a flying mode camera manipulator, like in a flight simulator. </Abstract>
    <DeclaredIn>FlyingModeManipulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_camera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>aae08537e81adbbd7275c7d6fd9ec8ed6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_keyboardHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>a1ddb4ed7cefbbb93422d8f26b5911245</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_motionSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>a3b110bb323f6163f82855d55c32ff177</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rotationSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>ac0ee65066a75352e0c5f550e1b1a0cd6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::FPSCounter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::FPSCounter</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_f_p_s_counter.html</Path>
    <DeclaredIn>BaseWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::FrameBuffer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::FrameBuffer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_frame_buffer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Geometry</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Geometry</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::GeometryParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Abstract>Manages geometry parameters. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GeometryParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a96a7875f7d452448da35b193921725dc</Anchor>
    <Abstract>Parse the command line parameters and populates according class members. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a8c92a909fef870a14d015a6e838f3f63</Anchor>
    <Abstract>Displays values of registered parameters. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMorphologyFolder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a668776d2476e6a3d38136a1f1257b484</Anchor>
    <Abstract>folder containing SWC and H5 files </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNESTCircuit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a26807e890c3570e93b9dc2acc2bc7526</Anchor>
    <Abstract>getNESTCircuit </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPDBFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>aeb6f71ab6b7b1dfcdefd6964dcca76ef</Anchor>
    <Abstract>PDB file. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPDBFolder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>ac27f0b43676e59fd9d90e5445d86e744</Anchor>
    <Abstract>PDB folder. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getXYZBFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>ae0eb93242f0b1fb5fade76c3e75f9c2a</Anchor>
    <Abstract>XYZR file. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMeshFolder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>abb3c4e24aafb3052a009a1da12124050</Anchor>
    <Abstract>folder containing mesh files </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMeshFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a3b3bafdf11e83a33f401f14128915440</Anchor>
    <Abstract>Fesh containting mesh. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCircuitConfiguration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>ab7bb21c279fa084747beabae49b5942a</Anchor>
    <Abstract>file containing circuit configuration </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLoadCacheFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a5d8d0e635fc3ccc9b177958b356899a5</Anchor>
    <Abstract>Binary representation of a scene to load. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSaveCacheFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a7a08766aaee1cfe6e0feb6a6f8bd4d8f</Anchor>
    <Abstract>Binary representation of a scene to save. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCircuitTarget</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>ac5588392544f10742ffd7246851d3902</Anchor>
    <Abstract>Circuit target. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCircuitReport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a0e51197be159614eeda403439a3616ff</Anchor>
    <Abstract>Circuit compartment report. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCircuitMeshFolder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a35603a86741960ddda1b46cc19c8a020</Anchor>
    <Abstract>Defines the folder where morphologies meshes are stored. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCircuitDensity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a997c8833a1dbc94925bf051f4bd25292</Anchor>
    <Abstract>ensity of cells in the circuit in percent (Mainly for testing purposes) </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCircuitBoundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a2959b208a4b8af1d1114dd2c7db9cab2</Anchor>
    <Abstract>Defines a bounding box outside of which geometry of a circuit will not be loaded. ...</Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCircuitUseSimulationModel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a8030ea887fe8686908ed37f5f3c2885b</Anchor>
    <Abstract>Defines if a different model is used to handle the simulation geometry. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCircuitMeshFilenamePattern</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>addf970ab59e33e78bb85100e689c128a</Anchor>
    <Abstract>Return the filename pattern use to load meshes. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRadiusMultiplier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a39e145c39048b4ae3c8be29999bb89a4</Anchor>
    <Abstract>Radius multiplier applied to spheres, cones and cylinders. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRadiusCorrection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a6bbfa8e688f9395347b8d3d535b93834</Anchor>
    <Abstract>Radius correction applied to spheres and cylinders. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getColorScheme</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a0cefb9cea6665e61900ebc08846bc6e3</Anchor>
    <Abstract>Enables a different color for every molecule/morphology/mesh when loading them from a given folder...</Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSceneEnvironment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a685b7032dd4e7aefadd50cf751f88c6d</Anchor>
    <Abstract>Scene environment (none, ground, wall, bounding_box ) </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGeometryQuality</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a30dd81996271f03f798942c4d69703ec</Anchor>
    <Abstract>Morphology quality. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMorphologySectionTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>ace161e62a3faa72c980e176dd7a39a6e</Anchor>
    <Abstract>Morphology section types. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMorphologyLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a6ff28e9ddeb7faf36d074fd7538a7a80</Anchor>
    <Abstract>Morphology layout. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCircuitEndSimulationTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a81db92e082e45cf5f00eaf82bf46b2a6</Anchor>
    <Abstract>Defines the range of frames to be loaded for the simulation. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCircuitSimulationHistogramSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>afced4e2eecd722d9e420ff31f39310cb</Anchor>
    <Abstract>Size of the simulation histogram. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCircuitMeshTransformation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>af79071ad6af5da63b76f6117c7abe56f</Anchor>
    <Abstract>Size of the simulation histogram. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGenerateMultipleModels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a2b88be75feb41785ab4205eec05d66d2</Anchor>
    <Abstract>Defines if multiple models should be generated to increase the rendering performance. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSplashSceneFolder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>ad4fef2d48a0d138c284cc407a0b9c02d</Anchor>
    <Abstract>Splash scene folder. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMolecularSystemConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>ab144d6cb2cc77c85b4f5b796e4c4c9b9</Anchor>
    <Abstract>Biological assembly. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMetaballsGridSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>af08fd8f25c3ad8caf65c121fad5c5419</Anchor>
    <Abstract>Metaballs grid size. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMetaballsThreshold</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>aa81c5eec8288be8852085101d48d9832</Anchor>
    <Abstract>Metaballs threshold. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMetaballsSamplesFromSoma</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>ac1a28b8320f3b27633cdc5621f259ae8</Anchor>
    <Abstract>Metaballs samples from soma. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useRealisticSomas</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a8c7aa469406719775f1eb2fac2f69c6f</Anchor>
    <Abstract>Realistic somas enabled? </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMemoryMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a42ed816fb28e78cdb9322c70f1ac4ff4</Anchor>
    <Abstract>Defines what memory mode should be used between Brayns and the underlying renderer. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSceneFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a21155182988087784742301a321df997</Anchor>
    <Abstract>Return the full path of the file containing a scene description. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>af8c4e3e33c6d75a71893d7d48f0e4fec</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>a23279a7de7c2c0becbf81c1d242775bf</Anchor>
    <Abstract>Parses parameters managed by the class. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>usage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>aea979c57e60d5cdb9569dc154382af58</Anchor>
    <Abstract>Displays the usage of registered parameters. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>a54da8b217bcd52a00a4b039b98abfcbd</Anchor>
    <Abstract>Sets a parameter. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Histogram</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Histogram</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_histogram.html</Path>
    <Abstract>The Histogram struct contains the range as well as the values of the simulation histogram for a given...</Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Image</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Image</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_image.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::InspectCenterManipulator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::InspectCenterManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_inspect_center_manipulator.html</Path>
    <Abstract>Camera manipulator to rotate and zoom around a central point. </Abstract>
    <DeclaredIn>InspectCenterManipulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_camera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>aae08537e81adbbd7275c7d6fd9ec8ed6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_keyboardHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>a1ddb4ed7cefbbb93422d8f26b5911245</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_motionSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>a3b110bb323f6163f82855d55c32ff177</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rotationSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>ac0ee65066a75352e0c5f550e1b1a0cd6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::KeyboardHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::KeyboardHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_keyboard_handler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Light</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Light</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_light.html</Path>
    <Abstract>Light object. </Abstract>
    <DeclaredIn>Light.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Light</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_light.html</Path>
    <Anchor>ac418f89179bfb0698b73c001729d9423</Anchor>
    <Abstract>Light source RGB color. </Abstract>
    <DeclaredIn>Light.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIntensity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Light</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_light.html</Path>
    <Anchor>a7219ba01bccbf75a30e2be20b3f62fb7</Anchor>
    <Abstract>Light source intensity. </Abstract>
    <DeclaredIn>Light.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::LivreCamera</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::LivreCamera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_livre_camera.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LivreCamera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_livre_camera.html</Path>
    <Anchor>a2562da76303c3bd2660b9aa33bc2c88c</Anchor>
    <Abstract>Transform modelview from Brayns to Livre space and apply in CameraSettings. </Abstract>
    <DeclaredIn>LivreCamera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnvironmentMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LivreCamera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_livre_camera.html</Path>
    <Anchor>aa7c1f7cc915fa485212c90d10e8eb761</Anchor>
    <Abstract>Unsupported in Livre. </Abstract>
    <DeclaredIn>LivreCamera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Camera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a4196e54bb40f2270f6f3c82433296745</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a5583d0a667ef2d3ad4c5bc3ea408783b</Anchor>
    <Abstract>Sets position, target and up vector. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a0922ca991159fe5fc401bae15597230e</Anchor>
    <Abstract>Gets camera type. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>ad3ccec7616d8d86e5719a53512c39c68</Anchor>
    <Abstract>Sets camera position. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>af2a3a1200c668a03daeaa9f80255c6c2</Anchor>
    <Abstract>Gets camera position. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTarget</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>ac93d24c8fe13e55d1092817bb94983a1</Anchor>
    <Abstract>Sets camera target. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTarget</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a87ddb41917ebae248c1ea6a81bb161ee</Anchor>
    <Abstract>Gets camera target. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a60ad67b14e8b2ddc80e15a15cff132d8</Anchor>
    <Abstract>Sets camera up vector. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a6d8afdc1b8b755bef0b0a13691de115a</Anchor>
    <Abstract>Gets camera up vector. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRotationMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a696c4a2880726ac4dec01974168ad0e7</Anchor>
    <Abstract>Gets the camera rotation matrix. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFieldOfView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>aa208347c05a1f47ae0562950547343bc</Anchor>
    <Abstract>The field of view is the extent of the observable world that is seen at any given moment...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFieldOfView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a60c233a5b53c7d8bbad0a88ea753fca9</Anchor>
    <Abstract>Set the field of view of the camera. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>aeda21b6f02421dedc266b992fbfe89a4</Anchor>
    <Abstract>Set the aspect ratio of the camera. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>afb30957156d54cefd98ba65c29638dc9</Anchor>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAperture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a9873a3ba6d6c346e4b5051a11b2ff748</Anchor>
    <Abstract>The aperture determines how collimated the admitted rays are, which is of great importance for the ap...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAperture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>add438a8d6757cc35d463e89bb213e768</Anchor>
    <Abstract>The aperture determines how collimated the admitted rays are, which is of great importance for the ap...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFocalLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>adb7e9f91916e49cd6d2a4370908c8a82</Anchor>
    <Abstract>The focal length of an optical system is a measure of how strongly the system converges or diverges l...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFocalLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a6fc8b59a7b5e13317810e3299f1928a4</Anchor>
    <Abstract>The focal length of an optical system is a measure of how strongly the system converges or diverges l...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStereoMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a9d72938ca0b714a6a8f7132546f5033d</Anchor>
    <Abstract>Sets the stereo mode of the camera (Left eye, Right eye or Side by Side) </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStereoMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a984359963515fe34b6f12fadf105f86e</Anchor>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEyeSeparation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a6f4f1b8f69cbf91e671c68e055fb9f92</Anchor>
    <Abstract>Sets the eye separation of the stereo camera. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEyeSeparation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>ab637fd07f7b224e27e24136285eb6a12</Anchor>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a0378b8d85d011a5b524746f4e23e34e6</Anchor>
    <Abstract>Resets the camera to its initial values. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>acb0d7fd498efcabe617152ddbd198b13</Anchor>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a4215decd15d58ff06710cca077e87c2c</Anchor>
    <Abstract>Reset the modified flag. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setClipPlanes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>ac5076f27474c37ab25469772802eb382</Anchor>
    <Abstract>Sets the camera clip planes. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getClipPlanes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>aaebbeb42dcb46f787b6ad7ef33fe8ee7</Anchor>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::LivreEngine</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::LivreEngine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_livre_engine.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LivreEngine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_livre_engine.html</Path>
    <Anchor>af56ea6059dae0a5d29414fb8fe3c3188</Anchor>
    <DeclaredIn>LivreEngine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LivreEngine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_livre_engine.html</Path>
    <Anchor>ae10ec8b8e25fd0bb6753dfc44856bc21</Anchor>
    <Abstract>Commits changes to the engine. </Abstract>
    <DeclaredIn>LivreEngine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LivreEngine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_livre_engine.html</Path>
    <Anchor>a3c824e3817fa52bd17de5f197a38b8fc</Anchor>
    <Abstract>Renders the current scene and populates the frame buffer accordingly. </Abstract>
    <DeclaredIn>LivreEngine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postRender</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LivreEngine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_livre_engine.html</Path>
    <Anchor>a255720f6917348f2533caf0a0916f568</Anchor>
    <Abstract>Update the histogram in VolumeHandler after Livre has updated it during the rendering. </Abstract>
    <DeclaredIn>LivreEngine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extensionInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LivreEngine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_livre_engine.html</Path>
    <Anchor>aecb3ea5279be3d87cc969280b4cbe083</Anchor>
    <Abstract>Register Livre-specific serializables, i.e. </Abstract>
    <DeclaredIn>LivreEngine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinimumFrameSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LivreEngine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_livre_engine.html</Path>
    <Anchor>a9161752134b577187f07707fab018438</Anchor>
    <DeclaredIn>LivreEngine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Engine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a9b750d4a7b2e945f2f7cb0726540f27d</Anchor>
    <Abstract>Engine contructor. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preRender</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>ae4df6a7c3480fd5a2c99d2669d7ddbee</Anchor>
    <Abstract>Executes engine specific pre-render operations. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScene</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>aa7447c013f31279eecf99d3420ce641d</Anchor>
    <Abstract>Gets the scene. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a651d4f6e12e6f6ea73089150ee37b8b0</Anchor>
    <Abstract>Gets the frame buffer. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCamera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a05478fdf6ae8dd3b0716bc8be93c83f9</Anchor>
    <Abstract>Gets the camera. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>af961a55c58767fdc61b67497abcbf7bb</Anchor>
    <Abstract>Gets the renderer. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParametersManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>afd9ddbaac2d1c22d00c16a118e7b3a29</Anchor>
    <Abstract>Gets the parameters manager. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setActiveRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a65a906caa0f052f74d57a646d7457a05</Anchor>
    <Abstract>Active renderer. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reshape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a840980ce1525d0e767140ca591deafb0</Anchor>
    <Abstract>Reshapes the current frame buffers. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultCamera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a206d534f22b8265dd2d9c5d335980487</Anchor>
    <Abstract>Sets default camera according to scene bounding box. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultEpsilon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a09847c925ccc8aa4c98a2b5a7d7f1fec</Anchor>
    <Abstract>Sets default epsilon to scene bounding box. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeMaterials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a653f2aa1e6003342b6bdc91ca6972b51</Anchor>
    <Abstract>Initializes materials for the current scene. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetFrameNumber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a76208420463fc2fa30713135417373e5</Anchor>
    <Abstract>resets frame number </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameNumber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>ad7f2f97d88f39783e57fe2fb79aa348c</Anchor>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSupportedFrameSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a5dc71a22ec526b9792836221b2832be0</Anchor>
    <Abstract>Adapts the size of the frame buffer according to camera requirements. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLastOperation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a3e2bfaba8b7dd58f6233725ca015ac47</Anchor>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLastProgress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a908d7ed1babfd302fd03f848a51bbf45</Anchor>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>haveDeflectPixelOp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a49c13d75aac81d4ce47e50ceb95a7b1a</Anchor>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recreate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>af73ce5c200238ee584ac21e3a394d420</Anchor>
    <Abstract>Recreates the engine according to new parameters, e.g. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::LivreFrameBuffer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::LivreFrameBuffer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_livre_frame_buffer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LivreFrameBuffer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_livre_frame_buffer.html</Path>
    <Anchor>a8b2c9f64282b151a6c031df7e25cf7b1</Anchor>
    <Abstract>Invalidates the color buffer content. </Abstract>
    <DeclaredIn>LivreFrameBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LivreFrameBuffer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_livre_frame_buffer.html</Path>
    <Anchor>a0b993357d0bce88abfc59494ea62c086</Anchor>
    <Abstract>Resizes the underlying Livre buffer(s) to allow rendering of the requested size. </Abstract>
    <DeclaredIn>LivreFrameBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LivreFrameBuffer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_livre_frame_buffer.html</Path>
    <Anchor>a7fb43ca1b058923b36bd6f7a89ef7a18</Anchor>
    <Abstract>Unsupported by Livre. </Abstract>
    <DeclaredIn>LivreFrameBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LivreFrameBuffer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_livre_frame_buffer.html</Path>
    <Anchor>af8431d7cd2bb6abc73e2adb99217708c</Anchor>
    <Abstract>Unsupported by Livre. </Abstract>
    <DeclaredIn>LivreFrameBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getColorBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LivreFrameBuffer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_livre_frame_buffer.html</Path>
    <Anchor>a6e368f32722083d6dabaffd3e42ee918</Anchor>
    <DeclaredIn>LivreFrameBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDepthBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LivreFrameBuffer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_livre_frame_buffer.html</Path>
    <Anchor>aa0bc67542980bb839ac205ffd61df86d</Anchor>
    <Abstract>Unsupported by Livre. </Abstract>
    <DeclaredIn>LivreFrameBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::LivreRenderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::LivreRenderer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_livre_renderer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LivreRenderer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_livre_renderer.html</Path>
    <Anchor>aad6bb1a494a3a9ea6d7c3b8afb7c6790</Anchor>
    <Abstract>Renders one frame with the current committed settings, scene, etc. </Abstract>
    <DeclaredIn>LivreRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LivreRenderer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_livre_renderer.html</Path>
    <Anchor>a4c26bc39bda562e82a8aa6ee367fd30e</Anchor>
    <Abstract>Updates NbFrames in VolumeHandler and sets the current requested timestamp to render in Livre...</Abstract>
    <DeclaredIn>LivreRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCamera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LivreRenderer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_livre_renderer.html</Path>
    <Anchor>aee52dd37bf8737760c7693833c025939</Anchor>
    <Abstract>Unsupported by Livre. </Abstract>
    <DeclaredIn>LivreRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::LivreScene</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::LivreScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_livre_scene.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitTransferFunctionData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LivreScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_livre_scene.html</Path>
    <Anchor>a08474ef07d024267786dbe566d6a3aab</Anchor>
    <Abstract>Update transfer function Livre RenderSettings. </Abstract>
    <DeclaredIn>LivreScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitVolumeData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LivreScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_livre_scene.html</Path>
    <Anchor>a3b8678fd9db793bbdbb38b534138cce9</Anchor>
    <Abstract>Update Livre&amp;#39;s VolumeRendererParameters, e.g. </Abstract>
    <DeclaredIn>LivreScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LivreScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_livre_scene.html</Path>
    <Anchor>a981e5ae9026c90ef878f43793eb05d93</Anchor>
    <Abstract>Unsupported by Livre. </Abstract>
    <DeclaredIn>LivreScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildGeometry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LivreScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_livre_scene.html</Path>
    <Anchor>a6d8de44f1fc7dc692a2fbfdee6585734</Anchor>
    <Abstract>Unsupported by Livre. </Abstract>
    <DeclaredIn>LivreScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serializeGeometry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LivreScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_livre_scene.html</Path>
    <Anchor>ae096381e9ccfa500b9d2378aeff76013</Anchor>
    <Abstract>Unsupported by Livre. </Abstract>
    <DeclaredIn>LivreScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitLights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LivreScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_livre_scene.html</Path>
    <Anchor>a660a099f1a7467308d1ed7c140769596</Anchor>
    <Abstract>Unsupported by Livre. </Abstract>
    <DeclaredIn>LivreScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitMaterials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LivreScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_livre_scene.html</Path>
    <Anchor>a8ebbe1c92df836f0c8c489e5e7386a70</Anchor>
    <Abstract>Unsupported by Livre. </Abstract>
    <DeclaredIn>LivreScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitSimulationData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LivreScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_livre_scene.html</Path>
    <Anchor>a77336e9403829e76c9030e1ccfbf0484</Anchor>
    <Abstract>Unsupported by Livre. </Abstract>
    <DeclaredIn>LivreScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>saveSceneToCacheFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LivreScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_livre_scene.html</Path>
    <Anchor>a0a7cfc3476fe12d00e46de28f3522315</Anchor>
    <Abstract>Unsupported by Livre. </Abstract>
    <DeclaredIn>LivreScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isVolumeSupported</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LivreScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_livre_scene.html</Path>
    <Anchor>ad9c021b2bfa7ae5fbb4a2d70b41024eb</Anchor>
    <DeclaredIn>LivreScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Scene</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a17f0dfc82bcbd4f69c9f1b436fcb1d66</Anchor>
    <Abstract>Creates a scene object responsible for handling geometry, volumes, materials and light sources...</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildMaterials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ac1672a0b93b6eed9902a50bb6d0131eb</Anchor>
    <Abstract>Creates the materials handled by the scene, and available to the scene geometry. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaterials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a70238d562cf41d097a48bfa66c4c4094</Anchor>
    <Abstract>Sets the materials handled by the scene, and available to the scene geometry. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaterial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>affe649838131b207676b0ad67af1eea1</Anchor>
    <Abstract>Returns the material object for a given index. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWorldBounds</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ae1c099a5104acb90e3d6f84a69fe90e4</Anchor>
    <Abstract>Returns the bounding box for the whole scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildEnvironment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a49c9856f08fe184d3b956b4a0e55657b</Anchor>
    <Abstract>Build an environment in addition to the loaded data, and according to the geometry parameters (comman...</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a7d89afe05548c882153522a0a4f751ac</Anchor>
    <Abstract>Attaches a light source to the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>aa918d868eaed44684a990f669b333249</Anchor>
    <Abstract>Gets a light source from the scene for a given index. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a681a8a7e95f279226a0ac02f2b8f4201</Anchor>
    <Abstract>Removes a light source from the scene for a given index. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearLights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a922c519f4acc99228313732f25ee5ec6</Anchor>
    <Abstract>Removes all light sources from the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildDefault</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a13667f2db068b46530102270f3b0e0ce</Anchor>
    <Abstract>Builds a default scene made of a Cornell box, a refelctive cube, and a transparent sphere...</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>empty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a637be3e4e463527da2f316b520c20bcd</Anchor>
    <Abstract>Return true if the scene does not contain any geometry. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSpheres</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a04dc9203e6beb571cb5684e21ea1982b</Anchor>
    <Abstract>Returns spheres handled by the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCylinders</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ac38001d93350e3a6121599b221082ec8</Anchor>
    <Abstract>Returns cylinders handled by the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCones</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>adcc03274be4840d364b3341a9a1b0ef5</Anchor>
    <Abstract>Returns cones handled by the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaterials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>aa945fbb2317b8537c3a770e5f1d3f31f</Anchor>
    <Abstract>Returns materials handled by the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTextures</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a80cd3286ef725decc8527534072bf466</Anchor>
    <Abstract>Returns textures handled by the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTriangleMeshes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a2ebeb48191b7b81d19d5f7ef104af35c</Anchor>
    <Abstract>Returns triangle meshes handled by the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a35ecec341354107001f1369f68500aaa</Anchor>
    <Abstract>Returns the simulutation handler. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a0ebde9602b22c831f46ca3fa07db6795</Anchor>
    <Abstract>Sets the simulation handler. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVolumeHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a5074d2cb2ed54551637fdcd21b25809c</Anchor>
    <Abstract>Returns volume data. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCADiffusionSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a6dd8458feefbd6d61c5e9a44b477acdd</Anchor>
    <Abstract>Sets the Calcium diffusion simulation handler. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCADiffusionSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ae18fcfd7021a6ef3c5624c0e466dbc3c</Anchor>
    <Abstract>Gets the Calcium diffusion simulation handler. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTransferFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ae0c3581183ef65ffedff254c0817eaf5</Anchor>
    <Abstract>Build a color map from a file, according to the colormap-file scene parameters. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a0056f019a5261be6f131b8eb38de2169</Anchor>
    <Abstract>Resets the current scene (Geometry, lights, materials, etc). </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRenderers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ac93ca59e6d7c98b955af7ff9f726e74c</Anchor>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSpheresDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>aee00cb9bde9c26e3d38b6b14dd2421e1</Anchor>
    <Abstract>Sets spheres as dirty, meaning that they need to be serialized and sent to the rendering engine...</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCylindersDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ac064db2eb8b2f67213d6dcad5b47c3b6</Anchor>
    <Abstract>Sets cylinders as dirty, meaning that they need to be serialized and sent to the rendering engine...</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConesDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a77e955b7c5fd52040be500024aec1827</Anchor>
    <Abstract>Sets cones as dirty, meaning that they need to be serialized and sent to the rendering engine...</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTrianglesMeshesDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a846ba8492627bd0ae22b246c5c2a8be2</Anchor>
    <Abstract>Sets meshes as dirty, meaning that they need to be serialized and sent to the rendering engine...</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a46d51f55bcbf41ff0dac8fa87a5b005e</Anchor>
    <Abstract>Sets all geometries as dirty, meaning that they need to be serialized and sent to the rendering engin...</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Material</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Material</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_material.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::MeshLoader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::MeshLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_mesh_loader.html</Path>
    <Abstract>Loads meshes from files using the assimp library http://assimp.sourceforge.net. </Abstract>
    <DeclaredIn>MeshLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importMeshFromFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::MeshLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_mesh_loader.html</Path>
    <Anchor>ae3ac67ade548106ef85a022aa491f732</Anchor>
    <Abstract>Imports meshes from a given file. </Abstract>
    <DeclaredIn>MeshLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exportMeshToFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::MeshLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_mesh_loader.html</Path>
    <Anchor>a202615689521785cd32a677191e85774</Anchor>
    <Abstract>Exports meshes to a given file. </Abstract>
    <DeclaredIn>MeshLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::MeshLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_mesh_loader.html</Path>
    <Anchor>af316536f70b75f105abdeb11664dcdc6</Anchor>
    <Abstract>Clear all internal buffers. </Abstract>
    <DeclaredIn>MeshLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::MetaballsGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::MetaballsGenerator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_metaballs_generator.html</Path>
    <Abstract>Generated a mesh according to given set of metaballs. </Abstract>
    <DeclaredIn>MetaballsGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateMesh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::MetaballsGenerator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_metaballs_generator.html</Path>
    <Anchor>ad9cffbfc87cdeed4d0e206043671d0b8</Anchor>
    <Abstract>Generates a triangle based mesh model according to provided metaballs, grid granularity and threshold...</Abstract>
    <DeclaredIn>MetaballsGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::MolecularSystemReader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::MolecularSystemReader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_molecular_system_reader.html</Path>
    <Abstract>The MolecularSystemReader class loads proteins and meshes according to parameters defined in a Molecu...</Abstract>
    <DeclaredIn>MolecularSystemReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MolecularSystemReader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::MolecularSystemReader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_molecular_system_reader.html</Path>
    <Anchor>ac1f51756114b9838ce9a2af3f7bdd048</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>MolecularSystemReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>import</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::MolecularSystemReader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_molecular_system_reader.html</Path>
    <Anchor>a636bd7b06dc0b7934a83889769c53ff8</Anchor>
    <Abstract>Imports proteins and shapes from the Molecular System Configutation file, defined by the –molecular-...</Abstract>
    <DeclaredIn>MolecularSystemReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::MorphologyLayout</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::MorphologyLayout</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_morphology_layout.html</Path>
    <Abstract>Defines how morphologies should be organized in space when the layout mode is selected. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::OptiXCamera</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::OptiXCamera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_opti_x_camera.html</Path>
    <Abstract>OptiX specific camera. </Abstract>
    <DeclaredIn>OptiXCamera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OptiXCamera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_opti_x_camera.html</Path>
    <Anchor>a616f65b5ef390ddf7649ef32d0cad8ef</Anchor>
    <Abstract>Commits the changes held by the camera object so that attributes become available to the OptiX render...</Abstract>
    <DeclaredIn>OptiXCamera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>impl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OptiXCamera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_opti_x_camera.html</Path>
    <Anchor>a0c59a01cf043b955fad6a2eb85a557eb</Anchor>
    <Abstract>Gets the OptiX implementation of the camera object. </Abstract>
    <DeclaredIn>OptiXCamera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnvironmentMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OptiXCamera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_opti_x_camera.html</Path>
    <Anchor>a237a5116de5296d8fc92141ffb6692b5</Anchor>
    <Abstract>Enable/disables environment mapping. </Abstract>
    <DeclaredIn>OptiXCamera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Camera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a4196e54bb40f2270f6f3c82433296745</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a5583d0a667ef2d3ad4c5bc3ea408783b</Anchor>
    <Abstract>Sets position, target and up vector. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a0922ca991159fe5fc401bae15597230e</Anchor>
    <Abstract>Gets camera type. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>ad3ccec7616d8d86e5719a53512c39c68</Anchor>
    <Abstract>Sets camera position. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>af2a3a1200c668a03daeaa9f80255c6c2</Anchor>
    <Abstract>Gets camera position. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTarget</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>ac93d24c8fe13e55d1092817bb94983a1</Anchor>
    <Abstract>Sets camera target. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTarget</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a87ddb41917ebae248c1ea6a81bb161ee</Anchor>
    <Abstract>Gets camera target. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a60ad67b14e8b2ddc80e15a15cff132d8</Anchor>
    <Abstract>Sets camera up vector. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a6d8afdc1b8b755bef0b0a13691de115a</Anchor>
    <Abstract>Gets camera up vector. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRotationMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a696c4a2880726ac4dec01974168ad0e7</Anchor>
    <Abstract>Gets the camera rotation matrix. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFieldOfView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>aa208347c05a1f47ae0562950547343bc</Anchor>
    <Abstract>The field of view is the extent of the observable world that is seen at any given moment...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFieldOfView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a60c233a5b53c7d8bbad0a88ea753fca9</Anchor>
    <Abstract>Set the field of view of the camera. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>aeda21b6f02421dedc266b992fbfe89a4</Anchor>
    <Abstract>Set the aspect ratio of the camera. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>afb30957156d54cefd98ba65c29638dc9</Anchor>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAperture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a9873a3ba6d6c346e4b5051a11b2ff748</Anchor>
    <Abstract>The aperture determines how collimated the admitted rays are, which is of great importance for the ap...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAperture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>add438a8d6757cc35d463e89bb213e768</Anchor>
    <Abstract>The aperture determines how collimated the admitted rays are, which is of great importance for the ap...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFocalLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>adb7e9f91916e49cd6d2a4370908c8a82</Anchor>
    <Abstract>The focal length of an optical system is a measure of how strongly the system converges or diverges l...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFocalLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a6fc8b59a7b5e13317810e3299f1928a4</Anchor>
    <Abstract>The focal length of an optical system is a measure of how strongly the system converges or diverges l...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStereoMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a9d72938ca0b714a6a8f7132546f5033d</Anchor>
    <Abstract>Sets the stereo mode of the camera (Left eye, Right eye or Side by Side) </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStereoMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a984359963515fe34b6f12fadf105f86e</Anchor>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEyeSeparation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a6f4f1b8f69cbf91e671c68e055fb9f92</Anchor>
    <Abstract>Sets the eye separation of the stereo camera. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEyeSeparation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>ab637fd07f7b224e27e24136285eb6a12</Anchor>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a0378b8d85d011a5b524746f4e23e34e6</Anchor>
    <Abstract>Resets the camera to its initial values. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>acb0d7fd498efcabe617152ddbd198b13</Anchor>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a4215decd15d58ff06710cca077e87c2c</Anchor>
    <Abstract>Reset the modified flag. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setClipPlanes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>ac5076f27474c37ab25469772802eb382</Anchor>
    <Abstract>Sets the camera clip planes. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getClipPlanes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>aaebbeb42dcb46f787b6ad7ef33fe8ee7</Anchor>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::OptiXEngine</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::OptiXEngine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_opti_x_engine.html</Path>
    <Abstract>OptiX implementation of the ray-tracing engine. </Abstract>
    <DeclaredIn>OptiXEngine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OptiXEngine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_opti_x_engine.html</Path>
    <Anchor>a26d851c49d7b082331daf3b2b1c18b7f</Anchor>
    <DeclaredIn>OptiXEngine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OptiXEngine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_opti_x_engine.html</Path>
    <Anchor>a80770420c56d598856208930a6c980af</Anchor>
    <Abstract>Commits changes to the engine. </Abstract>
    <DeclaredIn>OptiXEngine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OptiXEngine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_opti_x_engine.html</Path>
    <Anchor>a84983ac35948efb4b338404bafd49c6e</Anchor>
    <Abstract>Renders the current scene and populates the frame buffer accordingly. </Abstract>
    <DeclaredIn>OptiXEngine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preRender</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OptiXEngine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_opti_x_engine.html</Path>
    <Anchor>a7a9917870fbc10acfed91bc86ea2aca9</Anchor>
    <Abstract>Executes engine specific pre-render operations. </Abstract>
    <DeclaredIn>OptiXEngine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postRender</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OptiXEngine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_opti_x_engine.html</Path>
    <Anchor>a8991f0144ee8be096955da98038c8ed9</Anchor>
    <Abstract>Executes engine specific post-render operations. </Abstract>
    <DeclaredIn>OptiXEngine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinimumFrameSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OptiXEngine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_opti_x_engine.html</Path>
    <Anchor>a5d09c7570b414937271701a36d776b98</Anchor>
    <DeclaredIn>OptiXEngine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Engine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a9b750d4a7b2e945f2f7cb0726540f27d</Anchor>
    <Abstract>Engine contructor. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extensionInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>aed425b47972bb4cba6a0ea1e00330b4f</Anchor>
    <Abstract>Called after the given extension plugin was created to perform engine-specific initialization on a gi...</Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScene</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>aa7447c013f31279eecf99d3420ce641d</Anchor>
    <Abstract>Gets the scene. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a651d4f6e12e6f6ea73089150ee37b8b0</Anchor>
    <Abstract>Gets the frame buffer. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCamera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a05478fdf6ae8dd3b0716bc8be93c83f9</Anchor>
    <Abstract>Gets the camera. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>af961a55c58767fdc61b67497abcbf7bb</Anchor>
    <Abstract>Gets the renderer. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParametersManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>afd9ddbaac2d1c22d00c16a118e7b3a29</Anchor>
    <Abstract>Gets the parameters manager. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setActiveRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a65a906caa0f052f74d57a646d7457a05</Anchor>
    <Abstract>Active renderer. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reshape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a840980ce1525d0e767140ca591deafb0</Anchor>
    <Abstract>Reshapes the current frame buffers. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultCamera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a206d534f22b8265dd2d9c5d335980487</Anchor>
    <Abstract>Sets default camera according to scene bounding box. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultEpsilon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a09847c925ccc8aa4c98a2b5a7d7f1fec</Anchor>
    <Abstract>Sets default epsilon to scene bounding box. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeMaterials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a653f2aa1e6003342b6bdc91ca6972b51</Anchor>
    <Abstract>Initializes materials for the current scene. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetFrameNumber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a76208420463fc2fa30713135417373e5</Anchor>
    <Abstract>resets frame number </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameNumber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>ad7f2f97d88f39783e57fe2fb79aa348c</Anchor>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSupportedFrameSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a5dc71a22ec526b9792836221b2832be0</Anchor>
    <Abstract>Adapts the size of the frame buffer according to camera requirements. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLastOperation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a3e2bfaba8b7dd58f6233725ca015ac47</Anchor>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLastProgress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a908d7ed1babfd302fd03f848a51bbf45</Anchor>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>haveDeflectPixelOp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a49c13d75aac81d4ce47e50ceb95a7b1a</Anchor>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recreate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>af73ce5c200238ee584ac21e3a394d420</Anchor>
    <Abstract>Recreates the engine according to new parameters, e.g. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::OptiXFrameBuffer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::OptiXFrameBuffer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_opti_x_frame_buffer.html</Path>
    <Abstract>OptiX specific frame buffer. </Abstract>
    <DeclaredIn>OptiXFrameBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::OptiXRenderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::OptiXRenderer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_opti_x_renderer.html</Path>
    <Abstract>OptiX specific renderer. </Abstract>
    <DeclaredIn>OptiXRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::OptiXScene</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::OptiXScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_opti_x_scene.html</Path>
    <Abstract>OptiX specific scene. </Abstract>
    <DeclaredIn>OptiXScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OptiXScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_opti_x_scene.html</Path>
    <Anchor>a929bd8fd192f7340b2e7e8eb9b0349ba</Anchor>
    <Abstract>Called after scene-related changes have been made before rendering the scene. </Abstract>
    <DeclaredIn>OptiXScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildGeometry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OptiXScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_opti_x_scene.html</Path>
    <Anchor>ad3de43780ef77d31c324bb9396f7a741</Anchor>
    <Abstract>Converts scene geometry into rendering engine specific data structures. </Abstract>
    <DeclaredIn>OptiXScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serializeGeometry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OptiXScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_opti_x_scene.html</Path>
    <Anchor>a83dd7d1fac3ec8d67a17ac3696628a62</Anchor>
    <Abstract>Serializes scene geometry into rendering engine specific data structures. </Abstract>
    <DeclaredIn>OptiXScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitLights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OptiXScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_opti_x_scene.html</Path>
    <Anchor>a79fc74b6b6b8274c2befb84fc930fd85</Anchor>
    <Abstract>Commit lights to renderers. </Abstract>
    <DeclaredIn>OptiXScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitMaterials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OptiXScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_opti_x_scene.html</Path>
    <Anchor>a008ed42ddd69bb3e924fcaa14539982a</Anchor>
    <Abstract>Commit materials to renderers. </Abstract>
    <DeclaredIn>OptiXScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitSimulationData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OptiXScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_opti_x_scene.html</Path>
    <Anchor>af7077a0b459a2a27db13b0ca5c1dc726</Anchor>
    <Abstract>Attach simulation data to renderer. </Abstract>
    <DeclaredIn>OptiXScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitVolumeData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OptiXScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_opti_x_scene.html</Path>
    <Anchor>aabc1d5e3e24845a20d5e74fea75b25a3</Anchor>
    <Abstract>Attach volume data to renderer. </Abstract>
    <DeclaredIn>OptiXScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitTransferFunctionData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OptiXScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_opti_x_scene.html</Path>
    <Anchor>ad2804172919ba949c1b76764f8dcc5c1</Anchor>
    <Abstract>Commit transfer function data to renderer. </Abstract>
    <DeclaredIn>OptiXScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OptiXScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_opti_x_scene.html</Path>
    <Anchor>ab4142145a22dd06167d073d37af2170e</Anchor>
    <Abstract>Resets the current scene (Geometry, lights, materials, etc). </Abstract>
    <DeclaredIn>OptiXScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>saveSceneToCacheFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OptiXScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_opti_x_scene.html</Path>
    <Anchor>a6bb8367f6b887be1c4528c349098d786</Anchor>
    <Abstract>Saves geometry a binary cache file defined by the –save-cache-file command line parameter. </Abstract>
    <DeclaredIn>OptiXScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isVolumeSupported</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OptiXScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_opti_x_scene.html</Path>
    <Anchor>a331ff16e52f9706cec948385933bef82</Anchor>
    <DeclaredIn>OptiXScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Scene</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a17f0dfc82bcbd4f69c9f1b436fcb1d66</Anchor>
    <Abstract>Creates a scene object responsible for handling geometry, volumes, materials and light sources...</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildMaterials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ac1672a0b93b6eed9902a50bb6d0131eb</Anchor>
    <Abstract>Creates the materials handled by the scene, and available to the scene geometry. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaterials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a70238d562cf41d097a48bfa66c4c4094</Anchor>
    <Abstract>Sets the materials handled by the scene, and available to the scene geometry. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaterial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>affe649838131b207676b0ad67af1eea1</Anchor>
    <Abstract>Returns the material object for a given index. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWorldBounds</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ae1c099a5104acb90e3d6f84a69fe90e4</Anchor>
    <Abstract>Returns the bounding box for the whole scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildEnvironment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a49c9856f08fe184d3b956b4a0e55657b</Anchor>
    <Abstract>Build an environment in addition to the loaded data, and according to the geometry parameters (comman...</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a7d89afe05548c882153522a0a4f751ac</Anchor>
    <Abstract>Attaches a light source to the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>aa918d868eaed44684a990f669b333249</Anchor>
    <Abstract>Gets a light source from the scene for a given index. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a681a8a7e95f279226a0ac02f2b8f4201</Anchor>
    <Abstract>Removes a light source from the scene for a given index. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearLights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a922c519f4acc99228313732f25ee5ec6</Anchor>
    <Abstract>Removes all light sources from the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildDefault</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a13667f2db068b46530102270f3b0e0ce</Anchor>
    <Abstract>Builds a default scene made of a Cornell box, a refelctive cube, and a transparent sphere...</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>empty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a637be3e4e463527da2f316b520c20bcd</Anchor>
    <Abstract>Return true if the scene does not contain any geometry. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSpheres</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a04dc9203e6beb571cb5684e21ea1982b</Anchor>
    <Abstract>Returns spheres handled by the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCylinders</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ac38001d93350e3a6121599b221082ec8</Anchor>
    <Abstract>Returns cylinders handled by the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCones</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>adcc03274be4840d364b3341a9a1b0ef5</Anchor>
    <Abstract>Returns cones handled by the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaterials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>aa945fbb2317b8537c3a770e5f1d3f31f</Anchor>
    <Abstract>Returns materials handled by the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTextures</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a80cd3286ef725decc8527534072bf466</Anchor>
    <Abstract>Returns textures handled by the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTriangleMeshes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a2ebeb48191b7b81d19d5f7ef104af35c</Anchor>
    <Abstract>Returns triangle meshes handled by the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a35ecec341354107001f1369f68500aaa</Anchor>
    <Abstract>Returns the simulutation handler. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a0ebde9602b22c831f46ca3fa07db6795</Anchor>
    <Abstract>Sets the simulation handler. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVolumeHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a5074d2cb2ed54551637fdcd21b25809c</Anchor>
    <Abstract>Returns volume data. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCADiffusionSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a6dd8458feefbd6d61c5e9a44b477acdd</Anchor>
    <Abstract>Sets the Calcium diffusion simulation handler. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCADiffusionSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ae18fcfd7021a6ef3c5624c0e466dbc3c</Anchor>
    <Abstract>Gets the Calcium diffusion simulation handler. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTransferFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ae0c3581183ef65ffedff254c0817eaf5</Anchor>
    <Abstract>Build a color map from a file, according to the colormap-file scene parameters. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRenderers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ac93ca59e6d7c98b955af7ff9f726e74c</Anchor>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSpheresDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>aee00cb9bde9c26e3d38b6b14dd2421e1</Anchor>
    <Abstract>Sets spheres as dirty, meaning that they need to be serialized and sent to the rendering engine...</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCylindersDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ac064db2eb8b2f67213d6dcad5b47c3b6</Anchor>
    <Abstract>Sets cylinders as dirty, meaning that they need to be serialized and sent to the rendering engine...</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConesDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a77e955b7c5fd52040be500024aec1827</Anchor>
    <Abstract>Sets cones as dirty, meaning that they need to be serialized and sent to the rendering engine...</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTrianglesMeshesDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a846ba8492627bd0ae22b246c5c2a8be2</Anchor>
    <Abstract>Sets meshes as dirty, meaning that they need to be serialized and sent to the rendering engine...</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a46d51f55bcbf41ff0dac8fa87a5b005e</Anchor>
    <Abstract>Sets all geometries as dirty, meaning that they need to be serialized and sent to the rendering engin...</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::OSPRayCamera</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::OSPRayCamera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_camera.html</Path>
    <Abstract>OPSRAY specific camera. </Abstract>
    <DeclaredIn>OSPRayCamera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayCamera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_camera.html</Path>
    <Anchor>a4d0d1cd0dc21287c004888322417da9f</Anchor>
    <Abstract>Commits the changes held by the camera object so that attributes become available to the OSPRay rende...</Abstract>
    <DeclaredIn>OSPRayCamera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>impl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayCamera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_camera.html</Path>
    <Anchor>a5790eff76579edc1639f952921a24a11</Anchor>
    <Abstract>Gets the OSPRay implementation of the camera object. </Abstract>
    <DeclaredIn>OSPRayCamera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnvironmentMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayCamera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_camera.html</Path>
    <Anchor>ab0b292441fd978c5a3f98285e6d70249</Anchor>
    <Abstract>Enable/disables environment mapping. </Abstract>
    <DeclaredIn>OSPRayCamera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Camera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a4196e54bb40f2270f6f3c82433296745</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a5583d0a667ef2d3ad4c5bc3ea408783b</Anchor>
    <Abstract>Sets position, target and up vector. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a0922ca991159fe5fc401bae15597230e</Anchor>
    <Abstract>Gets camera type. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>ad3ccec7616d8d86e5719a53512c39c68</Anchor>
    <Abstract>Sets camera position. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>af2a3a1200c668a03daeaa9f80255c6c2</Anchor>
    <Abstract>Gets camera position. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTarget</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>ac93d24c8fe13e55d1092817bb94983a1</Anchor>
    <Abstract>Sets camera target. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTarget</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a87ddb41917ebae248c1ea6a81bb161ee</Anchor>
    <Abstract>Gets camera target. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a60ad67b14e8b2ddc80e15a15cff132d8</Anchor>
    <Abstract>Sets camera up vector. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a6d8afdc1b8b755bef0b0a13691de115a</Anchor>
    <Abstract>Gets camera up vector. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRotationMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a696c4a2880726ac4dec01974168ad0e7</Anchor>
    <Abstract>Gets the camera rotation matrix. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFieldOfView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>aa208347c05a1f47ae0562950547343bc</Anchor>
    <Abstract>The field of view is the extent of the observable world that is seen at any given moment...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFieldOfView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a60c233a5b53c7d8bbad0a88ea753fca9</Anchor>
    <Abstract>Set the field of view of the camera. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>aeda21b6f02421dedc266b992fbfe89a4</Anchor>
    <Abstract>Set the aspect ratio of the camera. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>afb30957156d54cefd98ba65c29638dc9</Anchor>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAperture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a9873a3ba6d6c346e4b5051a11b2ff748</Anchor>
    <Abstract>The aperture determines how collimated the admitted rays are, which is of great importance for the ap...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAperture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>add438a8d6757cc35d463e89bb213e768</Anchor>
    <Abstract>The aperture determines how collimated the admitted rays are, which is of great importance for the ap...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFocalLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>adb7e9f91916e49cd6d2a4370908c8a82</Anchor>
    <Abstract>The focal length of an optical system is a measure of how strongly the system converges or diverges l...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFocalLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a6fc8b59a7b5e13317810e3299f1928a4</Anchor>
    <Abstract>The focal length of an optical system is a measure of how strongly the system converges or diverges l...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStereoMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a9d72938ca0b714a6a8f7132546f5033d</Anchor>
    <Abstract>Sets the stereo mode of the camera (Left eye, Right eye or Side by Side) </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStereoMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a984359963515fe34b6f12fadf105f86e</Anchor>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEyeSeparation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a6f4f1b8f69cbf91e671c68e055fb9f92</Anchor>
    <Abstract>Sets the eye separation of the stereo camera. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEyeSeparation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>ab637fd07f7b224e27e24136285eb6a12</Anchor>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a0378b8d85d011a5b524746f4e23e34e6</Anchor>
    <Abstract>Resets the camera to its initial values. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>acb0d7fd498efcabe617152ddbd198b13</Anchor>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a4215decd15d58ff06710cca077e87c2c</Anchor>
    <Abstract>Reset the modified flag. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setClipPlanes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>ac5076f27474c37ab25469772802eb382</Anchor>
    <Abstract>Sets the camera clip planes. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getClipPlanes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>aaebbeb42dcb46f787b6ad7ef33fe8ee7</Anchor>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::OSPRayEngine</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::OSPRayEngine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_engine.html</Path>
    <Abstract>OSPRay implementation of the ray-tracing engine. </Abstract>
    <DeclaredIn>OSPRayEngine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayEngine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_engine.html</Path>
    <Anchor>a18eab5dc63500e417433cd0b9a4a4ee6</Anchor>
    <DeclaredIn>OSPRayEngine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayEngine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_engine.html</Path>
    <Anchor>a03db1cc79ac850a139d4f3e1730340b0</Anchor>
    <Abstract>Commits changes to the engine. </Abstract>
    <DeclaredIn>OSPRayEngine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayEngine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_engine.html</Path>
    <Anchor>adb5872f032ee147b699ffd8c1171c5e0</Anchor>
    <Abstract>Renders the current scene and populates the frame buffer accordingly. </Abstract>
    <DeclaredIn>OSPRayEngine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preRender</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayEngine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_engine.html</Path>
    <Anchor>a8013acb4c26a1f64da41a055035dcd78</Anchor>
    <Abstract>Executes engine specific pre-render operations. </Abstract>
    <DeclaredIn>OSPRayEngine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postRender</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayEngine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_engine.html</Path>
    <Anchor>a99d0f628e96540714f0d1c7e5dc522fb</Anchor>
    <Abstract>Executes engine specific post-render operations. </Abstract>
    <DeclaredIn>OSPRayEngine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSupportedFrameSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayEngine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_engine.html</Path>
    <Anchor>a879bc415aecede0e68ed6e6b60406886</Anchor>
    <Abstract>Constrain size to multiples of the OSPRay tile size in case of streaming using the DeflectPixelOp...</Abstract>
    <DeclaredIn>OSPRayEngine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinimumFrameSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayEngine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_engine.html</Path>
    <Anchor>ab95e9bb89f2c5b0f9aa734b56789d415</Anchor>
    <DeclaredIn>OSPRayEngine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>haveDeflectPixelOp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayEngine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_engine.html</Path>
    <Anchor>a6b0edc0c82065dda0378b57113f329d9</Anchor>
    <DeclaredIn>OSPRayEngine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Engine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a9b750d4a7b2e945f2f7cb0726540f27d</Anchor>
    <Abstract>Engine contructor. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extensionInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>aed425b47972bb4cba6a0ea1e00330b4f</Anchor>
    <Abstract>Called after the given extension plugin was created to perform engine-specific initialization on a gi...</Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScene</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>aa7447c013f31279eecf99d3420ce641d</Anchor>
    <Abstract>Gets the scene. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a651d4f6e12e6f6ea73089150ee37b8b0</Anchor>
    <Abstract>Gets the frame buffer. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCamera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a05478fdf6ae8dd3b0716bc8be93c83f9</Anchor>
    <Abstract>Gets the camera. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>af961a55c58767fdc61b67497abcbf7bb</Anchor>
    <Abstract>Gets the renderer. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParametersManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>afd9ddbaac2d1c22d00c16a118e7b3a29</Anchor>
    <Abstract>Gets the parameters manager. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setActiveRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a65a906caa0f052f74d57a646d7457a05</Anchor>
    <Abstract>Active renderer. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reshape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a840980ce1525d0e767140ca591deafb0</Anchor>
    <Abstract>Reshapes the current frame buffers. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultCamera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a206d534f22b8265dd2d9c5d335980487</Anchor>
    <Abstract>Sets default camera according to scene bounding box. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultEpsilon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a09847c925ccc8aa4c98a2b5a7d7f1fec</Anchor>
    <Abstract>Sets default epsilon to scene bounding box. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeMaterials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a653f2aa1e6003342b6bdc91ca6972b51</Anchor>
    <Abstract>Initializes materials for the current scene. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetFrameNumber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a76208420463fc2fa30713135417373e5</Anchor>
    <Abstract>resets frame number </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameNumber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>ad7f2f97d88f39783e57fe2fb79aa348c</Anchor>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLastOperation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a3e2bfaba8b7dd58f6233725ca015ac47</Anchor>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLastProgress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a908d7ed1babfd302fd03f848a51bbf45</Anchor>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recreate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>af73ce5c200238ee584ac21e3a394d420</Anchor>
    <Abstract>Recreates the engine according to new parameters, e.g. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::OSPRayFrameBuffer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::OSPRayFrameBuffer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_frame_buffer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::OSPRayRenderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::OSPRayRenderer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_renderer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::OSPRayScene</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::OSPRayScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_scene.html</Path>
    <Abstract>OSPRray specific scene. </Abstract>
    <DeclaredIn>OSPRayScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_scene.html</Path>
    <Anchor>a8178ceb54f910c39059b1888f8de8ba3</Anchor>
    <Abstract>Called after scene-related changes have been made before rendering the scene. </Abstract>
    <DeclaredIn>OSPRayScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildGeometry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_scene.html</Path>
    <Anchor>ae66bac0fc386bc938be08d31ed718c65</Anchor>
    <Abstract>Converts scene geometry into rendering engine specific data structures. </Abstract>
    <DeclaredIn>OSPRayScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serializeGeometry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_scene.html</Path>
    <Anchor>a42e388f6a471df981eb93842d9be6fd5</Anchor>
    <Abstract>Serializes scene geometry into rendering engine specific data structures. </Abstract>
    <DeclaredIn>OSPRayScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitLights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_scene.html</Path>
    <Anchor>a98df27705bcc48b935d22ed0256cf89c</Anchor>
    <Abstract>Commit lights to renderers. </Abstract>
    <DeclaredIn>OSPRayScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitMaterials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_scene.html</Path>
    <Anchor>aff8ee0e211d66e28dd2d0581ffec9228</Anchor>
    <Abstract>Commit materials to renderers. </Abstract>
    <DeclaredIn>OSPRayScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitSimulationData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_scene.html</Path>
    <Anchor>aca3d28f390ec393d763fa27831b4dec7</Anchor>
    <Abstract>Attach simulation data to renderer. </Abstract>
    <DeclaredIn>OSPRayScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitVolumeData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_scene.html</Path>
    <Anchor>ac0d6b7acd500f2a3499de9234fcfad41</Anchor>
    <Abstract>Attach volume data to renderer. </Abstract>
    <DeclaredIn>OSPRayScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitTransferFunctionData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_scene.html</Path>
    <Anchor>aa8b9639a0aba20a2795d317b1a21abc5</Anchor>
    <Abstract>Commit transfer function data to renderer. </Abstract>
    <DeclaredIn>OSPRayScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_scene.html</Path>
    <Anchor>aa17bae858b1195c11c2c44ae6d2a2b67</Anchor>
    <Abstract>Resets the current scene (Geometry, lights, materials, etc). </Abstract>
    <DeclaredIn>OSPRayScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>saveSceneToCacheFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_scene.html</Path>
    <Anchor>ad9ea4a411a09d9f76af6ad5f428b4762</Anchor>
    <Abstract>Saves geometry a binary cache file defined by the –save-cache-file command line parameter. </Abstract>
    <DeclaredIn>OSPRayScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isVolumeSupported</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::OSPRayScene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_o_s_p_ray_scene.html</Path>
    <Anchor>ae4904bea5fbd897256145650bfbebbe2</Anchor>
    <DeclaredIn>OSPRayScene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Scene</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a17f0dfc82bcbd4f69c9f1b436fcb1d66</Anchor>
    <Abstract>Creates a scene object responsible for handling geometry, volumes, materials and light sources...</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildMaterials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ac1672a0b93b6eed9902a50bb6d0131eb</Anchor>
    <Abstract>Creates the materials handled by the scene, and available to the scene geometry. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaterials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a70238d562cf41d097a48bfa66c4c4094</Anchor>
    <Abstract>Sets the materials handled by the scene, and available to the scene geometry. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaterial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>affe649838131b207676b0ad67af1eea1</Anchor>
    <Abstract>Returns the material object for a given index. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWorldBounds</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ae1c099a5104acb90e3d6f84a69fe90e4</Anchor>
    <Abstract>Returns the bounding box for the whole scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildEnvironment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a49c9856f08fe184d3b956b4a0e55657b</Anchor>
    <Abstract>Build an environment in addition to the loaded data, and according to the geometry parameters (comman...</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a7d89afe05548c882153522a0a4f751ac</Anchor>
    <Abstract>Attaches a light source to the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>aa918d868eaed44684a990f669b333249</Anchor>
    <Abstract>Gets a light source from the scene for a given index. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a681a8a7e95f279226a0ac02f2b8f4201</Anchor>
    <Abstract>Removes a light source from the scene for a given index. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearLights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a922c519f4acc99228313732f25ee5ec6</Anchor>
    <Abstract>Removes all light sources from the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildDefault</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a13667f2db068b46530102270f3b0e0ce</Anchor>
    <Abstract>Builds a default scene made of a Cornell box, a refelctive cube, and a transparent sphere...</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>empty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a637be3e4e463527da2f316b520c20bcd</Anchor>
    <Abstract>Return true if the scene does not contain any geometry. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSpheres</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a04dc9203e6beb571cb5684e21ea1982b</Anchor>
    <Abstract>Returns spheres handled by the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCylinders</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ac38001d93350e3a6121599b221082ec8</Anchor>
    <Abstract>Returns cylinders handled by the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCones</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>adcc03274be4840d364b3341a9a1b0ef5</Anchor>
    <Abstract>Returns cones handled by the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaterials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>aa945fbb2317b8537c3a770e5f1d3f31f</Anchor>
    <Abstract>Returns materials handled by the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTextures</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a80cd3286ef725decc8527534072bf466</Anchor>
    <Abstract>Returns textures handled by the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTriangleMeshes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a2ebeb48191b7b81d19d5f7ef104af35c</Anchor>
    <Abstract>Returns triangle meshes handled by the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a35ecec341354107001f1369f68500aaa</Anchor>
    <Abstract>Returns the simulutation handler. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a0ebde9602b22c831f46ca3fa07db6795</Anchor>
    <Abstract>Sets the simulation handler. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVolumeHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a5074d2cb2ed54551637fdcd21b25809c</Anchor>
    <Abstract>Returns volume data. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCADiffusionSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a6dd8458feefbd6d61c5e9a44b477acdd</Anchor>
    <Abstract>Sets the Calcium diffusion simulation handler. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCADiffusionSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ae18fcfd7021a6ef3c5624c0e466dbc3c</Anchor>
    <Abstract>Gets the Calcium diffusion simulation handler. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTransferFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ae0c3581183ef65ffedff254c0817eaf5</Anchor>
    <Abstract>Build a color map from a file, according to the colormap-file scene parameters. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRenderers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ac93ca59e6d7c98b955af7ff9f726e74c</Anchor>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSpheresDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>aee00cb9bde9c26e3d38b6b14dd2421e1</Anchor>
    <Abstract>Sets spheres as dirty, meaning that they need to be serialized and sent to the rendering engine...</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCylindersDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ac064db2eb8b2f67213d6dcad5b47c3b6</Anchor>
    <Abstract>Sets cylinders as dirty, meaning that they need to be serialized and sent to the rendering engine...</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConesDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a77e955b7c5fd52040be500024aec1827</Anchor>
    <Abstract>Sets cones as dirty, meaning that they need to be serialized and sent to the rendering engine...</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTrianglesMeshesDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a846ba8492627bd0ae22b246c5c2a8be2</Anchor>
    <Abstract>Sets meshes as dirty, meaning that they need to be serialized and sent to the rendering engine...</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a46d51f55bcbf41ff0dac8fa87a5b005e</Anchor>
    <Abstract>Sets all geometries as dirty, meaning that they need to be serialized and sent to the rendering engin...</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ParametersManager</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Abstract>Class managing all parameters registered by the application. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>af1446cfbea9a2fb9348a8625bd69bb18</Anchor>
    <Abstract>Registers specific parameters to the manager. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>usage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>a2fc48e699c64648868460809b3343a51</Anchor>
    <Abstract>Displays usage of registered parameters. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>a0a0967c0597705f2c6f936a2cfc98b3c</Anchor>
    <Abstract>Displays values registered parameters. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>a512452ae6195a30b5c733f75c7ea1c54</Anchor>
    <Abstract>Parses registered parameters. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRenderingParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>a3558f229417081e9ed7eee77acfa73f0</Anchor>
    <Abstract>Gets rendering parameters. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGeometryParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>a42770db58f8d661744cd2e029b314295</Anchor>
    <Abstract>Gets geometry parameters. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getApplicationParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>aa1bd17b18fd4fe6d75abf1165e19830a</Anchor>
    <Abstract>Gets application parameters. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSceneParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>a2bc6a8dbef296ff837e33911cf3e4e55</Anchor>
    <Abstract>Gets scene parameters. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVolumeParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>af96aa3d61e0e96870b7027570c832829</Anchor>
    <Abstract>Gets volume parameters. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>a1d25e34639dbb420f9a3405b556a88b0</Anchor>
    <Abstract>Sets a parameter (application, geometry, rendering, etc). </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ParticleRenderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ParticleRenderer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_particle_renderer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParticleRenderer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_particle_renderer.html</Path>
    <Anchor>af77fad98b58d93e68c2b716fb3d69b30</Anchor>
    <Abstract>Returns the class name as a string. </Abstract>
    <DeclaredIn>ParticleRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::PointLight</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::PointLight</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_point_light.html</Path>
    <Abstract>Point light object. </Abstract>
    <DeclaredIn>PointLight.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PointLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PointLight</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_point_light.html</Path>
    <Anchor>ac360885334a6778949e00d7070c8a9ae</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>PointLight.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PointLight</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_point_light.html</Path>
    <Anchor>a14c49779d4e61b944511e07c7f7cad13</Anchor>
    <Abstract>Light source position. </Abstract>
    <DeclaredIn>PointLight.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCutoffDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PointLight</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_point_light.html</Path>
    <Anchor>a782a3fb04f2cf4a089a738e5bc105698</Anchor>
    <Abstract>Light source cutoff distance. </Abstract>
    <DeclaredIn>PointLight.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Light</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_light.html</Path>
    <Anchor>ac418f89179bfb0698b73c001729d9423</Anchor>
    <Abstract>Light source RGB color. </Abstract>
    <DeclaredIn>Light.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIntensity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Light</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_light.html</Path>
    <Anchor>a7219ba01bccbf75a30e2be20b3f62fb7</Anchor>
    <Abstract>Light source intensity. </Abstract>
    <DeclaredIn>Light.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Primitive</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Primitive</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_primitive.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ProteinLoader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ProteinLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_protein_loader.html</Path>
    <Abstract>Loads protein from PDB files http://www.rcsb.org. </Abstract>
    <DeclaredIn>ProteinLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importPDBFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ProteinLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_protein_loader.html</Path>
    <Anchor>a91c82bfd2699c0d8023a37d7e9f6327f</Anchor>
    <Abstract>Imports atoms from a given PDB file. </Abstract>
    <DeclaredIn>ProteinLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaterialKd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ProteinLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_protein_loader.html</Path>
    <Anchor>a5d8b270166fd84a4bc0b2c1fd3354abb</Anchor>
    <Abstract>Returns the RGB composants for a given atom index, and according to the JMol scheme. </Abstract>
    <DeclaredIn>ProteinLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ProximityRenderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ProximityRenderer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_proximity_renderer.html</Path>
    <Abstract>The ProximityRenderer uses an algorithm similar to ambient occlusion to identify touches between geom...</Abstract>
    <DeclaredIn>ProximityRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ProximityRenderer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_proximity_renderer.html</Path>
    <Anchor>ac927f95ac68c10d74a0afeb819eb05f3</Anchor>
    <Abstract>Returns the class name as a string. </Abstract>
    <DeclaredIn>ProximityRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ProximityRenderer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_proximity_renderer.html</Path>
    <Anchor>aa4caa1d5f633f2a4dca4b63e7aa74bdd</Anchor>
    <Abstract>Commits the changes held by the object so that attributes become available to the OSPRay rendering en...</Abstract>
    <DeclaredIn>ProximityRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Renderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Renderer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_renderer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::RenderingParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Abstract>Manages rendering parameters. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a59da280f420719c169f81144aabe97a4</Anchor>
    <Abstract>Displays values of registered parameters. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEngine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a080d078bf7fe2f1da78c69026b96ddd7</Anchor>
    <Abstract>Engine. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getModule</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a92b938bead94e14d11f9bae17be326c7</Anchor>
    <Abstract>OSPRay module. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a83c2c86a1db9882330fc1845118a202d</Anchor>
    <Abstract>OSPRay renderer. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRenderers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a4c01720746de6ba46178db830d24e1d1</Anchor>
    <Abstract>OSPRay supported renderers. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getShadows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>ade7ee7e3226529b435fa3ffefd46c7e7</Anchor>
    <Abstract>Shadows. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSoftShadows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>abc86470c43608043d4579f2ac566a76e</Anchor>
    <Abstract>Softs Shadows generated by randomizing light source position. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAmbientOcclusionStrength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>adcfbde4abb46d610c27c3a6ec8361cff</Anchor>
    <Abstract>Ambient occlusion. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getShading</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a0dcd0049807d927c1c68ab78da95c228</Anchor>
    <Abstract>Shading applied to the geometry. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSamplesPerPixel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>abcf9f98c39218db3f8c95b6aa7df3b6c</Anchor>
    <Abstract>Number of samples per pixel. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLightEmittingMaterials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a25ef04f2741d3931b9a024fb933df22d</Anchor>
    <Abstract>Enables photon emission according to the radiance value of the material. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDetectionDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a32a712c082135bfe6d201d24bcd2a36e</Anchor>
    <Abstract>Defines the maximum distance between intersection and surrounding geometry for touch detection render...</Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDetectionOnDifferentMaterial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a6e398cbd42338b7af0613f2959e7b6ca</Anchor>
    <Abstract>Defines if touch detection applies if the material of the surrounding geometry is different from the ...</Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDetectionNearColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>aba00b850152ff2e80ea4fae3b1c6a1cf</Anchor>
    <Abstract>Near color used by touch detection renderer. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDetectionFarColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>ace5b6ac9558b8aa5b952c0f4df37d3ec</Anchor>
    <Abstract>Far color used by touch detection renderer. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEpsilon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>aa67ca19a55214d45bf79ca1a905557be</Anchor>
    <Abstract>Raytracers have to deal with the finite precision of computer calculations. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCameraType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>aa00ac300694d6ee5cb52a4e2f636b7c1</Anchor>
    <Abstract>Camera type. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEpsilon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>abc66474540605dc0c643e1dae19027a6</Anchor>
    <Abstract>Epsilon. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeadLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a5a0b99764433a5484679dcde5489fd89</Anchor>
    <Abstract>Light source follow camera origin. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAccumulation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a2df3b549c61199b65ddf134b334a2de5</Anchor>
    <Abstract>If the rendering should be refined by accumulating multiple passes. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>af8c4e3e33c6d75a71893d7d48f0e4fec</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>a23279a7de7c2c0becbf81c1d242775bf</Anchor>
    <Abstract>Parses parameters managed by the class. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>usage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>aea979c57e60d5cdb9569dc154382af58</Anchor>
    <Abstract>Displays the usage of registered parameters. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>a54da8b217bcd52a00a4b039b98abfcbd</Anchor>
    <Abstract>Sets a parameter. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::RenderInput</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::RenderInput</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_render_input.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::RenderOutput</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::RenderOutput</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_render_output.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Scene</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Abstract>Scene object. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Scene</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a17f0dfc82bcbd4f69c9f1b436fcb1d66</Anchor>
    <Abstract>Creates a scene object responsible for handling geometry, volumes, materials and light sources...</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ac87b6e21aa844c490f10382b4ae8cd76</Anchor>
    <Abstract>Called after scene-related changes have been made before rendering the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildMaterials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ac1672a0b93b6eed9902a50bb6d0131eb</Anchor>
    <Abstract>Creates the materials handled by the scene, and available to the scene geometry. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaterials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a70238d562cf41d097a48bfa66c4c4094</Anchor>
    <Abstract>Sets the materials handled by the scene, and available to the scene geometry. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaterial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>affe649838131b207676b0ad67af1eea1</Anchor>
    <Abstract>Returns the material object for a given index. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitMaterials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ac5521b855bcdce23583403365fbabf2c</Anchor>
    <Abstract>Commit materials to renderers. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitLights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a35078348f0e81f34c915bf44d0e69e2c</Anchor>
    <Abstract>Commit lights to renderers. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildGeometry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ac186f12a5217a53ebd1a8d149c8fa71f</Anchor>
    <Abstract>Converts scene geometry into rendering engine specific data structures. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serializeGeometry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a1ea55034e7a66561c963e3516e4ac563</Anchor>
    <Abstract>Serializes scene geometry into rendering engine specific data structures. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitSimulationData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a3fde13a1660dd7d2b31e50e106b6436b</Anchor>
    <Abstract>Attach simulation data to renderer. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitVolumeData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a0083284491a532d8c819cff9eb7dc227</Anchor>
    <Abstract>Attach volume data to renderer. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitTransferFunctionData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>aeed6847564752be438e17e209867c3b5</Anchor>
    <Abstract>Commit transfer function data to renderer. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWorldBounds</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ae1c099a5104acb90e3d6f84a69fe90e4</Anchor>
    <Abstract>Returns the bounding box for the whole scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildEnvironment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a49c9856f08fe184d3b956b4a0e55657b</Anchor>
    <Abstract>Build an environment in addition to the loaded data, and according to the geometry parameters (comman...</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a7d89afe05548c882153522a0a4f751ac</Anchor>
    <Abstract>Attaches a light source to the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>aa918d868eaed44684a990f669b333249</Anchor>
    <Abstract>Gets a light source from the scene for a given index. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a681a8a7e95f279226a0ac02f2b8f4201</Anchor>
    <Abstract>Removes a light source from the scene for a given index. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearLights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a922c519f4acc99228313732f25ee5ec6</Anchor>
    <Abstract>Removes all light sources from the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildDefault</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a13667f2db068b46530102270f3b0e0ce</Anchor>
    <Abstract>Builds a default scene made of a Cornell box, a refelctive cube, and a transparent sphere...</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>empty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a637be3e4e463527da2f316b520c20bcd</Anchor>
    <Abstract>Return true if the scene does not contain any geometry. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSpheres</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a04dc9203e6beb571cb5684e21ea1982b</Anchor>
    <Abstract>Returns spheres handled by the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCylinders</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ac38001d93350e3a6121599b221082ec8</Anchor>
    <Abstract>Returns cylinders handled by the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCones</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>adcc03274be4840d364b3341a9a1b0ef5</Anchor>
    <Abstract>Returns cones handled by the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaterials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>aa945fbb2317b8537c3a770e5f1d3f31f</Anchor>
    <Abstract>Returns materials handled by the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTextures</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a80cd3286ef725decc8527534072bf466</Anchor>
    <Abstract>Returns textures handled by the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTriangleMeshes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a2ebeb48191b7b81d19d5f7ef104af35c</Anchor>
    <Abstract>Returns triangle meshes handled by the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a35ecec341354107001f1369f68500aaa</Anchor>
    <Abstract>Returns the simulutation handler. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a0ebde9602b22c831f46ca3fa07db6795</Anchor>
    <Abstract>Sets the simulation handler. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVolumeHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a5074d2cb2ed54551637fdcd21b25809c</Anchor>
    <Abstract>Returns volume data. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCADiffusionSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a6dd8458feefbd6d61c5e9a44b477acdd</Anchor>
    <Abstract>Sets the Calcium diffusion simulation handler. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCADiffusionSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ae18fcfd7021a6ef3c5624c0e466dbc3c</Anchor>
    <Abstract>Gets the Calcium diffusion simulation handler. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTransferFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ae0c3581183ef65ffedff254c0817eaf5</Anchor>
    <Abstract>Build a color map from a file, according to the colormap-file scene parameters. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a0056f019a5261be6f131b8eb38de2169</Anchor>
    <Abstract>Resets the current scene (Geometry, lights, materials, etc). </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>saveSceneToCacheFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a02722804a27cf1d458c09d3cd9a3b8f3</Anchor>
    <Abstract>Saves geometry a binary cache file defined by the –save-cache-file command line parameter. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isVolumeSupported</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a86009585882ba32e2938dde100097eea</Anchor>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRenderers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ac93ca59e6d7c98b955af7ff9f726e74c</Anchor>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSpheresDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>aee00cb9bde9c26e3d38b6b14dd2421e1</Anchor>
    <Abstract>Sets spheres as dirty, meaning that they need to be serialized and sent to the rendering engine...</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCylindersDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ac064db2eb8b2f67213d6dcad5b47c3b6</Anchor>
    <Abstract>Sets cylinders as dirty, meaning that they need to be serialized and sent to the rendering engine...</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setConesDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a77e955b7c5fd52040be500024aec1827</Anchor>
    <Abstract>Sets cones as dirty, meaning that they need to be serialized and sent to the rendering engine...</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTrianglesMeshesDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a846ba8492627bd0ae22b246c5c2a8be2</Anchor>
    <Abstract>Sets meshes as dirty, meaning that they need to be serialized and sent to the rendering engine...</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a46d51f55bcbf41ff0dac8fa87a5b005e</Anchor>
    <Abstract>Sets all geometries as dirty, meaning that they need to be serialized and sent to the rendering engin...</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::SceneLoader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::SceneLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene_loader.html</Path>
    <Abstract>Loads meshes according to given positions in space. </Abstract>
    <DeclaredIn>SceneLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importFromFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::SceneLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene_loader.html</Path>
    <Anchor>a81ffea194cf8aa8e0c5d7030bbcd6f15</Anchor>
    <Abstract>Imports a file containing the positions and the filename of a list of meshes. </Abstract>
    <DeclaredIn>SceneLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::SceneParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::SceneParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene_parameters.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::SceneParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene_parameters.html</Path>
    <Anchor>ae69b42b281f99d368ef62167a3a63a8f</Anchor>
    <Abstract>Displays values of registered parameters. </Abstract>
    <DeclaredIn>SceneParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimestamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::SceneParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene_parameters.html</Path>
    <Anchor>afb6065f0f191d74f0d159f61f5eca991</Anchor>
    <Abstract>Defines the current timestamp for the scene. </Abstract>
    <DeclaredIn>SceneParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAnimationDelta</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::SceneParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene_parameters.html</Path>
    <Anchor>a814d124dc9129a24385650dd44286d39</Anchor>
    <Abstract>The (frame) delta to apply for animations to select the next frame. </Abstract>
    <DeclaredIn>SceneParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEnvironmentMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::SceneParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene_parameters.html</Path>
    <Anchor>a365e760a80a1eb586614a95cd53ec696</Anchor>
    <Abstract>file name of the environment map </Abstract>
    <DeclaredIn>SceneParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>af8c4e3e33c6d75a71893d7d48f0e4fec</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>a23279a7de7c2c0becbf81c1d242775bf</Anchor>
    <Abstract>Parses parameters managed by the class. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>usage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>aea979c57e60d5cdb9569dc154382af58</Anchor>
    <Abstract>Displays the usage of registered parameters. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>a54da8b217bcd52a00a4b039b98abfcbd</Anchor>
    <Abstract>Sets a parameter. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ScreenSpaceProcessor</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ScreenSpaceProcessor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_screen_space_processor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ScreenSpaceProcessorData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ScreenSpaceProcessorData</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_screen_space_processor_data.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ShortcutInformation</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ShortcutInformation</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_shortcut_information.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::SimulationRenderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::SimulationRenderer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_simulation_renderer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::SimulationRenderer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_simulation_renderer.html</Path>
    <Anchor>a4280c3da33ea1c1e327550870e676f00</Anchor>
    <Abstract>Returns the class name as a string. </Abstract>
    <DeclaredIn>SimulationRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Sphere</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Sphere</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_sphere.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::SpikeSimulationHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::SpikeSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_spike_simulation_handler.html</Path>
    <Abstract>The SpikeSimulationHandler class handles simulation frames for the current circuit. </Abstract>
    <DeclaredIn>SpikeSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpikeSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::SpikeSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_spike_simulation_handler.html</Path>
    <Anchor>aae5dc41c31d6b1a5473075eaf0c54fc9</Anchor>
    <Abstract>Default contructor. </Abstract>
    <DeclaredIn>SpikeSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::SpikeSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_spike_simulation_handler.html</Path>
    <Anchor>a249fcd4324838bed7e17af5c2bf7fc10</Anchor>
    <Abstract>Returns a pointer to the current frame in the memory mapped file. </Abstract>
    <DeclaredIn>SpikeSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a17cee8a8500abfebc5f9783bb92ec48d</Anchor>
    <Abstract>Default contructor. </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~AbstractSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a60e89a35d6ca992d20697637d8b7560c</Anchor>
    <Abstract>Default desctuctor. </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachSimulationToCacheFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>afbda00e17fa6bd162a4263f89a55c379</Anchor>
    <Abstract>Attaches a memory mapped file to the scene so that renderers can access the data as if it was in memo...</Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeHeader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a4d0f24d63fde4da927ac66a274322ef9</Anchor>
    <Abstract>Writes the header to a stream. </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a5090a2dbe98efbec2a7c3009332d32ee</Anchor>
    <Abstract>Writes a frame to a stream. </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTimestamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a7e7bd675c0ad2ad12872e2074d4de985</Anchor>
    <Abstract>setTimestamp sets the current timestamp for the simulation </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimestamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>aa5ddcd9137de7b9028c04cc4a92cab08</Anchor>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a94eb882faba3d4a6f4cecdfa7f3af5d8</Anchor>
    <Abstract>getFrameSize return the size of the current simulation frame </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a8fa6e6c15ed6b6aad1e30004cf2c2983</Anchor>
    <Abstract>setFrameSize Sets the size of the current simulation frame </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNbFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>af47ad371626f6abbe71cf266a2d7f34d</Anchor>
    <Abstract>getNbFrames returns the number of frame for the current simulation </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNbFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a51a2198c217fe8080a18075995c3de4d</Anchor>
    <Abstract>setNbFrames sets the number of frame for the current simulation </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>ab647206afacc1820d502b27adf4c8a59</Anchor>
    <Abstract>getCurrentFrame returns the current frame number </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCurrentFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>ae83882c292c92741cf5f370fee44b64d</Anchor>
    <Abstract>setCurrentFrame sets the current frame number </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHistogram</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a06da93216571bc02dd5e04c556be79a9</Anchor>
    <Abstract>getHistogram returns the Histogram of the values in the current simulation frame. ...</Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>histogramChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>acb55af876243483839a70e8d0d8d98ac</Anchor>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Texture2D</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Texture2D</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_texture2_d.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::TextureLoader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::TextureLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_texture_loader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::TransferFunction</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::TransferFunction</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_transfer_function.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::TransferFunction</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_transfer_function.html</Path>
    <Anchor>a4dd7b9c4ac8e4942617a50f412bc6d44</Anchor>
    <Abstract>Clears the data held by the transfert fonction. </Abstract>
    <DeclaredIn>TransferFunction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDiffuseColors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::TransferFunction</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_transfer_function.html</Path>
    <Anchor>a1f5738a01364bde00a8d013b200c602c</Anchor>
    <Abstract>Get diffuse colors. </Abstract>
    <DeclaredIn>TransferFunction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEmissionIntensities</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::TransferFunction</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_transfer_function.html</Path>
    <Anchor>af3ed3fbc1159fb885c3123cf6da05253</Anchor>
    <Abstract>Get emission color intensities. </Abstract>
    <DeclaredIn>TransferFunction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getContributions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::TransferFunction</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_transfer_function.html</Path>
    <Anchor>a9fdca1da05c29e8c725b033c9cdb6ac5</Anchor>
    <Abstract>Get contributions. </Abstract>
    <DeclaredIn>TransferFunction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getValuesRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::TransferFunction</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_transfer_function.html</Path>
    <Anchor>aa6fe90fcf4c6ce0b4658d069f11a0650</Anchor>
    <Abstract>Get transfer function range of values. </Abstract>
    <DeclaredIn>TransferFunction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::TransferFunctionLoader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::TransferFunctionLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_transfer_function_loader.html</Path>
    <Abstract>Loads transfer function from text file where every line contains a space separated list of integers f...</Abstract>
    <DeclaredIn>TransferFunctionLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadFromFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::TransferFunctionLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_transfer_function_loader.html</Path>
    <Anchor>aafdb88e5621a705836678f6d352eaf1b</Anchor>
    <Abstract>Loads values from a transfer function file. </Abstract>
    <DeclaredIn>TransferFunctionLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::TrianglesMesh</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::TrianglesMesh</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_triangles_mesh.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Abstract>Information about the current braynsUI version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ad4caded283f86362198a2ba1eb478eba</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ac28a55327f904d62ab90dc172be1b440</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a74c8402e7ceed27e0c773cf39e8e01b0</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a7230a3f09fc682b33cf1cfff19bebce7</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ab23018d1ff96bba3a16b1b5a595115d3</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>af99a8b1956c6cb800290c9f8d303f36a</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a6b194dfa87bafdc9a6512fe7ad57794c</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a4b4666df38d8c345e91425821c18c8e0</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSchema</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>af7fbd75a18a0d7b20f875b0669f3609c</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toJSON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a2288688dd599d92fcaec2f4d4e89a72d</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::VolumeHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::VolumeHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler.html</Path>
    <Abstract>VolumeHandler object. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VolumeHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler.html</Path>
    <Anchor>a09212f57bdf367e12b7d039894d68a40</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler.html</Path>
    <Anchor>a16720b2fe81f275d2c2f2f49132dfbd8</Anchor>
    <Abstract>Returns the dimension of the 8bit volume. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getElementSpacing</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler.html</Path>
    <Anchor>a8d79cfa8b0080820d6fc9d664bbbe669</Anchor>
    <Abstract>Returns the voxel size of the 8bit volume. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler.html</Path>
    <Anchor>a9842a3e1eac8ed2c182bb614f71cf9bd</Anchor>
    <Abstract>Returns the position offset of the 8bit volume in world coordinates. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler.html</Path>
    <Anchor>af357f8fd6e08e61abfedb040a5f52731</Anchor>
    <Abstract>Returns the size of the 8bit volume in bytes. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler.html</Path>
    <Anchor>afeaa537e13ad45960daab5c5437c6699</Anchor>
    <Abstract>Returns a pointer to a given frame in the memory mapped file. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEpsilon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler.html</Path>
    <Anchor>aac72eca3b08d07ba2042f7303c57f501</Anchor>
    <Abstract>Returns the epsilon that defines the step used to walk along the ray when traversing the volume...</Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachVolumeToFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler.html</Path>
    <Anchor>add889082843fb91f5d2d545e9595edeb</Anchor>
    <Abstract>Attaches a memory mapped file to the scene so that renderers can access the data as if it was in memo...</Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTimestampMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler.html</Path>
    <Anchor>a0e887bb0dca2c2df76e3340b51d2197c</Anchor>
    <Abstract>Sets the timestamp mode. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimestampMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler.html</Path>
    <Anchor>a98105fa2f5d6c7ec247915bc470f1b8d</Anchor>
    <Abstract>Gets the timestamp mode. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTimestamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler.html</Path>
    <Anchor>a66235cbdf2b90d7e47593a166ea890e1</Anchor>
    <Abstract>Sets the timestamp for the volume handler. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHistogram</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler.html</Path>
    <Anchor>a96bf2720442dd32493cffe4beaccf77c</Anchor>
    <Abstract>Set the histogram of the currently loaded volume. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHistogram</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler.html</Path>
    <Anchor>a508760653b12b02644c719fcd58b8240</Anchor>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNbFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler.html</Path>
    <Anchor>ab8ed1cd8b3fea737cd948e9ef394d88c</Anchor>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNbFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler.html</Path>
    <Anchor>aebb55d097b0822d9347224e9c91ad770</Anchor>
    <Abstract>Sets the number of frames for the current volume. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::VolumeHandler::VolumeDescriptor</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::VolumeHandler::VolumeDescriptor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler_1_1_volume_descriptor.html</Path>
    <Abstract>The VolumeDescriptor class handles the attribute of a single volume. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler::VolumeDescriptor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler_1_1_volume_descriptor.html</Path>
    <Anchor>a2d4b737d5b886e4ce8c3e59dc480d96a</Anchor>
    <Abstract>Maps the volume to the corresponding _filename. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler::VolumeDescriptor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler_1_1_volume_descriptor.html</Path>
    <Anchor>a3c3adefe331b28d5e6e07871d3250263</Anchor>
    <Abstract>Unmaps the volume from the corresponding _filename. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCacheFileDescriptor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler::VolumeDescriptor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler_1_1_volume_descriptor.html</Path>
    <Anchor>a7dc4ef881785d2a0993a0b19977c07a9</Anchor>
    <Abstract>Returns the file descriptor for the current volume. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler::VolumeDescriptor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler_1_1_volume_descriptor.html</Path>
    <Anchor>a3957f2200339a9780daeeff87264b4e7</Anchor>
    <Abstract>Returns the size of the volume in bytes. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMemoryMapPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler::VolumeDescriptor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler_1_1_volume_descriptor.html</Path>
    <Anchor>aea105288818eeb73c6a06d0f59286b47</Anchor>
    <Abstract>Returns a pointer to volume file. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler::VolumeDescriptor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler_1_1_volume_descriptor.html</Path>
    <Anchor>ade83c0a3fcf3a915760e96def5da5c0c</Anchor>
    <Abstract>Returns the dimensions of the volume. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getElementSpacing</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler::VolumeDescriptor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler_1_1_volume_descriptor.html</Path>
    <Anchor>a95f4837562045f1460df63eededf7cc7</Anchor>
    <Abstract>Returns the voxel size of the volume. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler::VolumeDescriptor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler_1_1_volume_descriptor.html</Path>
    <Anchor>a7aeb2117a61aafef87874a0f5d165e7e</Anchor>
    <Abstract>Returns the volume position offset. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFilename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeHandler::VolumeDescriptor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_handler_1_1_volume_descriptor.html</Path>
    <Anchor>a40816c48cd42fa113487a74ff2afe3a6</Anchor>
    <Abstract>Returns the volume filename. </Abstract>
    <DeclaredIn>VolumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::VolumeParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::VolumeParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_parameters.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_parameters.html</Path>
    <Anchor>a1fcb2d4b35ba14948765e01671691b4b</Anchor>
    <Abstract>Displays values of registered parameters. </Abstract>
    <DeclaredIn>VolumeParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFolder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_parameters.html</Path>
    <Anchor>ab7143e2f875fab737555d9dd8215a096</Anchor>
    <Abstract>Folder containing volume files. </Abstract>
    <DeclaredIn>VolumeParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFilename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_parameters.html</Path>
    <Anchor>a2c310eee2700b2a3dd3904044a186d2c</Anchor>
    <Abstract>File containing volume data. </Abstract>
    <DeclaredIn>VolumeParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_parameters.html</Path>
    <Anchor>aac205c6e87fabd2c003a14b59292d221</Anchor>
    <Abstract>Volume dimension. </Abstract>
    <DeclaredIn>VolumeParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getElementSpacing</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_parameters.html</Path>
    <Anchor>a02e82d5a9123769c4b1479ad2bee002e</Anchor>
    <Abstract>Volume scale. </Abstract>
    <DeclaredIn>VolumeParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_parameters.html</Path>
    <Anchor>a7d490d9ed5cb5bbfba798564dc62b48f</Anchor>
    <Abstract>Volume offset. </Abstract>
    <DeclaredIn>VolumeParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSamplesPerRay</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_parameters.html</Path>
    <Anchor>ae8eb99f1718e213b31a051ad8864d677</Anchor>
    <Abstract>Volume epsilon. </Abstract>
    <DeclaredIn>VolumeParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>af8c4e3e33c6d75a71893d7d48f0e4fec</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>a23279a7de7c2c0becbf81c1d242775bf</Anchor>
    <Abstract>Parses parameters managed by the class. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>usage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>aea979c57e60d5cdb9569dc154382af58</Anchor>
    <Abstract>Displays the usage of registered parameters. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>a54da8b217bcd52a00a4b039b98abfcbd</Anchor>
    <Abstract>Sets a parameter. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::XYZBLoader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::XYZBLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_x_y_z_b_loader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ZeroEQPlugin</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ZeroEQPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_zero_e_q_plugin.html</Path>
    <Abstract>The ZeroEQPlugin is in charge of exposing a both a http/REST and a ZeroEQ interface to the outside wo...</Abstract>
    <DeclaredIn>ZeroEQPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ZeroEQPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_zero_e_q_plugin.html</Path>
    <Anchor>aee95a01396d6ff69e1ad53d69bffd7a3</Anchor>
    <Abstract>Executes the core functionnalities of the plugin. </Abstract>
    <DeclaredIn>ZeroEQPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ZeroEQPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_zero_e_q_plugin.html</Path>
    <Anchor>ac04af934c2b0bb329cb1d974171f8fe4</Anchor>
    <Abstract>Handle the given objects in subscriber, publisher (via request) and HTTP server. </Abstract>
    <DeclaredIn>ZeroEQPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::obj::ExtendedOBJMaterial</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::obj::ExtendedOBJMaterial</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1obj_1_1_extended_o_b_j_material.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map_d</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::obj::ExtendedOBJMaterial</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1obj_1_1_extended_o_b_j_material.html</Path>
    <Anchor>a403863295195b5747082227c93eaf3d7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map_refraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::obj::ExtendedOBJMaterial</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1obj_1_1_extended_o_b_j_material.html</Path>
    <Anchor>a778cee5c3b9423ae0933cd7b596db5fb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map_reflection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::obj::ExtendedOBJMaterial</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1obj_1_1_extended_o_b_j_material.html</Path>
    <Anchor>abead9c1ebaee14b7340fcc922660044b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map_a</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::obj::ExtendedOBJMaterial</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1obj_1_1_extended_o_b_j_material.html</Path>
    <Anchor>a3a85e2c595afb0fb62dd70d921f3adc7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map_Kd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::obj::ExtendedOBJMaterial</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1obj_1_1_extended_o_b_j_material.html</Path>
    <Anchor>a65d6ae063e53c9feeac32bb2be89052d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map_Ks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::obj::ExtendedOBJMaterial</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1obj_1_1_extended_o_b_j_material.html</Path>
    <Anchor>a98296de2b3f73249a66b9a012cd3f959</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map_Ns</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::obj::ExtendedOBJMaterial</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1obj_1_1_extended_o_b_j_material.html</Path>
    <Anchor>ad3fb0d75f30229abea5c442c7659e9b6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>g</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::obj::ExtendedOBJMaterial</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1obj_1_1_extended_o_b_j_material.html</Path>
    <Anchor>a7d932e025a1b4d7679a5234a0e599195</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map_Normal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::obj::ExtendedOBJMaterial</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1obj_1_1_extended_o_b_j_material.html</Path>
    <Anchor>ae84decba8322cd710eb05f17707dab6b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map_Bump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::obj::ExtendedOBJMaterial</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1obj_1_1_extended_o_b_j_material.html</Path>
    <Anchor>aa751a568ed6aa42d9d5938ae59a3acb0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ospray::ClippedPerspectiveCamera</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ospray::ClippedPerspectiveCamera</Scope>
    </TokenIdentifier>
    <Path>structospray_1_1_clipped_perspective_camera.html</Path>
    <Abstract>Implements a clipped perspective camera. </Abstract>
    <DeclaredIn>ClippedPerspectiveCamera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClippedPerspectiveCamera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ospray::ClippedPerspectiveCamera</Scope>
    </TokenIdentifier>
    <Path>structospray_1_1_clipped_perspective_camera.html</Path>
    <Anchor>a2a1f570dabdf4191768bb04893dc3b29</Anchor>
    <Abstract>constructor </Abstract>
    <DeclaredIn>ClippedPerspectiveCamera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ospray::ClippedPerspectiveCamera</Scope>
    </TokenIdentifier>
    <Path>structospray_1_1_clipped_perspective_camera.html</Path>
    <Anchor>af3bf2fdcc111e1f7bb25748b673a8f6e</Anchor>
    <Abstract>common function to help printf-debugging </Abstract>
    <DeclaredIn>ClippedPerspectiveCamera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ospray::ExtendedCones</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ospray::ExtendedCones</Scope>
    </TokenIdentifier>
    <Path>structospray_1_1_extended_cones.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ospray::ExtendedCylinders</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ospray::ExtendedCylinders</Scope>
    </TokenIdentifier>
    <Path>structospray_1_1_extended_cylinders.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ospray::ExtendedSpheres</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ospray::ExtendedSpheres</Scope>
    </TokenIdentifier>
    <Path>structospray_1_1_extended_spheres.html</Path>
  </Token>
</Tokens>
