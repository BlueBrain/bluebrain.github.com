<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_MAJOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>common_2version_8h.html</Path>
    <Anchor>af6fac12cc372fa2c0d4a7276646db3e2</Anchor>
    <Abstract>The current major version.</Abstract>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_MINOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>common_2version_8h.html</Path>
    <Anchor>ad1d30abb92c583df9555702986df6cd5</Anchor>
    <Abstract>The current minor version.</Abstract>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_PATCH</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>common_2version_8h.html</Path>
    <Anchor>aec3b431747b4611d046a5be799c36a85</Anchor>
    <Abstract>The current patch level.</Abstract>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_REVISION</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>common_2version_8h.html</Path>
    <Anchor>a4d697b7dac7e97b28fecf7714fea4d8f</Anchor>
    <Abstract>The current SCM revision.</Abstract>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_ABI</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>common_2version_8h.html</Path>
    <Anchor>a689d3561485abd45ee50411137295ee0</Anchor>
    <Abstract>The current binary interface.</Abstract>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_STRING</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>common_2version_8h.html</Path>
    <Anchor>aae1fd1122c42331f598c0152baa6572a</Anchor>
    <Abstract>The current major.minor.version as a string.</Abstract>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_REV_STRING</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>common_2version_8h.html</Path>
    <Anchor>abdfd5d63377bd1606cf51a0437943637</Anchor>
    <Abstract>The current major.minor.version.revision as a string.</Abstract>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_GT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>common_2version_8h.html</Path>
    <Anchor>aac4931ce9e04b54374731ac24b40f8a7</Anchor>
    <Abstract>True if the current version is newer than the given one.</Abstract>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_GE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>common_2version_8h.html</Path>
    <Anchor>ac1dab11cf9192d1fb2bbf6776f06e7b6</Anchor>
    <Abstract>True if the current version is equal or newer to the given.</Abstract>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_LT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>common_2version_8h.html</Path>
    <Anchor>a8c4f31b5c9c92ad83721cef2c6571c05</Anchor>
    <Abstract>True if the current version is older than the given one.</Abstract>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_LE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>common_2version_8h.html</Path>
    <Anchor>a58b8404ff1a22c4a5cb7dd868280c078</Anchor>
    <Abstract>True if the current version is older or equal to the given.</Abstract>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_MAJOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>engine_2version_8h.html</Path>
    <Anchor>af6fac12cc372fa2c0d4a7276646db3e2</Anchor>
    <Abstract>The current major version.</Abstract>
    <DeclaredIn>engine/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_MINOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>engine_2version_8h.html</Path>
    <Anchor>ad1d30abb92c583df9555702986df6cd5</Anchor>
    <Abstract>The current minor version.</Abstract>
    <DeclaredIn>engine/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_PATCH</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>engine_2version_8h.html</Path>
    <Anchor>aec3b431747b4611d046a5be799c36a85</Anchor>
    <Abstract>The current patch level.</Abstract>
    <DeclaredIn>engine/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_REVISION</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>engine_2version_8h.html</Path>
    <Anchor>a4d697b7dac7e97b28fecf7714fea4d8f</Anchor>
    <Abstract>The current SCM revision.</Abstract>
    <DeclaredIn>engine/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_ABI</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>engine_2version_8h.html</Path>
    <Anchor>a689d3561485abd45ee50411137295ee0</Anchor>
    <Abstract>The current binary interface.</Abstract>
    <DeclaredIn>engine/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_STRING</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>engine_2version_8h.html</Path>
    <Anchor>aae1fd1122c42331f598c0152baa6572a</Anchor>
    <Abstract>The current major.minor.version as a string.</Abstract>
    <DeclaredIn>engine/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_REV_STRING</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>engine_2version_8h.html</Path>
    <Anchor>abdfd5d63377bd1606cf51a0437943637</Anchor>
    <Abstract>The current major.minor.version.revision as a string.</Abstract>
    <DeclaredIn>engine/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_GT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>engine_2version_8h.html</Path>
    <Anchor>aac4931ce9e04b54374731ac24b40f8a7</Anchor>
    <Abstract>True if the current version is newer than the given one.</Abstract>
    <DeclaredIn>engine/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_GE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>engine_2version_8h.html</Path>
    <Anchor>ac1dab11cf9192d1fb2bbf6776f06e7b6</Anchor>
    <Abstract>True if the current version is equal or newer to the given.</Abstract>
    <DeclaredIn>engine/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_LT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>engine_2version_8h.html</Path>
    <Anchor>a8c4f31b5c9c92ad83721cef2c6571c05</Anchor>
    <Abstract>True if the current version is older than the given one.</Abstract>
    <DeclaredIn>engine/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_LE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>engine_2version_8h.html</Path>
    <Anchor>a58b8404ff1a22c4a5cb7dd868280c078</Anchor>
    <Abstract>True if the current version is older or equal to the given.</Abstract>
    <DeclaredIn>engine/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_MAJOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>io_2version_8h.html</Path>
    <Anchor>af6fac12cc372fa2c0d4a7276646db3e2</Anchor>
    <Abstract>The current major version.</Abstract>
    <DeclaredIn>io/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_MINOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>io_2version_8h.html</Path>
    <Anchor>ad1d30abb92c583df9555702986df6cd5</Anchor>
    <Abstract>The current minor version.</Abstract>
    <DeclaredIn>io/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_PATCH</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>io_2version_8h.html</Path>
    <Anchor>aec3b431747b4611d046a5be799c36a85</Anchor>
    <Abstract>The current patch level.</Abstract>
    <DeclaredIn>io/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_REVISION</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>io_2version_8h.html</Path>
    <Anchor>a4d697b7dac7e97b28fecf7714fea4d8f</Anchor>
    <Abstract>The current SCM revision.</Abstract>
    <DeclaredIn>io/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_ABI</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>io_2version_8h.html</Path>
    <Anchor>a689d3561485abd45ee50411137295ee0</Anchor>
    <Abstract>The current binary interface.</Abstract>
    <DeclaredIn>io/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_STRING</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>io_2version_8h.html</Path>
    <Anchor>aae1fd1122c42331f598c0152baa6572a</Anchor>
    <Abstract>The current major.minor.version as a string.</Abstract>
    <DeclaredIn>io/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_REV_STRING</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>io_2version_8h.html</Path>
    <Anchor>abdfd5d63377bd1606cf51a0437943637</Anchor>
    <Abstract>The current major.minor.version.revision as a string.</Abstract>
    <DeclaredIn>io/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_GT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>io_2version_8h.html</Path>
    <Anchor>aac4931ce9e04b54374731ac24b40f8a7</Anchor>
    <Abstract>True if the current version is newer than the given one.</Abstract>
    <DeclaredIn>io/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_GE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>io_2version_8h.html</Path>
    <Anchor>ac1dab11cf9192d1fb2bbf6776f06e7b6</Anchor>
    <Abstract>True if the current version is equal or newer to the given.</Abstract>
    <DeclaredIn>io/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_LT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>io_2version_8h.html</Path>
    <Anchor>a8c4f31b5c9c92ad83721cef2c6571c05</Anchor>
    <Abstract>True if the current version is older than the given one.</Abstract>
    <DeclaredIn>io/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_LE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>io_2version_8h.html</Path>
    <Anchor>a58b8404ff1a22c4a5cb7dd868280c078</Anchor>
    <Abstract>True if the current version is older or equal to the given.</Abstract>
    <DeclaredIn>io/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_MAJOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>parameters_2version_8h.html</Path>
    <Anchor>af6fac12cc372fa2c0d4a7276646db3e2</Anchor>
    <Abstract>The current major version.</Abstract>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_MINOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>parameters_2version_8h.html</Path>
    <Anchor>ad1d30abb92c583df9555702986df6cd5</Anchor>
    <Abstract>The current minor version.</Abstract>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_PATCH</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>parameters_2version_8h.html</Path>
    <Anchor>aec3b431747b4611d046a5be799c36a85</Anchor>
    <Abstract>The current patch level.</Abstract>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_REVISION</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>parameters_2version_8h.html</Path>
    <Anchor>a4d697b7dac7e97b28fecf7714fea4d8f</Anchor>
    <Abstract>The current SCM revision.</Abstract>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_ABI</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>parameters_2version_8h.html</Path>
    <Anchor>a689d3561485abd45ee50411137295ee0</Anchor>
    <Abstract>The current binary interface.</Abstract>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_STRING</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>parameters_2version_8h.html</Path>
    <Anchor>aae1fd1122c42331f598c0152baa6572a</Anchor>
    <Abstract>The current major.minor.version as a string.</Abstract>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_REV_STRING</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>parameters_2version_8h.html</Path>
    <Anchor>abdfd5d63377bd1606cf51a0437943637</Anchor>
    <Abstract>The current major.minor.version.revision as a string.</Abstract>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_GT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>parameters_2version_8h.html</Path>
    <Anchor>aac4931ce9e04b54374731ac24b40f8a7</Anchor>
    <Abstract>True if the current version is newer than the given one.</Abstract>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_GE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>parameters_2version_8h.html</Path>
    <Anchor>ac1dab11cf9192d1fb2bbf6776f06e7b6</Anchor>
    <Abstract>True if the current version is equal or newer to the given.</Abstract>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_LT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>parameters_2version_8h.html</Path>
    <Anchor>a8c4f31b5c9c92ad83721cef2c6571c05</Anchor>
    <Abstract>True if the current version is older than the given one.</Abstract>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_LE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>parameters_2version_8h.html</Path>
    <Anchor>a58b8404ff1a22c4a5cb7dd868280c078</Anchor>
    <Abstract>True if the current version is older or equal to the given.</Abstract>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_MAJOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>tasks_2version_8h.html</Path>
    <Anchor>af6fac12cc372fa2c0d4a7276646db3e2</Anchor>
    <Abstract>The current major version.</Abstract>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_MINOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>tasks_2version_8h.html</Path>
    <Anchor>ad1d30abb92c583df9555702986df6cd5</Anchor>
    <Abstract>The current minor version.</Abstract>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_PATCH</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>tasks_2version_8h.html</Path>
    <Anchor>aec3b431747b4611d046a5be799c36a85</Anchor>
    <Abstract>The current patch level.</Abstract>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_REVISION</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>tasks_2version_8h.html</Path>
    <Anchor>a4d697b7dac7e97b28fecf7714fea4d8f</Anchor>
    <Abstract>The current SCM revision.</Abstract>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_ABI</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>tasks_2version_8h.html</Path>
    <Anchor>a689d3561485abd45ee50411137295ee0</Anchor>
    <Abstract>The current binary interface.</Abstract>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_STRING</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>tasks_2version_8h.html</Path>
    <Anchor>aae1fd1122c42331f598c0152baa6572a</Anchor>
    <Abstract>The current major.minor.version as a string.</Abstract>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_REV_STRING</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>tasks_2version_8h.html</Path>
    <Anchor>abdfd5d63377bd1606cf51a0437943637</Anchor>
    <Abstract>The current major.minor.version.revision as a string.</Abstract>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_GT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>tasks_2version_8h.html</Path>
    <Anchor>aac4931ce9e04b54374731ac24b40f8a7</Anchor>
    <Abstract>True if the current version is newer than the given one.</Abstract>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_GE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>tasks_2version_8h.html</Path>
    <Anchor>ac1dab11cf9192d1fb2bbf6776f06e7b6</Anchor>
    <Abstract>True if the current version is equal or newer to the given.</Abstract>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_LT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>tasks_2version_8h.html</Path>
    <Anchor>a8c4f31b5c9c92ad83721cef2c6571c05</Anchor>
    <Abstract>True if the current version is older than the given one.</Abstract>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_LE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>tasks_2version_8h.html</Path>
    <Anchor>a58b8404ff1a22c4a5cb7dd868280c078</Anchor>
    <Abstract>True if the current version is older or equal to the given.</Abstract>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_MAJOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>af6fac12cc372fa2c0d4a7276646db3e2</Anchor>
    <Abstract>The current major version.</Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_MINOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>ad1d30abb92c583df9555702986df6cd5</Anchor>
    <Abstract>The current minor version.</Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_PATCH</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>aec3b431747b4611d046a5be799c36a85</Anchor>
    <Abstract>The current patch level.</Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_REVISION</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a4d697b7dac7e97b28fecf7714fea4d8f</Anchor>
    <Abstract>The current SCM revision.</Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_ABI</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a689d3561485abd45ee50411137295ee0</Anchor>
    <Abstract>The current binary interface.</Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_STRING</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>aae1fd1122c42331f598c0152baa6572a</Anchor>
    <Abstract>The current major.minor.version as a string.</Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_REV_STRING</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>abdfd5d63377bd1606cf51a0437943637</Anchor>
    <Abstract>The current major.minor.version.revision as a string.</Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_GT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>aac4931ce9e04b54374731ac24b40f8a7</Anchor>
    <Abstract>True if the current version is newer than the given one.</Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_GE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>ac1dab11cf9192d1fb2bbf6776f06e7b6</Anchor>
    <Abstract>True if the current version is equal or newer to the given.</Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_LT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a8c4f31b5c9c92ad83721cef2c6571c05</Anchor>
    <Abstract>True if the current version is older than the given one.</Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_LE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a58b8404ff1a22c4a5cb7dd868280c078</Anchor>
    <Abstract>True if the current version is older or equal to the given.</Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>md__jenkins_05_workspace_oss.Brayns.documentation_build_type_Debug_platform_bb5_sources_doc_UserGuide</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>md__jenkins_05_workspace_oss_8_brayns_8documentation_build_type__debug_platform_bb5_sources_doc__user_guide.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>md__jenkins_05_workspace_oss.Brayns.documentation_build_type_Debug_platform_bb5_sources_Changelog</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>md__jenkins_05_workspace_oss_8_brayns_8documentation_build_type__debug_platform_bb5_sources__changelog.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apps</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>apps.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>braynsBenchmark</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>brayns_benchmark.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>braynsViewer</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>brayns_viewer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Application</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Application</Scope>
    </TokenIdentifier>
    <Path>class_application.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cone</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Cone</Scope>
    </TokenIdentifier>
    <Path>struct_cone.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cylinder</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Cylinder</Scope>
    </TokenIdentifier>
    <Path>struct_cylinder.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InputEvent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>InputEvent</Scope>
    </TokenIdentifier>
    <Path>struct_input_event.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Sphere</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Sphere</Scope>
    </TokenIdentifier>
    <Path>struct_sphere.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boost::program_options::fixed_tokens_typed_value</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>boost::program_options::fixed_tokens_typed_value</Scope>
    </TokenIdentifier>
    <Path>classboost_1_1program__options_1_1fixed__tokens__typed__value.html</Path>
    <Abstract>Wrapper for supporting fixed size multitoken values.</Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::AbstractManipulator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Abstract>Base class for camera manipulators.</Abstract>
    <DeclaredIn>AbstractManipulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>adjust</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>a4fde623a17453a786cb15f735209bdad</Anchor>
    <Abstract>Adjust manipulator behaviour to the given scene.</Abstract>
    <DeclaredIn>AbstractManipulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_camera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>aae08537e81adbbd7275c7d6fd9ec8ed6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_keyboardHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>a1ddb4ed7cefbbb93422d8f26b5911245</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_motionSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>a8097c2eedefc3455aa6fef5da8e37c86</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rotationSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>a24eb133da465bb9d841a18cf58a72a34</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::AbstractParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Abstract>Base class defining command line parameters.</Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>af8c4e3e33c6d75a71893d7d48f0e4fec</Anchor>
    <Abstract>Constructor.</Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>a817228304a60010db0cf7fa23130ce3f</Anchor>
    <Abstract>Parses parameters managed by the class.</Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>a998b0175fc8d8a20c08d1e5ee4bb147e</Anchor>
    <Abstract>Displays values of registered parameters.</Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ab0defc991ad50df92eb679a72840b866</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a2109985c05194082bc6e0b5a64478530</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::AbstractSimulationHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Abstract>The AbstractSimulationHandler class handles simulation frames for the current circuit.</Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a3e443173bac7bb3e30a437efe9754f1f</Anchor>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>ae08f73c8a95156f6c9f2643271203a2f</Anchor>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a42ef39d3b16dc58751231d4e027b731c</Anchor>
    <Abstract>returns a void pointer to the simulation data for the given frame or nullptr if the frame is not load...</Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a6c9f4a49a0a63c27b7842cf2bc0ba900</Anchor>
    <Abstract>getFrameSize return the size of the current simulation frame</Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a8fa6e6c15ed6b6aad1e30004cf2c2983</Anchor>
    <Abstract>setFrameSize Sets the size of the current simulation frame</Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNbFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a9f1760951cc486a62540ccf98135d47f</Anchor>
    <Abstract>getNbFrames returns the number of frame for the current simulation</Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNbFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a6d97bbea1b840d24c754068d0b6c2cd8</Anchor>
    <Abstract>setNbFrames sets the number of frame for the current simulation</Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>aab4be1355be9dd9a9bd8d8dcd1afed7f</Anchor>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a0512d398b490aa39fe43be84eaaa0bf8</Anchor>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a47d4da935f9790748f913fa35e7f91e0</Anchor>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>aa469c2f4b34c9c1df94a0f4d7cd5826f</Anchor>
    <Abstract>Wait until current frame is ready.</Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::AbstractTask</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Abstract>A task is an operation that can be scheduled (directly, async, ...) and has support for progress repo...</Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cancel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>af1019fe39fea3201341ea4301186a911</Anchor>
    <Abstract>Cancels the task if is either waiting to be scheduled or already running.</Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finishCancel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a12c64d0b0aa5bc8916d656fbffd5e8dd</Anchor>
    <Abstract>Indicate that cancel processing has finished and call the function given to cancel().</Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canceled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a46379e6aa371574c1be02e8d8327bd00</Anchor>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>schedule</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>ad0836f14b82f490ec6d12a043f9f7cee</Anchor>
    <Abstract>Schedule the execution of the task.</Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>progress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a9c4958935de14f9db7480e9bb3566735</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ActionInterface</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ActionInterface</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_action_interface.html</Path>
    <Abstract>Interface for registering actions, namely notifications which have no return values with an optional ...</Abstract>
    <DeclaredIn>ActionInterface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerNotification</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ActionInterface</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_action_interface.html</Path>
    <Anchor>aacd58476c54ade7d0d8ed55256008878</Anchor>
    <Abstract>Register an action with no parameter and no return value.</Abstract>
    <DeclaredIn>ActionInterface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerNotification</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ActionInterface</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_action_interface.html</Path>
    <Anchor>a4c0fb32efb1cb55e86ac6aa7e71aadea</Anchor>
    <Abstract>Register an action with a property map as the parameter and no return value.</Abstract>
    <DeclaredIn>ActionInterface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ActionInterface</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_action_interface.html</Path>
    <Anchor>a0da0eee98242370652ed2e454f5e3076</Anchor>
    <Abstract>Register an action with a property map as the parameter and a property map as the return value.</Abstract>
    <DeclaredIn>ActionInterface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ActionInterface</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_action_interface.html</Path>
    <Anchor>a55dbc4122e6d3a27c77b7683f38a75ba</Anchor>
    <Abstract>Register an action with no parameter and a property map as the return value.</Abstract>
    <DeclaredIn>ActionInterface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerNotification</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ActionInterface</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_action_interface.html</Path>
    <Anchor>a95e883e26046da3bb55228e683826fcd</Anchor>
    <Abstract>Register an action with no parameter and no return value.</Abstract>
    <DeclaredIn>ActionInterface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerNotification</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ActionInterface</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_action_interface.html</Path>
    <Anchor>ae77375d7cf3277aa2a876d58bb519c59</Anchor>
    <Abstract>Register an action with a parameter and no return value.</Abstract>
    <DeclaredIn>ActionInterface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ActionInterface</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_action_interface.html</Path>
    <Anchor>aa848f4a0c303b0686ccdcc72c9e1d6c7</Anchor>
    <Abstract>Register an action with a parameter and a return value.</Abstract>
    <DeclaredIn>ActionInterface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ActionInterface</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_action_interface.html</Path>
    <Anchor>a67f15a5be2bc8ece423e2bb494dee99c</Anchor>
    <Abstract>Register an action with no parameter and a return value.</Abstract>
    <DeclaredIn>ActionInterface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::AddModelFromBlobTask</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::AddModelFromBlobTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_add_model_from_blob_task.html</Path>
    <Abstract>A task which receives a file blob, triggers loading of the received blob and adds the loaded model to...</Abstract>
    <DeclaredIn>AddModelFromBlobTask.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Task</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task&lt; ModelDescriptorPtr &gt;</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>adb4c824ce065c30129e25c2973b5760b</Anchor>
    <Abstract>Create an empty task; use task() and async++ to do something meaningful.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Task</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task&lt; ModelDescriptorPtr &gt;</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>ac5558024a92ce91fe5c6d8cc3ffd84ee</Anchor>
    <Abstract>Create and schedule a task with the given functor or lambda.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>schedule</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task&lt; ModelDescriptorPtr &gt;</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>abfc3f1e06d95e8923df75e9651b1f0f4</Anchor>
    <Abstract>NOP for this task; tasks are running after construction.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>result</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task&lt; ModelDescriptorPtr &gt;</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>a9a6c0675ba8c6321bff7ffbf044fdc99</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task&lt; ModelDescriptorPtr &gt;</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>aa4f761290010bd3a0c7a026629524042</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cancel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>af1019fe39fea3201341ea4301186a911</Anchor>
    <Abstract>Cancels the task if is either waiting to be scheduled or already running.</Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finishCancel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a12c64d0b0aa5bc8916d656fbffd5e8dd</Anchor>
    <Abstract>Indicate that cancel processing has finished and call the function given to cancel().</Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canceled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a46379e6aa371574c1be02e8d8327bd00</Anchor>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>progress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a9c4958935de14f9db7480e9bb3566735</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::AddModelTask</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::AddModelTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_add_model_task.html</Path>
    <Abstract>A task which loads data from the path of the given params and adds the loaded model to the engines&apos; s...</Abstract>
    <DeclaredIn>AddModelTask.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Task</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task&lt; ModelDescriptorPtr &gt;</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>adb4c824ce065c30129e25c2973b5760b</Anchor>
    <Abstract>Create an empty task; use task() and async++ to do something meaningful.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Task</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task&lt; ModelDescriptorPtr &gt;</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>ac5558024a92ce91fe5c6d8cc3ffd84ee</Anchor>
    <Abstract>Create and schedule a task with the given functor or lambda.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>schedule</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task&lt; ModelDescriptorPtr &gt;</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>abfc3f1e06d95e8923df75e9651b1f0f4</Anchor>
    <Abstract>NOP for this task; tasks are running after construction.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>result</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task&lt; ModelDescriptorPtr &gt;</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>a9a6c0675ba8c6321bff7ffbf044fdc99</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task&lt; ModelDescriptorPtr &gt;</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>aa4f761290010bd3a0c7a026629524042</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cancel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>af1019fe39fea3201341ea4301186a911</Anchor>
    <Abstract>Cancels the task if is either waiting to be scheduled or already running.</Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finishCancel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a12c64d0b0aa5bc8916d656fbffd5e8dd</Anchor>
    <Abstract>Indicate that cancel processing has finished and call the function given to cancel().</Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canceled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a46379e6aa371574c1be02e8d8327bd00</Anchor>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>progress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a9c4958935de14f9db7480e9bb3566735</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::AmbientLight</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::AmbientLight</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_ambient_light.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AmbientLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AmbientLight</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_ambient_light.html</Path>
    <Anchor>a9203e690b4ecbc4b73ed2cc54eea55d0</Anchor>
    <Abstract>AmbientLight The ambient light surrounds the scene and illuminates it from infinity with constant rad...</Abstract>
    <DeclaredIn>Light.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::AnimationParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::AnimationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_animation_parameters.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AnimationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_animation_parameters.html</Path>
    <Anchor>af192debb91abc150a4ef5ac29cac9f1f</Anchor>
    <Abstract>Displays values of registered parameters.</Abstract>
    <DeclaredIn>AnimationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AnimationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_animation_parameters.html</Path>
    <Anchor>ad02a32b00ac4b5eee7638ab207e2c821</Anchor>
    <Abstract>Reset to a &apos;no animation&apos; state: 0 for dt, start and end.</Abstract>
    <DeclaredIn>AnimationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AnimationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_animation_parameters.html</Path>
    <Anchor>a5f1e6be0449b3580a19b499bada01665</Anchor>
    <Abstract>The current frame number of the animation.</Abstract>
    <DeclaredIn>AnimationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDelta</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AnimationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_animation_parameters.html</Path>
    <Anchor>a9b0f3a0e5bdf2d4e249ba6402e0a7697</Anchor>
    <Abstract>The (frame) delta to apply for animations to select the next frame.</Abstract>
    <DeclaredIn>AnimationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AnimationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_animation_parameters.html</Path>
    <Anchor>af3f9cbea3bfa40976f5de5ced9e77026</Anchor>
    <Abstract>The dt of a simulation.</Abstract>
    <DeclaredIn>AnimationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AnimationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_animation_parameters.html</Path>
    <Anchor>afe7cd63bb57c44ab97c9228fcd481c56</Anchor>
    <Abstract>The time unit of a simulation.</Abstract>
    <DeclaredIn>AnimationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIsReadyCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AnimationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_animation_parameters.html</Path>
    <Anchor>a6de92c1166679c8876cd77d6658cf87b</Anchor>
    <Abstract>Set a callback to report if the current animation frame is ready (e.g.</Abstract>
    <DeclaredIn>AnimationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeIsReadyCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AnimationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_animation_parameters.html</Path>
    <Anchor>a21695789a923fd71b81bf09ebf069e25</Anchor>
    <Abstract>Remove the given callback from the list of IsReadyCallbacks.</Abstract>
    <DeclaredIn>AnimationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AnimationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_animation_parameters.html</Path>
    <Anchor>a1bfe4fd272a873fd9a1fe1655a7956c3</Anchor>
    <Abstract>Update the current frame if delta is set and all listeners are ready.</Abstract>
    <DeclaredIn>AnimationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>jumpFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AnimationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_animation_parameters.html</Path>
    <Anchor>a200419599ede2850b35be72896300e1a</Anchor>
    <Abstract>Jump &apos;frames&apos; from current frame if all listeners are ready.</Abstract>
    <DeclaredIn>AnimationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>af8c4e3e33c6d75a71893d7d48f0e4fec</Anchor>
    <Abstract>Constructor.</Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>a817228304a60010db0cf7fa23130ce3f</Anchor>
    <Abstract>Parses parameters managed by the class.</Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ab0defc991ad50df92eb679a72840b866</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a2109985c05194082bc6e0b5a64478530</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ApplicationParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Abstract>Manages application parameters.</Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>aa2e0d98422af63c78df7f14a65fa4b6c</Anchor>
    <Abstract>Displays values of registered parameters.</Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEngine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>a9f0e1b17d65004bc39f82e1a8788bfe8</Anchor>
    <Abstract>Engine.</Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOsprayModules</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>ab1db8520ad865d5426861d933aebed1b</Anchor>
    <Abstract>OSPRay modules.</Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWindowSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>a45e70ede825fe91174eb41cd6f303d4d</Anchor>
    <Abstract>window size</Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBenchmarking</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>af9392a132866e0148d26cae083f3563e</Anchor>
    <Abstract>Benchmarking.</Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJpegCompression</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>a9fdb360a50c27ab8242fff3d0f2170cb</Anchor>
    <Abstract>JPEG compression quality.</Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getImageStreamFPS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>a469e69eb2f415f110a7ab188c6846d91</Anchor>
    <Abstract>Image stream FPS.</Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxRenderFPS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>a432bcdafa2b61970833b62a2fb390dea</Anchor>
    <Abstract>Max render FPS to limit.</Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>af8c4e3e33c6d75a71893d7d48f0e4fec</Anchor>
    <Abstract>Constructor.</Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ab0defc991ad50df92eb679a72840b866</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>a5be6af2d2178a0a5c6696692e5a1f394</Anchor>
    <Abstract>Parses parameters managed by the class.</Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a2109985c05194082bc6e0b5a64478530</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::BaseObject</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ab0defc991ad50df92eb679a72840b866</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a2109985c05194082bc6e0b5a64478530</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::BinaryParam</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::BinaryParam</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_binary_param.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::BinaryParam</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_binary_param.html</Path>
    <Anchor>a50964aa1d6ec351c6f186ffe924da95b</Anchor>
    <Abstract>size in bytes of file</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::BinaryParam</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_binary_param.html</Path>
    <Anchor>a8a398a1478bc43ad918b91be5d83ca0b</Anchor>
    <Abstract>file extension or type (MESH, POINTS, CIRCUIT)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ab0defc991ad50df92eb679a72840b866</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a2109985c05194082bc6e0b5a64478530</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Blob</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Blob</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_blob.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Box</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>brayns::Box</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_box.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Brayns</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Abstract>Brayns is a minimalistic library that allows optimized ray-tracing rendering of meshes and parametric...</Abstract>
    <DeclaredIn>brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Brayns</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>ab1202cd9f6bcc02bd8f25f9d269be53d</Anchor>
    <Abstract>Brayns instance initialization.</Abstract>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEngine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>acc8b3d8d54f59a2b5bb1ca70c07c7047</Anchor>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParametersManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>ad68939e00e940e6df3255bbf9e8a761f</Anchor>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKeyboardHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>a8af015ef5e738482177f3e4a9dfc4699</Anchor>
    <Abstract>Gets the keyboard handler.</Abstract>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCameraManipulator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>a86278a6f267a457c0473e85cef65c54f</Anchor>
    <Abstract>Gets the camera manipulator.</Abstract>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitAndRender</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>ab596057d6defd530d6d01819196646cc</Anchor>
    <Abstract>Renders color and depth buffers of the current scene, according to specified parameters.</Abstract>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitAndRender</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>a8a163f5e8f5d500465d62c0468dba7b1</Anchor>
    <Abstract>Renders color and depth buffers of the current scene, according to default parameters.</Abstract>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>a5bce1db1cacf9c749dce8542805d97ea</Anchor>
    <Abstract>Handle events, update animation, call preRender() on plugins and commit changes on the engine,...</Abstract>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>a422f64427d348600f7ad59f9041f8248</Anchor>
    <Abstract>Render a frame into the current framebuffer.</Abstract>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postRender</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>add9f68bde6583471ac00f32f20e53933</Anchor>
    <Abstract>Call postRender() on engine and plugins to signal finish of render().</Abstract>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::BrickedVolume</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::BrickedVolume</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_bricked_volume.html</Path>
    <Abstract>A volume type where the voxels are copied for each added brick.</Abstract>
    <DeclaredIn>BrickedVolume.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ab0defc991ad50df92eb679a72840b866</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a2109985c05194082bc6e0b5a64478530</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Camera</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Abstract>Camera object.</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a54be005b2f472fe6e8d20c24e96f16fd</Anchor>
    <Abstract>Sets position, and quaternion.</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a6e4b5133301f4956bc2a8f63bdac63fb</Anchor>
    <Abstract>Sets camera position.</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTarget</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>af878100b0ef7dc7d9eec47918073be89</Anchor>
    <Abstract>Sets camera target.</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>aa8520305d8a75b917cc7300416f00d6a</Anchor>
    <Abstract>Gets camera position.</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTarget</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a077a3835f38b4a4a9828967cffc6c683</Anchor>
    <Abstract>Gets camera target.</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrientation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a7298e558e81b36b6b1b60661ee258973</Anchor>
    <Abstract>Sets camera orientation quaternion.</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOrientation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>acdd2d381c8e3c4e92f8c37ca49fbae35</Anchor>
    <Abstract>Gets the camera orientation quaternion.</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a0378b8d85d011a5b524746f4e23e34e6</Anchor>
    <Abstract>Resets the camera to its initial values.</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a063a6910bde97fe29b7b31ada55e5c57</Anchor>
    <Abstract>Commits the changes held by the camera object so that attributes become available to the underlying r...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCurrentType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a7be001331636293e20b0ad923bd0d47c</Anchor>
    <Abstract>Set the current type to use for &apos;type-less&apos; queries and updates.</Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a541fe78d6ba40e423b62b359b8f51027</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateProperty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>aa46fbc685f8b92ce935897d7de386232</Anchor>
    <Abstract>Update the value of the given property for the current type.</Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasProperty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a350c44122ae0f3b9243bee212d44df94</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProperty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a418ed4706f2b79c679db03f182c3df1e</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPropertyOrValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a7ca2b79e77dcab744f23a3935923da07</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProperties</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a9d0d4a64b6c56f5e6391bc7ff9d7097b</Anchor>
    <Abstract>Assign a new set of properties to the current type.</Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProperties</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>ae47c1492190d22b89eeecce803eed03c</Anchor>
    <Abstract>Assign a new set of properties to the given type.</Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateProperties</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>af063e495e86c76a2373a8157a0be190d</Anchor>
    <Abstract>Update or add all the properties from the given map to the current type.</Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPropertyMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a9d2a56534e47e242909493a464bb067d</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPropertyMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>ac6eab32bbf231c60ad28611f90858ccf</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>aacc133ebfcb980085eb1ae3557b71b6d</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clonePropertiesFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a8d6ad46b65b32439443194e49fac2b9c</Anchor>
    <Abstract>Clear all current properties and clone new properties from object.</Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ab0defc991ad50df92eb679a72840b866</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a2109985c05194082bc6e0b5a64478530</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Chunk</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Chunk</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_chunk.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ClipPlane</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ClipPlane</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_clip_plane.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ab0defc991ad50df92eb679a72840b866</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a2109985c05194082bc6e0b5a64478530</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ColorMap</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ColorMap</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_color_map.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::DeferredTask</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>brayns::DeferredTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_deferred_task.html</Path>
    <Abstract>A task type which allows for deferred scheduling after construction using schedule().</Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>schedule</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::DeferredTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_deferred_task.html</Path>
    <Anchor>aa0c6a2de0df76b4bcf74c80413514bd0</Anchor>
    <Abstract>NOP for this task; tasks are running after construction.</Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Task</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>adb4c824ce065c30129e25c2973b5760b</Anchor>
    <Abstract>Create an empty task; use task() and async++ to do something meaningful.</Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Task</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>ac5558024a92ce91fe5c6d8cc3ffd84ee</Anchor>
    <Abstract>Create and schedule a task with the given functor or lambda.</Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>result</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>a9a6c0675ba8c6321bff7ffbf044fdc99</Anchor>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>aa4f761290010bd3a0c7a026629524042</Anchor>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cancel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>af1019fe39fea3201341ea4301186a911</Anchor>
    <Abstract>Cancels the task if is either waiting to be scheduled or already running.</Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finishCancel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a12c64d0b0aa5bc8916d656fbffd5e8dd</Anchor>
    <Abstract>Indicate that cancel processing has finished and call the function given to cancel().</Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canceled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a46379e6aa371574c1be02e8d8327bd00</Anchor>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>progress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a9c4958935de14f9db7480e9bb3566735</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::DirectionalLight</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::DirectionalLight</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_directional_light.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DirectionalLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::DirectionalLight</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_directional_light.html</Path>
    <Anchor>ae5d856216ac056c5fd1b05ce174f309a</Anchor>
    <Abstract>DirectionalLight Creates a light that shines from a specific direction not from a specific position.</Abstract>
    <DeclaredIn>Light.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Engine</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Abstract>Abstract implementation of the ray-tracing engine.</Abstract>
    <DeclaredIn>engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Engine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a9b750d4a7b2e945f2f7cb0726540f27d</Anchor>
    <Abstract>Engine constructor.</Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>addcc1b550a6783cf5ea893a58cdc4faa</Anchor>
    <Abstract>Renders the current scene and populates the frame buffer accordingly.</Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScene</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>aa7447c013f31279eecf99d3420ce641d</Anchor>
    <Abstract>Gets the scene.</Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a651d4f6e12e6f6ea73089150ee37b8b0</Anchor>
    <Abstract>Gets the frame buffer.</Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCamera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a2ee6f411be11a4ffd48125beea2426d0</Anchor>
    <Abstract>Gets the camera.</Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>af961a55c58767fdc61b67497abcbf7bb</Anchor>
    <Abstract>Gets the renderer.</Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setKeepRunning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a9eeb56f21e8fc9c34eb926f6d706a546</Anchor>
    <Abstract>Keep continue to run the engine, aka the user did not request to stop rendering.</Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKeepRunning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>ae3c979bc99cc5108e9857ea31ed05022</Anchor>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>continueRendering</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a2d0049f71030ec90011ab854121f8428</Anchor>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a2ad8874dab6dc4964a5c158af39d087d</Anchor>
    <Abstract>Add the given frame buffer to the list of buffers that shall be filled during rendering.</Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a7cadd61211f72e89c60a1f099e5fc6dd</Anchor>
    <Abstract>Remove the given frame buffer from the list of buffers that are filled during rendering.</Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a2f158de047c28bf503e7566bb72d9aad</Anchor>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addRendererType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a923c14b61abe378ae86ecd30f72377c0</Anchor>
    <Abstract>Add a new renderer type with optional properties.</Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addCameraType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>aff6c21030513592940acc04b12378c7a</Anchor>
    <Abstract>Add a new camera type with optional properties.</Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>aa0652f4c99164ea4127d8db5ad5fe502</Anchor>
    <Abstract>Commits changes to the engine.</Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preRender</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>ae4df6a7c3480fd5a2c99d2669d7ddbee</Anchor>
    <Abstract>Executes engine specific pre-render operations.</Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postRender</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a75dcc0f335ea1f2b268d0085ad2f4ce1</Anchor>
    <Abstract>Executes engine specific post-render operations.</Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinimumFrameSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a2993772c93259c48b346781a09bc85e1</Anchor>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a13535b5d071b3778ef2a2ec94cdba773</Anchor>
    <Abstract>Factory method to create an engine-specific framebuffer.</Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createScene</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a64841852eb58b8ec8855136f2f461ab4</Anchor>
    <Abstract>Factory method to create an engine-specific scene.</Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createCamera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a197944645b355e9796f1cf147dd160fb</Anchor>
    <Abstract>Factory method to create an engine-specific camera.</Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a7faac5f01b0ccb046cbd92e330af2fe3</Anchor>
    <Abstract>Factory method to create an engine-specific renderer.</Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>triggerRender</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>acc472e64b447113d098d54273244f4b6</Anchor>
    <Abstract>Callback when a new frame shall be triggered.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ExtensionPlugin</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ExtensionPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_extension_plugin.html</Path>
    <Abstract>Defines the abstract representation of an extension plug-in.</Abstract>
    <DeclaredIn>ExtensionPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ExtensionPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_extension_plugin.html</Path>
    <Anchor>af942a4c7fcce9bede42bd225c08b1c58</Anchor>
    <Abstract>Called from Brayns::Brayns right after the engine has been created.</Abstract>
    <DeclaredIn>ExtensionPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preRender</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ExtensionPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_extension_plugin.html</Path>
    <Anchor>a67dab4a796a7de090ff4c28e8be39bc9</Anchor>
    <Abstract>Called from Brayns::preRender() to prepare the engine based on the plugins&apos; need for an upcoming rend...</Abstract>
    <DeclaredIn>ExtensionPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postRender</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ExtensionPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_extension_plugin.html</Path>
    <Anchor>a6e17e99715fadee1d5a883168b3c9764</Anchor>
    <Abstract>Called from Brayns::postRender() after render() has finished.</Abstract>
    <DeclaredIn>ExtensionPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::FlyingModeManipulator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::FlyingModeManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_flying_mode_manipulator.html</Path>
    <Abstract>Defines a flying mode camera manipulator, like in a flight simulator.</Abstract>
    <DeclaredIn>FlyingModeManipulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>adjust</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>a4fde623a17453a786cb15f735209bdad</Anchor>
    <Abstract>Adjust manipulator behaviour to the given scene.</Abstract>
    <DeclaredIn>AbstractManipulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_camera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>aae08537e81adbbd7275c7d6fd9ec8ed6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_keyboardHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>a1ddb4ed7cefbbb93422d8f26b5911245</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_motionSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>a8097c2eedefc3455aa6fef5da8e37c86</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rotationSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>a24eb133da465bb9d841a18cf58a72a34</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::FrameBuffer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::FrameBuffer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_frame_buffer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::FrameBuffer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_frame_buffer.html</Path>
    <Anchor>a1edf0c6ad75ec3102cc5549391844125</Anchor>
    <Abstract>Map the buffer for reading with get*Buffer().</Abstract>
    <DeclaredIn>FrameBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::FrameBuffer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_frame_buffer.html</Path>
    <Anchor>a165f845d96342690001f987e39f5c411</Anchor>
    <Abstract>Unmap the buffer for reading with get*Buffer().</Abstract>
    <DeclaredIn>FrameBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getColorBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::FrameBuffer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_frame_buffer.html</Path>
    <Anchor>ae2fac02680ed0790e2af98dc062c34f2</Anchor>
    <DeclaredIn>FrameBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDepthBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::FrameBuffer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_frame_buffer.html</Path>
    <Anchor>a8bcc3560cd7e3065297d8cf35c29bdb8</Anchor>
    <DeclaredIn>FrameBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::FrameBuffer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_frame_buffer.html</Path>
    <Anchor>ad299b7acc0823946c46d2d8c4c211921</Anchor>
    <Abstract>Resize the framebuffer to the new size.</Abstract>
    <DeclaredIn>FrameBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::FrameBuffer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_frame_buffer.html</Path>
    <Anchor>a26020260d167648635258c46d0195f63</Anchor>
    <Abstract>Clear the framebuffer.</Abstract>
    <DeclaredIn>FrameBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::FrameBuffer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_frame_buffer.html</Path>
    <Anchor>a637bba2dc437bf6eb336d03bf87c3f31</Anchor>
    <DeclaredIn>FrameBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAccumulation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::FrameBuffer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_frame_buffer.html</Path>
    <Anchor>a6605b948db8ae2ab9c167a69e8d68b3f</Anchor>
    <Abstract>Enable/disable accumulation state on the framebuffer.</Abstract>
    <DeclaredIn>FrameBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::FrameBuffer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_frame_buffer.html</Path>
    <Anchor>aa50c87acdec36475d72b9b4eba7dbcda</Anchor>
    <Abstract>Set a new framebuffer format.</Abstract>
    <DeclaredIn>FrameBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSubsampling</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::FrameBuffer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_frame_buffer.html</Path>
    <Anchor>a7210bb16ceda4d2e334ad9fd7628aaf8</Anchor>
    <Abstract>Set a new subsampling with a factor from 1 to x of the current size.</Abstract>
    <DeclaredIn>FrameBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createPixelOp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::FrameBuffer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_frame_buffer.html</Path>
    <Anchor>a83734dc1bc6bc16831b3b07b549142d7</Anchor>
    <Abstract>Create and set a pixelop (pre/post filter) on the framebuffer.</Abstract>
    <DeclaredIn>FrameBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updatePixelOp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::FrameBuffer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_frame_buffer.html</Path>
    <Anchor>a21060175c080dadcdda5a40fe197b2d6</Anchor>
    <Abstract>Update the current pixelop with the given properties.</Abstract>
    <DeclaredIn>FrameBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ab0defc991ad50df92eb679a72840b866</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a2109985c05194082bc6e0b5a64478530</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::GeometryParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Abstract>Manages geometry parameters.</Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GeometryParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a96a7875f7d452448da35b193921725dc</Anchor>
    <Abstract>Parse the command line parameters and populates according class members.</Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a8c92a909fef870a14d015a6e838f3f63</Anchor>
    <Abstract>Displays values of registered parameters.</Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMemoryMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a34e89a1387f4afa3bcf480fbc80718d4</Anchor>
    <Abstract>Defines what memory mode should be used between Brayns and the underlying renderer.</Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>af8c4e3e33c6d75a71893d7d48f0e4fec</Anchor>
    <Abstract>Constructor.</Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ab0defc991ad50df92eb679a72840b866</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a73ac7de16c966b974774c339df0cc881</Anchor>
    <Abstract>Parses parameters managed by the class.</Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a2109985c05194082bc6e0b5a64478530</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ImageManager</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ImageManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_image_manager.html</Path>
    <Abstract>The ImageManager class uses the FreeImage libray to manipulate images.</Abstract>
    <DeclaredIn>ImageManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importTextureFromFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::ImageManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_image_manager.html</Path>
    <Anchor>ac10eaba22135a8b52025678cb8af78bf</Anchor>
    <Abstract>Import a Texture from file.</Abstract>
    <DeclaredIn>ImageManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::InspectCenterManipulator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::InspectCenterManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_inspect_center_manipulator.html</Path>
    <Abstract>Camera manipulator to rotate and zoom around a central point.</Abstract>
    <DeclaredIn>InspectCenterManipulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>adjust</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>a4fde623a17453a786cb15f735209bdad</Anchor>
    <Abstract>Adjust manipulator behaviour to the given scene.</Abstract>
    <DeclaredIn>AbstractManipulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_camera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>aae08537e81adbbd7275c7d6fd9ec8ed6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_keyboardHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>a1ddb4ed7cefbbb93422d8f26b5911245</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_motionSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>a8097c2eedefc3455aa6fef5da8e37c86</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rotationSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>a24eb133da465bb9d841a18cf58a72a34</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::KeyboardHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::KeyboardHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_keyboard_handler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Light</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Light</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_light.html</Path>
    <Abstract>The Light class defines the common base class for all lights.</Abstract>
    <DeclaredIn>Light.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::LightManager</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::LightManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_light_manager.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LightManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_light_manager.html</Path>
    <Anchor>ac42d0182de34577974b1b2545f71762f</Anchor>
    <Abstract>addLight Attaches a light source to the scene</Abstract>
    <DeclaredIn>LightManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LightManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_light_manager.html</Path>
    <Anchor>abb363a9f2c686a2159373b01d7a3b958</Anchor>
    <Abstract>removeLight Removes a light source from the scene for a given id</Abstract>
    <DeclaredIn>LightManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LightManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_light_manager.html</Path>
    <Anchor>ab84dd8d169056163de8464ee8cc01be7</Anchor>
    <Abstract>removeLight Removes a light source from the scene for a given light</Abstract>
    <DeclaredIn>LightManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LightManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_light_manager.html</Path>
    <Anchor>a60ce0d07b4d373dc18daf0b935730de5</Anchor>
    <Abstract>getLight Gets a light source from the scene for a given id.</Abstract>
    <DeclaredIn>LightManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LightManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_light_manager.html</Path>
    <Anchor>a740ee53bdafcb6360c3572672841bd49</Anchor>
    <Abstract>getLights Gets the lights</Abstract>
    <DeclaredIn>LightManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearLights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LightManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_light_manager.html</Path>
    <Anchor>a6f0d81ca4861e17ee9da5643209e0743</Anchor>
    <Abstract>clearLights Removes all light sources</Abstract>
    <DeclaredIn>LightManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ab0defc991ad50df92eb679a72840b866</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a2109985c05194082bc6e0b5a64478530</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Loader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Loader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader.html</Path>
    <Abstract>A base class for data loaders to unify loading data from blobs and files, and provide progress feedba...</Abstract>
    <DeclaredIn>Loader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSupportedExtensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Loader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader.html</Path>
    <Anchor>a4ea5c3f8472fc563d4698eece0dd0e52</Anchor>
    <DeclaredIn>Loader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Loader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader.html</Path>
    <Anchor>a8cc43f6e290863f6e3339a1f9cbb12a9</Anchor>
    <DeclaredIn>Loader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProperties</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Loader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader.html</Path>
    <Anchor>a704af1509ece85ee4999629d33c47a92</Anchor>
    <DeclaredIn>Loader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importFromBlob</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Loader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader.html</Path>
    <Anchor>a23bc80dbe4923487947d7c9d4531b502</Anchor>
    <Abstract>Import the data from the blob and return the created model.</Abstract>
    <DeclaredIn>Loader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importFromFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Loader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader.html</Path>
    <Anchor>acda70870750080c6752494469bfbfa04</Anchor>
    <Abstract>Import the data from the given file and return the created model.</Abstract>
    <DeclaredIn>Loader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSupported</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Loader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader.html</Path>
    <Anchor>a038440688106870a96ddb5c4bcf480e1</Anchor>
    <Abstract>Query the loader if it can load the given file.</Abstract>
    <DeclaredIn>Loader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::LoaderInfo</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::LoaderInfo</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_loader_info.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::LoaderProgress</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::LoaderProgress</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader_progress.html</Path>
    <Abstract>A class for providing progress feedback.</Abstract>
    <DeclaredIn>Loader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CallbackFn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brayns::LoaderProgress</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader_progress.html</Path>
    <Anchor>a98db540024614df9c8d98e660b6180ad</Anchor>
    <Abstract>The callback for each progress update with the signature (message, fraction of progress in 0....</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateProgress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LoaderProgress</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader_progress.html</Path>
    <Anchor>ae541cb668a897e753e5b8ade8f8b8d0f</Anchor>
    <Abstract>Update the current progress of an operation and call the callback.</Abstract>
    <DeclaredIn>Loader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::LoaderRegistry</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::LoaderRegistry</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader_registry.html</Path>
    <Abstract>Holds information about registered loaders and helps invoking the appropriate loader for a given blob...</Abstract>
    <DeclaredIn>LoaderRegistry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerLoader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LoaderRegistry</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader_registry.html</Path>
    <Anchor>ad97da244840fb0449ffc11114e90df5a</Anchor>
    <Abstract>Register the given loader.</Abstract>
    <DeclaredIn>LoaderRegistry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLoaderInfos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LoaderRegistry</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader_registry.html</Path>
    <Anchor>a1663f0603d0676b8e962422752a9b523</Anchor>
    <Abstract>Get a list of loaders and their supported file extensions and properties.</Abstract>
    <DeclaredIn>LoaderRegistry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSupportedFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LoaderRegistry</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader_registry.html</Path>
    <Anchor>a6a6e3709df038f3653dc4893035011f6</Anchor>
    <DeclaredIn>LoaderRegistry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSupportedType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LoaderRegistry</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader_registry.html</Path>
    <Anchor>a5a6f881050a48c592387259c4166bc7f</Anchor>
    <DeclaredIn>LoaderRegistry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSuitableLoader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LoaderRegistry</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader_registry.html</Path>
    <Anchor>a8bc277dfd5310a6b51c21a1a82a6393e</Anchor>
    <Abstract>Get a loader that matches the provided name, filetype or loader name.</Abstract>
    <DeclaredIn>LoaderRegistry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LoaderRegistry</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader_registry.html</Path>
    <Anchor>a9fd05d8a7b669b15fad4abf8e8d270b8</Anchor>
    <Abstract>Load the given file or folder into the given scene by choosing the first matching loader based on the...</Abstract>
    <DeclaredIn>LoaderRegistry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::LoadModelFunctor</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::LoadModelFunctor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_load_model_functor.html</Path>
    <Abstract>A task functor which loads data from blob or file path and adds the loaded data to the scene.</Abstract>
    <DeclaredIn>LoadModelFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProgressFunc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::TaskFunctor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task_functor.html</Path>
    <Anchor>ad8283ae7984fbd41e7d5e61e57238ad3</Anchor>
    <Abstract>Set the function when progress() is called.</Abstract>
    <DeclaredIn>TaskFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>progress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::TaskFunctor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task_functor.html</Path>
    <Anchor>a0dab436f8eb57c24de929b894069f2cd</Anchor>
    <Abstract>Report progress using the provided callback from setProgressFunc() and also check if the execution ha...</Abstract>
    <DeclaredIn>TaskFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCancelToken</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::TaskFunctor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task_functor.html</Path>
    <Anchor>a0463073aa21dd20ffa10309757d2e52b</Anchor>
    <Abstract>Set the cancel token from e.g.</Abstract>
    <DeclaredIn>TaskFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cancelCheck</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::TaskFunctor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task_functor.html</Path>
    <Anchor>afeeacf36f300b51f18bc753ad052ecbe</Anchor>
    <Abstract>Checks if the execution has been cancelled.</Abstract>
    <DeclaredIn>TaskFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProgressFunc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brayns::TaskFunctor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task_functor.html</Path>
    <Anchor>af5ae54477aeecf3b89c696867171a980</Anchor>
    <Abstract>message, increment, amount</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Material</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Material</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_material.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Material</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_material.html</Path>
    <Anchor>a09778f0633b347188536eeb0c9634761</Anchor>
    <Abstract>Called after material change.</Abstract>
    <DeclaredIn>Material.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCurrentType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a7be001331636293e20b0ad923bd0d47c</Anchor>
    <Abstract>Set the current type to use for &apos;type-less&apos; queries and updates.</Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a541fe78d6ba40e423b62b359b8f51027</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateProperty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>aa46fbc685f8b92ce935897d7de386232</Anchor>
    <Abstract>Update the value of the given property for the current type.</Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasProperty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a350c44122ae0f3b9243bee212d44df94</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProperty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a418ed4706f2b79c679db03f182c3df1e</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPropertyOrValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a7ca2b79e77dcab744f23a3935923da07</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProperties</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a9d0d4a64b6c56f5e6391bc7ff9d7097b</Anchor>
    <Abstract>Assign a new set of properties to the current type.</Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProperties</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>ae47c1492190d22b89eeecce803eed03c</Anchor>
    <Abstract>Assign a new set of properties to the given type.</Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateProperties</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>af063e495e86c76a2373a8157a0be190d</Anchor>
    <Abstract>Update or add all the properties from the given map to the current type.</Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPropertyMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a9d2a56534e47e242909493a464bb067d</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPropertyMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>ac6eab32bbf231c60ad28611f90858ccf</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>aacc133ebfcb980085eb1ae3557b71b6d</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clonePropertiesFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a8d6ad46b65b32439443194e49fac2b9c</Anchor>
    <Abstract>Clear all current properties and clone new properties from object.</Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ab0defc991ad50df92eb679a72840b866</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a2109985c05194082bc6e0b5a64478530</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::MHDVolumeLoader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::MHDVolumeLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_m_h_d_volume_loader.html</Path>
    <Abstract>A volume loader for mhd volumes.</Abstract>
    <DeclaredIn>VolumeLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSupportedExtensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::MHDVolumeLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_m_h_d_volume_loader.html</Path>
    <Anchor>ab200e709c5b410197089845d8abfd752</Anchor>
    <DeclaredIn>VolumeLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::MHDVolumeLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_m_h_d_volume_loader.html</Path>
    <Anchor>a13f51f5e5c1b2703a76355005b14b796</Anchor>
    <DeclaredIn>VolumeLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSupported</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::MHDVolumeLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_m_h_d_volume_loader.html</Path>
    <Anchor>aefa8b77db108fd738a9bf9a1554b4af9</Anchor>
    <Abstract>Query the loader if it can load the given file.</Abstract>
    <DeclaredIn>VolumeLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importFromBlob</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::MHDVolumeLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_m_h_d_volume_loader.html</Path>
    <Anchor>a0085bbde22f0053676c0b0b70eec52fe</Anchor>
    <Abstract>Import the data from the blob and return the created model.</Abstract>
    <DeclaredIn>VolumeLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importFromFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::MHDVolumeLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_m_h_d_volume_loader.html</Path>
    <Anchor>a3e46b456eccf9edc1a2999f52a82a0fa</Anchor>
    <Abstract>Import the data from the given file and return the created model.</Abstract>
    <DeclaredIn>VolumeLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProperties</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Loader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader.html</Path>
    <Anchor>a704af1509ece85ee4999629d33c47a92</Anchor>
    <DeclaredIn>Loader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Model</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Abstract>The abstract Model class holds the geometry attached to an asset of the scene (mesh,...</Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>empty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>adb8247cbff6e466e2924d3ce9b92a3a2</Anchor>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a29a58bfd6dbebbaff29e1357accba32e</Anchor>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBounds</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>ae88747bacadc7f5dccaf341c2d7473a5</Anchor>
    <Abstract>Returns the bounds for the Model.</Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSpheres</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a4c1aa544b161c550ccbd822d14fea086</Anchor>
    <Abstract>Returns spheres handled by the Model.</Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSphere</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a850d89a566652c7194081aae85773aa7</Anchor>
    <Abstract>Adds a sphere to the model.</Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCylinders</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a2420d4680295baa18a02707f425e9b9a</Anchor>
    <Abstract>Returns cylinders handled by the model.</Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addCylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a11568ec350edbaa36305f927e1eb2178</Anchor>
    <Abstract>Adds a cylinder to the model.</Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCones</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>ab4d91e453e37b51f0a24e79230c39d25</Anchor>
    <Abstract>Returns cones handled by the model.</Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addCone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a3d2d006a3ee2f20a1ac875faa7039e83</Anchor>
    <Abstract>Adds a cone to the model.</Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSDFBeziers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a5ca349a5b551f18eaf3a8be23f331b94</Anchor>
    <Abstract>Returns SDFBezier handled by the model.</Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSDFBezier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>aba4e18c4a272bde33c67014b352fdc5e</Anchor>
    <Abstract>Adds a SDFBezier to the model.</Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addStreamline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a4120048ceaf47ad3e72303c48e5bc967</Anchor>
    <Abstract>Adds a streamline to the model.</Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStreamlines</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a23291b6358f1e564cca698f5667f04f0</Anchor>
    <Abstract>Returns streamlines handled by the model.</Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSDFGeometry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a884fb214767b5ca7700e05e49d66f615</Anchor>
    <Abstract>Adds a SDFGeometry to the scene.</Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSDFGeometryData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a9a0810aa9ea857a7690d5d05e4851d71</Anchor>
    <Abstract>Returns SDF geometry data handled by the model.</Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateSDFGeometryNeighbours</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>ad81368b78bef55126b476fc3bc439557</Anchor>
    <Abstract>Update the list of neighbours for a SDF geometry.</Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTriangleMeshes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a18aa47d44e20383fa1d2987b7adbaa0c</Anchor>
    <Abstract>Returns triangle meshes handled by the model.</Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addVolume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a0cf2f3bd716ddcb9e68701b9b9ce41b0</Anchor>
    <Abstract>Add a volume to the model.</Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeVolume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a0dcbdba6c5b454ef420edfa126ebae76</Anchor>
    <Abstract>Remove a volume from the model.</Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logInformation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>ab0edfc4d1a5f0ca5ae2a66ea5a51b59d</Anchor>
    <Abstract>logInformation Logs information about the model, like the number of primitives, and the associated me...</Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaterialsColorMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a22b6060a15871d0a6a16d6f2a1e9a897</Anchor>
    <Abstract>Sets the materials handled by the model, and available to the geometry.</Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaterials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a433dcef8bbfd307b5bda6f6ef570c158</Anchor>
    <Abstract>getMaterials Returns a reference to the map of materials handled by the model</Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaterial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a56778a5cdec145e3fbc1e291a52dac28</Anchor>
    <Abstract>getMaterial Returns a pointer to a specific material</Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTransferFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>afbc989c6cdc1a9ce350112599dc9eb51</Anchor>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTransferFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a0356100fa260529a22fe02f182575ff9</Anchor>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>ae86c61f812145d5a1034e0f5c327b310</Anchor>
    <Abstract>Returns the simulutation handler.</Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>af56361ad6a7852418d44edc0a0064c95</Anchor>
    <Abstract>Sets the simulation handler.</Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSizeInBytes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a547b17c82a3f8274a2223398b48c5538</Anchor>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitTransferFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>ad8044132d1e824dfb51f1d3b77becb60</Anchor>
    <Abstract>Commit transfer function.</Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitSimulationData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a1f4a1f0dc32b780a44aa9d61c21907c6</Anchor>
    <Abstract>Commit simulation data.</Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMaterial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>aab68e9ccd07637a44ebfec8cba1ddc9d</Anchor>
    <Abstract>Factory method to create an engine-specific material.</Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createSharedDataVolume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>afc1d69afc9924a2a43046cb9180b9f23</Anchor>
    <Abstract>Create a volume with the given dimensions, voxel spacing and data type where the voxels are set via s...</Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createBrickedVolume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a5c4d7a1ccf3b4b2f4034cd2862d5ff2d</Anchor>
    <Abstract>Create a volume with the given dimensions, voxel spacing and data type where the voxels are copied vi...</Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMaterialImpl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a708a29fc191f83e2794316fc0cd5752f</Anchor>
    <Abstract>Factory method to create an engine-specific material.</Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_markGeometriesClean</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>af0b3c1b4fe57cb2ff33dad436ce3dbdb</Anchor>
    <Abstract>Mark all geometries as clean.</Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Model::Geometries</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Model::Geometries</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_model_1_1_geometries.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ModelDescriptor</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ModelDescriptor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model_descriptor.html</Path>
    <Abstract>The ModelDescriptor struct defines the metadata attached to a model.</Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onRemoved</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ModelDescriptor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model_descriptor.html</Path>
    <Anchor>af2e8ee4410d6a70bdaf6f221bd4bc874</Anchor>
    <Abstract>Set a function that is called when this model is about to be removed.</Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ab0defc991ad50df92eb679a72840b866</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a2109985c05194082bc6e0b5a64478530</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ModelInstance</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ModelInstance</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model_instance.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ab0defc991ad50df92eb679a72840b866</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a2109985c05194082bc6e0b5a64478530</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ModelParams</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ModelParams</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model_params.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ab0defc991ad50df92eb679a72840b866</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a2109985c05194082bc6e0b5a64478530</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ParametersManager</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Abstract>Class managing all parameters registered by the application.</Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>af1446cfbea9a2fb9348a8625bd69bb18</Anchor>
    <Abstract>Registers specific parameters to the manager.</Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>usage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>a2fc48e699c64648868460809b3343a51</Anchor>
    <Abstract>Displays usage of registered parameters.</Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>a0a0967c0597705f2c6f936a2cfc98b3c</Anchor>
    <Abstract>Displays values registered parameters.</Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAnimationParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>a7d8bac86d95437486b9e8bb2e1e26254</Anchor>
    <Abstract>Gets animation parameters.</Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRenderingParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>a3558f229417081e9ed7eee77acfa73f0</Anchor>
    <Abstract>Gets rendering parameters.</Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGeometryParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>a42770db58f8d661744cd2e029b314295</Anchor>
    <Abstract>Gets geometry parameters.</Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getApplicationParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>aa1bd17b18fd4fe6d75abf1165e19830a</Anchor>
    <Abstract>Gets application parameters.</Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVolumeParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>af96aa3d61e0e96870b7027570c832829</Anchor>
    <Abstract>Gets volume parameters.</Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>a0c96d24bee61aaa727c92db0aeeeb0c0</Anchor>
    <Abstract>Call resetModified on all parameters.</Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAnyModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>a61fb54f795bea6643bc94f3193b042b4</Anchor>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::PluginAPI</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::PluginAPI</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_plugin_a_p_i.html</Path>
    <Abstract>The API that plugins can use to interact with Brayns.</Abstract>
    <DeclaredIn>pluginapi.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScene</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PluginAPI</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_plugin_a_p_i.html</Path>
    <Anchor>af60f973776379660bb8e439c1a825f44</Anchor>
    <DeclaredIn>PluginAPI.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParametersManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PluginAPI</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_plugin_a_p_i.html</Path>
    <Anchor>aaea89cf1573db310a3622430159680ee</Anchor>
    <DeclaredIn>PluginAPI.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getActionInterface</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PluginAPI</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_plugin_a_p_i.html</Path>
    <Anchor>a6015a4863d500bcb3cc6ae319fa40326</Anchor>
    <DeclaredIn>PluginAPI.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKeyboardHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PluginAPI</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_plugin_a_p_i.html</Path>
    <Anchor>aab6259aa4eba7dba2fc14ecb665fcada</Anchor>
    <DeclaredIn>PluginAPI.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCameraManipulator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PluginAPI</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_plugin_a_p_i.html</Path>
    <Anchor>a62b48682ae9c377730c78af26e02d232</Anchor>
    <DeclaredIn>PluginAPI.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCamera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PluginAPI</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_plugin_a_p_i.html</Path>
    <Anchor>a434a7c355627ff17f36a71d054ee0914</Anchor>
    <DeclaredIn>PluginAPI.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PluginAPI</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_plugin_a_p_i.html</Path>
    <Anchor>a363076cb3d4521194f83a55ffeb8fa07</Anchor>
    <DeclaredIn>PluginAPI.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>triggerRender</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PluginAPI</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_plugin_a_p_i.html</Path>
    <Anchor>a43e972666a64360189a030dfab7e39ce</Anchor>
    <Abstract>Triggers a new preRender() and potentially render() and postRender().</Abstract>
    <DeclaredIn>PluginAPI.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setActionInterface</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PluginAPI</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_plugin_a_p_i.html</Path>
    <Anchor>a742986a27ab0594d779804f798249bcb</Anchor>
    <Abstract>Set the action interface to be used by Brayns main loop.</Abstract>
    <DeclaredIn>PluginAPI.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Progress</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Progress</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_progress.html</Path>
    <Abstract>A progress object which offers thread-safe progress updates and thread-safe consumption of the curren...</Abstract>
    <DeclaredIn>Progress.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Progress</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_progress.html</Path>
    <Anchor>a11abbe394dc77f68ce0d5c4fd3a366d6</Anchor>
    <Abstract>Update the progress with a new absolute amount.</Abstract>
    <DeclaredIn>Progress.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>increment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Progress</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_progress.html</Path>
    <Anchor>a040143c55476623a620e1f28c2fdc903</Anchor>
    <Abstract>Update the progress with the given increment.</Abstract>
    <DeclaredIn>Progress.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>consume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Progress</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_progress.html</Path>
    <Anchor>a3e56606ed9283c4e4189b0d5b3b6b7cf</Anchor>
    <Abstract>Call the provided callback with the current progress if it has changed since the last invokation.</Abstract>
    <DeclaredIn>Progress.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ab0defc991ad50df92eb679a72840b866</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a2109985c05194082bc6e0b5a64478530</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Property</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Property</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_property.html</Path>
    <Abstract>Defines a single property which always has a name, a label for e.g.</Abstract>
    <DeclaredIn>PropertyMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Property</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>brayns::Property</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_property.html</Path>
    <Anchor>a80a6714d1c783c0b6e34a916a24f688e</Anchor>
    <Abstract>Specialized for enum properties, the possible enum values are passed in enums_.</Abstract>
    <DeclaredIn>PropertyMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>brayns::Property</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_property.html</Path>
    <Anchor>a985a4d8edeee8e66745eeea1dbf00726</Anchor>
    <Abstract>Set a function that is called after this property has been changed.</Abstract>
    <DeclaredIn>PropertyMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>markReadOnly</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>brayns::Property</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_property.html</Path>
    <Anchor>a537b95581addf5f55415ba4340cfd80d</Anchor>
    <Abstract>Read-only property shall not be modified from the outside aka web API via JSON.</Abstract>
    <DeclaredIn>PropertyMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>metaData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::Property</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_property.html</Path>
    <Anchor>ab2bda51d57ae1f5a6daf294628c1c816</Anchor>
    <Abstract>user-friendly name and description</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enums</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::Property</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_property.html</Path>
    <Anchor>ace3cc17745dd7640f4d1aabf52c7e36b</Anchor>
    <Abstract>Name of enum values that are mapped to the integer value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Property::MetaData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Property::MetaData</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_property_1_1_meta_data.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::PropertyMap</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::PropertyMap</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_map.html</Path>
    <Abstract>Container class for holding properties that are mapped by name to a supported C++ type and their resp...</Abstract>
    <DeclaredIn>PropertyMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyMap</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_map.html</Path>
    <Anchor>a1cb469392fb172e49882aebf96767309</Anchor>
    <DeclaredIn>PropertyMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateProperty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyMap</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_map.html</Path>
    <Anchor>ad18c6f4de0f7670e4dc95b253de0d1e2</Anchor>
    <Abstract>Update the property of the given name.</Abstract>
    <DeclaredIn>PropertyMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProperty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyMap</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_map.html</Path>
    <Anchor>a9ec43c008e2aa8f72aba98136559bea2</Anchor>
    <Abstract>Update or add the given property.</Abstract>
    <DeclaredIn>PropertyMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProperty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyMap</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_map.html</Path>
    <Anchor>a45a3ec2e93ce261653d89467bea984e0</Anchor>
    <DeclaredIn>PropertyMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProperty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyMap</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_map.html</Path>
    <Anchor>aa1ff4fae43a722d067eb54f110c5ccf3</Anchor>
    <DeclaredIn>PropertyMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasProperty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyMap</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_map.html</Path>
    <Anchor>ab375f830e4adb41291afc1b11dc573c9</Anchor>
    <DeclaredIn>PropertyMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEnums</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyMap</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_map.html</Path>
    <Anchor>aac53af799cdcecfec8282872393dc0be</Anchor>
    <DeclaredIn>PropertyMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPropertyType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyMap</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_map.html</Path>
    <Anchor>aecbc1d045c720f295a76451800d83b62</Anchor>
    <DeclaredIn>PropertyMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMetaData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyMap</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_map.html</Path>
    <Anchor>a1dbe881fe63eaf28b0dd040626e25518</Anchor>
    <DeclaredIn>PropertyMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProperties</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyMap</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_map.html</Path>
    <Anchor>ae4e34f4f086deec196854577ca4fbddb</Anchor>
    <DeclaredIn>PropertyMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>merge</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyMap</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_map.html</Path>
    <Anchor>ac50e51254d784da34ccff6e61ddd2fa1</Anchor>
    <Abstract>Merge this property map with properties from another.</Abstract>
    <DeclaredIn>PropertyMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyMap</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_map.html</Path>
    <Anchor>a5e815cb4bf818dd4511c90a7abea74e4</Anchor>
    <Abstract>Take the values from another property map only for properties that are known and compatible to this o...</Abstract>
    <DeclaredIn>PropertyMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyMap</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_map.html</Path>
    <Anchor>a8bdf6d1f0874d20c7bd211b5934d9ad2</Anchor>
    <Abstract>Parse and fill values from the commandline.</Abstract>
    <DeclaredIn>PropertyMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::PropertyObject</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Abstract>Maps generic properties to user-defined types/keys/names and tracks the current type/key/name for que...</Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCurrentType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a7be001331636293e20b0ad923bd0d47c</Anchor>
    <Abstract>Set the current type to use for &apos;type-less&apos; queries and updates.</Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a541fe78d6ba40e423b62b359b8f51027</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateProperty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>aa46fbc685f8b92ce935897d7de386232</Anchor>
    <Abstract>Update the value of the given property for the current type.</Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasProperty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a350c44122ae0f3b9243bee212d44df94</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProperty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a418ed4706f2b79c679db03f182c3df1e</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPropertyOrValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a7ca2b79e77dcab744f23a3935923da07</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProperties</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a9d0d4a64b6c56f5e6391bc7ff9d7097b</Anchor>
    <Abstract>Assign a new set of properties to the current type.</Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProperties</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>ae47c1492190d22b89eeecce803eed03c</Anchor>
    <Abstract>Assign a new set of properties to the given type.</Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateProperties</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>af063e495e86c76a2373a8157a0be190d</Anchor>
    <Abstract>Update or add all the properties from the given map to the current type.</Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPropertyMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a9d2a56534e47e242909493a464bb067d</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPropertyMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>ac6eab32bbf231c60ad28611f90858ccf</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>aacc133ebfcb980085eb1ae3557b71b6d</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clonePropertiesFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a8d6ad46b65b32439443194e49fac2b9c</Anchor>
    <Abstract>Clear all current properties and clone new properties from object.</Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ab0defc991ad50df92eb679a72840b866</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a2109985c05194082bc6e0b5a64478530</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ProteinLoader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ProteinLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_protein_loader.html</Path>
    <Abstract>Loads protein from PDB files http://www.rcsb.org.</Abstract>
    <DeclaredIn>ProteinLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSupportedExtensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ProteinLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_protein_loader.html</Path>
    <Anchor>abafcad04e9af8e46a23b6862ffe21c93</Anchor>
    <DeclaredIn>ProteinLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ProteinLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_protein_loader.html</Path>
    <Anchor>a6244e4e9818e77bffac14fbdcf7adc97</Anchor>
    <DeclaredIn>ProteinLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProperties</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ProteinLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_protein_loader.html</Path>
    <Anchor>aba2bc44d4421d60425a2f1d0c0319c1c</Anchor>
    <DeclaredIn>ProteinLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSupported</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ProteinLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_protein_loader.html</Path>
    <Anchor>a976c43f248371b547abe3840503389f0</Anchor>
    <Abstract>Query the loader if it can load the given file.</Abstract>
    <DeclaredIn>ProteinLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importFromFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ProteinLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_protein_loader.html</Path>
    <Anchor>a22534b17ad0ea7f28176e510329e1345</Anchor>
    <Abstract>Import the data from the given file and return the created model.</Abstract>
    <DeclaredIn>ProteinLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importFromBlob</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ProteinLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_protein_loader.html</Path>
    <Anchor>a0f97c684bd0119960f54422d343e7556</Anchor>
    <Abstract>Import the data from the blob and return the created model.</Abstract>
    <DeclaredIn>ProteinLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::QuadLight</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::QuadLight</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_quad_light.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>QuadLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::QuadLight</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_quad_light.html</Path>
    <Anchor>ad706f029e7fd30d7f1828c84dd948c57</Anchor>
    <Abstract>QuadLight Creates a quad light.</Abstract>
    <DeclaredIn>Light.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::RawVolumeLoader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::RawVolumeLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_raw_volume_loader.html</Path>
    <Abstract>A volume loader for raw volumes with params for dimensions.</Abstract>
    <DeclaredIn>VolumeLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSupportedExtensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RawVolumeLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_raw_volume_loader.html</Path>
    <Anchor>a15f59d8618ecd7322018ce9fec9e6879</Anchor>
    <DeclaredIn>VolumeLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RawVolumeLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_raw_volume_loader.html</Path>
    <Anchor>ab02ffa65d53925e512ae3274b8abd8dd</Anchor>
    <DeclaredIn>VolumeLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProperties</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RawVolumeLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_raw_volume_loader.html</Path>
    <Anchor>a9addd50ef942e9f872ed5fb522a9c203</Anchor>
    <DeclaredIn>VolumeLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSupported</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RawVolumeLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_raw_volume_loader.html</Path>
    <Anchor>ab6c12ee210d4e28648a7e48dd84c1fba</Anchor>
    <Abstract>Query the loader if it can load the given file.</Abstract>
    <DeclaredIn>VolumeLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importFromBlob</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RawVolumeLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_raw_volume_loader.html</Path>
    <Anchor>a6e95ff2ae1b4e6b8fe2ca26a1f680180</Anchor>
    <Abstract>Import the data from the blob and return the created model.</Abstract>
    <DeclaredIn>VolumeLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importFromFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RawVolumeLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_raw_volume_loader.html</Path>
    <Anchor>a797f60d877d1e55763b3db995473d311</Anchor>
    <Abstract>Import the data from the given file and return the created model.</Abstract>
    <DeclaredIn>VolumeLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Renderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Renderer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_renderer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVariance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Renderer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_renderer.html</Path>
    <Anchor>ae243bb15e42e65a48d71735b8b4a6101</Anchor>
    <DeclaredIn>Renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCurrentType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a7be001331636293e20b0ad923bd0d47c</Anchor>
    <Abstract>Set the current type to use for &apos;type-less&apos; queries and updates.</Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a541fe78d6ba40e423b62b359b8f51027</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateProperty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>aa46fbc685f8b92ce935897d7de386232</Anchor>
    <Abstract>Update the value of the given property for the current type.</Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasProperty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a350c44122ae0f3b9243bee212d44df94</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProperty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a418ed4706f2b79c679db03f182c3df1e</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPropertyOrValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a7ca2b79e77dcab744f23a3935923da07</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProperties</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a9d0d4a64b6c56f5e6391bc7ff9d7097b</Anchor>
    <Abstract>Assign a new set of properties to the current type.</Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProperties</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>ae47c1492190d22b89eeecce803eed03c</Anchor>
    <Abstract>Assign a new set of properties to the given type.</Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateProperties</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>af063e495e86c76a2373a8157a0be190d</Anchor>
    <Abstract>Update or add all the properties from the given map to the current type.</Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPropertyMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a9d2a56534e47e242909493a464bb067d</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPropertyMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>ac6eab32bbf231c60ad28611f90858ccf</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>aacc133ebfcb980085eb1ae3557b71b6d</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clonePropertiesFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a8d6ad46b65b32439443194e49fac2b9c</Anchor>
    <Abstract>Clear all current properties and clone new properties from object.</Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ab0defc991ad50df92eb679a72840b866</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a2109985c05194082bc6e0b5a64478530</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Renderer::PickResult</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Renderer::PickResult</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_renderer_1_1_pick_result.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::RenderingParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Abstract>Manages rendering parameters.</Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a59da280f420719c169f81144aabe97a4</Anchor>
    <Abstract>Displays values of registered parameters.</Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRenderers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a2990bd22c7203b0ededc5cf49ba7f7ec</Anchor>
    <Abstract>All registered renderers.</Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCameras</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>ad789250e177bf36a913ed6e423349bd7</Anchor>
    <Abstract>All registered cameras.</Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSamplesPerPixel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a9659cbd0935e1c4e40833022e5844e64</Anchor>
    <Abstract>Number of samples per pixel.</Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeadLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>aad8a27f3c50b08f209cec90d5ef3ca69</Anchor>
    <Abstract>Light source follow camera origin.</Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAccumulation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a6c6763cc147ac11d18101c55d1fd6a2e</Anchor>
    <Abstract>If the rendering should be refined by accumulating multiple passes.</Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVarianceThreshold</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a16195bff6d16f7bc3d83d1faae49db8e</Anchor>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVarianceThreshold</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a087247fdb304016359646ed7c07fedcc</Anchor>
    <Abstract>The threshold where accumulation stops if the variance error reaches this value.</Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxAccumFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a98779393dd60f8ed99638cdb049a1f9a</Anchor>
    <Abstract>The maximum number of accumulation frames before engine signals to stop continuation of rendering.</Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>af8c4e3e33c6d75a71893d7d48f0e4fec</Anchor>
    <Abstract>Constructor.</Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ab0defc991ad50df92eb679a72840b866</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a0597328ac9cf2d922dde652eeb1f8eb9</Anchor>
    <Abstract>Parses parameters managed by the class.</Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a2109985c05194082bc6e0b5a64478530</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::RenderInput</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::RenderInput</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_render_input.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::RenderOutput</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::RenderOutput</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_render_output.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::RpcDescription</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::RpcDescription</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_rpc_description.html</Path>
    <Abstract>Description for RPC with no parameter.</Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::RpcParameterDescription</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::RpcParameterDescription</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_rpc_parameter_description.html</Path>
    <Abstract>Description for RPC with one parameter.</Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Scene</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Abstract>Scene object.</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Scene</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a9177a6f902c25c590ac132b336f731e8</Anchor>
    <Abstract>Creates a scene object responsible for handling models, simulations and light sources.</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBounds</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a0949c90d432b7b2bbcb6f1ef462a6a55</Anchor>
    <Abstract>Returns the bounding box of the scene.</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLightManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a3f73c90b578cbc77ebebeea5a7f4a003</Anchor>
    <Abstract>Gets the light manager.</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addModel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ae7ff498e3f3fa699b087577959af8f5a</Anchor>
    <Abstract>Adds a model to the scene.</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeModel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>afb25f042c88d717e0c1ab46f35055bdc</Anchor>
    <Abstract>Removes a model from the scene.</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildDefault</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a13667f2db068b46530102270f3b0e0ce</Anchor>
    <Abstract>Builds a default scene made of a Cornell box, a reflective cube, and a transparent sphere.</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>empty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ae9e4fab88736c74ed77141569dcbf183</Anchor>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addClipPlane</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>af7e90042add8f01ded6e8c5c972c23a5</Anchor>
    <Abstract>Add a clip plane to the scene.</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getClipPlane</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a5c70614cbda7419082d978f4245723bc</Anchor>
    <Abstract>Get a clip plane by its ID.</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeClipPlane</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a81bc82673b624f1fd0eab1d93e3bf1f3</Anchor>
    <Abstract>Remove a clip plane by its ID, or nop if not found.</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getClipPlanes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a76d48cbb447a1023659fba7ebc269f2b</Anchor>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSizeInBytes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a152092f5195ad7f55bc715aba4850699</Anchor>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumModels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>af178dff8e9aad6a119a8f09e747a78c3</Anchor>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaterialsColorMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a6baebc19a3ed244aa3b172780ad7bcf2</Anchor>
    <Abstract>initializeMaterials Initializes materials for all models in the scene</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnvironmentMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a989d9497517ca42f2662469aee686580</Anchor>
    <Abstract>Set a new environment map to the scene as the background image.</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEnvironmentMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>aefb6f2495af6186a761a0a0b5dbb0e5d</Anchor>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasEnvironmentMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a0374028c5cec89feeeb886f3fd132e90</Anchor>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadModel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a177152200989ddfffd010ec68f4e9e99</Anchor>
    <Abstract>Load the model from the given blob.</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadModel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>addad5aff1911ada510c251a9291cb8d2</Anchor>
    <Abstract>Load the model from the given file.</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLoaderRegistry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a654d1a0eb616ba1e7e1f95c672b9cfac</Anchor>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a1917b16a6835cdf5c967982f49cb43a8</Anchor>
    <Abstract>Called after scene-related changes have been made before rendering the scene.</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitLights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a0319ce64948a242a206b8c7cdd7d0a2f</Anchor>
    <Abstract>Commits lights to renderers.</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createModel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>aa358c14e16dd2489a6b4169e8ecd79ec</Anchor>
    <Abstract>Factory method to create an engine-specific model.</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ab0defc991ad50df92eb679a72840b866</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsConcurrentSceneUpdates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a455e7b3b8472a6ce235ba6152f6a10b1</Anchor>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a2109985c05194082bc6e0b5a64478530</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::SDFBezier</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::SDFBezier</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_s_d_f_bezier.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::SDFGeometry</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::SDFGeometry</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_s_d_f_geometry.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::SDFGeometryData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::SDFGeometryData</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_s_d_f_geometry_data.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::SharedDataVolume</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::SharedDataVolume</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_shared_data_volume.html</Path>
    <Abstract>A volume type where the voxels are set once and only referenced from the source location.</Abstract>
    <DeclaredIn>SharedDataVolume.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mapData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::SharedDataVolume</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_shared_data_volume.html</Path>
    <Anchor>a12d75505a58e8f7be177bba1590fc388</Anchor>
    <Abstract>Convenience functions to use voxels from given file and pass them to setVoxels().</Abstract>
    <DeclaredIn>SharedDataVolume.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ab0defc991ad50df92eb679a72840b866</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a2109985c05194082bc6e0b5a64478530</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ShortcutInformation</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ShortcutInformation</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_shortcut_information.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::SphereLight</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::SphereLight</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_sphere_light.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SphereLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::SphereLight</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_sphere_light.html</Path>
    <Anchor>afe2229dc68c49cea90b785f65ac761cc</Anchor>
    <Abstract>SphereLight Createas a sphere light.</Abstract>
    <DeclaredIn>Light.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::SpotLight</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::SpotLight</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_spot_light.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpotLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::SpotLight</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_spot_light.html</Path>
    <Anchor>acf9eb1770406f353f1118a2e8e49c2bf</Anchor>
    <Abstract>SpotLight Creates a spot light.</Abstract>
    <DeclaredIn>Light.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Statistics</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Statistics</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_statistics.html</Path>
    <Abstract>Captures various statistics about rendering, scenes, etc.</Abstract>
    <DeclaredIn>Statistics.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ab0defc991ad50df92eb679a72840b866</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a2109985c05194082bc6e0b5a64478530</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Streamline</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Streamline</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_streamline.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::StreamlinesData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::StreamlinesData</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_streamlines_data.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Task</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>brayns::Task</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Abstract>A task type which is directly scheduled after creation.</Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Task</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>adb4c824ce065c30129e25c2973b5760b</Anchor>
    <Abstract>Create an empty task; use task() and async++ to do something meaningful.</Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Task</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>ac5558024a92ce91fe5c6d8cc3ffd84ee</Anchor>
    <Abstract>Create and schedule a task with the given functor or lambda.</Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>schedule</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>abfc3f1e06d95e8923df75e9651b1f0f4</Anchor>
    <Abstract>NOP for this task; tasks are running after construction.</Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>result</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>a9a6c0675ba8c6321bff7ffbf044fdc99</Anchor>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>aa4f761290010bd3a0c7a026629524042</Anchor>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cancel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>af1019fe39fea3201341ea4301186a911</Anchor>
    <Abstract>Cancels the task if is either waiting to be scheduled or already running.</Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finishCancel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a12c64d0b0aa5bc8916d656fbffd5e8dd</Anchor>
    <Abstract>Indicate that cancel processing has finished and call the function given to cancel().</Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canceled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a46379e6aa371574c1be02e8d8327bd00</Anchor>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>progress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a9c4958935de14f9db7480e9bb3566735</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::TaskFunctor</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::TaskFunctor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task_functor.html</Path>
    <Abstract>A base class for functors that can be used for Tasks.</Abstract>
    <DeclaredIn>TaskFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProgressFunc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brayns::TaskFunctor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task_functor.html</Path>
    <Anchor>af5ae54477aeecf3b89c696867171a980</Anchor>
    <Abstract>message, increment, amount</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProgressFunc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::TaskFunctor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task_functor.html</Path>
    <Anchor>ad8283ae7984fbd41e7d5e61e57238ad3</Anchor>
    <Abstract>Set the function when progress() is called.</Abstract>
    <DeclaredIn>TaskFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>progress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::TaskFunctor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task_functor.html</Path>
    <Anchor>a0dab436f8eb57c24de929b894069f2cd</Anchor>
    <Abstract>Report progress using the provided callback from setProgressFunc() and also check if the execution ha...</Abstract>
    <DeclaredIn>TaskFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCancelToken</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::TaskFunctor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task_functor.html</Path>
    <Anchor>a0463073aa21dd20ffa10309757d2e52b</Anchor>
    <Abstract>Set the cancel token from e.g.</Abstract>
    <DeclaredIn>TaskFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cancelCheck</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::TaskFunctor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task_functor.html</Path>
    <Anchor>afeeacf36f300b51f18bc753ad052ecbe</Anchor>
    <Abstract>Checks if the execution has been cancelled.</Abstract>
    <DeclaredIn>TaskFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::TaskRuntimeError</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::TaskRuntimeError</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task_runtime_error.html</Path>
    <Abstract>An exception type that shall be thrown at any point during the task execution to provide useful error...</Abstract>
    <DeclaredIn>TaskRuntimeError.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Texture2D</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Texture2D</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_texture2_d.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Timer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Timer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_timer.html</Path>
    <Abstract>Simple timer class to measure time spent in a portion of the code.</Abstract>
    <DeclaredIn>Timer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Timer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_timer.html</Path>
    <Anchor>aa4b955ae78d2e06e444eb7b4ecba62d4</Anchor>
    <Abstract>(Re)Start the timer at &apos;now&apos;</Abstract>
    <DeclaredIn>Timer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Timer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_timer.html</Path>
    <Anchor>ab45e9548afa774cc5eaf70cb6c54975d</Anchor>
    <Abstract>Stops the timer and records the interval + a smoothed value over time.</Abstract>
    <DeclaredIn>Timer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>elapsed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Timer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_timer.html</Path>
    <Anchor>ac440957c29b7fde36f39322317cc1718</Anchor>
    <DeclaredIn>Timer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>microseconds</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Timer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_timer.html</Path>
    <Anchor>a8fbf8186a7826804328e2562b46b5dc8</Anchor>
    <DeclaredIn>Timer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>milliseconds</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Timer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_timer.html</Path>
    <Anchor>a8559740843a5d7b89f218bbcdfec1c30</Anchor>
    <DeclaredIn>Timer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>seconds</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Timer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_timer.html</Path>
    <Anchor>a1249be3497b64208e71ff7aeea1bbc7e</Anchor>
    <DeclaredIn>Timer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>perSecond</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Timer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_timer.html</Path>
    <Anchor>a76ee3e2dfa2eed6d087299d7e3772fca</Anchor>
    <DeclaredIn>Timer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Timer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_timer.html</Path>
    <Anchor>a26fefb43c2a98d7d20ab5299852802d9</Anchor>
    <DeclaredIn>Timer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>perSecondSmoothed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Timer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_timer.html</Path>
    <Anchor>ac98571269b429101c5b0e108fc059425</Anchor>
    <DeclaredIn>Timer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::TransferFunction</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::TransferFunction</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_transfer_function.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::TransferFunction</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_transfer_function.html</Path>
    <Anchor>a4dd7b9c4ac8e4942617a50f412bc6d44</Anchor>
    <Abstract>Reset to gray-scale with opacity [0..1] and value range [0,255].</Abstract>
    <DeclaredIn>TransferFunction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ab0defc991ad50df92eb679a72840b866</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a2109985c05194082bc6e0b5a64478530</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Transformation</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Transformation</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_transformation.html</Path>
    <Abstract>Defines the translation, rotation and scale parameters to be applied to a scene asset.</Abstract>
    <DeclaredIn>Transformation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ab0defc991ad50df92eb679a72840b866</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a2109985c05194082bc6e0b5a64478530</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::TriangleMesh</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::TriangleMesh</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_triangle_mesh.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Abstract>Information about the current braynsCommon version.</Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ad4caded283f86362198a2ba1eb478eba</Anchor>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ac28a55327f904d62ab90dc172be1b440</Anchor>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a74c8402e7ceed27e0c773cf39e8e01b0</Anchor>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a7230a3f09fc682b33cf1cfff19bebce7</Anchor>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ab23018d1ff96bba3a16b1b5a595115d3</Anchor>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>af99a8b1956c6cb800290c9f8d303f36a</Anchor>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a6b194dfa87bafdc9a6512fe7ad57794c</Anchor>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a4b4666df38d8c345e91425821c18c8e0</Anchor>
    <Abstract>Runtime check for ABI compatibility.</Abstract>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSchema</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>af7fbd75a18a0d7b20f875b0669f3609c</Anchor>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toJSON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a2288688dd599d92fcaec2f4d4e89a72d</Anchor>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ad4caded283f86362198a2ba1eb478eba</Anchor>
    <DeclaredIn>engine/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ac28a55327f904d62ab90dc172be1b440</Anchor>
    <DeclaredIn>engine/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a74c8402e7ceed27e0c773cf39e8e01b0</Anchor>
    <DeclaredIn>engine/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a7230a3f09fc682b33cf1cfff19bebce7</Anchor>
    <DeclaredIn>engine/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ab23018d1ff96bba3a16b1b5a595115d3</Anchor>
    <DeclaredIn>engine/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>af99a8b1956c6cb800290c9f8d303f36a</Anchor>
    <DeclaredIn>engine/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a6b194dfa87bafdc9a6512fe7ad57794c</Anchor>
    <DeclaredIn>engine/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a4b4666df38d8c345e91425821c18c8e0</Anchor>
    <Abstract>Runtime check for ABI compatibility.</Abstract>
    <DeclaredIn>engine/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSchema</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>af7fbd75a18a0d7b20f875b0669f3609c</Anchor>
    <DeclaredIn>engine/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toJSON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a2288688dd599d92fcaec2f4d4e89a72d</Anchor>
    <DeclaredIn>engine/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ad4caded283f86362198a2ba1eb478eba</Anchor>
    <DeclaredIn>io/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ac28a55327f904d62ab90dc172be1b440</Anchor>
    <DeclaredIn>io/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a74c8402e7ceed27e0c773cf39e8e01b0</Anchor>
    <DeclaredIn>io/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a7230a3f09fc682b33cf1cfff19bebce7</Anchor>
    <DeclaredIn>io/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ab23018d1ff96bba3a16b1b5a595115d3</Anchor>
    <DeclaredIn>io/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>af99a8b1956c6cb800290c9f8d303f36a</Anchor>
    <DeclaredIn>io/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a6b194dfa87bafdc9a6512fe7ad57794c</Anchor>
    <DeclaredIn>io/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a4b4666df38d8c345e91425821c18c8e0</Anchor>
    <Abstract>Runtime check for ABI compatibility.</Abstract>
    <DeclaredIn>io/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSchema</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>af7fbd75a18a0d7b20f875b0669f3609c</Anchor>
    <DeclaredIn>io/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toJSON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a2288688dd599d92fcaec2f4d4e89a72d</Anchor>
    <DeclaredIn>io/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ad4caded283f86362198a2ba1eb478eba</Anchor>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ac28a55327f904d62ab90dc172be1b440</Anchor>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a74c8402e7ceed27e0c773cf39e8e01b0</Anchor>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a7230a3f09fc682b33cf1cfff19bebce7</Anchor>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ab23018d1ff96bba3a16b1b5a595115d3</Anchor>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>af99a8b1956c6cb800290c9f8d303f36a</Anchor>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a6b194dfa87bafdc9a6512fe7ad57794c</Anchor>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a4b4666df38d8c345e91425821c18c8e0</Anchor>
    <Abstract>Runtime check for ABI compatibility.</Abstract>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSchema</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>af7fbd75a18a0d7b20f875b0669f3609c</Anchor>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toJSON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a2288688dd599d92fcaec2f4d4e89a72d</Anchor>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ad4caded283f86362198a2ba1eb478eba</Anchor>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ac28a55327f904d62ab90dc172be1b440</Anchor>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a74c8402e7ceed27e0c773cf39e8e01b0</Anchor>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a7230a3f09fc682b33cf1cfff19bebce7</Anchor>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ab23018d1ff96bba3a16b1b5a595115d3</Anchor>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>af99a8b1956c6cb800290c9f8d303f36a</Anchor>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a6b194dfa87bafdc9a6512fe7ad57794c</Anchor>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a4b4666df38d8c345e91425821c18c8e0</Anchor>
    <Abstract>Runtime check for ABI compatibility.</Abstract>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSchema</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>af7fbd75a18a0d7b20f875b0669f3609c</Anchor>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toJSON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a2288688dd599d92fcaec2f4d4e89a72d</Anchor>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ad4caded283f86362198a2ba1eb478eba</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ac28a55327f904d62ab90dc172be1b440</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a74c8402e7ceed27e0c773cf39e8e01b0</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a7230a3f09fc682b33cf1cfff19bebce7</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ab23018d1ff96bba3a16b1b5a595115d3</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>af99a8b1956c6cb800290c9f8d303f36a</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a6b194dfa87bafdc9a6512fe7ad57794c</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a4b4666df38d8c345e91425821c18c8e0</Anchor>
    <Abstract>Runtime check for ABI compatibility.</Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSchema</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>af7fbd75a18a0d7b20f875b0669f3609c</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toJSON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a2288688dd599d92fcaec2f4d4e89a72d</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Volume</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Volume</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume.html</Path>
    <Abstract>A base class for volumes to share common properties.</Abstract>
    <DeclaredIn>Volume.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ab0defc991ad50df92eb679a72840b866</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a2109985c05194082bc6e0b5a64478530</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::VolumeParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::VolumeParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_parameters.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_parameters.html</Path>
    <Anchor>a1fcb2d4b35ba14948765e01671691b4b</Anchor>
    <Abstract>Displays values of registered parameters.</Abstract>
    <DeclaredIn>VolumeParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_parameters.html</Path>
    <Anchor>af14b7b6fbdf8919e1039b7ce8cb7944d</Anchor>
    <Abstract>Volume dimensions.</Abstract>
    <DeclaredIn>VolumeParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getElementSpacing</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_parameters.html</Path>
    <Anchor>a9c79512669f53272876d0b9431e9decf</Anchor>
    <Abstract>Volume scale.</Abstract>
    <DeclaredIn>VolumeParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_parameters.html</Path>
    <Anchor>a89c56a840a6354834c9b06b418c21e6a</Anchor>
    <Abstract>Volume offset.</Abstract>
    <DeclaredIn>VolumeParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>af8c4e3e33c6d75a71893d7d48f0e4fec</Anchor>
    <Abstract>Constructor.</Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ab0defc991ad50df92eb679a72840b866</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_parameters.html</Path>
    <Anchor>a1452a93f050be72357eaca1098a4db25</Anchor>
    <Abstract>Parses parameters managed by the class.</Abstract>
    <DeclaredIn>VolumeParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a2109985c05194082bc6e0b5a64478530</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed.</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::XYZBLoader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::XYZBLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_x_y_z_b_loader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSupportedExtensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::XYZBLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_x_y_z_b_loader.html</Path>
    <Anchor>a75fd6153e14c51e6b9eb936559c8a279</Anchor>
    <DeclaredIn>XYZBLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::XYZBLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_x_y_z_b_loader.html</Path>
    <Anchor>a7d136d274da3d4aae51eb071e3c31160</Anchor>
    <DeclaredIn>XYZBLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSupported</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::XYZBLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_x_y_z_b_loader.html</Path>
    <Anchor>a8a80b09be30d7d63bfe1b916e09dd8c6</Anchor>
    <Abstract>Query the loader if it can load the given file.</Abstract>
    <DeclaredIn>XYZBLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importFromBlob</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::XYZBLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_x_y_z_b_loader.html</Path>
    <Anchor>a38ffd57dc0c8f18ed30a5b2c56d91fd8</Anchor>
    <Abstract>Import the data from the blob and return the created model.</Abstract>
    <DeclaredIn>XYZBLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importFromFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::XYZBLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_x_y_z_b_loader.html</Path>
    <Anchor>a2a5fd3e1b9a59803e003fa59148d4d25</Anchor>
    <Abstract>Import the data from the given file and return the created model.</Abstract>
    <DeclaredIn>XYZBLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProperties</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Loader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader.html</Path>
    <Anchor>a704af1509ece85ee4999629d33c47a92</Anchor>
    <DeclaredIn>Loader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>linb::any</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>linb::any</Scope>
    </TokenIdentifier>
    <Path>classlinb_1_1any.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>any</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>linb::any</Scope>
    </TokenIdentifier>
    <Path>classlinb_1_1any.html</Path>
    <Anchor>a4235c73347f588664514be22a85680d9</Anchor>
    <Abstract>Constructs an object of type any with an empty state.</Abstract>
    <DeclaredIn>any.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>any</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>linb::any</Scope>
    </TokenIdentifier>
    <Path>classlinb_1_1any.html</Path>
    <Anchor>a56847f22e44c42dfe1b74633cf81d083</Anchor>
    <Abstract>Constructs an object of type any with an equivalent state as other.</Abstract>
    <DeclaredIn>any.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>any</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>linb::any</Scope>
    </TokenIdentifier>
    <Path>classlinb_1_1any.html</Path>
    <Anchor>a50ccd807f1ded03ca732c5450d6f8117</Anchor>
    <Abstract>Constructs an object of type any with a state equivalent to the original state of other....</Abstract>
    <DeclaredIn>any.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~any</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>linb::any</Scope>
    </TokenIdentifier>
    <Path>classlinb_1_1any.html</Path>
    <Anchor>ae43b1437e9e7b51a0ae90463914c0fb3</Anchor>
    <Abstract>Same effect as this-&gt;clear().</Abstract>
    <DeclaredIn>any.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>any</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>linb::any</Scope>
    </TokenIdentifier>
    <Path>classlinb_1_1any.html</Path>
    <Anchor>ac8364f28330ef3d4b1533ce108d5596c</Anchor>
    <Abstract>Constructs an object of type any that contains an object of type T direct-initialized with std::forwa...</Abstract>
    <DeclaredIn>any.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>linb::any</Scope>
    </TokenIdentifier>
    <Path>classlinb_1_1any.html</Path>
    <Anchor>a8ea8acd8fc0ca1ac34bbad0689f723e7</Anchor>
    <Abstract>Has the same effect as any(rhs).swap(*this). No effects if an exception is thrown.</Abstract>
    <DeclaredIn>any.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>linb::any</Scope>
    </TokenIdentifier>
    <Path>classlinb_1_1any.html</Path>
    <Anchor>aa86b33e236e0adbced25bc966176ad4a</Anchor>
    <Abstract>Has the same effect as any(std::move(rhs)).swap(*this).</Abstract>
    <DeclaredIn>any.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>linb::any</Scope>
    </TokenIdentifier>
    <Path>classlinb_1_1any.html</Path>
    <Anchor>a1277be0f11f27da9e2f88aef65465c3b</Anchor>
    <Abstract>Has the same effect as any(std::forward&lt;ValueType&gt;(value)).swap(*this). No effect if a exception is t...</Abstract>
    <DeclaredIn>any.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>linb::any</Scope>
    </TokenIdentifier>
    <Path>classlinb_1_1any.html</Path>
    <Anchor>a3fdc740fdcf5fd3f0a6d6628702c54b3</Anchor>
    <Abstract>If not empty, destroys the contained object.</Abstract>
    <DeclaredIn>any.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>empty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>linb::any</Scope>
    </TokenIdentifier>
    <Path>classlinb_1_1any.html</Path>
    <Anchor>a8959e7cf6d97c91f126cf5d17814017a</Anchor>
    <Abstract>Returns true if *this has no contained object, otherwise false.</Abstract>
    <DeclaredIn>any.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>linb::any</Scope>
    </TokenIdentifier>
    <Path>classlinb_1_1any.html</Path>
    <Anchor>adf34b63439c9089fa4af14d0df6ef079</Anchor>
    <Abstract>If *this has a contained object of type T, typeid(T); otherwise typeid(void).</Abstract>
    <DeclaredIn>any.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>linb::any</Scope>
    </TokenIdentifier>
    <Path>classlinb_1_1any.html</Path>
    <Anchor>a6bd50f2fd178deacf049be223f73646e</Anchor>
    <Abstract>Exchange the states of *this and rhs.</Abstract>
    <DeclaredIn>any.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>linb::any</Scope>
    </TokenIdentifier>
    <Path>classlinb_1_1any.html</Path>
    <Anchor>aa20d5f5835abed1d05e1603d27c55a08</Anchor>
    <Abstract>Casts (with no type_info checks) the storage pointer as const T*.</Abstract>
    <DeclaredIn>any.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>linb::any</Scope>
    </TokenIdentifier>
    <Path>classlinb_1_1any.html</Path>
    <Anchor>ac96af4a9edcf5985db026c0fe56edc6b</Anchor>
    <Abstract>Casts (with no type_info checks) the storage pointer as T*.</Abstract>
    <DeclaredIn>any.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>any_cast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>linb::any</Scope>
    </TokenIdentifier>
    <Path>classlinb_1_1any.html</Path>
    <Anchor>a7dff57f48c189683dfb49cffe9a30ef9</Anchor>
    <Abstract>If operand != nullptr &amp;&amp; operand-&gt;type() == typeid(ValueType), a pointer to the object contained by o...</Abstract>
    <DeclaredIn>any.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>any_cast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>linb::any</Scope>
    </TokenIdentifier>
    <Path>classlinb_1_1any.html</Path>
    <Anchor>abe28f391e70407f216660e75390eeead</Anchor>
    <Abstract>If operand != nullptr &amp;&amp; operand-&gt;type() == typeid(ValueType), a pointer to the object contained by o...</Abstract>
    <DeclaredIn>any.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>linb::bad_any_cast</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>linb::bad_any_cast</Scope>
    </TokenIdentifier>
    <Path>classlinb_1_1bad__any__cast.html</Path>
  </Token>
</Tokens>
