<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>LIVRE_VERSION_MAJOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a85ea9dbc854c954bbecefd68c1dd32ac</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIVRE_VERSION_MINOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>aa54cdd747f9bff67fad29e2f35e17b93</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIVRE_VERSION_PATCH</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a16ae0c6b35f8c66a5e6d85526188dede</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIVRE_VERSION_REVISION</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a9242a48854a0bb9380c2bd78900691dd</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIVRE_VERSION_ABI</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>af26e5d93a9cdece56c8df863d8a70606</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIVRE_VERSION_GT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>aae98eef09ce329f974e057993cc1b871</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIVRE_VERSION_GE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a6116b8c126b2fbf083355dd6e381c087</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIVRE_VERSION_LT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a0724ddcc0dbcc14b69faa59eddaeef8b</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIVRE_VERSION_LE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a484dff708f2ede2d3c2f7e25fe87a768</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Release_Notes</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>_release__notes.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Technical_Overview</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>_technical__overview.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tuvok_Tool</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>_tuvok__tool.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>User_Guide</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>_user__guide.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>livre::LODNode</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>livre::LODNode</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_l_o_d_node.html</Path>
    <Abstract>The LODNode class is to define spatial structure of a node in terms of world space, size and voxel dimensions. </Abstract>
    <DeclaredIn>LODNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LODNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::LODNode</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_l_o_d_node.html</Path>
    <Anchor>a15763cb2d5d9845997f0d896785a0ca8</Anchor>
    <Abstract>Constructs an invalid LODNode. </Abstract>
    <DeclaredIn>LODNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LODNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::LODNode</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_l_o_d_node.html</Path>
    <Anchor>a0046961d895e556766a176cc77904f7e</Anchor>
    <Abstract>Computes the world position from given information. </Abstract>
    <DeclaredIn>LODNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LODNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::LODNode</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_l_o_d_node.html</Path>
    <Anchor>afdddc341abf30bccdf392b0e2e542756</Anchor>
    <Abstract>Computes the world position from given information. </Abstract>
    <DeclaredIn>LODNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAbsolutePosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::LODNode</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_l_o_d_node.html</Path>
    <Anchor>a3453c7833f8a16c50b41dc8f252861c2</Anchor>
    <Abstract>Get the absolute node position wrt its level. </Abstract>
    <DeclaredIn>LODNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRelativePosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::LODNode</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_l_o_d_node.html</Path>
    <Anchor>a848b4dd75931c077f365457edacf20f4</Anchor>
    <DeclaredIn>LODNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVoxelBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::LODNode</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_l_o_d_node.html</Path>
    <Anchor>aeeaa517cebea612a7c2364fcfc529b5c</Anchor>
    <DeclaredIn>LODNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWorldBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::LODNode</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_l_o_d_node.html</Path>
    <Anchor>a228e6691c4eef7f14c980e8fac397209</Anchor>
    <DeclaredIn>LODNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxRefLevel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::LODNode</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_l_o_d_node.html</Path>
    <Anchor>a1cd7a1abe20c8866fef9da21e26c7eae</Anchor>
    <DeclaredIn>LODNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRefLevel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::LODNode</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_l_o_d_node.html</Path>
    <Anchor>a3d2adfad603d231e0ae98ea3c3420a46</Anchor>
    <DeclaredIn>LODNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNodeId</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::LODNode</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_l_o_d_node.html</Path>
    <Anchor>a8a5b66eb5aefb258d61520d4bc45c066</Anchor>
    <DeclaredIn>LODNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNodeId</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::LODNode</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_l_o_d_node.html</Path>
    <Anchor>a952b088f5cee21f040e03d979980eaa6</Anchor>
    <Abstract>Sets node id. </Abstract>
    <DeclaredIn>LODNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::LODNode</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_l_o_d_node.html</Path>
    <Anchor>af5e3d57dc8897d8e39c13e8c61b5a57b</Anchor>
    <DeclaredIn>LODNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::LODNode</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_l_o_d_node.html</Path>
    <Anchor>a31f04d04f99141b886b2fd5345dcfac2</Anchor>
    <DeclaredIn>LODNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::LODNode</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_l_o_d_node.html</Path>
    <Anchor>ad8e702f6267c2c1b14a66f889c3b7a4c</Anchor>
    <DeclaredIn>LODNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>empty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>livre::LODNode</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_l_o_d_node.html</Path>
    <Anchor>afe6016bac121d189fd085a9897330563</Anchor>
    <Abstract>Single empty node. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>livre::MemoryUnit</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>livre::MemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_memory_unit.html</Path>
    <Abstract>The MemoryUnit class the base class for carrying memory information. </Abstract>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alloc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::MemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_memory_unit.html</Path>
    <Anchor>acf33261f2b3afeabcca9dec25cde30fc</Anchor>
    <Abstract>Allocate memory. </Abstract>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>release</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::MemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_memory_unit.html</Path>
    <Anchor>ae74cddb654152513effa78bc51ef5597</Anchor>
    <Abstract>Release memory. </Abstract>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::MemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_memory_unit.html</Path>
    <Anchor>a82d8fab91d99213f62d4c448fea76965</Anchor>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::MemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_memory_unit.html</Path>
    <Anchor>a7e274c23c4da91dea630f3905da2c557</Anchor>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMemSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::MemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_memory_unit.html</Path>
    <Anchor>a9a42e1d7516c9a789ff546f910b1fa50</Anchor>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAllocSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::MemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_memory_unit.html</Path>
    <Anchor>a02b798260b8e29593e12809fdc849bd0</Anchor>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData_</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::MemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_memory_unit.html</Path>
    <Anchor>ac3b86b8fc2322c6c9fc0c09c1aa1d03d</Anchor>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData_</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::MemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_memory_unit.html</Path>
    <Anchor>a4267b11bbc94f40f2eac8c477a028b11</Anchor>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>livre::NoMemoryUnit</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>livre::NoMemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_no_memory_unit.html</Path>
    <Abstract>MemoryUnit holding no data at all. </Abstract>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alloc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NoMemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_no_memory_unit.html</Path>
    <Anchor>a1fdf8bf7c551405f222428e7a0dcc9c3</Anchor>
    <Abstract>Allocate memory. </Abstract>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>release</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NoMemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_no_memory_unit.html</Path>
    <Anchor>a8c012c488d0f56ba7a10ad01becc65ea</Anchor>
    <Abstract>Release memory. </Abstract>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMemSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NoMemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_no_memory_unit.html</Path>
    <Anchor>a520266cae51fead56d12b8700f610634</Anchor>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAllocSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NoMemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_no_memory_unit.html</Path>
    <Anchor>ab38a335d0678975997c0cd4adaa44c02</Anchor>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::MemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_memory_unit.html</Path>
    <Anchor>a82d8fab91d99213f62d4c448fea76965</Anchor>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::MemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_memory_unit.html</Path>
    <Anchor>a7e274c23c4da91dea630f3905da2c557</Anchor>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>livre::ConstMemoryUnit</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>livre::ConstMemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_const_memory_unit.html</Path>
    <Abstract>The ConstMemoryUnit class shows a memory pointer that is anywhere in memory. </Abstract>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::MemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_memory_unit.html</Path>
    <Anchor>a82d8fab91d99213f62d4c448fea76965</Anchor>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::MemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_memory_unit.html</Path>
    <Anchor>a7e274c23c4da91dea630f3905da2c557</Anchor>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMemSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::ConstMemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_const_memory_unit.html</Path>
    <Anchor>a42f0ea34a3dc8d16f682c860bc94e30e</Anchor>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAllocSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::ConstMemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_const_memory_unit.html</Path>
    <Anchor>a50da17f3a24f83a9a5e469f691293678</Anchor>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData_</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::ConstMemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_const_memory_unit.html</Path>
    <Anchor>a1b389f77efec1521e530dd760bbaf5c6</Anchor>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData_</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::ConstMemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_const_memory_unit.html</Path>
    <Anchor>aacdd8272251b9158f32b2f82b392608a</Anchor>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alloc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::ConstMemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_const_memory_unit.html</Path>
    <Anchor>a53515c45ea6d59d7e47f863184e4d7a0</Anchor>
    <Abstract>Allocate memory. </Abstract>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>release</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::ConstMemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_const_memory_unit.html</Path>
    <Anchor>a68b9219430a6b8b779bcd839c0e907a3</Anchor>
    <Abstract>Release memory. </Abstract>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>livre::AllocMemoryUnit</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>livre::AllocMemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_alloc_memory_unit.html</Path>
    <Abstract>The AllocMemoryUnit class shows an allocated memory pointer to keep track of memory consumption...</Abstract>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allocAndSetData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::AllocMemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_alloc_memory_unit.html</Path>
    <Anchor>a9083b9646ab23837922ec0b0c59d03de</Anchor>
    <Abstract>Allocates and sets the data from the given ptr, with given size. </Abstract>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allocAndSetData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::AllocMemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_alloc_memory_unit.html</Path>
    <Anchor>ab9078c7888da36cb56da1b526f0d6cdb</Anchor>
    <Abstract>Allocates and sets the data from the given source data vector, with given size. </Abstract>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alloc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::AllocMemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_alloc_memory_unit.html</Path>
    <Anchor>a9c460b0809772d6182ade8e2b9893945</Anchor>
    <Abstract>Allocates memory. </Abstract>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>release</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::AllocMemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_alloc_memory_unit.html</Path>
    <Anchor>af0a653ee77a605e83218bfe444a8e41d</Anchor>
    <Abstract>Release memory. </Abstract>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMemSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::AllocMemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_alloc_memory_unit.html</Path>
    <Anchor>aafd2d83041deebe2209f10913b8fe73e</Anchor>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAllocSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::AllocMemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_alloc_memory_unit.html</Path>
    <Anchor>abe729e66cf8a17a33bd4cf95bcb2ef8f</Anchor>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::MemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_memory_unit.html</Path>
    <Anchor>a82d8fab91d99213f62d4c448fea76965</Anchor>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::MemoryUnit</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_memory_unit.html</Path>
    <Anchor>a7e274c23c4da91dea630f3905da2c557</Anchor>
    <DeclaredIn>MemoryUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>livre::NodeId</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>livre::NodeId</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_node_id.html</Path>
    <Abstract>Identifier for the octee LOD nodes. </Abstract>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NodeId</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NodeId</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_node_id.html</Path>
    <Anchor>a09868831f79c677f2dd43ac020e727dc</Anchor>
    <Abstract>Constructs an invalid NodeId. </Abstract>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NodeId</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NodeId</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_node_id.html</Path>
    <Anchor>ae8b022afba7c2fd3732195453bec0bef</Anchor>
    <Abstract>Constructs a LOD identifier. </Abstract>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NodeId</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NodeId</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_node_id.html</Path>
    <Anchor>a42e6068a037c724e9e8e39978cfe85ef</Anchor>
    <Abstract>Constructs a LOD identifier. </Abstract>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLevel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NodeId</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_node_id.html</Path>
    <Anchor>a4deff965cf68790089df69434939c51b</Anchor>
    <Abstract>The octree level. </Abstract>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NodeId</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_node_id.html</Path>
    <Anchor>aceb93014d370a122808c108bed355f3b</Anchor>
    <Abstract>Temporal position. </Abstract>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NodeId</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_node_id.html</Path>
    <Anchor>a37ea80b9ee83080f6794e8ce1b23bbdc</Anchor>
    <Abstract>Is one of the root nodes. </Abstract>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NodeId</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_node_id.html</Path>
    <Anchor>aebefa647e262508049250800b7c399fc</Anchor>
    <Abstract>Return position in current level of octree. </Abstract>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NodeId</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_node_id.html</Path>
    <Anchor>abed24e9ccf8c9046fcdba1d8f48dabb4</Anchor>
    <Abstract>Return all parents. </Abstract>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NodeId</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_node_id.html</Path>
    <Anchor>aa634e360d1d9116fd595fb3638056ca7</Anchor>
    <Abstract>Return current parent. </Abstract>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NodeId</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_node_id.html</Path>
    <Anchor>a4c5cc13529d8b6b9e42aea8d28fc079b</Anchor>
    <Abstract>Is parentNodeId my parent. </Abstract>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isChild</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NodeId</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_node_id.html</Path>
    <Anchor>aa348a20bf04d2f53e2f464e26f29214f</Anchor>
    <Abstract>Is childNodeId my child. </Abstract>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NodeId</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_node_id.html</Path>
    <Anchor>aa730757b2fd68695459dc1ce0efaac72</Anchor>
    <Abstract>Is valid node id. </Abstract>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChildren</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NodeId</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_node_id.html</Path>
    <Anchor>a0d2356caea6046b8b1408174645a76c2</Anchor>
    <Abstract>Get children on level up. </Abstract>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRoot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NodeId</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_node_id.html</Path>
    <Anchor>ab246a89ca1eec1c4a910267a41b32b53</Anchor>
    <Abstract>Return most root node. </Abstract>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NodeId</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_node_id.html</Path>
    <Anchor>af2d10d813b7d0d764979ee3f75e1ee24</Anchor>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NodeId</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_node_id.html</Path>
    <Anchor>ac902c912aff46a6b9cd9714a99321a84</Anchor>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NodeId</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_node_id.html</Path>
    <Anchor>a38383ed32cc7d469504d156fc5c2e897</Anchor>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::NodeId</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_node_id.html</Path>
    <Anchor>a2f78a1c872bc697f89b5a61dc78e93e9</Anchor>
    <DeclaredIn>NodeId.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>livre::VolumeDataSourcePluginData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>livre::VolumeDataSourcePluginData</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_volume_data_source_plugin_data.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>livre::VolumeDataSourcePlugin</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>livre::VolumeDataSourcePlugin</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_volume_data_source_plugin.html</Path>
    <Abstract>Interface for volume data sources. </Abstract>
    <DeclaredIn>VolumeDataSourcePlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PluginT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>livre::VolumeDataSourcePlugin</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_volume_data_source_plugin.html</Path>
    <Anchor>af173a70ebe11a66f16f33353f5e450e7</Anchor>
    <Abstract>Needed by the PluginRegisterer. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InitDataT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>livre::VolumeDataSourcePlugin</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_volume_data_source_plugin.html</Path>
    <Anchor>a41aa60d3d62a662f4951572fba02a6e2</Anchor>
    <Abstract>Needed by the PluginRegisterer. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVolumeInformation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::VolumeDataSourcePlugin</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_volume_data_source_plugin.html</Path>
    <Anchor>acfa6706e55c0f778251b8e67ad187dab</Anchor>
    <DeclaredIn>VolumeDataSourcePlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeDashTree</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::VolumeDataSourcePlugin</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_volume_data_source_plugin.html</Path>
    <Anchor>a7b65eed98efc0fb8cd76922e99796eb1</Anchor>
    <DeclaredIn>VolumeDataSourcePlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeGL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::VolumeDataSourcePlugin</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_volume_data_source_plugin.html</Path>
    <Anchor>afa1aaf61968ce02c866ff7a7d5b5ce14</Anchor>
    <Abstract>Initializes the GL specific functions. </Abstract>
    <DeclaredIn>VolumeDataSourcePlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::VolumeDataSourcePlugin</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_volume_data_source_plugin.html</Path>
    <Anchor>aa19a09a8f3b6825265f0b86b9516fb61</Anchor>
    <Abstract>Read the data for a given node. </Abstract>
    <DeclaredIn>VolumeDataSourcePlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>internalNodeToLODNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::VolumeDataSourcePlugin</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_volume_data_source_plugin.html</Path>
    <Anchor>a587a5a64e50706a5032e8492f3821cc6</Anchor>
    <Abstract>Converts internal node to lod node. </Abstract>
    <DeclaredIn>VolumeDataSourcePlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNodeFromNodeID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::VolumeDataSourcePlugin</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_volume_data_source_plugin.html</Path>
    <Anchor>abb7d8b09b0b8dbb86574b8c16bfe3cbb</Anchor>
    <DeclaredIn>VolumeDataSourcePlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_getNodeFromNodeID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::VolumeDataSourcePlugin</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_volume_data_source_plugin.html</Path>
    <Anchor>a61d5b324a8f6cfc4d28abf0c69cf9d2f</Anchor>
    <Abstract>will be generated and mapped, where it can be modified with the derived class. </Abstract>
    <DeclaredIn>VolumeDataSourcePlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>livre::VolumeInformation</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>livre::VolumeInformation</Scope>
    </TokenIdentifier>
    <Path>structlivre_1_1_volume_information.html</Path>
    <Abstract>Properties of the volumetric data. </Abstract>
    <DeclaredIn>VolumeInformation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBytesPerVoxel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>livre::VolumeInformation</Scope>
    </TokenIdentifier>
    <Path>structlivre_1_1_volume_information.html</Path>
    <Anchor>aee25dcde8a3dd63f2db53f2b01d2cdfb</Anchor>
    <DeclaredIn>VolumeInformation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBigEndian</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>livre::VolumeInformation</Scope>
    </TokenIdentifier>
    <Path>structlivre_1_1_volume_information.html</Path>
    <Anchor>a24bf72fa09069518e118410dfe2e9744</Anchor>
    <Abstract>The endianness of the data. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>livre::VolumeInformation</Scope>
    </TokenIdentifier>
    <Path>structlivre_1_1_volume_information.html</Path>
    <Anchor>a73e99fefb8c72b146af1b8cfe03d5212</Anchor>
    <Abstract>The component count of voxel. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>depth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>livre::VolumeInformation</Scope>
    </TokenIdentifier>
    <Path>structlivre_1_1_volume_information.html</Path>
    <Anchor>af1d6a8f99db9bf7a951eeded627c5ca7</Anchor>
    <Abstract>Depth of the tree. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dataType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>livre::VolumeInformation</Scope>
    </TokenIdentifier>
    <Path>structlivre_1_1_volume_information.html</Path>
    <Anchor>a7accaca6d02ccdf79c117a3df56c533e</Anchor>
    <Abstract>The data type of every component of voxel. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>overlap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>livre::VolumeInformation</Scope>
    </TokenIdentifier>
    <Path>structlivre_1_1_volume_information.html</Path>
    <Anchor>aa64dd5a2b03f0ae280999e3ef456df03</Anchor>
    <Abstract>The overlap voxels between blocks. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maximumBlockSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>livre::VolumeInformation</Scope>
    </TokenIdentifier>
    <Path>structlivre_1_1_volume_information.html</Path>
    <Anchor>a7f58df57b66e81d07df72c398c1b9dfd</Anchor>
    <Abstract>The maximum voxel size of a block. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minPos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>livre::VolumeInformation</Scope>
    </TokenIdentifier>
    <Path>structlivre_1_1_volume_information.html</Path>
    <Anchor>a836aaca1c5f0132e037e49d2b28f16b7</Anchor>
    <Abstract>The minimum position of a volume. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxPos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>livre::VolumeInformation</Scope>
    </TokenIdentifier>
    <Path>structlivre_1_1_volume_information.html</Path>
    <Anchor>a86e55a8e1dda4a5d3b1405860959c72a</Anchor>
    <Abstract>The minimum position of a volume. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>voxels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>livre::VolumeInformation</Scope>
    </TokenIdentifier>
    <Path>structlivre_1_1_volume_information.html</Path>
    <Anchor>ad633acafd86040a13e9cccc05b899c44</Anchor>
    <Abstract>The size (number of voxels) in each dimension. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>worldSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>livre::VolumeInformation</Scope>
    </TokenIdentifier>
    <Path>structlivre_1_1_volume_information.html</Path>
    <Anchor>a0f07c31b2ef19bc5d504adb21ac67253</Anchor>
    <Abstract>The normalized size of the volume. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>livre::VolumeInformation</Scope>
    </TokenIdentifier>
    <Path>structlivre_1_1_volume_information.html</Path>
    <Anchor>aa728507e43881a0d203f8d7cafea1364</Anchor>
    <Abstract>Real-world size of the volume in meters. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>levelBlockDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>livre::VolumeInformation</Scope>
    </TokenIdentifier>
    <Path>structlivre_1_1_volume_information.html</Path>
    <Anchor>adc58c2a59f24850f880b23a2dd108a43</Anchor>
    <Abstract>The block dimensions for each tree level. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>worldSpacePerVoxel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>livre::VolumeInformation</Scope>
    </TokenIdentifier>
    <Path>structlivre_1_1_volume_information.html</Path>
    <Anchor>aa87a078506535e6dfe5b1c71c981c243</Anchor>
    <Abstract>The world space per voxel. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>livre::Viewport</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>livre::Viewport</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_viewport.html</Path>
    <Abstract>Viewport definitions. </Abstract>
    <DeclaredIn>mathTypes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>livre::GLContext</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>livre::GLContext</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_g_l_context.html</Path>
    <Abstract>The GLContext class is the warpper for different kinds of OpenGL contexts. </Abstract>
    <DeclaredIn>GLContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shareContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::GLContext</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_g_l_context.html</Path>
    <Anchor>adf942e3a4bc58d204f118a9a4d571318</Anchor>
    <Abstract>Shares the current context with the given context. </Abstract>
    <DeclaredIn>GLContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::GLContext</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_g_l_context.html</Path>
    <Anchor>ae45332c6ebaa8235df466281a8f466d2</Anchor>
    <Abstract>Makes the context current. </Abstract>
    <DeclaredIn>GLContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doneCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::GLContext</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_g_l_context.html</Path>
    <Anchor>a878018027b0050760a7175f80f0b5915</Anchor>
    <Abstract>Clears the current context. </Abstract>
    <DeclaredIn>GLContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>livre::GLContext</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_g_l_context.html</Path>
    <Anchor>a3416b962065eef1776f74b1b36f29336</Anchor>
    <Abstract>Gets the current context. </Abstract>
    <DeclaredIn>GLContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shareContext_</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::GLContext</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_g_l_context.html</Path>
    <Anchor>aa07e86f96a2096f36c5de4dae87301fd</Anchor>
    <Abstract>Implements the sharing of the context from the srcSharedContext. </Abstract>
    <DeclaredIn>GLContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>livre::ShaderData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>livre::ShaderData</Scope>
    </TokenIdentifier>
    <Path>structlivre_1_1_shader_data.html</Path>
    <Abstract>The ShaderData structure holds all the informations for the shader (strings for vertex, geometry, fragment shader and strings for separate glsl code used with glsl&amp;#39;s #include directive). </Abstract>
    <DeclaredIn>GLSLShaders.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>livre::GLSLShaders</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>livre::GLSLShaders</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_g_l_s_l_shaders.html</Path>
    <Abstract>The GLSLShaders class is used to load vertex, fragment and geometry shaders with glsl&amp;#39;s #include dire...</Abstract>
    <DeclaredIn>GLSLShaders.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadShaders</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::GLSLShaders</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_g_l_s_l_shaders.html</Path>
    <Anchor>a7cc1cb616fb0c3987618ef87d72039c4</Anchor>
    <Abstract>Load shaders from strings with glsl&amp;#39;s #include directive support. </Abstract>
    <DeclaredIn>GLSLShaders.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProgram</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>livre::GLSLShaders</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_g_l_s_l_shaders.html</Path>
    <Anchor>a71fdd083490810344257218b712a1c0c</Anchor>
    <DeclaredIn>GLSLShaders.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkOpenGLExtension</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>livre::GLSLShaders</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_g_l_s_l_shaders.html</Path>
    <Anchor>ae20e94a0e22ad0a75bb948282f36f2aa</Anchor>
    <Abstract>Check if an OpenGL extension is available. </Abstract>
    <DeclaredIn>GLSLShaders.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>livre::DeleteArray</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>livre::DeleteArray</Scope>
    </TokenIdentifier>
    <Path>structlivre_1_1_delete_array.html</Path>
    <Abstract>Helper classes for shared_ptr objects. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>livre::DeleteObject</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>livre::DeleteObject</Scope>
    </TokenIdentifier>
    <Path>structlivre_1_1_delete_object.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>livre::DontDeleteObject</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>livre::DontDeleteObject</Scope>
    </TokenIdentifier>
    <Path>structlivre_1_1_dont_delete_object.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>livre::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>livre::Version</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_version.html</Path>
    <Abstract>Information about the current Livre version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>livre::Version</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_version.html</Path>
    <Anchor>a5e718bde2fb720e55b1340294b2ea5fb</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>livre::Version</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_version.html</Path>
    <Anchor>a2c866e0c5a9b8e75a03643ce657b5c79</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>livre::Version</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_version.html</Path>
    <Anchor>aaaa5a655c3ab53211476e9d676499e78</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>livre::Version</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_version.html</Path>
    <Anchor>a5cd232113af9b13fb208e790b0e21007</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>livre::Version</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_version.html</Path>
    <Anchor>abf8615dfa53c5d3b69652b125723f92d</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>livre::Version</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_version.html</Path>
    <Anchor>aa012a4bdc9df078e3a1638927c99bce1</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>livre::Version</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_version.html</Path>
    <Anchor>a1d5cedd28c0735e97b2e35dca5c2413f</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>livre::Version</Scope>
    </TokenIdentifier>
    <Path>classlivre_1_1_version.html</Path>
    <Anchor>a75db5f050421f494cd534c1e7c008b18</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
</Tokens>
