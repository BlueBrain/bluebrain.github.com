<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_MAJOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brion_2version_8h.html</Path>
    <Anchor>aa5be9a4351e20d44fa19574e589b2fb3</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_MINOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brion_2version_8h.html</Path>
    <Anchor>aa5a2357f391cbb650d1d8894ee1b526f</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_PATCH</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brion_2version_8h.html</Path>
    <Anchor>ab7df48db132552459d856511d31fec71</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_REVISION</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brion_2version_8h.html</Path>
    <Anchor>a6044ab3ac01614da058254ed01b5b206</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_ABI</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brion_2version_8h.html</Path>
    <Anchor>a7920884b61851f5f7492f448ee8bc30a</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_GT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brion_2version_8h.html</Path>
    <Anchor>abee87c6b068f71dfee25e4b4d4fdb895</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_GE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brion_2version_8h.html</Path>
    <Anchor>a6495e508830bd2e12d505b21434ef9f2</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_LT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brion_2version_8h.html</Path>
    <Anchor>a33790ddcc603c8ba7cbcfef89e90db81</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_LE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brion_2version_8h.html</Path>
    <Anchor>afb3327bd79d35ba861a0be60539a4264</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAIN_VERSION_MAJOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brain_2version_8h.html</Path>
    <Anchor>a427a3c0f762ebebccc518760bda4f56b</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAIN_VERSION_MINOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brain_2version_8h.html</Path>
    <Anchor>a5136efd056f5d33648833945fdc64898</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAIN_VERSION_PATCH</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brain_2version_8h.html</Path>
    <Anchor>a3418e370c6278025871bd9f779f63cc4</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAIN_VERSION_REVISION</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brain_2version_8h.html</Path>
    <Anchor>aa9caa3a96315ec3a2f071008e61efe02</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAIN_VERSION_ABI</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brain_2version_8h.html</Path>
    <Anchor>a43f616dc38b671e3b6afa09ea65d6ed0</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAIN_VERSION_GT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brain_2version_8h.html</Path>
    <Anchor>a14b1bc78af8544169ee98d8f3169061b</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAIN_VERSION_GE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brain_2version_8h.html</Path>
    <Anchor>a9846b2663aab194bf239ca7f7856a215</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAIN_VERSION_LT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brain_2version_8h.html</Path>
    <Anchor>aa819a51db4d809368bf1f1bc3023f864</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAIN_VERSION_LE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brain_2version_8h.html</Path>
    <Anchor>afb770b34043d0546e780a163cb656b6a</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Changelog</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>_changelog.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>md__jenkins_02_workspace_oss.Brion.documentation_build_type_Debug_platform_cscsviz-vm_sources_doc_feature_compartmentReport</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>md__jenkins_02_workspace_oss_8_brion_8documentation_build_type__debug_platform_cscsviz-vm_source23b82867a6f79316dc8f69aa2de32217.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>md__jenkins_02_workspace_oss.Brion.documentation_build_type_Debug_platform_cscsviz-vm_sources_doc_feature_compartmentReportMPI</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>md__jenkins_02_workspace_oss_8_brion_8documentation_build_type__debug_platform_cscsviz-vm_sourceb36c4615b203f34c66af2a917f3aa101.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>md__jenkins_02_workspace_oss.Brion.documentation_build_type_Debug_platform_cscsviz-vm_sources_doc_feature_spikeReport</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>md__jenkins_02_workspace_oss_8_brion_8documentation_build_type__debug_platform_cscsviz-vm_sources_doc_feature_spike_report.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deprecated</Name>
      <APILanguage>unknown</APILanguage>
    </TokenIdentifier>
    <Path>deprecated.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>brain</Scope>
    </TokenIdentifier>
    <Path>namespacebrain.html</Path>
    <Abstract>Algorithmic interface to Blue Brain data model. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::Circuit</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Abstract>Read access to a circuit database. </Abstract>
    <DeclaredIn>circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Circuit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>a91a129c5be5227680adb99a33ef1c1f9</Anchor>
    <Abstract>Opens a circuit for read access. </Abstract>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Circuit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>a9408dd8a71a27694b681e69fcfb8ffc4</Anchor>
    <Abstract>Opens a circuit for read access. </Abstract>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>a396ebccd7fc3511e7d061cce7fe52f20</Anchor>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>a996373c386f51bbab5be08d9563ed272</Anchor>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMorphologyURIs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>abb42bce871768bad2f87e328f770700e</Anchor>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadMorphologies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>ae4adda14065e0f2c399446ddafdba6ca</Anchor>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPositions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>aebd79fae385839585d95832cbdc79ce5</Anchor>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTransforms</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>abe3f23a02e980cc2b46140fb0052f9f3</Anchor>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRotations</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>ab71158db8168e4ad4ded512d8c065285</Anchor>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumNeurons</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>a366a38e8b14d48a42127e823ec1a03c8</Anchor>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::SpikeReportReader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::SpikeReportReader</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_reader.html</Path>
    <Abstract>Reader for Spike data. </Abstract>
    <DeclaredIn>spikeReportReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpikeReportReader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SpikeReportReader</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_reader.html</Path>
    <Anchor>a9669093776a1285091c5a2d4632d3990</Anchor>
    <Abstract>Construct a new reader opening a spike data source. </Abstract>
    <DeclaredIn>spikeReportReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SpikeReportReader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SpikeReportReader</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_reader.html</Path>
    <Anchor>a338b13e992d590e1cf68833775711b6c</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>spikeReportReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSpikes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SpikeReportReader</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_reader.html</Path>
    <Anchor>af02bfaab496e4c79a5d807867effafa3</Anchor>
    <Abstract>Get all available spikes from this reader. </Abstract>
    <DeclaredIn>spikeReportReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSpikes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SpikeReportReader</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_reader.html</Path>
    <Anchor>a926de0b93358023c9d60ff7a2c154146</Anchor>
    <Abstract>Get all spikes inside a time window. </Abstract>
    <DeclaredIn>spikeReportReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasEnded</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SpikeReportReader</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_reader.html</Path>
    <Anchor>a6bbf3933ab90509b51468a69d1f9def7</Anchor>
    <DeclaredIn>spikeReportReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SpikeReportReader</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_reader.html</Path>
    <Anchor>a692ee194032bf17f2286fc8456639be7</Anchor>
    <DeclaredIn>spikeReportReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStartTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SpikeReportReader</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_reader.html</Path>
    <Anchor>a12af188585c356308d4c8bc95118da16</Anchor>
    <DeclaredIn>spikeReportReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEndTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SpikeReportReader</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_reader.html</Path>
    <Anchor>a594924c010b39a9240214129654624ea</Anchor>
    <DeclaredIn>spikeReportReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SpikeReportReader</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_reader.html</Path>
    <Anchor>aefb0598576af03e0470ee99cdf74d23f</Anchor>
    <Abstract>Close the data source. </Abstract>
    <DeclaredIn>spikeReportReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::SpikeReportWriter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::SpikeReportWriter</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_writer.html</Path>
    <Abstract>Writer for spike data. </Abstract>
    <DeclaredIn>spikeReportWriter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpikeReportWriter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SpikeReportWriter</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_writer.html</Path>
    <Anchor>ad3b1e9aacd2ed848eda5a5f754101d7b</Anchor>
    <Abstract>Construct a new writer for the given URI. </Abstract>
    <DeclaredIn>spikeReportWriter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SpikeReportWriter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SpikeReportWriter</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_writer.html</Path>
    <Anchor>a22226ecc396de2fa8443d34c533f0a21</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>spikeReportWriter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeSpikes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SpikeReportWriter</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_writer.html</Path>
    <Anchor>a622cb89fdf6f5747f0485a0c3309de82</Anchor>
    <Abstract>Writes the spike times and cell GIDs. </Abstract>
    <DeclaredIn>spikeReportWriter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SpikeReportWriter</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_writer.html</Path>
    <Anchor>a52b1aad09aa330ee9bafd347f4a9c666</Anchor>
    <Abstract>Get the URI where the writer is publishing. </Abstract>
    <DeclaredIn>spikeReportWriter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SpikeReportWriter</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_writer.html</Path>
    <Anchor>a490d30db02568611990cfff67b4adb5d</Anchor>
    <Abstract>Closes the report. </Abstract>
    <DeclaredIn>spikeReportWriter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::Spikes</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::Spikes</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spikes.html</Path>
    <Abstract>An iterable list of spikes over a time window, sorted by time. </Abstract>
    <DeclaredIn>spikes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Spikes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Spikes</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spikes.html</Path>
    <Anchor>a500b0b4c7b1712cbc819226850e41d64</Anchor>
    <Abstract>Create an empty Spikes object. </Abstract>
    <DeclaredIn>spikes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Spikes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Spikes</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spikes.html</Path>
    <Anchor>aec02501f7b5b7176117bd2cbc8bbf2ea</Anchor>
    <Abstract>Copy constructor. </Abstract>
    <DeclaredIn>spikes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Spikes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Spikes</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spikes.html</Path>
    <Anchor>af544f1163a70ec563d621ec38b791f36</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>spikes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Spikes</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spikes.html</Path>
    <Anchor>a0f21f043fccce4845926a0410f29cfcc</Anchor>
    <Abstract>Assignment operator. </Abstract>
    <DeclaredIn>spikes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Spikes</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spikes.html</Path>
    <Anchor>a20f3b7a2befe0f6428411f3d1f9e4793</Anchor>
    <Abstract>Returns the first element of the container for const linear access. </Abstract>
    <DeclaredIn>spikes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Spikes</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spikes.html</Path>
    <Anchor>a44fdc7e974acf671452b88bc755dca70</Anchor>
    <Abstract>Returns the const iterator that indicates the end of the container. </Abstract>
    <DeclaredIn>spikes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStartTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Spikes</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spikes.html</Path>
    <Anchor>acdd2f885059feb874f1608ed7c96d67e</Anchor>
    <Abstract>Get the start of the time window in milliseconds. </Abstract>
    <DeclaredIn>spikes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEndTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Spikes</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spikes.html</Path>
    <Anchor>ac30ce158c2d28f2c1a1b11b6e2fc7be2</Anchor>
    <Abstract>Get the end of the time window in milliseconds. </Abstract>
    <DeclaredIn>spikes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Spikes</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spikes.html</Path>
    <Anchor>a5321a3d20dfc33eca6595d7c34960769</Anchor>
    <Abstract>Get the number of elements in this container. </Abstract>
    <DeclaredIn>spikes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>empty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Spikes</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spikes.html</Path>
    <Anchor>abd11e9785ebc0cad3e6d9524fd815d21</Anchor>
    <Abstract>Check if the container is empty. </Abstract>
    <DeclaredIn>spikes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Spikes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Spikes</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spikes.html</Path>
    <Anchor>a2ef4edb2fa5795f75ddf043dbcd2d904</Anchor>
    <Abstract>Protected constructor. </Abstract>
    <DeclaredIn>spikes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::Spikes::const_iterator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::Spikes::const_iterator</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spikes_1_1const__iterator.html</Path>
    <Abstract>Iterator for the Spikes container. </Abstract>
    <DeclaredIn>spikes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>const_iterator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Spikes::const_iterator</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spikes_1_1const__iterator.html</Path>
    <Anchor>ab9da3bf11b39762352fa03d019d6693b</Anchor>
    <Abstract>Create an undefined / invalid iterator. </Abstract>
    <DeclaredIn>spikes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>const_iterator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Spikes::const_iterator</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spikes_1_1const__iterator.html</Path>
    <Anchor>a07366218e13f964dfcc6792999dd8b3f</Anchor>
    <Abstract>Copy constructor. </Abstract>
    <DeclaredIn>spikes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Spikes::const_iterator</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spikes_1_1const__iterator.html</Path>
    <Anchor>a0e173d35b846a6d2afe32bbbf7e71371</Anchor>
    <Abstract>Assignment operator. </Abstract>
    <DeclaredIn>spikes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~const_iterator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Spikes::const_iterator</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spikes_1_1const__iterator.html</Path>
    <Anchor>a8a876484f490911884be8e318aaf8971</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>spikes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Spikes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>brain::Spikes::const_iterator</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spikes_1_1const__iterator.html</Path>
    <Anchor>a131c98c33f3f917209fd9ac05bfcd012</Anchor>
    <Abstract>A list of Spikes events per cell gid, indexed by spikes times. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::Version</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_version.html</Path>
    <Abstract>Information about the current Brain version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brain::Version</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_version.html</Path>
    <Anchor>a91407ad262621f2b25c4174398fa7f61</Anchor>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brain::Version</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_version.html</Path>
    <Anchor>a276cd79796e68f291ecb809b93f656d0</Anchor>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brain::Version</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_version.html</Path>
    <Anchor>a0cb8e05a1caccacf4eff6cf82b760cdf</Anchor>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brain::Version</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_version.html</Path>
    <Anchor>a24ea5374f707688abcc431d380bd8109</Anchor>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brain::Version</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_version.html</Path>
    <Anchor>acd963337a677b3a381fecdfdbf16872f</Anchor>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brain::Version</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_version.html</Path>
    <Anchor>a8b48e21632ecfa1cf41397bf44ae85eb</Anchor>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brain::Version</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_version.html</Path>
    <Anchor>a7f55ce56cbfa739ce329161583a0f5ef</Anchor>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brain::Version</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_version.html</Path>
    <Anchor>aac35171c72a47a9ccd35c7e0d2ef29b5</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::neuron</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>brain::neuron</Scope>
    </TokenIdentifier>
    <Path>namespacebrain_1_1neuron.html</Path>
    <Abstract>High-level interface to neuron morphologies. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::neuron::Morphology</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Abstract>Wrapper around brion::Morphology with higher level functions. </Abstract>
    <DeclaredIn>morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Morphology</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Anchor>afbe927bc382e05f36db6d4f949a7b9f3</Anchor>
    <Abstract>Create a morphology from a URI, load all the data and transform the points. </Abstract>
    <DeclaredIn>brain/neuron/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Morphology</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Anchor>a2b54efc72bcc24043b2583c83b5502f1</Anchor>
    <Abstract>Create a morphology from a brion::Morphology, load all the data and transform the points...</Abstract>
    <DeclaredIn>brain/neuron/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Morphology</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Anchor>afb5e8b6dfdf20f6c009f17a15ed8bb3a</Anchor>
    <Abstract>Create a morphology from a URI and load all the data. </Abstract>
    <DeclaredIn>brain/neuron/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Morphology</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Anchor>a7b80c721df7eef61489a3edc90c1c606</Anchor>
    <Abstract>Create a morphology from a brion::Morphology and load all the data. </Abstract>
    <DeclaredIn>brain/neuron/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Anchor>a94d1ade65067d6f58ab51fdf58a503cc</Anchor>
    <DeclaredIn>brain/neuron/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Anchor>a931c8faadcd560812a1a084affa8cfaf</Anchor>
    <DeclaredIn>brain/neuron/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSectionTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Anchor>a364314c7a2305ebdbd92639301cded40</Anchor>
    <DeclaredIn>brain/neuron/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getApicals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Anchor>a7f639936b179e823994dd54e97524ff2</Anchor>
    <DeclaredIn>brain/neuron/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSectionIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Anchor>a5dda032f924412a4a99d1096a8cb4a5f</Anchor>
    <Abstract>Return the list of ids for the given section types. </Abstract>
    <DeclaredIn>brain/neuron/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Anchor>a1020f6920ee3f16b15a0f67a189f19e3</Anchor>
    <Abstract>Return the sections which have the given section type. </Abstract>
    <DeclaredIn>brain/neuron/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Anchor>a525c9d9a2f794c40f683745b53566d67</Anchor>
    <Abstract>Return the sections which have any of the given section types. </Abstract>
    <DeclaredIn>brain/neuron/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Anchor>a28e09b7f4e621ebeeafa807523ede8f3</Anchor>
    <Abstract>Return the Section with the given id. </Abstract>
    <DeclaredIn>brain/neuron/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSoma</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Anchor>a392ce9b5a46307a85fbde5dd9b691144</Anchor>
    <Abstract>Return the object with the information about the neuron soma. </Abstract>
    <DeclaredIn>brain/neuron/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTransformation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Anchor>a06f7d73da578710392ba4bae3e12ac49</Anchor>
    <Abstract>Return the transformation that was passed to the constructor or the identity matrix is no transformat...</Abstract>
    <DeclaredIn>brain/neuron/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::neuron::Section</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::neuron::Section</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_section.html</Path>
    <Abstract>A class to represent a morphological section. </Abstract>
    <DeclaredIn>section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Section</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_section.html</Path>
    <Anchor>ade7690f44f7ffc50ac730aae9796fc93</Anchor>
    <Abstract>Return the ID of this section. </Abstract>
    <DeclaredIn>section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Section</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_section.html</Path>
    <Anchor>ae289c454772d89d79beada804f10dc38</Anchor>
    <Abstract>Return the morphological type of this section (dedrite, axon, ...). </Abstract>
    <DeclaredIn>section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Section</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_section.html</Path>
    <Anchor>af29d529732edf1e45f5518827a4a21ee</Anchor>
    <Abstract>Return the total length of this section in microns. </Abstract>
    <DeclaredIn>section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Section</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_section.html</Path>
    <Anchor>ac399ca4fcab308bac1b740f7c840478a</Anchor>
    <Abstract>Return the list of all point samples that define this section. </Abstract>
    <DeclaredIn>section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Section</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_section.html</Path>
    <Anchor>aab2b17bfa665ec358de240943ea667c6</Anchor>
    <Abstract>Return a list of points sampling this section at discrete locations. </Abstract>
    <DeclaredIn>section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDistanceToSoma</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Section</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_section.html</Path>
    <Anchor>a9baac6ca2a50f6ad4238ec794ab8bfe2</Anchor>
    <Abstract>Return the absolute distance from the start of the section to the soma. </Abstract>
    <DeclaredIn>section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSampleDistancesToSoma</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Section</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_section.html</Path>
    <Anchor>a0b60f61ea5cb8d00a2c957c7385bea09</Anchor>
    <Abstract>Return the absolute distances to the soma in microns for all sample positions. </Abstract>
    <DeclaredIn>section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Section</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_section.html</Path>
    <Anchor>ac5664b6e9fcc323cfb7fe0b094866ee1</Anchor>
    <Abstract>Return true if this section has a parent section, false otherwise. </Abstract>
    <DeclaredIn>section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Section</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_section.html</Path>
    <Anchor>a09be785791fa12dc1e43987a51f3e832</Anchor>
    <Abstract>Return the parent section of this section. </Abstract>
    <DeclaredIn>section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChildren</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Section</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_section.html</Path>
    <Anchor>aba695dd267ed9835376055a26e367355</Anchor>
    <Abstract>Return a vector with all the direct children of this section. </Abstract>
    <DeclaredIn>section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::neuron::Soma</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::neuron::Soma</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_soma.html</Path>
    <Abstract>A class to represent a neuron soma. </Abstract>
    <DeclaredIn>soma.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProfilePoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Soma</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_soma.html</Path>
    <Anchor>a62d2a79110721181ffec634deae4eeba</Anchor>
    <Abstract>Return the points of the soma profile. </Abstract>
    <DeclaredIn>soma.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMeanRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Soma</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_soma.html</Path>
    <Anchor>a0cc47777b5063bcc3ab8bbee1a1d2289</Anchor>
    <Abstract>Return the mean distance between the profile points and the centroid. </Abstract>
    <DeclaredIn>soma.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCentroid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Soma</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_soma.html</Path>
    <Anchor>a6017c4962a2bbb3270848a95c7385510</Anchor>
    <Abstract>Return the average of the profile points. </Abstract>
    <DeclaredIn>soma.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChildren</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Soma</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_soma.html</Path>
    <Anchor>a83812c6170aa88b5339b20feb2d67137</Anchor>
    <Abstract>Return the first order sections starting from the soma. </Abstract>
    <DeclaredIn>soma.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Abstract>Blue Brain File IO classes. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpikeReportInitData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>ae803e97552b924df5757628e373f50ea</Anchor>
    <Abstract>Basic plugin init data for SpikeReportPlugin. </Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GIDSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>a0f53c74f86d04c704c228013a096ef72</Anchor>
    <Abstract>Ordered set of GIDs of neurons. </Abstract>
    <DeclaredIn>brion/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SectionOffsets</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>ac06093ac5c7a805bfa44af444188a2a8</Anchor>
    <Abstract>The offset for the voltage per section for each neuron, uin64_t max for sections with no compartments...</Abstract>
    <DeclaredIn>brion/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompartmentCounts</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>ab990cd6483c3e4237375b0b8098b2f42</Anchor>
    <Abstract>The number of compartments per section for each neuron. </Abstract>
    <DeclaredIn>brion/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NeuronMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>ab1f9b96868836e9d2bcb7ac14d04ae59</Anchor>
    <Abstract>Data matrix storing NeuronAttributes for each neuron. </Abstract>
    <DeclaredIn>brion/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SynapseMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>aaf229f5bbc92e020d24f6e92b15cd45b</Anchor>
    <Abstract>Data matrix storing SynapseAttributes for each neuron. </Abstract>
    <DeclaredIn>brion/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SynapseSummaryMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>a8cf594eaf64c24b377d0b47bfabab145</Anchor>
    <Abstract>Data matrix storing GID, numEfferent, numAfferent for each neuron. </Abstract>
    <DeclaredIn>brion/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Spikes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>a3024f035dc7ae61a265392d2a0b580c5</Anchor>
    <Abstract>A list of Spikes events per cell gid, indexed by spikes times. </Abstract>
    <DeclaredIn>brion/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Spike</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>a9967e859937226870c81c8fc786cf2be</Anchor>
    <Abstract>A spike. </Abstract>
    <DeclaredIn>brion/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>ab2e98fe0210aa6815bc153e42a734c37</Anchor>
    <Abstract>Stream out content of BlueConfig or CircuitConfig file. </Abstract>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>a0187c76d308ba70d777e58993ac9ed00</Anchor>
    <Abstract>Stream out content of target file. </Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UNDEFINED_TIMESTAMP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>ad046cead8718797e24e848ba108d0160</Anchor>
    <Abstract>A value for undefined timestamps. </Abstract>
    <DeclaredIn>brion/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RESTING_VOLTAGE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>a8ae1d136d8ee3a42852723c5d323b9f7</Anchor>
    <Abstract>Resting voltage in mV. </Abstract>
    <DeclaredIn>brion/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MINIMUM_VOLTAGE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>a5bd25464986914e035b86467e29dee94</Anchor>
    <Abstract>Lowest voltage after hyperpolarisation. </Abstract>
    <DeclaredIn>brion/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::BlueConfig</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Abstract>Read access to a BlueConfig or CircuitConfig file. </Abstract>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~BlueConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>a9f4f9b12ba5193f3cbbd16b91e26fdd8</Anchor>
    <Abstract>Close BlueConfig or CircuitConfig file. </Abstract>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BlueConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>afbac59429e4019abf307e9f415efdace</Anchor>
    <Abstract>Open given filepath to a BlueConfig or CircuitConfig for reading. </Abstract>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSectionNames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>a5a98e5c0ba84ee166cc28dc73a14d447</Anchor>
    <Abstract>Get names of given section type. </Abstract>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>a30a249fc4948e6fa7c269c34fe5155b8</Anchor>
    <Abstract>Get value as string for key in given section. </Abstract>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>aa58d9cf3d2a4462939a5a0586bbf7008</Anchor>
    <Abstract>Get value as type T for key in given section. </Abstract>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTargets</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>ad7a6a9a938e57413802e8022df62a198</Anchor>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCircuitSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>a6c9d6dd253e94e73800b474b446822b3</Anchor>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMorphologySource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>a759864b8fa6bcd76d756e1043eaa107d</Anchor>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getReportSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>a30f64c0386fc846429a3dda70b5214cb</Anchor>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSpikeSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>a50d0101e7336a7f04259124ea91da51d</Anchor>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCircuitTarget</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>ae46b4d84d8ececad808bcde505973271</Anchor>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseTarget</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>a098c87b49809e5e23d1b40b63e381cbd</Anchor>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimestep</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>a2e3c4ab0dcd34d3639c4e58a16d68767</Anchor>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>aaf062876e0c67fbb50609662f4edcb6e</Anchor>
    <Abstract>Stream out content of BlueConfig or CircuitConfig file. </Abstract>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::Circuit</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_circuit.html</Path>
    <Abstract>Read access to a Circuit file. </Abstract>
    <DeclaredIn>circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Circuit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_circuit.html</Path>
    <Anchor>a3dbdbcb1eb256932b68b2471e36374d0</Anchor>
    <Abstract>Close circuit file. </Abstract>
    <DeclaredIn>brion/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Circuit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_circuit.html</Path>
    <Anchor>af64a9ed2225c8fc2a8f34a946892c3db</Anchor>
    <Abstract>Open given filepath to a circuit file for reading. </Abstract>
    <DeclaredIn>brion/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Circuit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_circuit.html</Path>
    <Anchor>ae550b508b82967cd9b3035d960aede77</Anchor>
    <Abstract>Open given filepath to a circuit file for reading. </Abstract>
    <DeclaredIn>brion/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_circuit.html</Path>
    <Anchor>a7a188cd1a46b554e9a7220f876ad8b9c</Anchor>
    <Abstract>Retrieve neuron attributes for set of neurons. </Abstract>
    <DeclaredIn>brion/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumNeurons</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_circuit.html</Path>
    <Anchor>af7ed47392549f914b7ab7625f493176e</Anchor>
    <DeclaredIn>brion/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_circuit.html</Path>
    <Anchor>aeed587930d6b50536bc915e62c7c2fbd</Anchor>
    <Abstract>Get type information for the neurons in the circuit. </Abstract>
    <DeclaredIn>brion/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::CompartmentReport</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Abstract>Read &amp; write access to a CompartmentReport. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~CompartmentReport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>aa062e1099c64f3dcde183766f07524f2</Anchor>
    <Abstract>Close compartment report. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompartmentReport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>ae96d8a5137f610eedac6803e0d6ce114</Anchor>
    <Abstract>Open given URI to a compartment report for reading and/or writing. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompartmentReport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a23f39247dce97c7ec0bf715ee321b470</Anchor>
    <Abstract>Open given source to a compartment report for reading. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateMapping</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a6ee6420e43db4ac5319a86b074d94ba4</Anchor>
    <Abstract>Update compartment mapping wrt the given GIDs. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a3589cf28e6cdd2f4879f6bf7cbd264e3</Anchor>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOffsets</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a91a580dd34e4eb7c9a34c3b96d003781</Anchor>
    <Abstract>Get the current mapping of each section of each neuron in each simulation frame buffer. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCompartmentCounts</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a1457c2180362fb3ac924edd9b7114b1d</Anchor>
    <Abstract>Get the number of compartments for each section of each neuron provided by the GID set via updateMapp...</Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumCompartments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a6ac0b82e37f6ac3851704b48868f4a9a</Anchor>
    <Abstract>Get the number of compartments for the given neuron. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStartTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>add9d4f7e6d2bacdb68d64f3f70ee96af</Anchor>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEndTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a2b2e504eb004361a5172c6709d457c85</Anchor>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimestep</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a9eb569f6bf02eb22139f56c364a58436</Anchor>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDataUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>afd2cadc160af1e98ccf30b3489a2bd84</Anchor>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimeUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>aa52854139ec3214ba63da0a0cf568b1f</Anchor>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a75a2757c72b283f1e723e4302ec0d10d</Anchor>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a6510af0acb912ec4149b391c43b1e441</Anchor>
    <Abstract>Load report values at the given time stamp. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBufferSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a8721d04fa5ef8d8b1c69b8865fcb0917</Anchor>
    <Abstract>Set the size of the stream buffer for loaded frames. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBufferSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a646267af418b901b2b618e27cf0079ef</Anchor>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a30882f15ba7f42ebe56e044d4a956082</Anchor>
    <Abstract>Clears all buffered frames to free memory. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompartmentReport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>ad4159c878cfe6b04d5941439e35bde20</Anchor>
    <Abstract>Open given source to a compartment report for writing. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeHeader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a938807f67dcdae5807a6027fea99ffc7</Anchor>
    <Abstract>Write the header information of this report. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeCompartments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a2d384f09e1c84e1ba5f024c4e4b1d4fc</Anchor>
    <Abstract>Write the compartment counts for each section for one cell. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>af09abc90891b747622411c2f8322deac</Anchor>
    <Abstract>Write the voltages for one cell at a point in time. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>aada18371df36d46de253b2df4495ecb5</Anchor>
    <Abstract>Flush data to output. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::CompartmentReportInitData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::CompartmentReportInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_init_data.html</Path>
    <Abstract>Basic plugin init data for CompartmentReportPlugin. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompartmentReportInitData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_init_data.html</Path>
    <Anchor>a268487758574e1da6febf4666a235d6b</Anchor>
    <Abstract>Create a CompartmentReportInitData object given a URI, access mode and GIDs. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGids</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_init_data.html</Path>
    <Anchor>a62cbdfafa3bd2a3bdcf7f4ad5c503285</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PluginInitData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>a2b26dd7348cc1ce830935b97079a97ef</Anchor>
    <Abstract>Create a PluginInitData object given a URI and access mode. </Abstract>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>a5e5dff9830e0e4d7adfd9e3aead696fc</Anchor>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAccessMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>ac110912b104b28967b171f2065fbb93f</Anchor>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::CompartmentReportPlugin</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Abstract>Base interface for compartment report readers and writers. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStartTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a77d7425864f7419f4773f88a16aa26da</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEndTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a1985f5b329183f6b04526ba76c97e0af</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimestep</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>ae71ced93bc847ec7d69040e5d9451bd7</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDataUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a6a191f3993f311a3624992ff88d3c571</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimeUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a61db21fb8152284cce8600261d01e617</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a38eaf9923df3ffdf99947211a6a381cb</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOffsets</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a6d3877f26cc06de3a3831515970a35e0</Anchor>
    <Abstract>Get the current mapping of each section of each neuron in each simulation frame buffer. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumCompartments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>ab0c7ad8edb0fbaf940a8d0f2b5bed494</Anchor>
    <Abstract>Get the number of compartments for the given neuron. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCompartmentCounts</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>af6ffd4a9f8050e38b7562f0cc431dda1</Anchor>
    <Abstract>Get the number of compartments for each section of each neuron provided by the GID set via updateMapp...</Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a70319410ff7c5db96705f61be80b0a1c</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a718d93da31bc390be4cf86df7468afdb</Anchor>
    <Abstract>Load report values at the given time stamp. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateMapping</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a979a0f56cfe3fc560eadc776dd865910</Anchor>
    <Abstract>Update compartment mapping wrt the given GIDs. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBufferSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>afd8862671b3a459bb0d891e96ff1ee24</Anchor>
    <Abstract>Set the size of the stream buffer for loaded frames. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a7fe02b55cdecf384aa1ec33aff7a3620</Anchor>
    <Abstract>Clears all buffered frames to free memory. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBufferSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>ab8a1a38a2cc4ecbd0b8a55285a61545d</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeHeader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a1f4097c67462043601b6736e9c349706</Anchor>
    <Abstract>Write the header information of this report. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeCompartments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a1ee8f2b01df7aec46ea21b8925e359eb</Anchor>
    <Abstract>Write the compartment counts for each section for one cell. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a1a6d819ba11597e9e5b56a4b2684c634</Anchor>
    <Abstract>Write the voltages for one cell at a point in time. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a29f488ea011b60d69788eb5f28d39de8</Anchor>
    <Abstract>Flush data to output. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::Mesh</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Abstract>Read &amp; write access to a Mesh file. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Mesh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a55332d0f5514bc5f2da06a7c7683a7d2</Anchor>
    <Abstract>Close mesh file. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Mesh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>ae37cce9604ced319d85b6a5a0c14fe90</Anchor>
    <Abstract>Open the given source to a mesh file for reading. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVersion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a4d91f35bc6ddc7e0d6d381db1c2ca44b</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumVertices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a147b439bf0614b838289edeb2405024e</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readVertices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>ad26774b45b0182cffe3398622a8be1e6</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readVertexSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a8030c1ee2238659ae3dfe7a9749011e4</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readVertexDistances</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>ae55ff5c5a296ee5594b7c463ac28a1bf</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumTriangles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>ae381bb48056d2dc2bc804fd7a34db12b</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readTriangles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>af195ee3aaffc21d69443969c89a7169a</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readTriangleSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>ac4ff32aa44c10d0913c74edc94214c27</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readTriangleDistances</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a814a9196b7fa9ce5953585c42dfd5b48</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTriStripLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a636ec40aaad18512e451d7ec89c6cdfd</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readTriStrip</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a93a549722a2c9ac3fcf9383556bebc54</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumNormals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a0e2ebd5da50e066a96afe7c971825da7</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readNormals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a9369029be5c50db3851b02159f9da018</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumStructures</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a396288b2de57235ad00ffd8a93ac902b</Anchor>
    <Abstract>Get the number of structural meshes of the given type. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readStructureVertices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a43d8b24e6c25b2b347d672687bab5379</Anchor>
    <Abstract>Get the vertices of the given structure. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readStructureTriangles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a5573f1698efd85526511b0881365fbaf</Anchor>
    <Abstract>Get the triangles of the given structure. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readStructureTriStrip</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a1baf2473e7242abddafa726d7cc26287</Anchor>
    <Abstract>Get the triangle strip of the given structure. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Mesh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>abe93f5c80142b3c65f819c40eafca775</Anchor>
    <Abstract>Open the given mesh file for write access. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeVertices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>aa812af0661e5f85c24956581776d0535</Anchor>
    <Abstract>Write vertices describing the surface/membrane mesh of a neuron. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeVertexSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a6e151efb6675540e580e66ce9747b2a3</Anchor>
    <Abstract>Write section indices for each vertex of the surface/membrane mesh. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeVertexDistances</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a323d2eece34198b700a7e8417446defe</Anchor>
    <Abstract>Write relative distances in the section for each vertex of the surface/membrane mesh. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTriangles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>aaabe742fe4f8fb784928e1b178f02d80</Anchor>
    <Abstract>Write triangles describing the surface/membrane mesh of a neuron. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTriangleSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a1176166ce871e285faf9703f440f4952</Anchor>
    <Abstract>Write section indices for each triangle of the surface/membrane mesh. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTriangleDistances</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>af1987188c851cdb5dadd8429eea631ae</Anchor>
    <Abstract>Write relative distances in the section for each triangle of the surface/membrane mesh...</Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTriStrip</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a460e23ea6d110b000459c7dad874880a</Anchor>
    <Abstract>Write triangle strip describing the surface/membrane mesh of a neuron. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeNormals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a5aca35c6cf7190594b9241c38d1265d0</Anchor>
    <Abstract>Write per-vertex normals for the surface/membrane mesh of a neuron. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeStructureVertices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a36a308a361a5a788a9e222cdee99fdc7</Anchor>
    <Abstract>Write vertices for one type of structural mesh. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeStructureTriangles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a6eb740ca0a36bc24f2235d1d857b03bd</Anchor>
    <Abstract>Write triangles for one type of structural mesh. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeStructureTriStrip</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a7dadc6750f82db506395a63839b70baf</Anchor>
    <Abstract>Write the triangle strip for one type of structural mesh. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a268f1c164a98bb286b5ae71e1e84ab7f</Anchor>
    <Abstract>Flush data to output. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::Morphology</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Abstract>Read &amp; write access to a Morphology file. </Abstract>
    <DeclaredIn>morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Morphology</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>acfb9f9d4db5bd0818bc3aad2f348a74a</Anchor>
    <Abstract>Close morphology file. </Abstract>
    <DeclaredIn>brion/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Morphology</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>a235efab2eac5b23ee3fed5fb34681b97</Anchor>
    <Abstract>Open the given source to a morphology file for reading. </Abstract>
    <DeclaredIn>brion/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readPoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>aaf0f53d7e9978efb0dfab64043071d81</Anchor>
    <Abstract>Read points of morphology, representing x,y,z coordinates + diameter. </Abstract>
    <DeclaredIn>brion/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>a3b8c9d5ea837f394dfa998fa804a4c8c</Anchor>
    <Abstract>Read sections of morphology, representing section start index and index of the parent section...</Abstract>
    <DeclaredIn>brion/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readSectionTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>a403f9c4ae379feeae3610f973c213995</Anchor>
    <Abstract>Read section types of morphology. </Abstract>
    <DeclaredIn>brion/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readApicals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>a8bc8172057581f9e03b72ab1da560eb7</Anchor>
    <Abstract>Read apical points of morphology, representing section and point index. </Abstract>
    <DeclaredIn>brion/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Morphology</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>aa0f096527c6e81089fcd4ca0fdf96fae</Anchor>
    <Abstract>Open the given morphology file for write access. </Abstract>
    <DeclaredIn>brion/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writePoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>aff6cd127609e63cf1709748f7567d271</Anchor>
    <Abstract>Write points of morphology, representing x,y,z coordinates + diameter. </Abstract>
    <DeclaredIn>brion/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>ab7b4cc175d51b07072c5d287d9cfdfab</Anchor>
    <Abstract>Write sections of morphology, representing section start index and index of parent the section...</Abstract>
    <DeclaredIn>brion/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeSectionTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>a4e10777e7caed13c668b1a4428735780</Anchor>
    <Abstract>Write section types of morphology. </Abstract>
    <DeclaredIn>brion/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeApicals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>a27999dfcdbc884321edf3374a085a531</Anchor>
    <Abstract>Write apical points of morphology, representing section and point index. </Abstract>
    <DeclaredIn>brion/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>a875995889e7e94dbe0959475aec03924</Anchor>
    <Abstract>Flush data to output. </Abstract>
    <DeclaredIn>brion/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::MorphologyInitData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::MorphologyInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_init_data.html</Path>
    <Abstract>Basic plugin init data for MorphologyPlugin. </Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PluginInitData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>a2b26dd7348cc1ce830935b97079a97ef</Anchor>
    <Abstract>Create a PluginInitData object given a URI and access mode. </Abstract>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>a5e5dff9830e0e4d7adfd9e3aead696fc</Anchor>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAccessMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>ac110912b104b28967b171f2065fbb93f</Anchor>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::MorphologyPlugin</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Abstract>Base interface for morphology readers plugins. </Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readPoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>a981eb1b3077076874e4fe276dccbc064</Anchor>
    <Abstract>Read points of morphology, representing x,y,z coordinates + diameter. </Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>a5820e211cda2689b7e83b13d2d32c00d</Anchor>
    <Abstract>Read sections of morphology, representing section start index and index of the parent section...</Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readSectionTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>aa463ab7bb4ac29fe22fcaf095913dc4b</Anchor>
    <Abstract>Read section types of morphology. </Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readApicals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>ad33e4fa8fc3e5b55613a958b82327d6f</Anchor>
    <Abstract>Read apical points of morphology, representing section and point index. </Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writePoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>a66b542efcf23d913e49ce4489e314ef4</Anchor>
    <Abstract>Write points of morphology, representing x,y,z coordinates + diameter. </Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>aeb554f30f9d08646bc6af7120dd2479e</Anchor>
    <Abstract>Write sections of morphology, representing section start index and index of parent the section...</Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeSectionTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>ab83fc61f7379ea0ffc5b7c2c26db49df</Anchor>
    <Abstract>Write section types of morphology. </Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeApicals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>af21f35f221ca068d5cca1a418ac0359a</Anchor>
    <Abstract>Write apical points of morphology, representing section and point index. </Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>a7e46021d144fc5dad9faa3e23ea0b20d</Anchor>
    <Abstract>Flush data to output. </Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::PluginInitData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Abstract>Basic plugin init data for Brion plugin classes. </Abstract>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PluginInitData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>a2b26dd7348cc1ce830935b97079a97ef</Anchor>
    <Abstract>Create a PluginInitData object given a URI and access mode. </Abstract>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>a5e5dff9830e0e4d7adfd9e3aead696fc</Anchor>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAccessMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>ac110912b104b28967b171f2065fbb93f</Anchor>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::SpikeReport</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Abstract>Read access to a SpikeReport. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpikeReport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a51ae7286154ca0d7caf1a1bd8cfc094d</Anchor>
    <Abstract>Create a SpikeReport object given a URI. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SpikeReport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a50beeeb2c939998028f2e5e32d121364</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a4dc05e732f005032f8080f88e88bd168</Anchor>
    <Abstract>Get the URI used to instantiate the report. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getReadMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a6fa614522cbaa72578637baf4f60bfee</Anchor>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStartTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a35dc196f6a69b39e0bc69c0ec3be75fc</Anchor>
    <Abstract>Get the time of the first spike. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEndTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a5f90cebedf6f79bd3c8e15de3c2861aa</Anchor>
    <Abstract>Get the time of the last spike. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSpikes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>af1f75302f6cd63780f10d6cedda3b01f</Anchor>
    <Abstract>Get the spike times and cell GIDs. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeSpikes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a399159966dde8dd7e8568d452ee0eaae</Anchor>
    <Abstract>Writes the spike times and cell GIDs. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitUntil</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a9000f0d5acebebfcd07a99172eb7dc67</Anchor>
    <Abstract>Lock the caller until the first spike past the given time stamp arrives or the network stream is clos...</Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNextSpikeTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a5e366cdface09f9de23b0ef369f7d7fc</Anchor>
    <Abstract>Return the time of the next spike available in the internal cache. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLatestSpikeTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>ab5bbe0c626970b0bde9939a2a495747a</Anchor>
    <Abstract>Return the time of the latest spike that has been received. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a025c64d02116e0b86e0e07cb4cc975f9</Anchor>
    <Abstract>Remove all spikes contained in the given time interval. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a5610cfd2b4f663e5c9e6393af63a472c</Anchor>
    <Abstract>Closes the report. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::SpikeReportPlugin</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Abstract>Base interface for spike report readers plugins. </Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStartTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>a1b6399cd2a6908a7d03702f8cccd4960</Anchor>
    <Abstract>Get the time of the first spike. </Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEndTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>a7c9a9c757ca45b8403ab4fab1ea4bf39</Anchor>
    <Abstract>Get the time of the last spike. </Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSpikes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>a3c4a4b6a329d48dc31a73e5dd67fb654</Anchor>
    <Abstract>Get the spike times and cell GIDs. </Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeSpikes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>a9ed9e0c1033d5bd8461d120455617772</Anchor>
    <Abstract>Writes the spike times and cell GIDs. </Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>ac25b2bc53eefe5967167d5e518bd1959</Anchor>
    <Abstract>Get the URI used to instantiate the report. </Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getReadMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>af685b14b98ad2d97e7da5e38e68253fe</Anchor>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitUntil</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>a1d2cc5654162e27e0de67ef6b1c8806b</Anchor>
    <Abstract>Lock the caller until the first spike past the given time stamp arrives or the network stream is clos...</Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNextSpikeTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>ab0c9e3bab16d3d4c3c5ef7e321b09102</Anchor>
    <Abstract>Return the time of the next spike available in the internal cache. </Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLatestSpikeTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>a16aa3b104dea9a4ce36bc75345c7bbbf</Anchor>
    <Abstract>Return the time of the next spike available in the internal cache. </Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>a8da9693509c7ad057f28c7bb7c4780e2</Anchor>
    <Abstract>Remove all spikes contained in the given time interval. </Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>a972c34269c7b114a27f01d13363bddad</Anchor>
    <Abstract>Closes the report. </Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::Synapse</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse.html</Path>
    <Abstract>Read access to a Synapse file. </Abstract>
    <DeclaredIn>synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Synapse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse.html</Path>
    <Anchor>a967b1d9adb7f49fbff371130291c0b7d</Anchor>
    <Abstract>Close synapse file. </Abstract>
    <DeclaredIn>synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Synapse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse.html</Path>
    <Anchor>afa0d5cf421b259daf8820890efe248c6</Anchor>
    <Abstract>Open the given source to a synapse file for reading. </Abstract>
    <DeclaredIn>synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse.html</Path>
    <Anchor>a62371ecb873ea2ff7be426306fb5d6db</Anchor>
    <Abstract>Read requested synapse attributes for a given neuron. </Abstract>
    <DeclaredIn>synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumSynapses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse.html</Path>
    <Anchor>a7c29b99d2f20edc860860d6b286d0f90</Anchor>
    <Abstract>Get the number of synapses for a set of neurons. </Abstract>
    <DeclaredIn>synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::SynapseSummary</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::SynapseSummary</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse_summary.html</Path>
    <Abstract>Read access to a Synapse summary file. </Abstract>
    <DeclaredIn>synapseSummary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SynapseSummary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SynapseSummary</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse_summary.html</Path>
    <Anchor>a6c88b279a52cb43f3b21f958bbd4ddb7</Anchor>
    <Abstract>Close synapse summary file. </Abstract>
    <DeclaredIn>synapseSummary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SynapseSummary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SynapseSummary</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse_summary.html</Path>
    <Anchor>af20d4491231e172d332a2850fb957842</Anchor>
    <Abstract>Open the given source to a synapse summary file for reading. </Abstract>
    <DeclaredIn>synapseSummary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SynapseSummary</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse_summary.html</Path>
    <Anchor>a1761a2a8a94c76762ce5312076568c90</Anchor>
    <Abstract>Read afferent and efferent information for a given neuron. </Abstract>
    <DeclaredIn>synapseSummary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::Target</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Abstract>Read access to a Target file. </Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Target</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Anchor>a967607b68d715c7191d56cf2d19ad6ca</Anchor>
    <Abstract>Copy-construct a target file. </Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Target</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Anchor>ab8d2a8b976e2b52b4b8617edfc8e6a2f</Anchor>
    <Abstract>Close target file. </Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Anchor>a5ee36b021b1a08f7baf94651822be7fc</Anchor>
    <Abstract>Assign a different target. </Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Anchor>aea9917cbbc18242f7738a1e57ff70274</Anchor>
    <Abstract>Stream out content of target file. </Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Target</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Anchor>a2c1de15976a2e1f569b0083bb56d0480</Anchor>
    <Abstract>Open the given source to a target file for reading. </Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTargetNames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Anchor>a92130c8c0608723dcb538a9e4d4c317c</Anchor>
    <Abstract>Get list of targets for the desired type. </Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Anchor>aa58924378a7389ae2a44867ce5e8be20</Anchor>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Anchor>a413c895cc24f25e7c85ed00818395d90</Anchor>
    <Abstract>Get targets and/or GIDSet grouped by the given target. </Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Anchor>af9dfd3b852d9a457e627d05ffb5bf30c</Anchor>
    <Abstract>Parse a given target into a GID set. </Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Abstract>Information about the current Brion version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>a7724662e5f6b8e067440ac22acec9657</Anchor>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>abfeb86012f499e974116645aa4682830</Anchor>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>abb649c2122bcb69b00e2485d6695fdee</Anchor>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>a100387ecec439ad9a41c6125d4584288</Anchor>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>a6f481c7090688eeb4742a22a53982c14</Anchor>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>a08a68ae8561176060e77710c79cad778</Anchor>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>a0529b8442a3578b60213b46007be4624</Anchor>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>a899ec6e0102c68a690e8b9143c7908c4</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enums</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>enums</Scope>
    </TokenIdentifier>
    <Path>namespaceenums.html</Path>
    <Abstract>Enumeration definitions. </Abstract>
  </Token>
</Tokens>
