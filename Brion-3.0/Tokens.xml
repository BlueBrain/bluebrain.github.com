<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>brion::enums</Scope>
    </TokenIdentifier>
    <Path>enums_8h.html</Path>
    <Anchor>ae7a4cd836afe68a46533496f3b423fe4</Anchor>
    <Abstract>Output stream formatter for MorphologyVersion.</Abstract>
    <DeclaredIn>enums.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MESH_SPINES</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>brion::enums</Scope>
    </TokenIdentifier>
    <Path>enums_8h.html</Path>
    <Anchor>ac4afacea7110530930497a334e6a0904aedde395de26a420b2c5592bfc63d7e3f</Anchor>
    <Abstract>spines</Abstract>
    <DeclaredIn>enums.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MESH_BOUTONS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>brion::enums</Scope>
    </TokenIdentifier>
    <Path>enums_8h.html</Path>
    <Anchor>ac4afacea7110530930497a334e6a0904a92fa19b9e053de92f046e5a631565670</Anchor>
    <Abstract>boutons</Abstract>
    <DeclaredIn>enums.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MESH_PSD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>brion::enums</Scope>
    </TokenIdentifier>
    <Path>enums_8h.html</Path>
    <Anchor>ac4afacea7110530930497a334e6a0904a208433ed63383dd3e71396624722dfaf</Anchor>
    <Abstract>post-synaptic densities</Abstract>
    <DeclaredIn>enums.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MESH_AZ</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>brion::enums</Scope>
    </TokenIdentifier>
    <Path>enums_8h.html</Path>
    <Anchor>ac4afacea7110530930497a334e6a0904a839487e812ac932aedc9ef68be5a0f9c</Anchor>
    <Abstract>active zones</Abstract>
    <DeclaredIn>enums.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MESH_ENDO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>brion::enums</Scope>
    </TokenIdentifier>
    <Path>enums_8h.html</Path>
    <Anchor>ac4afacea7110530930497a334e6a0904aee6367301ccddaebf92fc8b8ee7ffd7e</Anchor>
    <Abstract>endoplasmic reticulum</Abstract>
    <DeclaredIn>enums.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NEURONCLASS_MTYPE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>brion::enums</Scope>
    </TokenIdentifier>
    <Path>enums_8h.html</Path>
    <Anchor>a6b560de97d78ca83260ef07d8e1e4571a0cac3273939280288da1ece4a3e8de19</Anchor>
    <Abstract>L2PC, L5CSPC, ...</Abstract>
    <DeclaredIn>enums.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NEURONCLASS_MORPHOLOGY_CLASS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>brion::enums</Scope>
    </TokenIdentifier>
    <Path>enums_8h.html</Path>
    <Anchor>a6b560de97d78ca83260ef07d8e1e4571a861f0d6ed93fae08ac8add4eca8fa991</Anchor>
    <Abstract>PYR, INT.</Abstract>
    <DeclaredIn>enums.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NEURONCLASS_FUNCTION_CLASS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>brion::enums</Scope>
    </TokenIdentifier>
    <Path>enums_8h.html</Path>
    <Anchor>a6b560de97d78ca83260ef07d8e1e4571a786d672793c2517d52c6de1324d10aa5</Anchor>
    <Abstract>EXC, INH.</Abstract>
    <DeclaredIn>enums.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NEURONCLASS_ETYPE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>brion::enums</Scope>
    </TokenIdentifier>
    <Path>enums_8h.html</Path>
    <Anchor>a6b560de97d78ca83260ef07d8e1e4571a68906f326d6918506bed1652172acffa</Anchor>
    <Abstract>cAD, dAL, ...</Abstract>
    <DeclaredIn>enums.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SECTION_SOMA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>brion::enums</Scope>
    </TokenIdentifier>
    <Path>enums_8h.html</Path>
    <Anchor>adbb154f3c78c0209ce2f3d33b628b5a1af81231ec35cefa2bd00b7250ad8a3198</Anchor>
    <Abstract>neuron cell body</Abstract>
    <DeclaredIn>enums.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SECTION_DENDRITE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>brion::enums</Scope>
    </TokenIdentifier>
    <Path>enums_8h.html</Path>
    <Anchor>adbb154f3c78c0209ce2f3d33b628b5a1add1dc7730c5982d2440438a7ce81f320</Anchor>
    <Abstract>general or basal dendrite (near to soma)</Abstract>
    <DeclaredIn>enums.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SECTION_APICAL_DENDRITE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>brion::enums</Scope>
    </TokenIdentifier>
    <Path>enums_8h.html</Path>
    <Anchor>adbb154f3c78c0209ce2f3d33b628b5a1a5148c4e4922ea7417a2cbc4caa96bbfb</Anchor>
    <Abstract>apical dendrite (far from soma)</Abstract>
    <DeclaredIn>enums.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_MAJOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brion_2version_8h.html</Path>
    <Anchor>aa5be9a4351e20d44fa19574e589b2fb3</Anchor>
    <Abstract>The current major version.</Abstract>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_MINOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brion_2version_8h.html</Path>
    <Anchor>aa5a2357f391cbb650d1d8894ee1b526f</Anchor>
    <Abstract>The current minor version.</Abstract>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_PATCH</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brion_2version_8h.html</Path>
    <Anchor>ab7df48db132552459d856511d31fec71</Anchor>
    <Abstract>The current patch level.</Abstract>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_REVISION</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brion_2version_8h.html</Path>
    <Anchor>a6044ab3ac01614da058254ed01b5b206</Anchor>
    <Abstract>The current SCM revision.</Abstract>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_ABI</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brion_2version_8h.html</Path>
    <Anchor>a7920884b61851f5f7492f448ee8bc30a</Anchor>
    <Abstract>The current binary interface.</Abstract>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_STRING</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brion_2version_8h.html</Path>
    <Anchor>ac67e444e6ce8ed20647801f3173b440a</Anchor>
    <Abstract>The current major.minor.version as a string.</Abstract>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_REV_STRING</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brion_2version_8h.html</Path>
    <Anchor>a24a2f48d5e561f636d87d0627f514936</Anchor>
    <Abstract>The current major.minor.version.revision as a string.</Abstract>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_GT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brion_2version_8h.html</Path>
    <Anchor>abee87c6b068f71dfee25e4b4d4fdb895</Anchor>
    <Abstract>True if the current version is newer than the given one.</Abstract>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_GE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brion_2version_8h.html</Path>
    <Anchor>a6495e508830bd2e12d505b21434ef9f2</Anchor>
    <Abstract>True if the current version is equal or newer to the given.</Abstract>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_LT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brion_2version_8h.html</Path>
    <Anchor>a33790ddcc603c8ba7cbcfef89e90db81</Anchor>
    <Abstract>True if the current version is older than the given one.</Abstract>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_LE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brion_2version_8h.html</Path>
    <Anchor>afb3327bd79d35ba861a0be60539a4264</Anchor>
    <Abstract>True if the current version is older or equal to the given.</Abstract>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAIN_VERSION_MAJOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brain_2version_8h.html</Path>
    <Anchor>a427a3c0f762ebebccc518760bda4f56b</Anchor>
    <Abstract>The current major version.</Abstract>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAIN_VERSION_MINOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brain_2version_8h.html</Path>
    <Anchor>a5136efd056f5d33648833945fdc64898</Anchor>
    <Abstract>The current minor version.</Abstract>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAIN_VERSION_PATCH</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brain_2version_8h.html</Path>
    <Anchor>a3418e370c6278025871bd9f779f63cc4</Anchor>
    <Abstract>The current patch level.</Abstract>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAIN_VERSION_REVISION</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brain_2version_8h.html</Path>
    <Anchor>aa9caa3a96315ec3a2f071008e61efe02</Anchor>
    <Abstract>The current SCM revision.</Abstract>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAIN_VERSION_ABI</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brain_2version_8h.html</Path>
    <Anchor>a43f616dc38b671e3b6afa09ea65d6ed0</Anchor>
    <Abstract>The current binary interface.</Abstract>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAIN_VERSION_STRING</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brain_2version_8h.html</Path>
    <Anchor>ae9c214383c4f1971ca9725bc816b26c5</Anchor>
    <Abstract>The current major.minor.version as a string.</Abstract>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAIN_REV_STRING</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brain_2version_8h.html</Path>
    <Anchor>a4e62f27c19693c1f33fc31c4cb650af0</Anchor>
    <Abstract>The current major.minor.version.revision as a string.</Abstract>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAIN_VERSION_GT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brain_2version_8h.html</Path>
    <Anchor>a14b1bc78af8544169ee98d8f3169061b</Anchor>
    <Abstract>True if the current version is newer than the given one.</Abstract>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAIN_VERSION_GE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brain_2version_8h.html</Path>
    <Anchor>a9846b2663aab194bf239ca7f7856a215</Anchor>
    <Abstract>True if the current version is equal or newer to the given.</Abstract>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAIN_VERSION_LT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brain_2version_8h.html</Path>
    <Anchor>aa819a51db4d809368bf1f1bc3023f864</Anchor>
    <Abstract>True if the current version is older than the given one.</Abstract>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAIN_VERSION_LE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brain_2version_8h.html</Path>
    <Anchor>afb770b34043d0546e780a163cb656b6a</Anchor>
    <Abstract>True if the current version is older or equal to the given.</Abstract>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Changelog</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>_changelog.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>data_compartments</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>data_compartments.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>data</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>data.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>data_spikes</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>data_spikes.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compartment_report</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>compartment_report.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compartment_report_mpi</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>compartment_report_mpi.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compartment_report_py</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>compartment_report_py.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rfcs</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>rfcs.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>morphology11</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>morphology11.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>morphologyRead</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>morphology_read.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>spike_reports</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>spike_reports.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain_synapses</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>brain_synapses.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>md__jenkins_07_workspace_oss.Brion.documentation_build_type_Debug_platform_bb5_sources_doc_user_caching</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>md__jenkins_07_workspace_oss_8_brion_8documentation_build_type__debug_platform_bb5_sources_doc_user_caching.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apps</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>apps.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compartmentConverter</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>compartment_converter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>morphologyConverter</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>morphology_converter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>spikeConverter</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>spike_converter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>env</Name>
      <APILanguage>unknown</APILanguage>
    </TokenIdentifier>
    <Path>env.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>brain</Scope>
    </TokenIdentifier>
    <Path>namespacebrain.html</Path>
    <Abstract>Algorithmic interface to Blue Brain data model.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SynapseGID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brain</Scope>
    </TokenIdentifier>
    <Path>namespacebrain.html</Path>
    <Anchor>af19fb16673bf58718117c03774b1b247</Anchor>
    <Abstract>The GID of a synapse is the a tuple of two numbers:</Abstract>
    <DeclaredIn>brain/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>none</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>brain</Scope>
    </TokenIdentifier>
    <Path>namespacebrain.html</Path>
    <Anchor>a9465fc0a732855959304f34a970b3a21a334c4a4c42fdb79d7ebc3e73b517e6f8</Anchor>
    <Abstract>only loads pre- and post GIDs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>brain</Scope>
    </TokenIdentifier>
    <Path>namespacebrain.html</Path>
    <Anchor>a9465fc0a732855959304f34a970b3a21a736b91750e516139acc13c5eb6564f92</Anchor>
    <Abstract>topological information (section, segment, distance) and model attributes</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>positions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>brain</Scope>
    </TokenIdentifier>
    <Path>namespacebrain.html</Path>
    <Anchor>a9465fc0a732855959304f34a970b3a21a365a4a972db646c76d115b3897f2d4de</Anchor>
    <Abstract>pre/post surface/center positions</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>all</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>brain</Scope>
    </TokenIdentifier>
    <Path>namespacebrain.html</Path>
    <Anchor>a9465fc0a732855959304f34a970b3a21aa181a603769c1f98ad927e7367c7aa51</Anchor>
    <Abstract>all synapse data</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::Circuit</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Abstract>Read access to a circuit database.</Abstract>
    <DeclaredIn>circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Circuit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>ad8018f3c4aaf467133ca254295ba53af</Anchor>
    <Abstract>Opens a circuit for read access.</Abstract>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Circuit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>aa333684a12851014e36ee5c897599599</Anchor>
    <Abstract>Opens a circuit for read access.</Abstract>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>ab112888bad17b419c79effa55a98fd25</Anchor>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>a96062e3b79eefac6ac61aa14b6cfe254</Anchor>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>ad855a2764c5e0610b10cd26c0eee4c5c</Anchor>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRandomGIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>ad6492849a64482c6fab4f94bce8c6aeb</Anchor>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRandomGIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>a86a3447d812e26c498bb887dfc2f5d2d</Anchor>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRandomGIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>ad70c0c9789dc381a43a9c23481d44d45</Anchor>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMorphologyURIs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>a9ac8a45b13787922ef1e4bcb0234b40e</Anchor>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMorphologyNames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>afa4bb6416c5876f597302a47400c3625</Anchor>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadMorphologies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>a6479a01e2add4267031547f21f6b37aa</Anchor>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPositions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>adca44bc869008dbba3fe4b700846592c</Anchor>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMorphologyTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>a7749fdba24da539f677f77c5be26e6f3</Anchor>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMorphologyTypeNames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>a71b3c3d52372eda5e37f22367fa30d8d</Anchor>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getElectrophysiologyTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>a36c3f13351f57f5b8a687c2e41cc7d3e</Anchor>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getElectrophysiologyTypeNames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>a744fab0bba39983e6924d2f24b8f7408</Anchor>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTransforms</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>a460b2a092ce3f819e5e166c2974a1c5d</Anchor>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRotations</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>aadc36550256f7cdded8a54483dfa742f</Anchor>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAttribute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>ad1a56af552e8cc060e08a3e3a976eeec</Anchor>
    <Abstract>Get the value of a custom attribute for a set of gids.</Abstract>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumNeurons</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>ac4f6b268e6058be241404d893c110dc5</Anchor>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAfferentSynapses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>abe039fb8b04e67562a1aa1fe04b4d754</Anchor>
    <Abstract>Access all afferent synapses of the given GIDs.</Abstract>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getExternalAfferentSynapses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>a1b40ed06a8ee1fdb7c8bb3fe51c3d18c</Anchor>
    <Abstract>Access all afferent synapses projected from another circuit into the given GIDs.</Abstract>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEfferentSynapses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>ac60007ceea9a2fadf10b3b4b41a9b885</Anchor>
    <Abstract>Access all efferent synapses of the given GIDs.</Abstract>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProjectedSynapses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>a7ab228805d2e0e50087f52211ce33771</Anchor>
    <Abstract>Access all synapses along the projection from the pre- to the postGIDs.</Abstract>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::CompartmentReport</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_compartment_report.html</Path>
    <Abstract>Reader for compartment reports.</Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompartmentReport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_compartment_report.html</Path>
    <Anchor>a7ab1a5fdac1a225dba917bd4a3ede529</Anchor>
    <Abstract>Open a report in read mode.</Abstract>
    <DeclaredIn>brain/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMetaData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_compartment_report.html</Path>
    <Anchor>afd4c8f8167621414f3c07b6ed6c9bfef</Anchor>
    <DeclaredIn>brain/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_compartment_report.html</Path>
    <Anchor>afad73ea614af95832613d7ffd060cd4d</Anchor>
    <DeclaredIn>brain/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCellCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_compartment_report.html</Path>
    <Anchor>a800a8cc8eb8c3a4345bd535d60dfc425</Anchor>
    <DeclaredIn>brain/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_compartment_report.html</Path>
    <Anchor>a6ec0d6b2312a50471991a2829449ee2a</Anchor>
    <Abstract>Create a view of a subset of neurons.</Abstract>
    <DeclaredIn>brain/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_compartment_report.html</Path>
    <Anchor>a9257b45fb0346c4cc62b89a6cda7e968</Anchor>
    <Abstract>Create a view with all the neurons in the report.</Abstract>
    <DeclaredIn>brain/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::CompartmentReportMapping</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::CompartmentReportMapping</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_compartment_report_mapping.html</Path>
    <Abstract>Data mapping of a compartment report frame.</Abstract>
    <DeclaredIn>compartmentReportMapping.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::CompartmentReportMapping</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_compartment_report_mapping.html</Path>
    <Anchor>affaf36bab532e63bdfc10999f4c1dc02</Anchor>
    <DeclaredIn>compartmentReportMapping.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOffsets</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::CompartmentReportMapping</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_compartment_report_mapping.html</Path>
    <Anchor>aae95b3f726e07225b7b568d69ec02fa5</Anchor>
    <Abstract>Get the current mapping of each section of each neuron in each simulation frame buffer.</Abstract>
    <DeclaredIn>compartmentReportMapping.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCompartmentCounts</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::CompartmentReportMapping</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_compartment_report_mapping.html</Path>
    <Anchor>a77805056cdb2ad5967b557b8dbd42cb3</Anchor>
    <Abstract>Get the number of compartments for each section of each neuron in the view.</Abstract>
    <DeclaredIn>compartmentReportMapping.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumCompartments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::CompartmentReportMapping</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_compartment_report_mapping.html</Path>
    <Anchor>a8dc3b795b5a4fe2786833813e539187b</Anchor>
    <Abstract>Get the number of compartments for the given neuron.</Abstract>
    <DeclaredIn>compartmentReportMapping.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::CompartmentReportMapping</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_compartment_report_mapping.html</Path>
    <Anchor>a30e89a14afb134fee1a234683faa39ef</Anchor>
    <DeclaredIn>compartmentReportMapping.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::CompartmentReportMapping::IndexEntry</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::CompartmentReportMapping::IndexEntry</Scope>
    </TokenIdentifier>
    <Path>structbrain_1_1_compartment_report_mapping_1_1_index_entry.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::CompartmentReportMetaData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::CompartmentReportMetaData</Scope>
    </TokenIdentifier>
    <Path>structbrain_1_1_compartment_report_meta_data.html</Path>
    <Abstract>Compartment report meta data.</Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brain::CompartmentReportMetaData</Scope>
    </TokenIdentifier>
    <Path>structbrain_1_1_compartment_report_meta_data.html</Path>
    <Anchor>a392795c6c7f60bc5b402dd850b0cf474</Anchor>
    <Abstract>The start time of the report.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>endTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brain::CompartmentReportMetaData</Scope>
    </TokenIdentifier>
    <Path>structbrain_1_1_compartment_report_meta_data.html</Path>
    <Anchor>a31d41273774f94c41ff11107d1bc4830</Anchor>
    <Abstract>The end time of the report.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>timeStep</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brain::CompartmentReportMetaData</Scope>
    </TokenIdentifier>
    <Path>structbrain_1_1_compartment_report_meta_data.html</Path>
    <Anchor>a95054dbda30be63a7de378e725134832</Anchor>
    <Abstract>The sampling time interval of the report.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>timeUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brain::CompartmentReportMetaData</Scope>
    </TokenIdentifier>
    <Path>structbrain_1_1_compartment_report_meta_data.html</Path>
    <Anchor>ae37c7d5288f710c42f5c0f9925951d54</Anchor>
    <Abstract>The time unit of the report.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dataUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brain::CompartmentReportMetaData</Scope>
    </TokenIdentifier>
    <Path>structbrain_1_1_compartment_report_meta_data.html</Path>
    <Anchor>aafb4d6d47cfdecf4bf1aeb6312a59a19</Anchor>
    <Abstract>The data unit of the report.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brain::CompartmentReportMetaData</Scope>
    </TokenIdentifier>
    <Path>structbrain_1_1_compartment_report_meta_data.html</Path>
    <Anchor>a9cb34fc4b95d637b7a93e5685b76faae</Anchor>
    <Abstract>The total frame count in the report.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::CompartmentReportView</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::CompartmentReportView</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_compartment_report_view.html</Path>
    <Abstract>Compartment report view.</Abstract>
    <DeclaredIn>compartmentReportView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getReader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::CompartmentReportView</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_compartment_report_view.html</Path>
    <Anchor>abe4ca38735de52a47b57c0a5ea1d1fad</Anchor>
    <DeclaredIn>compartmentReportView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::CompartmentReportView</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_compartment_report_view.html</Path>
    <Anchor>a7d5c677a2c0edc425e38288e100f9e6c</Anchor>
    <DeclaredIn>compartmentReportView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMapping</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::CompartmentReportView</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_compartment_report_view.html</Path>
    <Anchor>a67ede5c37dff85465b99df179e6d1dda</Anchor>
    <DeclaredIn>compartmentReportView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::CompartmentReportView</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_compartment_report_view.html</Path>
    <Anchor>a07cd2670dbadca5fff667ca5df489d3d</Anchor>
    <Abstract>Load a frame at the given time stamp.</Abstract>
    <DeclaredIn>compartmentReportView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::CompartmentReportView</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_compartment_report_view.html</Path>
    <Anchor>a9568ff9cbe2e24a78e141e18ab887d5f</Anchor>
    <Abstract>Load frames between start and end time stamps.</Abstract>
    <DeclaredIn>compartmentReportView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::CompartmentReportView</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_compartment_report_view.html</Path>
    <Anchor>adac6b6d39de862ab17044831a13abc88</Anchor>
    <Abstract>Load frames between start and end time stamps.</Abstract>
    <DeclaredIn>compartmentReportView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadAll</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::CompartmentReportView</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_compartment_report_view.html</Path>
    <Anchor>a077a89dc015bb843ca3e831390dada90</Anchor>
    <Abstract>Load all the frames.</Abstract>
    <DeclaredIn>compartmentReportView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::Simulation</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::Simulation</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_simulation.html</Path>
    <Abstract>Simulation configuration parser and entry point.</Abstract>
    <DeclaredIn>simulation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Simulation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Simulation</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_simulation.html</Path>
    <Anchor>a60119f74ca1694975695a19cf733b253</Anchor>
    <Abstract>Open a simulation configuration.</Abstract>
    <DeclaredIn>simulation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Simulation</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_simulation.html</Path>
    <Anchor>ab910628e731c5f0a695ce996dabf386e</Anchor>
    <DeclaredIn>simulation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Simulation</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_simulation.html</Path>
    <Anchor>a417face2c5334ce39f73e6f8f5aa14f0</Anchor>
    <DeclaredIn>simulation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Simulation</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_simulation.html</Path>
    <Anchor>a7c0cbd09158edd52d3d8eea2b087d903</Anchor>
    <DeclaredIn>simulation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Simulation</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_simulation.html</Path>
    <Anchor>abeeca3d506f164c36bd13ced6c2a1f7e</Anchor>
    <DeclaredIn>simulation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Simulation</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_simulation.html</Path>
    <Anchor>af001d7e547da8ec5571d199307393026</Anchor>
    <DeclaredIn>simulation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Simulation</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_simulation.html</Path>
    <Anchor>a4468d63a6c1222376465d13a0ad7c331</Anchor>
    <DeclaredIn>simulation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCompartmentReportNames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Simulation</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_simulation.html</Path>
    <Anchor>a5979053f6bf29eb819944c2ae8de1236</Anchor>
    <DeclaredIn>simulation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTargetNames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Simulation</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_simulation.html</Path>
    <Anchor>aec5e62e7d8d960214b4d73328723cb38</Anchor>
    <DeclaredIn>simulation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openCircuit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Simulation</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_simulation.html</Path>
    <Anchor>a623668b1056e1a5164ac8e5bdf216b59</Anchor>
    <Abstract>Open the circuit associated to this simulation.</Abstract>
    <DeclaredIn>simulation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openSpikeReport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Simulation</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_simulation.html</Path>
    <Anchor>adab682dc11cd5a29de16b127e050b66e</Anchor>
    <Abstract>Open the main spike report of the simulation.</Abstract>
    <DeclaredIn>simulation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openCompartmentReport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Simulation</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_simulation.html</Path>
    <Anchor>ac709582854f41f8a2fdecc1528c1230f</Anchor>
    <Abstract>Open a compartment report with the given name.</Abstract>
    <DeclaredIn>simulation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::SpikeReportReader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::SpikeReportReader</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_reader.html</Path>
    <Abstract>Reader for Spike data.</Abstract>
    <DeclaredIn>spikeReportReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpikeReportReader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SpikeReportReader</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_reader.html</Path>
    <Anchor>a9669093776a1285091c5a2d4632d3990</Anchor>
    <Abstract>Construct a new reader opening a spike data source.</Abstract>
    <DeclaredIn>spikeReportReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpikeReportReader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SpikeReportReader</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_reader.html</Path>
    <Anchor>a7407e8549d22155752a4b6f216b88ff7</Anchor>
    <Abstract>Construct a new reader opening a spike data source.</Abstract>
    <DeclaredIn>spikeReportReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SpikeReportReader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SpikeReportReader</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_reader.html</Path>
    <Anchor>a338b13e992d590e1cf68833775711b6c</Anchor>
    <Abstract>Destructor.</Abstract>
    <DeclaredIn>spikeReportReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSpikes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SpikeReportReader</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_reader.html</Path>
    <Anchor>a926de0b93358023c9d60ff7a2c154146</Anchor>
    <Abstract>Get all spikes inside a time window.</Abstract>
    <DeclaredIn>spikeReportReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEndTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SpikeReportReader</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_reader.html</Path>
    <Anchor>ab213ab4d1c70a2f89e290825073cba3a</Anchor>
    <DeclaredIn>spikeReportReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasEnded</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SpikeReportReader</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_reader.html</Path>
    <Anchor>af955081c67639ab11cbbf878a0caefbc</Anchor>
    <DeclaredIn>spikeReportReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SpikeReportReader</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_reader.html</Path>
    <Anchor>aefb0598576af03e0470ee99cdf74d23f</Anchor>
    <Abstract>Close the data source.</Abstract>
    <DeclaredIn>spikeReportReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::SpikeReportWriter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::SpikeReportWriter</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_writer.html</Path>
    <Abstract>Writer for spike data.</Abstract>
    <DeclaredIn>spikeReportWriter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpikeReportWriter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SpikeReportWriter</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_writer.html</Path>
    <Anchor>a91f0dc222032343ea3dcd34f66950f7c</Anchor>
    <Abstract>Construct a new writer for the given URI.</Abstract>
    <DeclaredIn>spikeReportWriter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SpikeReportWriter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SpikeReportWriter</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_writer.html</Path>
    <Anchor>a22226ecc396de2fa8443d34c533f0a21</Anchor>
    <Abstract>Destructor.</Abstract>
    <DeclaredIn>spikeReportWriter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeSpikes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SpikeReportWriter</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_writer.html</Path>
    <Anchor>a622cb89fdf6f5747f0485a0c3309de82</Anchor>
    <Abstract>Writes the spike times and cell GIDs.</Abstract>
    <DeclaredIn>spikeReportWriter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SpikeReportWriter</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_writer.html</Path>
    <Anchor>a989c14284b291397819b439333ea9dba</Anchor>
    <Abstract>Get the URI where the writer is publishing.</Abstract>
    <DeclaredIn>spikeReportWriter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SpikeReportWriter</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_writer.html</Path>
    <Anchor>a490d30db02568611990cfff67b4adb5d</Anchor>
    <Abstract>Closes the report.</Abstract>
    <DeclaredIn>spikeReportWriter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::Synapse</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapse.html</Path>
    <Abstract>A proxy object returned by the Synapses container to access data for a particular synapse.</Abstract>
    <DeclaredIn>synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapse.html</Path>
    <Anchor>ab0ad4a8a3f9fbac2b9eb216626555a8b</Anchor>
    <DeclaredIn>brain/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPresynapticGID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapse.html</Path>
    <Anchor>a8866db517d97df3d883ef3ddd325914f</Anchor>
    <DeclaredIn>brain/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPresynapticSectionID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapse.html</Path>
    <Anchor>ac6ce0959e5e863442c110ff1d9dcda18</Anchor>
    <DeclaredIn>brain/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPresynapticSegmentID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapse.html</Path>
    <Anchor>a4d50278c4bf5f4193ce135fc13bb29ac</Anchor>
    <DeclaredIn>brain/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPresynapticDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapse.html</Path>
    <Anchor>a9a5897867cf026de716a6733c855fa86</Anchor>
    <DeclaredIn>brain/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPresynapticSurfacePosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapse.html</Path>
    <Anchor>ab1f518fe33a7ed3601b4b64e4ddb5576</Anchor>
    <DeclaredIn>brain/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPresynapticCenterPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapse.html</Path>
    <Anchor>a6957167ac03c78fbe2f2796e2663f784</Anchor>
    <DeclaredIn>brain/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPostsynapticGID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapse.html</Path>
    <Anchor>a885fd959cc00ee02a1ae393086531026</Anchor>
    <DeclaredIn>brain/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPostsynapticSectionID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapse.html</Path>
    <Anchor>a237a387796e24d514c06700170499372</Anchor>
    <DeclaredIn>brain/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPostsynapticSegmentID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapse.html</Path>
    <Anchor>abfb6b76358fa8376b67f024978d745b3</Anchor>
    <DeclaredIn>brain/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPostsynapticDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapse.html</Path>
    <Anchor>a3d1edfdc7066a537046b94395c6d0792</Anchor>
    <DeclaredIn>brain/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPostsynapticSurfacePosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapse.html</Path>
    <Anchor>a4f75b3379f3e670b4d342deda680920c</Anchor>
    <DeclaredIn>brain/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPostsynapticCenterPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapse.html</Path>
    <Anchor>acb2076e724d3c3acc3eba262e804c85a</Anchor>
    <DeclaredIn>brain/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDelay</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapse.html</Path>
    <Anchor>a418c93afae5e946a24af833686716e10</Anchor>
    <DeclaredIn>brain/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConductance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapse.html</Path>
    <Anchor>a3aea01a84f6d6f37bc9e1a222b1a6fed</Anchor>
    <DeclaredIn>brain/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUtilization</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapse.html</Path>
    <Anchor>a9c648e9bf1e3af529e28d58b22077c26</Anchor>
    <DeclaredIn>brain/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDepression</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapse.html</Path>
    <Anchor>a8c7a61ffe4a051d484ebde077053a2fe</Anchor>
    <DeclaredIn>brain/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFacilitation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapse.html</Path>
    <Anchor>ad8f7a5ac38526c8e4d1c82ab71728b63</Anchor>
    <DeclaredIn>brain/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDecay</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapse.html</Path>
    <Anchor>afa299136d00eb7ee7fc4fcd0175649f9</Anchor>
    <DeclaredIn>brain/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEfficacy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapse.html</Path>
    <Anchor>aeb93c7c45faad0c73ce901fe67cc4ae5</Anchor>
    <DeclaredIn>brain/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::Synapses</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Abstract>A container providing read-only access to Synapses retrieved by getXXXSynapses() functions from brain...</Abstract>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Synapses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>ac71a1ae8225861fd4cfa58a83551f668</Anchor>
    <Abstract>Frees all memory on destruction of last copy.</Abstract>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Synapses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a3dd7dc84c2a1ccda1ebf6be16dbe7005</Anchor>
    <Abstract>Conversion constructor for direct access from getXXXSynapses().</Abstract>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>ad26e4d40bf18ef55aa104df375029260</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>empty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>afe127aaf24ef6df5f18794a8cf8a3996</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a368bbc2f2663d5378ce83c548245d4fc</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a9c070d544d6b234e329f9c50c53a4ecd</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator[]</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a97e91092d06d3429064cab114e754be5</Anchor>
    <Abstract>return the Synapse at the index-th position.</Abstract>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>indices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a32c288a4363da8784e36d424a3d721af</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preGIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>acaf697596cb4bab321dbdba9736ea58f</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preSectionIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>af0d737e7883cb752f16f3f6e6113bd81</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preSegmentIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a453d590e0cc23db60990dfb11713a244</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preDistances</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a062e5131e23a53f91e524e7ffa4b91fc</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preSurfaceXPositions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a957b7571c991f3ae9e6efbbc48b15098</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preSurfaceYPositions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a03a0547e99f425552dabcb6a61ac0c23</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preSurfaceZPositions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>ad6b5c940b9a389b3d5b339be3552e90d</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preCenterXPositions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a026a96b2231d0dea7e9e9d14370c0423</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preCenterYPositions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>ade50a5a440338491ceb9334d21c8b122</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preCenterZPositions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>aca4ff0b94f801d891c701783a8d5c0e1</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postGIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a655530aa6ea79be3c2ff2b093009b535</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postSectionIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a1fae42778009c3e8426239def123393d</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postSegmentIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a1a44b75f975fac66d50db3e93ecc448d</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postDistances</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a1439d10a259abaaad098e995b6b7a884</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postSurfaceXPositions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a74454abbda83e117e5e172c63af718e5</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postSurfaceYPositions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a7e25ec4f5a3f2a0761d07f3d9d591786</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postSurfaceZPositions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a52d8fff69af945de9e5401169bf5c63a</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postCenterXPositions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>ad095a5c6ed28a32269f300a8e7339681</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postCenterYPositions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a976e02a24487a7c29cead7798ab8c3c3</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postCenterZPositions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a7e9ca4e6a98f337ce6813b5c8fd89ab4</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delays</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a9c2548850066fa3ab28b36c68af3046f</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>conductances</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>aff76711e80e0f766b289432af33d1eba</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>utilizations</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>aa487400989b27ff687c45a7f60a2ce7a</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>depressions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>ae2ef085f3ef0acb9ce3ede8ce6945b2a</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>facilitations</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a4f7d8f7c8c8d5a381fa0e26a3f1b3e29</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decays</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a87a1cae89be2ff755dd2336675ed9c98</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>efficacies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>afff4b4796d665c5ecdb9e3112efec5ea</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::Synapses::BaseImpl</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::Synapses::BaseImpl</Scope>
    </TokenIdentifier>
    <Path>structbrain_1_1_synapses_1_1_base_impl.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::SynapsesIterator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::SynapsesIterator</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses_iterator.html</Path>
    <Abstract>A forward iterator for the Synapses container.</Abstract>
    <DeclaredIn>synapsesIterator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::SynapsesStream</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::SynapsesStream</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses_stream.html</Path>
    <Abstract>A class which allows sequential and forward-only iterations through the synapses from the involved GI...</Abstract>
    <DeclaredIn>synapsesStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SynapsesStream</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses_stream.html</Path>
    <Anchor>a84d17ed7d5e2950892b85e75e375ec19</Anchor>
    <DeclaredIn>synapsesStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRemaining</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SynapsesStream</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses_stream.html</Path>
    <Anchor>afab3598593e3c954a77eaebdedbd8b01</Anchor>
    <DeclaredIn>synapsesStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SynapsesStream</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses_stream.html</Path>
    <Anchor>a6797d5dba82d6ea60cfe60ca838211d2</Anchor>
    <Abstract>Starts an asynchronous read of the data for the next fraction of synapses of the requested GIDs.</Abstract>
    <DeclaredIn>synapsesStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::Version</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_version.html</Path>
    <Abstract>Information about the current Brain version.</Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brain::Version</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_version.html</Path>
    <Anchor>a91407ad262621f2b25c4174398fa7f61</Anchor>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brain::Version</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_version.html</Path>
    <Anchor>a276cd79796e68f291ecb809b93f656d0</Anchor>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brain::Version</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_version.html</Path>
    <Anchor>a0cb8e05a1caccacf4eff6cf82b760cdf</Anchor>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brain::Version</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_version.html</Path>
    <Anchor>a24ea5374f707688abcc431d380bd8109</Anchor>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brain::Version</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_version.html</Path>
    <Anchor>afbc17aacb199a42ca23b5a4a17df9615</Anchor>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brain::Version</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_version.html</Path>
    <Anchor>a8b48e21632ecfa1cf41397bf44ae85eb</Anchor>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brain::Version</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_version.html</Path>
    <Anchor>a7f55ce56cbfa739ce329161583a0f5ef</Anchor>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brain::Version</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_version.html</Path>
    <Anchor>aac35171c72a47a9ccd35c7e0d2ef29b5</Anchor>
    <Abstract>Runtime check for ABI compatibility.</Abstract>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSchema</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brain::Version</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_version.html</Path>
    <Anchor>a0021a79d6d45b29ded0d7bdce890ce0e</Anchor>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toJSON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brain::Version</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_version.html</Path>
    <Anchor>a02712f5fb5e479153827acb235bb59d4</Anchor>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::neuron</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>brain::neuron</Scope>
    </TokenIdentifier>
    <Path>namespacebrain_1_1neuron.html</Path>
    <Abstract>High-level interface to neuron morphologies.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::neuron::Morphology</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Abstract>Wrapper around brion::Morphology with higher level functions.</Abstract>
    <DeclaredIn>morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Morphology</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Anchor>ad00e9441cb95fa2262e28c8717decccc</Anchor>
    <Abstract>Create a morphology from a URI and load all the data.</Abstract>
    <DeclaredIn>brain/neuron/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Morphology</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Anchor>ac554c1df7bac1fd79b26e875bf9b3871</Anchor>
    <Abstract>Create a morphology from a URI, load all the data and transform the points.</Abstract>
    <DeclaredIn>brain/neuron/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Morphology</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Anchor>a34f205916d2b3b89288414ea1ee1c03c</Anchor>
    <Abstract>Create a morphology from a brion::Morphology and load all the data.</Abstract>
    <DeclaredIn>brain/neuron/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Morphology</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Anchor>ac38d721290e01bc08e2e76587b86ad4d</Anchor>
    <Abstract>Create a morphology from a brion::Morphology, load all the data and transform the points.</Abstract>
    <DeclaredIn>brain/neuron/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Anchor>a9e7036350d58e406eef939572f04ad9f</Anchor>
    <DeclaredIn>brain/neuron/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Anchor>a0bd74bf2ed724214d11cfec8bc32d1cf</Anchor>
    <DeclaredIn>brain/neuron/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSectionTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Anchor>a16e6a997720b21da447f228432d91be3</Anchor>
    <DeclaredIn>brain/neuron/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSectionIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Anchor>a6340e9981a05f820a10d5be9c91f963e</Anchor>
    <Abstract>Return the list of ids for the given section types.</Abstract>
    <DeclaredIn>brain/neuron/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Anchor>a58e2fda3f603fc3f488c726ee8b8181a</Anchor>
    <Abstract>Return the sections which have the given section type.</Abstract>
    <DeclaredIn>brain/neuron/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Anchor>abb5bbfb596f8586ec425de63979dd66a</Anchor>
    <Abstract>Return the sections which have any of the given section types.</Abstract>
    <DeclaredIn>brain/neuron/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Anchor>ad8cbfaccd9c0ad7c66de58ddd77dab5d</Anchor>
    <Abstract>Return the Section with the given id.</Abstract>
    <DeclaredIn>brain/neuron/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSoma</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Anchor>af98a18c8d34bd04a89ef5bb84c7209b1</Anchor>
    <Abstract>Return the object with the information about the neuron soma.</Abstract>
    <DeclaredIn>brain/neuron/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTransformation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Anchor>a25c46a8874f7b86bef9c801edf99cce0</Anchor>
    <Abstract>Returnthe transformation that was passed to the constructor or the identity matrix is no transformati...</Abstract>
    <DeclaredIn>brain/neuron/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBoundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Anchor>a2d183d09c1e4e0d842d6f1e7dcf92d26</Anchor>
    <DeclaredIn>brain/neuron/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::neuron::Section</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::neuron::Section</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_section.html</Path>
    <Abstract>A class to represent a morphological section.</Abstract>
    <DeclaredIn>section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Section</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_section.html</Path>
    <Anchor>aa3866693938bde88bf1caca39a2338c6</Anchor>
    <Abstract>Return the ID of this section.</Abstract>
    <DeclaredIn>section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Section</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_section.html</Path>
    <Anchor>a71b92b1179d3a831eaf9942205d2a434</Anchor>
    <Abstract>Return the morphological type of this section (dendrite, axon, ...).</Abstract>
    <DeclaredIn>section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Section</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_section.html</Path>
    <Anchor>af2c96d3738d98775bb37405ee7ec7478</Anchor>
    <Abstract>Return the total length of this section in microns.</Abstract>
    <DeclaredIn>section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Section</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_section.html</Path>
    <Anchor>a2d2e14520d892b9fdc49ee7c1506d30d</Anchor>
    <Abstract>Return the list of all point samples that define this section.</Abstract>
    <DeclaredIn>section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator[]</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Section</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_section.html</Path>
    <Anchor>abe603b85d6a9c5e616c10f18a9466871</Anchor>
    <Abstract>Return the sample at a given position.</Abstract>
    <DeclaredIn>section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Section</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_section.html</Path>
    <Anchor>aed51a2414d2090e00baed310606cbd54</Anchor>
    <Abstract>Return the number of samples of this section.</Abstract>
    <DeclaredIn>section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Section</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_section.html</Path>
    <Anchor>a09beb40f4de08e11c70a40b81d5ad30b</Anchor>
    <Abstract>Return a list of points sampling this section at discrete locations.</Abstract>
    <DeclaredIn>section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDistanceToSoma</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Section</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_section.html</Path>
    <Anchor>aad5714c21facb8ba17f4019d694594be</Anchor>
    <Abstract>Return the absolute distance from the start of the section to the soma.</Abstract>
    <DeclaredIn>section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSampleDistancesToSoma</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Section</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_section.html</Path>
    <Anchor>ab9c8b39df87543d850e171614ff4f2e2</Anchor>
    <Abstract>Return the absolute distances to the soma in microns for all sample positions.</Abstract>
    <DeclaredIn>section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Section</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_section.html</Path>
    <Anchor>a0095b769c21c5eaa231f37e475954f33</Anchor>
    <Abstract>Return true if this section has a parent section, false otherwise.</Abstract>
    <DeclaredIn>section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Section</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_section.html</Path>
    <Anchor>a7dcee2730cab84ea89086935688414fa</Anchor>
    <Abstract>Return the parent section of this section.</Abstract>
    <DeclaredIn>section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChildren</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Section</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_section.html</Path>
    <Anchor>a341579a75c68f401d8edb3c48c7c26fd</Anchor>
    <Abstract>Return a vector with all the direct children of this section.</Abstract>
    <DeclaredIn>section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::neuron::Soma</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::neuron::Soma</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_soma.html</Path>
    <Abstract>A class to represent a neuron soma.</Abstract>
    <DeclaredIn>soma.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProfilePoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Soma</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_soma.html</Path>
    <Anchor>afe9b25f9ec2bb1d5e01de9511496c5fd</Anchor>
    <Abstract>Return the x,y,z and radius of the points of the soma profile.</Abstract>
    <DeclaredIn>soma.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMeanRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Soma</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_soma.html</Path>
    <Anchor>af88e3c1ce8df5aa60866a0870c104dbe</Anchor>
    <Abstract>Return the mean distance between the profile points and the centroid.</Abstract>
    <DeclaredIn>soma.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Soma</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_soma.html</Path>
    <Anchor>aabc4173ac6b1a91ab99dbc10acc6dfe3</Anchor>
    <Abstract>Return the max distance between any profile point to the centroid.</Abstract>
    <DeclaredIn>soma.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCentroid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Soma</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_soma.html</Path>
    <Anchor>afbb3b43246e589a2cb65b875f3854375</Anchor>
    <Abstract>Return the average of the profile points.</Abstract>
    <DeclaredIn>soma.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChildren</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Soma</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_soma.html</Path>
    <Anchor>aad54ac5e0c1d26405b12ee2fe1120cec</Anchor>
    <Abstract>Return the first order sections starting from the soma.</Abstract>
    <DeclaredIn>soma.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Abstract>Blue Brain File IO classes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpikeReportInitData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>af701814b1be5579bfdd3923b534cf4f8</Anchor>
    <Abstract>Basic plugin init data for SpikeReportPlugin.</Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GIDSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>a357e1817d1c46828b8a3d2ac91f635bc</Anchor>
    <Abstract>Ordered set of GIDs of neurons.</Abstract>
    <DeclaredIn>brion/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SectionOffsets</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>a268d3accc549127a85d860c49c9bbd55</Anchor>
    <Abstract>The offset for the voltage per section for each neuron, uin64_t max for sections with no compartments...</Abstract>
    <DeclaredIn>brion/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompartmentCounts</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>a84184b855330ee09971e540d456f33da</Anchor>
    <Abstract>The number of compartments per section for each neuron.</Abstract>
    <DeclaredIn>brion/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NeuronMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>abf82853aadcb10654d3f2838a78ed9ed</Anchor>
    <Abstract>Data matrix storing NeuronAttributes for each neuron.</Abstract>
    <DeclaredIn>brion/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SynapseMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>ab4bc13477e92d9125cf9a3f81df0fe62</Anchor>
    <Abstract>Data matrix storing SynapseAttributes for each neuron.</Abstract>
    <DeclaredIn>brion/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SynapseSummaryMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>af4847fbee66c5b7005aeb91d35767b60</Anchor>
    <Abstract>Data matrix storing GID, numEfferent, numAfferent for each neuron.</Abstract>
    <DeclaredIn>brion/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Spike</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>aa5761fbfeed13e3001d6b682ecee81cf</Anchor>
    <Abstract>A spike.</Abstract>
    <DeclaredIn>brion/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpikeMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>af983412386efb45c2c18973af8d8ebf5</Anchor>
    <Abstract>A list of Spikes events per cell gid, indexed by spikes times.</Abstract>
    <DeclaredIn>brion/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>ab2e98fe0210aa6815bc153e42a734c37</Anchor>
    <Abstract>Stream out content of BlueConfig or CircuitConfig file.</Abstract>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>a0187c76d308ba70d777e58993ac9ed00</Anchor>
    <Abstract>Stream out content of target file.</Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_UNUSED</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>a17ee7a3b17c2d5b010266d860f56b3d8</Anchor>
    <Abstract>A value for undefined timestamps.</Abstract>
    <DeclaredIn>brion/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::BlueConfig</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Abstract>Read access to a BlueConfig or CircuitConfig file.</Abstract>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~BlueConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>a9f4f9b12ba5193f3cbbd16b91e26fdd8</Anchor>
    <Abstract>Close BlueConfig or CircuitConfig file.</Abstract>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BlueConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>afbac59429e4019abf307e9f415efdace</Anchor>
    <Abstract>Open given filepath to a BlueConfig or CircuitConfig for reading.</Abstract>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSectionNames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>a029b8972c75b871bcdbf11030d4c97f1</Anchor>
    <Abstract>Get names of given section type.</Abstract>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>a3f63cee11c84b4b938c9e494aa3d5bed</Anchor>
    <Abstract>Get value as string for key in given section.</Abstract>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>ae5822e63749163403ce25d06c78c2298</Anchor>
    <Abstract>Get value as type T for key in given section.</Abstract>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTargets</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>aa75a8e384086e932f921a81a5d7d3df6</Anchor>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCircuitSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>a7203a73082717b92356e573652248c29</Anchor>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSynapseSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>a7dc4c7c56d7b2bf14c992493f6a21b87</Anchor>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProjectionSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>a71e8a4c1e77c01aabad50d98bb314a4b</Anchor>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMeshSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>a337b2a24ef2a5fa264c40d3df85617e3</Anchor>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMorphologySource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>a6c535a0a4735e3941ec36d6c5eea68ad</Anchor>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getReportSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>aa6edf95f4806e69db0507ed1bc8678c2</Anchor>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSpikeSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>af794bbd57d2d406765859fb7abce1207</Anchor>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTargetSources</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>a0d7935bddfaf97ce44786c1351ebd500</Anchor>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCircuitTarget</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>a8288056a0e00e73b308433b366487f9a</Anchor>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseTarget</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>a97a46d885246d776dc0f0e5c4ba005c9</Anchor>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimestep</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>aa8d3af7331234bac4b30821536ac1276</Anchor>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>aaf062876e0c67fbb50609662f4edcb6e</Anchor>
    <Abstract>Stream out content of BlueConfig or CircuitConfig file.</Abstract>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::Circuit</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_circuit.html</Path>
    <Abstract>Read access to a Circuit file.</Abstract>
    <DeclaredIn>circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Circuit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_circuit.html</Path>
    <Anchor>a3dbdbcb1eb256932b68b2471e36374d0</Anchor>
    <Abstract>Close circuit file.</Abstract>
    <DeclaredIn>brion/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Circuit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_circuit.html</Path>
    <Anchor>af64a9ed2225c8fc2a8f34a946892c3db</Anchor>
    <Abstract>Open given filepath to a circuit file for reading.</Abstract>
    <DeclaredIn>brion/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Circuit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_circuit.html</Path>
    <Anchor>ae550b508b82967cd9b3035d960aede77</Anchor>
    <Abstract>Open given filepath to a circuit file for reading.</Abstract>
    <DeclaredIn>brion/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_circuit.html</Path>
    <Anchor>a7934bb4dc63cedacaaf8640cf7a6c5ec</Anchor>
    <Abstract>Retrieve neuron attributes for set of neurons.</Abstract>
    <DeclaredIn>brion/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumNeurons</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_circuit.html</Path>
    <Anchor>ab7c514b60ef23730342594926adf82e0</Anchor>
    <DeclaredIn>brion/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_circuit.html</Path>
    <Anchor>a6db009aca564a5807ebb50a662757eb9</Anchor>
    <Abstract>Get type information for the neurons in the circuit.</Abstract>
    <DeclaredIn>brion/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::CircuitConfig</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::CircuitConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_circuit_config.html</Path>
    <Abstract>Read access to a Sonata circuit config file.</Abstract>
    <DeclaredIn>circuitConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CircuitConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CircuitConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_circuit_config.html</Path>
    <Anchor>aee2f5f21666f1fe68340fcb2b1046df8</Anchor>
    <Abstract>Open given filepath to a circuit file for reading.</Abstract>
    <DeclaredIn>circuitConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTargetSimulator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CircuitConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_circuit_config.html</Path>
    <Anchor>ae41a33e20589b572e8f657fb6665e58a</Anchor>
    <Abstract>Return the target simulator.</Abstract>
    <DeclaredIn>circuitConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getComponentPath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CircuitConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_circuit_config.html</Path>
    <Anchor>a16e84c6d935de773c3481a359d91b047</Anchor>
    <Abstract>Return the directory of a component in the components_dir given its name.</Abstract>
    <DeclaredIn>circuitConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CircuitConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_circuit_config.html</Path>
    <Anchor>a75eef0d8c7e12c7fa18c4225b0fd97b4</Anchor>
    <Abstract>Return the list of network nodes.</Abstract>
    <DeclaredIn>circuitConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEdges</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CircuitConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_circuit_config.html</Path>
    <Anchor>a3d950a413d582df33eda2a087d5c1923</Anchor>
    <Abstract>Return the list of network edges.</Abstract>
    <DeclaredIn>circuitConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::CircuitConfig::SubnetworkFiles</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::CircuitConfig::SubnetworkFiles</Scope>
    </TokenIdentifier>
    <Path>structbrion_1_1_circuit_config_1_1_subnetwork_files.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::CompartmentReport</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Abstract>Read &amp; write access to a CompartmentReport.</Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~CompartmentReport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>aa062e1099c64f3dcde183766f07524f2</Anchor>
    <Abstract>Close compartment report.</Abstract>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompartmentReport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a1068892309907490436a2f5b23e3f252</Anchor>
    <Abstract>Open given URI to a compartment report for reading and/or writing.</Abstract>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateMapping</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a6ee6420e43db4ac5319a86b074d94ba4</Anchor>
    <Abstract>Update compartment mapping wrt the given GIDs.</Abstract>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCellCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a54014e0a35877c865910e5dd339df0a2</Anchor>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a1d79b184c35d49d81fe910f9f2aa5fe1</Anchor>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>aa26c75a5a6bbc4f7e7a58d40c1dd9f99</Anchor>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOffsets</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a32f04d6db72716096b06b9cc392f4808</Anchor>
    <Abstract>Get the current mapping of each section of each neuron in each simulation frame buffer.</Abstract>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCompartmentCounts</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>ae0ba6fe2719f83a91d435293110be78e</Anchor>
    <Abstract>Get the number of compartments for each section of each neuron provided by the GID set via updateMapp...</Abstract>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumCompartments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a6e64ae3dfc0fa88f1898518948739903</Anchor>
    <Abstract>Get the number of compartments for the given neuron.</Abstract>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStartTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>aa81482089bb41f0a1ed06750f40140c1</Anchor>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEndTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a140293e0c6859ddf46e85f1ac154093e</Anchor>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimestep</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>ad96411af5d101122a5f5ccba4cad482c</Anchor>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDataUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>ae8a483a735c8c2800e9335c77293c8dd</Anchor>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimeUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>ac8b9818fa3e27db6c8dc5b95887396e7</Anchor>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a0ba2d35680d8cd2d7ae8d2d41589cfa0</Anchor>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a95bbe9f1b1b31b7a47a78bd32d934a48</Anchor>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>ae70a6a2e2eee7b091dce5f094e742d09</Anchor>
    <Abstract>Load report values at the given time stamp.</Abstract>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a176fe4de85b24579933bdbe79eabaaf8</Anchor>
    <Abstract>Load all frames inside a given time window.</Abstract>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNeuronSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>aa205765e0e4ec295a2049d9693195c6c</Anchor>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadNeuron</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a646347366af3e0398d891e49138654bd</Anchor>
    <Abstract>Load report values for the given neuron.</Abstract>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBufferSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a8721d04fa5ef8d8b1c69b8865fcb0917</Anchor>
    <Abstract>Set the size of the stream buffer for loaded frames.</Abstract>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBufferSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a2c569318a5c6d11f3bba5b61a26942ff</Anchor>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a30882f15ba7f42ebe56e044d4a956082</Anchor>
    <Abstract>Clears all buffered frames to free memory.</Abstract>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeHeader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>af1f676daad38067f23312eba1b7cad35</Anchor>
    <Abstract>Write the header information of this report.</Abstract>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeCompartments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a5bd85b1c9847c5800215e4bb8aeda1eb</Anchor>
    <Abstract>Write the compartment counts for each section for one cell.</Abstract>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a99d8f094705905a7e3ba82148f2e1edf</Anchor>
    <Abstract>Write the values for one cell at a point in time.</Abstract>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a1f2be41d8aa1adf6c13c1b2511d7fe50</Anchor>
    <Abstract>Write the values for multiple cells at a point in time.</Abstract>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>aada18371df36d46de253b2df4495ecb5</Anchor>
    <Abstract>Flush data to output.</Abstract>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>erase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>af8c5d7918256836a01754294ff1163d5</Anchor>
    <Abstract>Remove all data of the report from storage.</Abstract>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDescriptions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>acb895dd1b653688292796e1f2c4377e9</Anchor>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::CompartmentReportInitData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::CompartmentReportInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_init_data.html</Path>
    <Abstract>Basic plugin init data for CompartmentReportPlugin.</Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompartmentReportInitData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_init_data.html</Path>
    <Anchor>af27bd82bbe1c6298973d1f250f8ac04f</Anchor>
    <Abstract>Create a CompartmentReportInitData object given a URI, access mode and GIDs.</Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompartmentReportInitData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_init_data.html</Path>
    <Anchor>a22660bab437d169c0c588e88e07c2e1d</Anchor>
    <Abstract>Create a CompartmentReportInitData object given a URI, read access mode and no mapping requested at r...</Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_init_data.html</Path>
    <Anchor>ad5467f582414871ce016538cde2cce6d</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PluginInitData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>a2b26dd7348cc1ce830935b97079a97ef</Anchor>
    <Abstract>Create a PluginInitData object given a URI and access mode.</Abstract>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>a1850dfe1b179ebe9e9e341974af82f07</Anchor>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAccessMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>a1eb464dba3f8a6d4ccc93bc5fad69067</Anchor>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initMapping</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brion::CompartmentReportInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_init_data.html</Path>
    <Anchor>a885213014fb5e1293abc6a3832cf8dfd</Anchor>
    <Abstract>Hint to the implementation to make the data mapping available at construction or not.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::CompartmentReportPlugin</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Abstract>Base interface for compartment report readers and writers.</Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a83df88e71d0940d35721dfe6dc806e0e</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStartTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a6bc7e40758a65d6739d7dc77bac30408</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEndTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>ac0d0b98a601e2d7f277a5d8e7f9bbd95</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimestep</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>aa24fd94f0edf0cecdbfbaee9606d063d</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDataUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a6a191f3993f311a3624992ff88d3c571</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimeUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a61db21fb8152284cce8600261d01e617</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCellCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>ae8277bbf71d8b500e7bce0a27c5d12dc</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a38eaf9923df3ffdf99947211a6a381cb</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOffsets</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a6d3877f26cc06de3a3831515970a35e0</Anchor>
    <Abstract>Get the current mapping of each section of each neuron in each simulation frame buffer.</Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumCompartments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>ab0c7ad8edb0fbaf940a8d0f2b5bed494</Anchor>
    <Abstract>Get the number of compartments for the given neuron.</Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCompartmentCounts</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>af6ffd4a9f8050e38b7562f0cc431dda1</Anchor>
    <Abstract>Get the number of compartments for each section of each neuron provided by the GID set via updateMapp...</Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a70319410ff7c5db96705f61be80b0a1c</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a6b92af719503fcd97a7fe9df42da418c</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a96983cc22a68df8cae6a973a234bb61b</Anchor>
    <Abstract>Load report values at the given time stamp.</Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a4c9dffa3d7cba32005eda9d247842d7e</Anchor>
    <Abstract>Load all frames inside a given time window.</Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadNeuron</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a41605a717038dcaf70e998969250428a</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateMapping</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a979a0f56cfe3fc560eadc776dd865910</Anchor>
    <Abstract>Update compartment mapping wrt the given GIDs.</Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBufferSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>afd8862671b3a459bb0d891e96ff1ee24</Anchor>
    <Abstract>Set the size of the stream buffer for loaded frames.</Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a7fe02b55cdecf384aa1ec33aff7a3620</Anchor>
    <Abstract>Clears all buffered frames to free memory.</Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBufferSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a13bb8633d87a9e4c25369de53f26542e</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeHeader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>ae98a1abce9c55a66a4091e6632a27e2c</Anchor>
    <Abstract>Write the header information of this report.</Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeCompartments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a1ee8f2b01df7aec46ea21b8925e359eb</Anchor>
    <Abstract>Write the compartment counts for each section for one cell.</Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a172ef06d7223e75b905c3452418847f2</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>ac4442510711d677c9eef6f8b765a64aa</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a29f488ea011b60d69788eb5f28d39de8</Anchor>
    <Abstract>Flush data to output.</Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>erase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a40e2f1fbf74a169f96caaf3cf5d71091</Anchor>
    <Abstract>Remove all data of the report from storage.</Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::CsvConfig</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::CsvConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_csv_config.html</Path>
    <Abstract>Read access to a csv config file.</Abstract>
    <DeclaredIn>csvConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CsvConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CsvConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_csv_config.html</Path>
    <Anchor>a43a67f5e3286ce067b563b7e59bc6bd2</Anchor>
    <Abstract>Open given filepath to a csv file for reading.</Abstract>
    <DeclaredIn>csvConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNodeTypeIds</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CsvConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_csv_config.html</Path>
    <Anchor>a18c9ad5ef2095425a4fdd9fe6785ea04</Anchor>
    <Abstract>Returns all available node_type_id&apos;s in undefined order.</Abstract>
    <DeclaredIn>csvConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProperties</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CsvConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_csv_config.html</Path>
    <Anchor>abd92cbb3deacb0b6bbc4f0571b3db83f</Anchor>
    <Abstract>Returns all available properties in undefined order.</Abstract>
    <DeclaredIn>csvConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProperty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CsvConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_csv_config.html</Path>
    <Anchor>a028c29295419b4744ea3ed111ed7d160</Anchor>
    <Abstract>Returns the value of a property of the node_type_id.</Abstract>
    <DeclaredIn>csvConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::Frame</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::Frame</Scope>
    </TokenIdentifier>
    <Path>structbrion_1_1_frame.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::Frames</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::Frames</Scope>
    </TokenIdentifier>
    <Path>structbrion_1_1_frames.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brion::Frames</Scope>
    </TokenIdentifier>
    <Path>structbrion_1_1_frames.html</Path>
    <Anchor>a434a6ca0f8cd314ae439e27190e30d13</Anchor>
    <Abstract>The data of multiple compartment frames in a flat array.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::Mesh</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Abstract>Read &amp; write access to a Mesh file.</Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Mesh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a55332d0f5514bc5f2da06a7c7683a7d2</Anchor>
    <Abstract>Close mesh file.</Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Mesh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>ae37cce9604ced319d85b6a5a0c14fe90</Anchor>
    <Abstract>Open the given source to a mesh file for reading.</Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVersion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>afa5764c821e3b497a423a916ec16ff24</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumVertices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>ad11f2bfa879b2ddcbfde1271b740b017</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readVertices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>ad08aea83aee2daaffda69370b0f442bb</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readVertexSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a205c21ad60479a7ea060fa8b31dad48e</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readVertexDistances</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a03db076a3094737af5014a01cefa687f</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumTriangles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a83a31762d56be8edb8677a3055fdd6c3</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readTriangles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a3b58b6721ea0ef9145c0cab0fca54b5a</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readTriangleSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a3f4b3de11e98ab72ab8fc3f0d1da5e66</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readTriangleDistances</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a0a726a4125a0816a72bdb91eba4a9b2b</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTriStripLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>af18a38c9d065f5cc3cb5c025270692d7</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readTriStrip</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a3811460b44116859597dd75bd6a9686b</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumNormals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a96ede9bb18699f4ed46086dc257abdba</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readNormals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>afd26e4ab82a55f0e25e480499a16a743</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumStructures</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>ae6e715f833baf14198ea110d42389899</Anchor>
    <Abstract>Get the number of structural meshes of the given type.</Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readStructureVertices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a912ef7fad4c5ff6f6a903a91de0ef098</Anchor>
    <Abstract>Get the vertices of the given structure.</Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readStructureTriangles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a249deccab861d26677d54780d0068c09</Anchor>
    <Abstract>Get the triangles of the given structure.</Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readStructureTriStrip</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>ac044d37249c64fe8b94b92506b2b03b7</Anchor>
    <Abstract>Get the triangle strip of the given structure.</Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Mesh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>abe93f5c80142b3c65f819c40eafca775</Anchor>
    <Abstract>Open the given mesh file for write access.</Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeVertices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>aa812af0661e5f85c24956581776d0535</Anchor>
    <Abstract>Write vertices describing the surface/membrane mesh of a neuron.</Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeVertexSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a6e151efb6675540e580e66ce9747b2a3</Anchor>
    <Abstract>Write section indices for each vertex of the surface/membrane mesh.</Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeVertexDistances</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a323d2eece34198b700a7e8417446defe</Anchor>
    <Abstract>Write relative distances in the section for each vertex of the surface/membrane mesh.</Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTriangles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>aaabe742fe4f8fb784928e1b178f02d80</Anchor>
    <Abstract>Write triangles describing the surface/membrane mesh of a neuron.</Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTriangleSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a1176166ce871e285faf9703f440f4952</Anchor>
    <Abstract>Write section indices for each triangle of the surface/membrane mesh.</Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTriangleDistances</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>af1987188c851cdb5dadd8429eea631ae</Anchor>
    <Abstract>Write relative distances in the section for each triangle of the surface/membrane mesh.</Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTriStrip</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a460e23ea6d110b000459c7dad874880a</Anchor>
    <Abstract>Write triangle strip describing the surface/membrane mesh of a neuron.</Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeNormals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a5aca35c6cf7190594b9241c38d1265d0</Anchor>
    <Abstract>Write per-vertex normals for the surface/membrane mesh of a neuron.</Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeStructureVertices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a36a308a361a5a788a9e222cdee99fdc7</Anchor>
    <Abstract>Write vertices for one type of structural mesh.</Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeStructureTriangles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a6eb740ca0a36bc24f2235d1d857b03bd</Anchor>
    <Abstract>Write triangles for one type of structural mesh.</Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeStructureTriStrip</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a7dadc6750f82db506395a63839b70baf</Anchor>
    <Abstract>Write the triangle strip for one type of structural mesh.</Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a268f1c164a98bb286b5ae71e1e84ab7f</Anchor>
    <Abstract>Flush data to output.</Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::Morphology</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Abstract>Read access a Morphology file.</Abstract>
    <DeclaredIn>morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Morphology</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>acfb9f9d4db5bd0818bc3aad2f348a74a</Anchor>
    <Abstract>Close morphology file.</Abstract>
    <DeclaredIn>brion/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Morphology</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>a8d610e8ceb9d07947c2b92f778a17c9a</Anchor>
    <Abstract>Open the given source to a morphology file and parse it.</Abstract>
    <DeclaredIn>brion/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCellFamily</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>a26099648cc789967b47bc7570ec3efc5</Anchor>
    <DeclaredIn>brion/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>ae883cc73b1dd8fee4e73f48f3982d4db</Anchor>
    <Abstract>Get points of morphology, representing x,y,z coordinates + diameter.</Abstract>
    <DeclaredIn>brion/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>a8e9e1a8a46918a0b148b4c13541e9e82</Anchor>
    <Abstract>Get sections of morphology, representing section start index and index of the parent section.</Abstract>
    <DeclaredIn>brion/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSectionTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>ab165bfffdc350ce0dbe8e9602cb75287</Anchor>
    <Abstract>Get section types of morphology.</Abstract>
    <DeclaredIn>brion/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPerimeters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>a53cd088920863990571acc16578f4512</Anchor>
    <DeclaredIn>brion/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::MorphologyInitData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::MorphologyInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_init_data.html</Path>
    <Abstract>Basic plugin init data for MorphologyPlugin.</Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PluginInitData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>a2b26dd7348cc1ce830935b97079a97ef</Anchor>
    <Abstract>Create a PluginInitData object given a URI and access mode.</Abstract>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>a1850dfe1b179ebe9e9e341974af82f07</Anchor>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAccessMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>a1eb464dba3f8a6d4ccc93bc5fad69067</Anchor>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::MorphologyPlugin</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Abstract>Base interface for morphology readers plugins.</Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>a2a642ba04252ba314f1b76363a4c98a4</Anchor>
    <Abstract>Load all data of the morphology.</Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCellFamily</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>a6959e45e91404df40478085e055bc0e5</Anchor>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>a70c95b12d40d47d78d370827832474bd</Anchor>
    <Abstract>Get points of morphology, representing x,y,z coordinates + diameter.</Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>ae551d845b49f322a19868b874cbdcbad</Anchor>
    <Abstract>Get sections of morphology, representing section start index and index of the parent section.</Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSectionTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>a6d1393f3251077d8bc5b4f2b5dc18d47</Anchor>
    <Abstract>Get section types of morphology.</Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPerimeters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>aa3016ae036bb40457b4253835f0db0c3</Anchor>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::NodeGroup</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::NodeGroup</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_node_group.html</Path>
    <Abstract>A handle to a specific group of nodes in a H5 file.</Abstract>
    <DeclaredIn>nodeGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAttributeNames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::NodeGroup</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_node_group.html</Path>
    <Anchor>a56f2b01652d0a376e9774ad0356b71c6</Anchor>
    <Abstract>Return the names of all the datasets of the node group.</Abstract>
    <DeclaredIn>nodeGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDynamicParameterNames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::NodeGroup</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_node_group.html</Path>
    <Anchor>a9adae7a2511bb8890c736ebc7934bfb6</Anchor>
    <Abstract>Return the names of all the datasets in the &apos;dynamics_params&apos; group.</Abstract>
    <DeclaredIn>nodeGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumberOfNodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::NodeGroup</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_node_group.html</Path>
    <Anchor>a535ec81bd41622d13a90ee33444e189b</Anchor>
    <Abstract>Return the number of nodes in the node group.</Abstract>
    <DeclaredIn>nodeGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAttribute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::NodeGroup</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_node_group.html</Path>
    <Anchor>a981f5359edab676c8d73959040307280</Anchor>
    <Abstract>Read and return the values of the requested dataset.</Abstract>
    <DeclaredIn>nodeGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAttribute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::NodeGroup</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_node_group.html</Path>
    <Anchor>a90f6b06968a761ec01937461d30df29f</Anchor>
    <Abstract>Read and return the values of the requested dataset.</Abstract>
    <DeclaredIn>nodeGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDynamicParameter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::NodeGroup</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_node_group.html</Path>
    <Anchor>ada7aee285343c89a6d2f4e4186d4bdbb</Anchor>
    <Abstract>Read and return the values of the requested dataset in the dynamic parameters group.</Abstract>
    <DeclaredIn>nodeGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDynamicParameter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::NodeGroup</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_node_group.html</Path>
    <Anchor>ab6bc4c92aa220ff663e75f5a6d4e11b7</Anchor>
    <Abstract>Read and return the values of the requested dataset in the dynamic parameters group.</Abstract>
    <DeclaredIn>nodeGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::Nodes</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::Nodes</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_nodes.html</Path>
    <Abstract>Provides access to data in a H5 file.</Abstract>
    <DeclaredIn>nodes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Nodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Nodes</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_nodes.html</Path>
    <Anchor>ac4ad5eab4ca6599e6f3b5b0a3673914e</Anchor>
    <Abstract>Open a nodes h5 file.</Abstract>
    <DeclaredIn>nodes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPopulationNames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Nodes</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_nodes.html</Path>
    <Anchor>a9cd9f956b7750add0f3f289e3de2f2a1</Anchor>
    <Abstract>Return the name of all the children of the nodes group.</Abstract>
    <DeclaredIn>nodes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumberOfNodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Nodes</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_nodes.html</Path>
    <Anchor>a98920cb35b88a3d4caa0a2b8cea1e8f9</Anchor>
    <Abstract>Return the total number of nodes of a population.</Abstract>
    <DeclaredIn>nodes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNodeIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Nodes</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_nodes.html</Path>
    <Anchor>a962fad674454ff9afed88f43dd85689a</Anchor>
    <Abstract>Read and return the values in the node_id dataset of the requested population.</Abstract>
    <DeclaredIn>nodes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNodeGroupIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Nodes</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_nodes.html</Path>
    <Anchor>ad3d2c8ac98891101414a58fd1ea4b491</Anchor>
    <Abstract>Read and return the values in the node_group_id dataset of the requested population.</Abstract>
    <DeclaredIn>nodes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNodeGroupIndices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Nodes</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_nodes.html</Path>
    <Anchor>ae2606bd9a99adb81613a893a6effed12</Anchor>
    <Abstract>Read and return the values in the node_group_ind dataset of the requested population.</Abstract>
    <DeclaredIn>nodes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNodeTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Nodes</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_nodes.html</Path>
    <Anchor>aeea75f5f4c28d2af282934016318e69b</Anchor>
    <Abstract>Read and return the values in the node_type_id dataset of the requested population.</Abstract>
    <DeclaredIn>nodes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openGroup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Nodes</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_nodes.html</Path>
    <Anchor>a1c5203a745d495338297a87625f69ac9</Anchor>
    <Abstract>Returns a handle to a group.</Abstract>
    <DeclaredIn>nodes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::PluginInitData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Abstract>Basic plugin init data for Brion plugin classes.</Abstract>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PluginInitData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>a2b26dd7348cc1ce830935b97079a97ef</Anchor>
    <Abstract>Create a PluginInitData object given a URI and access mode.</Abstract>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>a1850dfe1b179ebe9e9e341974af82f07</Anchor>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAccessMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>a1eb464dba3f8a6d4ccc93bc5fad69067</Anchor>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::SimulationConfig</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::SimulationConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_simulation_config.html</Path>
    <Abstract>Read access to a SONATA simulation config file.</Abstract>
    <DeclaredIn>simulationConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SimulationConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SimulationConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_simulation_config.html</Path>
    <Anchor>a2f5cfb598e7e5fdbec79aed8bc7fe57c</Anchor>
    <Abstract>Open a SONATA simulation config json.</Abstract>
    <DeclaredIn>simulationConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNetworkConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SimulationConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_simulation_config.html</Path>
    <Anchor>afc1a731360751056da7b50f57f9dddc1</Anchor>
    <DeclaredIn>simulationConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNodeSetFilepath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SimulationConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_simulation_config.html</Path>
    <Anchor>a58e818010e0ec6af44986e90c1efc18a</Anchor>
    <DeclaredIn>simulationConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSpikesFilepath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SimulationConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_simulation_config.html</Path>
    <Anchor>a5fea52de6e6b401dc2d82d3285df2105</Anchor>
    <DeclaredIn>simulationConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCompartmentReportNames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SimulationConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_simulation_config.html</Path>
    <Anchor>ab376d9f6ec10c400512a65a04cffa641</Anchor>
    <DeclaredIn>simulationConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCompartmentReportFilepath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SimulationConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_simulation_config.html</Path>
    <Anchor>ab49e27fe0c5e1d6aa9035057afd3ee41</Anchor>
    <DeclaredIn>simulationConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::SpikeReport</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Abstract>Read/writes access to a spike report.</Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpikeReport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>abc848e1631c8293dbb2c0a5787656b3b</Anchor>
    <Abstract>Create a SpikeReport object given a URI.</Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpikeReport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a7eec8b54b3b74f8c21bf80a8690fa780</Anchor>
    <Abstract>Open a report in read mode with a subset selection.</Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SpikeReport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a50beeeb2c939998028f2e5e32d121364</Anchor>
    <Abstract>Release all resources.</Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a5610cfd2b4f663e5c9e6393af63a472c</Anchor>
    <Abstract>Close the report.</Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isClosed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a3e849ee19da4cef5792197534194e83a</Anchor>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>interrupt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>acad20c31f6b65356a837051ad6378fbb</Anchor>
    <Abstract>Interrupt any pending read/seek operation.</Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a2863fcd852e8c090c222cea4b41d875d</Anchor>
    <Abstract>Get the URI used to instantiate the report.</Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a537630b1ce0098e6aeadbe81f2dcc177</Anchor>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEndTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a6d2639362e9a929a9235c16ebf5ff5dd</Anchor>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a598dff309d2108cf151b5e972732aee6</Anchor>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a0cf6257a24b2e1608e0a2a2a72e3e6cf</Anchor>
    <Abstract>Read spikes until getCurrentTime becomes &gt; min, the end of the report is reached or the report closed...</Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readUntil</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a19ae7991ad9563d38d0060f43e839258</Anchor>
    <Abstract>Read spikes until getCurrentTime() &gt;= max, the end of the report is reached or the report closed.</Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>seek</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a2e1f18b9e172bec7c5aaf495f1edc590</Anchor>
    <Abstract>Seek to a given absolute timestamp.</Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>aebaf37ef98890cdcf0ca8585d035ab5f</Anchor>
    <Abstract>Write the given spikes to the output.</Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>ab8efdf2da32129eff184b9bd260b4c49</Anchor>
    <Abstract>Overload of the function above provided for convenience.</Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsBackwardSeek</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a913dfe68782fbd28118321729cde4f84</Anchor>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDescriptions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a4c0e9bb690a41e19ca9ab55da707d54f</Anchor>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::SpikeReportPlugin</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Abstract>Base interface for spike report readers plugins.</Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>a972c34269c7b114a27f01d13363bddad</Anchor>
    <Abstract>Close the report.</Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>af0beb66563d40228bff45586a9d38b65</Anchor>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readUntil</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>a705f61df9105d2a74e4b28c520fef7b7</Anchor>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readSeek</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>a700ed689f8623daf043c9969f6119f5b</Anchor>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeSeek</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>a3704d730f84499382be61afba238b63d</Anchor>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>a0b282aee72307981c842d9f4d512eecb</Anchor>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsBackwardSeek</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>a79fe1796f4892ff5d178108a04c8599a</Anchor>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::Synapse</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse.html</Path>
    <Abstract>Read access to a Synapse file.</Abstract>
    <DeclaredIn>synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Synapse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse.html</Path>
    <Anchor>a967b1d9adb7f49fbff371130291c0b7d</Anchor>
    <Abstract>Close synapse file.</Abstract>
    <DeclaredIn>brion/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Synapse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse.html</Path>
    <Anchor>afa0d5cf421b259daf8820890efe248c6</Anchor>
    <Abstract>Open the given source to a synapse file for reading.</Abstract>
    <DeclaredIn>brion/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse.html</Path>
    <Anchor>a1c6c1f5856e1213f110ba57186bdece7</Anchor>
    <Abstract>Read requested synapse attributes for a given neuron.</Abstract>
    <DeclaredIn>brion/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumSynapses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse.html</Path>
    <Anchor>a1d6c4e96ef36950c8f552bf89697abea</Anchor>
    <Abstract>Get the number of synapses for a set of neurons.</Abstract>
    <DeclaredIn>brion/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumAttributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse.html</Path>
    <Anchor>aabd0211228a72e52fbd5e92250697f65</Anchor>
    <Abstract>Return the number of columns of the synapse file.</Abstract>
    <DeclaredIn>brion/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::SynapseSummary</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::SynapseSummary</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse_summary.html</Path>
    <Abstract>Read access to a Synapse summary file.</Abstract>
    <DeclaredIn>synapseSummary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SynapseSummary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SynapseSummary</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse_summary.html</Path>
    <Anchor>a6c88b279a52cb43f3b21f958bbd4ddb7</Anchor>
    <Abstract>Close synapse summary file.</Abstract>
    <DeclaredIn>synapseSummary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SynapseSummary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SynapseSummary</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse_summary.html</Path>
    <Anchor>af20d4491231e172d332a2850fb957842</Anchor>
    <Abstract>Open the given source to a synapse summary file for reading.</Abstract>
    <DeclaredIn>synapseSummary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SynapseSummary</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse_summary.html</Path>
    <Anchor>ad02fb15f73ed16b3bd83bfcb403c1383</Anchor>
    <Abstract>Read afferent and efferent information for a given neuron.</Abstract>
    <DeclaredIn>synapseSummary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::Target</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Abstract>Read access to a Target file.</Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Target</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Anchor>a967607b68d715c7191d56cf2d19ad6ca</Anchor>
    <Abstract>Copy-construct a target file.</Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Target</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Anchor>ab8d2a8b976e2b52b4b8617edfc8e6a2f</Anchor>
    <Abstract>Close target file.</Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Anchor>a5ee36b021b1a08f7baf94651822be7fc</Anchor>
    <Abstract>Assign a different target.</Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Anchor>aea9917cbbc18242f7738a1e57ff70274</Anchor>
    <Abstract>Stream out content of target file.</Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Target</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Anchor>a2c1de15976a2e1f569b0083bb56d0480</Anchor>
    <Abstract>Open the given source to a target file for reading.</Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTargetNames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Anchor>a70e1d86514bd212312a9b4c105948d32</Anchor>
    <Abstract>Get list of targets for the desired type.</Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Anchor>a1fccbf18954cf387e113a248615abf6d</Anchor>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Anchor>a73e2ae27dcc65bd57a7ab7c4ca685ef8</Anchor>
    <Abstract>Get targets and/or GIDSet grouped by the given target.</Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Anchor>af9dfd3b852d9a457e627d05ffb5bf30c</Anchor>
    <Abstract>Parse a given target into a GID set.</Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Abstract>Information about the current Brion version.</Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>a7724662e5f6b8e067440ac22acec9657</Anchor>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>abfeb86012f499e974116645aa4682830</Anchor>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>abb649c2122bcb69b00e2485d6695fdee</Anchor>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>a100387ecec439ad9a41c6125d4584288</Anchor>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>ad3457e9ccb29f7cb33a0aaaa88db1ab2</Anchor>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>a08a68ae8561176060e77710c79cad778</Anchor>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>a0529b8442a3578b60213b46007be4624</Anchor>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>a899ec6e0102c68a690e8b9143c7908c4</Anchor>
    <Abstract>Runtime check for ABI compatibility.</Abstract>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSchema</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>a1d222a0670a0df9f7b70415ec501602a</Anchor>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toJSON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>a4852c8bfeec845a82718d1a42250c16a</Anchor>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
</Tokens>
