<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_MAJOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>aa5be9a4351e20d44fa19574e589b2fb3</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_MINOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>aa5a2357f391cbb650d1d8894ee1b526f</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_PATCH</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>ab7df48db132552459d856511d31fec71</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_REVISION</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a6044ab3ac01614da058254ed01b5b206</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_ABI</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a7920884b61851f5f7492f448ee8bc30a</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_GT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>abee87c6b068f71dfee25e4b4d4fdb895</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_GE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a6495e508830bd2e12d505b21434ef9f2</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_LT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a33790ddcc603c8ba7cbcfef89e90db81</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_LE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>afb3327bd79d35ba861a0be60539a4264</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Changelog</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>_changelog.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deprecated</Name>
      <APILanguage>unknown</APILanguage>
    </TokenIdentifier>
    <Path>deprecated.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Abstract>Blue Brain File IO classes. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpikeReportInitData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>ae803e97552b924df5757628e373f50ea</Anchor>
    <Abstract>Basic plugin init data for SpikeReportPlugin. </Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Vector2i</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>ad2aa6bae5628f7f09d353420c9405dec</Anchor>
    <Abstract>A two-component int32 vector. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Vector3f</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>af39b3f0ba01184cd1827858efd173c3c</Anchor>
    <Abstract>A three-component float vector. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Vector4f</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>a3609af2e00705df10f6bcf386519dba4</Anchor>
    <Abstract>A four-component float vector. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Vector3d</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>a839a29dd91d9092c89c16aa3b48ede19</Anchor>
    <Abstract>A three-component double vector. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Vector4d</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>a191f403fbfd194926ec34381f5d53adf</Anchor>
    <Abstract>A four-component double vector. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GIDSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>a0f53c74f86d04c704c228013a096ef72</Anchor>
    <Abstract>Ordered set of GIDs of neurons. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SectionOffsets</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>ac06093ac5c7a805bfa44af444188a2a8</Anchor>
    <Abstract>The offset for the voltage per section for each neuron, uin64_t max for sections with no compartments...</Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompartmentCounts</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>ab990cd6483c3e4237375b0b8098b2f42</Anchor>
    <Abstract>The number of compartments per section for each neuron. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NeuronMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>ab1f9b96868836e9d2bcb7ac14d04ae59</Anchor>
    <Abstract>Data matrix storing NeuronAttributes for each neuron. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SynapseMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>aaf229f5bbc92e020d24f6e92b15cd45b</Anchor>
    <Abstract>Data matrix storing SynapseAttributes for each neuron. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SynapseSummaryMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>a8cf594eaf64c24b377d0b47bfabab145</Anchor>
    <Abstract>Data matrix storing GID, numEfferent, numAfferent for each neuron. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Spikes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>a3024f035dc7ae61a265392d2a0b580c5</Anchor>
    <Abstract>A list of Spikes events per cell gid, indexed by spikes times. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Spike</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>a9967e859937226870c81c8fc786cf2be</Anchor>
    <Abstract>A spike. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>ab2e98fe0210aa6815bc153e42a734c37</Anchor>
    <Abstract>Stream out content of BlueConfig or CircuitConfig file. </Abstract>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>a0187c76d308ba70d777e58993ac9ed00</Anchor>
    <Abstract>Stream out content of target file. </Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UNDEFINED_TIMESTAMP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>ad046cead8718797e24e848ba108d0160</Anchor>
    <Abstract>A value for undefined timestamps. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RESTING_VOLTAGE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>a8ae1d136d8ee3a42852723c5d323b9f7</Anchor>
    <Abstract>Resting voltage in mV. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MINIMUM_VOLTAGE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>a5bd25464986914e035b86467e29dee94</Anchor>
    <Abstract>Lowest voltage after hyperpolarisation. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::BlueConfig</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Abstract>Read access to a BlueConfig or CircuitConfig file. </Abstract>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~BlueConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>a4b99cc55c8f4ab8c116df3c246576417</Anchor>
    <Abstract>Close BlueConfig or CircuitConfig file. </Abstract>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BlueConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>ac50d4ce78c43aacde4a6e2cabc9c6bbc</Anchor>
    <Abstract>Open given filepath to a BlueConfig or CircuitConfig for reading. </Abstract>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSectionNames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>aa17ab8177d0013430986996612934386</Anchor>
    <Abstract>Get names of given section type. </Abstract>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>a2a059604b31f822cae2d6f3b8f3bff83</Anchor>
    <Abstract>Get value as string for key in given section. </Abstract>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>aa58d9cf3d2a4462939a5a0586bbf7008</Anchor>
    <Abstract>Get value as type T for key in given section. </Abstract>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>aaf062876e0c67fbb50609662f4edcb6e</Anchor>
    <Abstract>Stream out content of BlueConfig or CircuitConfig file. </Abstract>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::Circuit</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_circuit.html</Path>
    <Abstract>Read access to a Circuit file. </Abstract>
    <DeclaredIn>circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Circuit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_circuit.html</Path>
    <Anchor>af0a3ffe1db7fe2ff936de40dfd636eb2</Anchor>
    <Abstract>Close circuit file. </Abstract>
    <DeclaredIn>circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Circuit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_circuit.html</Path>
    <Anchor>adf12bf29fc96c7b984c452957d9f4db8</Anchor>
    <Abstract>Open given filepath to a circuit file for reading. </Abstract>
    <DeclaredIn>circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_circuit.html</Path>
    <Anchor>a0c1c9ebae56e67ecc2a2ae5e53cdb9ff</Anchor>
    <Abstract>Retrieve neuron attributes for set of neurons. </Abstract>
    <DeclaredIn>circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumNeurons</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_circuit.html</Path>
    <Anchor>aac2a0d9c330518943c9741e00238b46d</Anchor>
    <DeclaredIn>circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_circuit.html</Path>
    <Anchor>a4c5a8c5b69236c7cec0dd9d98399ddf1</Anchor>
    <Abstract>Get type information for the neurons in the circuit. </Abstract>
    <DeclaredIn>circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::CompartmentReport</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Abstract>Read &amp;amp; write access to a CompartmentReport. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~CompartmentReport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a75438ca9c9b8535329c65a9d48314df0</Anchor>
    <Abstract>Close compartment report. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompartmentReport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a23343c9fe86017c344008ae99c9237e4</Anchor>
    <Abstract>Open given URI to a compartment report for reading and/or writing. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompartmentReport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a25df7b3845ad1db1783088b0822cd117</Anchor>
    <Abstract>Open given source to a compartment report for reading. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateMapping</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a185bb4c6b32beefef38f9c3f51f0318f</Anchor>
    <Abstract>Update compartment mapping wrt the given GIDs. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>af99ca92533b07433e98b2c10fd869e1d</Anchor>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOffsets</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a0823118a3996386c54b108d3dd7f8645</Anchor>
    <Abstract>Get the current mapping of each section of each neuron in each simulation frame buffer. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCompartmentCounts</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>aa47ce40af03d7a5ff9467ba0f758c42b</Anchor>
    <Abstract>Get the number of compartments for each section of each neuron provided by the GID set via updateMapp...</Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumCompartments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>aca7b5fbc1afdac3f6318002064238fba</Anchor>
    <Abstract>Get the number of compartments for the given neuron. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStartTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>aa52c8ac13142c65a2126eaa8893acd0a</Anchor>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEndTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a59548ba04413f404598b1c5f866c2404</Anchor>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimestep</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a29f23f5e48b2b776b90d74e90118b961</Anchor>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDataUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>affc092b6b299b1bf27428aedff79b371</Anchor>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimeUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>afaae51ed5455bf1b9c289efbc12b0ced</Anchor>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a177e4d7f5d97c80ee3a30b51f0bbe834</Anchor>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a5eadfebbed0d9c5fb22e792c0fc20bee</Anchor>
    <Abstract>Load report values at the given time stamp. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBufferSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a04044039ac1c1aa8cfa9fef55e7feb83</Anchor>
    <Abstract>Set the size of the stream buffer for loaded frames. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBufferSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>acaeadedbc376506fbd1ecef8d139f726</Anchor>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a72ce863bdab0d2a0409304d4ad521213</Anchor>
    <Abstract>Clears all buffered frames to free memory. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompartmentReport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a2fc6c22b81d169da50ce43f706734323</Anchor>
    <Abstract>Open given source to a compartment report for writing. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeHeader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>afb7ca34ba8401955119abde1d4f59114</Anchor>
    <Abstract>Write the header information of this report. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeCompartments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>af0f59a882b8947fa465c0e206a8fe0e9</Anchor>
    <Abstract>Write the compartment counts for each section for one cell. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a327a28a0a7133b2458b84068386c4d1f</Anchor>
    <Abstract>Write the voltages for one cell at a point in time. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a86ef676c94591aef19271f608fe4f772</Anchor>
    <Abstract>Flush data to output. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::CompartmentReportInitData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::CompartmentReportInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_init_data.html</Path>
    <Abstract>Basic plugin init data for CompartmentReportPlugin. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompartmentReportInitData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_init_data.html</Path>
    <Anchor>a7b704f74430159dfb39effb4a83b5c20</Anchor>
    <Abstract>Create a CompartmentReportInitData object given a URI, access mode and GIDs. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGids</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_init_data.html</Path>
    <Anchor>a62cbdfafa3bd2a3bdcf7f4ad5c503285</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PluginInitData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>a1650dcd4a119693bed903422e4a9cac6</Anchor>
    <Abstract>Create a PluginInitData object given a URI and access mode. </Abstract>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>a3d0fb1d5cec4f9f119c10776be47f183</Anchor>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAccessMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>ac110912b104b28967b171f2065fbb93f</Anchor>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::CompartmentReportPlugin</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Abstract>Base interface for compartment report readers and writers. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStartTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a77d7425864f7419f4773f88a16aa26da</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEndTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a1985f5b329183f6b04526ba76c97e0af</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimestep</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>ae71ced93bc847ec7d69040e5d9451bd7</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDataUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a6a191f3993f311a3624992ff88d3c571</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimeUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a61db21fb8152284cce8600261d01e617</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a38eaf9923df3ffdf99947211a6a381cb</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOffsets</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a6d3877f26cc06de3a3831515970a35e0</Anchor>
    <Abstract>Get the current mapping of each section of each neuron in each simulation frame buffer. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumCompartments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>ab0c7ad8edb0fbaf940a8d0f2b5bed494</Anchor>
    <Abstract>Get the number of compartments for the given neuron. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCompartmentCounts</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>af6ffd4a9f8050e38b7562f0cc431dda1</Anchor>
    <Abstract>Get the number of compartments for each section of each neuron provided by the GID set via updateMapp...</Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a70319410ff7c5db96705f61be80b0a1c</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a718d93da31bc390be4cf86df7468afdb</Anchor>
    <Abstract>Load report values at the given time stamp. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateMapping</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a979a0f56cfe3fc560eadc776dd865910</Anchor>
    <Abstract>Update compartment mapping wrt the given GIDs. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBufferSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>afd8862671b3a459bb0d891e96ff1ee24</Anchor>
    <Abstract>Set the size of the stream buffer for loaded frames. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a7fe02b55cdecf384aa1ec33aff7a3620</Anchor>
    <Abstract>Clears all buffered frames to free memory. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBufferSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>ab8a1a38a2cc4ecbd0b8a55285a61545d</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeHeader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a1f4097c67462043601b6736e9c349706</Anchor>
    <Abstract>Write the header information of this report. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeCompartments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a1ee8f2b01df7aec46ea21b8925e359eb</Anchor>
    <Abstract>Write the compartment counts for each section for one cell. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a1a6d819ba11597e9e5b56a4b2684c634</Anchor>
    <Abstract>Write the voltages for one cell at a point in time. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a29f488ea011b60d69788eb5f28d39de8</Anchor>
    <Abstract>Flush data to output. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::Mesh</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Abstract>Read &amp;amp; write access to a Mesh file. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Mesh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a8979d77e9aef165118f9cd0146d8eca3</Anchor>
    <Abstract>Close mesh file. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Mesh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a06738696f429d60d5b47b957f36f1d27</Anchor>
    <Abstract>Open the given source to a mesh file for reading. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVersion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>aecf427d45daf2b1e30075d474a8494d1</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumVertices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a37fe1c535f47a9eac3f3453b6ae3ffe5</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readVertices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a6b473d7b27c9f9a5f264ea7020428c86</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readVertexSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>ae310081c8b4485a8a40a633c6ac08b44</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readVertexDistances</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>ab5a0430e79313e2e0fed4663685360ce</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumTriangles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a79571c09888f61b5897bdd0d3084a7c8</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readTriangles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a514a5479493706e9bf6a21f62002e7ee</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readTriangleSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>ad3d95ab4967c48f4cbb6cc85f78abc60</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readTriangleDistances</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a85b50ec09c637909f59397e1a249929f</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTriStripLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a486a67201381e0a29cf612cf259691c0</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readTriStrip</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a091aaa4eb40c606267525428b4d49f88</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumNormals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a7ffc329ef74667a930bd3bd919f4df0e</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readNormals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a48a13ae9bb7af1dfbf540d9c95c52988</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumStructures</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a61d082770dc2a94c095514ed08713133</Anchor>
    <Abstract>Get the number of structural meshes of the given type. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readStructureVertices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a38c964f818e3a84db6ee81652d3db91b</Anchor>
    <Abstract>Get the vertices of the given structure. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readStructureTriangles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>ab51ca65381e68b9c7ee875d5e4b644c6</Anchor>
    <Abstract>Get the triangles of the given structure. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readStructureTriStrip</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a58506438c0194e36618439f78308366b</Anchor>
    <Abstract>Get the triangle strip of the given structure. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Mesh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a03948d74c0c35fded0ec4e6e813d7a8c</Anchor>
    <Abstract>Open the given mesh file for write access. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeVertices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>ae38ad9ae626184efb6620ce4538c862b</Anchor>
    <Abstract>Write vertices describing the surface/membrane mesh of a neuron. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeVertexSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a0ef75e0469c41456ea539ed2fb072cf9</Anchor>
    <Abstract>Write section indices for each vertex of the surface/membrane mesh. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeVertexDistances</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>aaddb86abce24a56f1a4c7b21b8af5d8d</Anchor>
    <Abstract>Write relative distances in the section for each vertex of the surface/membrane mesh. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTriangles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a29964d497989e5dce86a2da5a101fe04</Anchor>
    <Abstract>Write triangles describing the surface/membrane mesh of a neuron. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTriangleSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a0301ffd0c0cbe732236a601cbfb966d0</Anchor>
    <Abstract>Write section indices for each triangle of the surface/membrane mesh. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTriangleDistances</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>abcb439f010f294c892b17597a4017613</Anchor>
    <Abstract>Write relative distances in the section for each triangle of the surface/membrane mesh...</Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTriStrip</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a7ab38e24f8739c0afcbd308ba11af3f5</Anchor>
    <Abstract>Write triangle strip describing the surface/membrane mesh of a neuron. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeNormals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>ad0084f6ab8108bf11140b306e5e3f38b</Anchor>
    <Abstract>Write per-vertex normals for the surface/membrane mesh of a neuron. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeStructureVertices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>aec146903a50c96102f15c2a76d5f5bd1</Anchor>
    <Abstract>Write vertices for one type of structural mesh. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeStructureTriangles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a9439ee23338aca370620a11ef36d695c</Anchor>
    <Abstract>Write triangles for one type of structural mesh. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeStructureTriStrip</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>ab8cac81ed7a7aa32bafdecad04924511</Anchor>
    <Abstract>Write the triangle strip for one type of structural mesh. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a2f9fcbe7746f9cf43b79b905080274ec</Anchor>
    <Abstract>Flush data to output. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::Morphology</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Abstract>Read &amp;amp; write access to a Morphology file. </Abstract>
    <DeclaredIn>morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Morphology</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>a4bda716dc944518623308e1eeaf8dd68</Anchor>
    <Abstract>Close morphology file. </Abstract>
    <DeclaredIn>morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Morphology</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>a43546ff43169a20d860153afaf34ae7f</Anchor>
    <Abstract>Open the given source to a morphology file for reading. </Abstract>
    <DeclaredIn>morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readPoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>a0892fe1ffb72fac54b1154745f34ec85</Anchor>
    <Abstract>Read points of morphology, representing x,y,z coordinates + diameter. </Abstract>
    <DeclaredIn>morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>a7241496b40b60affe9acdc623cf23b54</Anchor>
    <Abstract>Read sections of morphology, representing section start index and index of the parent section...</Abstract>
    <DeclaredIn>morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readSectionTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>a7daee747bef16ffd45ebc57e3c6c0283</Anchor>
    <Abstract>Read section types of morphology. </Abstract>
    <DeclaredIn>morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readApicals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>a98cc85f9ca95c85d97303d2ffcd33452</Anchor>
    <Abstract>Read apical points of morphology, representing section and point index. </Abstract>
    <DeclaredIn>morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Morphology</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>a01d0d2e44400d4917e5c394856ea987e</Anchor>
    <Abstract>Open the given morphology file for write access. </Abstract>
    <DeclaredIn>morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writePoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>a81709a9199dd50e12b0ec44b84822c2d</Anchor>
    <Abstract>Write points of morphology, representing x,y,z coordinates + diameter. </Abstract>
    <DeclaredIn>morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>a69a8e46bbf5f505a132f4cda7d277f7b</Anchor>
    <Abstract>Write sections of morphology, representing section start index and index of parent the section...</Abstract>
    <DeclaredIn>morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeSectionTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>afeeccf361ee6782ef8632034007a06e4</Anchor>
    <Abstract>Write section types of morphology. </Abstract>
    <DeclaredIn>morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeApicals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>aa92ae9181273de941a5df5dce63492d9</Anchor>
    <Abstract>Write apical points of morphology, representing section and point index. </Abstract>
    <DeclaredIn>morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>a0b9d22e6ceb3530608cd16f1b651eab3</Anchor>
    <Abstract>Flush data to output. </Abstract>
    <DeclaredIn>morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::MorphologyInitData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::MorphologyInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_init_data.html</Path>
    <Abstract>Basic plugin init data for MorphologyPlugin. </Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PluginInitData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>a1650dcd4a119693bed903422e4a9cac6</Anchor>
    <Abstract>Create a PluginInitData object given a URI and access mode. </Abstract>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>a3d0fb1d5cec4f9f119c10776be47f183</Anchor>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAccessMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>ac110912b104b28967b171f2065fbb93f</Anchor>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::MorphologyPlugin</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Abstract>Base interface for morphology readers plugins. </Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readPoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>a981eb1b3077076874e4fe276dccbc064</Anchor>
    <Abstract>Read points of morphology, representing x,y,z coordinates + diameter. </Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>a5820e211cda2689b7e83b13d2d32c00d</Anchor>
    <Abstract>Read sections of morphology, representing section start index and index of the parent section...</Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readSectionTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>aa463ab7bb4ac29fe22fcaf095913dc4b</Anchor>
    <Abstract>Read section types of morphology. </Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readApicals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>ad33e4fa8fc3e5b55613a958b82327d6f</Anchor>
    <Abstract>Read apical points of morphology, representing section and point index. </Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writePoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>a66b542efcf23d913e49ce4489e314ef4</Anchor>
    <Abstract>Write points of morphology, representing x,y,z coordinates + diameter. </Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>aeb554f30f9d08646bc6af7120dd2479e</Anchor>
    <Abstract>Write sections of morphology, representing section start index and index of parent the section...</Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeSectionTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>ab83fc61f7379ea0ffc5b7c2c26db49df</Anchor>
    <Abstract>Write section types of morphology. </Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeApicals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>af21f35f221ca068d5cca1a418ac0359a</Anchor>
    <Abstract>Write apical points of morphology, representing section and point index. </Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>a7e46021d144fc5dad9faa3e23ea0b20d</Anchor>
    <Abstract>Flush data to output. </Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::PluginInitData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Abstract>Basic plugin init data for Brion plugin classes. </Abstract>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PluginInitData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>a1650dcd4a119693bed903422e4a9cac6</Anchor>
    <Abstract>Create a PluginInitData object given a URI and access mode. </Abstract>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>a3d0fb1d5cec4f9f119c10776be47f183</Anchor>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAccessMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>ac110912b104b28967b171f2065fbb93f</Anchor>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::SpikeReport</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Abstract>Read access to a SpikeReport. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpikeReport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a5caf7d25b6ba64e7643f6f91a2f0d2ef</Anchor>
    <Abstract>Create a SpikeReport object given a URI. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SpikeReport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a0350751f81baae76a23fcce4a6296cba</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a6f1cda95189e96c42e26deef13230764</Anchor>
    <Abstract>Get the URI used to instantiate the report. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getReadMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a1d8433ac94a00362728fdd8c6604b62e</Anchor>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStartTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>aeb593fe0eba5812e7ab75cedb016feb8</Anchor>
    <Abstract>Get the time of the first spike. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEndTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a8cc88e0d4bba56722daf39751cc5a820</Anchor>
    <Abstract>Get the time of the last spike. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSpikes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a5b1bb499244e474249dd178b067b0a00</Anchor>
    <Abstract>Get the spike times and cell GIDs. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeSpikes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a7c9b3ea51565b9aaf8443c28e6320c94</Anchor>
    <Abstract>Writes the spike times and cell GIDs. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitUntil</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>acb3f3cbae66c0e037d4f473e50546ed6</Anchor>
    <Abstract>Lock the caller until the first spike past the given time stamp arrives or the network stream is clos...</Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNextSpikeTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a0f89dc686cabf7c1f5d5c831941ec891</Anchor>
    <Abstract>Return the time of the next spike available in the internal cache. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLatestSpikeTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a59371a26be6141fce673bebadbb9b550</Anchor>
    <Abstract>Return the time of the latest spike that has been received. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>abdaa95494c37485932d2e344c5f808e8</Anchor>
    <Abstract>Remove all spikes contained in the given time interval. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>af668fcbc29024836d4380e8f0aa92ffe</Anchor>
    <Abstract>Closes the report. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::SpikeReportPlugin</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Abstract>Base interface for spike report readers plugins. </Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStartTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>a1b6399cd2a6908a7d03702f8cccd4960</Anchor>
    <Abstract>Get the time of the first spike. </Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEndTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>a7c9a9c757ca45b8403ab4fab1ea4bf39</Anchor>
    <Abstract>Get the time of the last spike. </Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSpikes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>a3c4a4b6a329d48dc31a73e5dd67fb654</Anchor>
    <Abstract>Get the spike times and cell GIDs. </Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeSpikes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>a9ed9e0c1033d5bd8461d120455617772</Anchor>
    <Abstract>Writes the spike times and cell GIDs. </Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>ac25b2bc53eefe5967167d5e518bd1959</Anchor>
    <Abstract>Get the URI used to instantiate the report. </Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getReadMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>af685b14b98ad2d97e7da5e38e68253fe</Anchor>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitUntil</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>a1d2cc5654162e27e0de67ef6b1c8806b</Anchor>
    <Abstract>Lock the caller until the first spike past the given time stamp arrives or the network stream is clos...</Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNextSpikeTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>ab0c9e3bab16d3d4c3c5ef7e321b09102</Anchor>
    <Abstract>Return the time of the next spike available in the internal cache. </Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLatestSpikeTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>a16aa3b104dea9a4ce36bc75345c7bbbf</Anchor>
    <Abstract>Return the time of the next spike available in the internal cache. </Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>a8da9693509c7ad057f28c7bb7c4780e2</Anchor>
    <Abstract>Remove all spikes contained in the given time interval. </Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>a972c34269c7b114a27f01d13363bddad</Anchor>
    <Abstract>Closes the report. </Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::Synapse</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse.html</Path>
    <Abstract>Read access to a Synapse file. </Abstract>
    <DeclaredIn>synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Synapse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse.html</Path>
    <Anchor>a3899f6c453ed63175a9723b2eeb5042e</Anchor>
    <Abstract>Close synapse file. </Abstract>
    <DeclaredIn>synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Synapse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse.html</Path>
    <Anchor>acc843e6990d9eda2dd386ca010b8e940</Anchor>
    <Abstract>Open the given source to a synapse file for reading. </Abstract>
    <DeclaredIn>synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse.html</Path>
    <Anchor>a1246eed12d13bf0e7ea5e23c101211a6</Anchor>
    <Abstract>Read requested synapse attributes for a given neuron. </Abstract>
    <DeclaredIn>synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumSynapses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse.html</Path>
    <Anchor>a75004a032fe22df752a890d2f2b2b02f</Anchor>
    <Abstract>Get the number of synapses for a set of neurons. </Abstract>
    <DeclaredIn>synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::SynapseSummary</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::SynapseSummary</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse_summary.html</Path>
    <Abstract>Read access to a Synapse summary file. </Abstract>
    <DeclaredIn>synapseSummary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SynapseSummary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SynapseSummary</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse_summary.html</Path>
    <Anchor>a9d789e850d2352e5585fc39aecabb6ee</Anchor>
    <Abstract>Close synapse summary file. </Abstract>
    <DeclaredIn>synapseSummary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SynapseSummary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SynapseSummary</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse_summary.html</Path>
    <Anchor>a33996496212143bc0daab195628bac08</Anchor>
    <Abstract>Open the given source to a synapse summary file for reading. </Abstract>
    <DeclaredIn>synapseSummary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SynapseSummary</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse_summary.html</Path>
    <Anchor>adaaac9919911de8d0e8c96fc83b7d958</Anchor>
    <Abstract>Read afferent and efferent information for a given neuron. </Abstract>
    <DeclaredIn>synapseSummary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::Target</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Abstract>Read access to a Target file. </Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Target</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Anchor>a895cb82ac9f73b5dc3e10ea06600c943</Anchor>
    <Abstract>Copy-construct a target file. </Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Target</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Anchor>a9ca17985cde5f2fec0a2a337af5c1dd9</Anchor>
    <Abstract>Close target file. </Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Anchor>ac5c7287fa10eef9b8b4c0cdfc69a02a4</Anchor>
    <Abstract>Assign a different target. </Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Anchor>aea9917cbbc18242f7738a1e57ff70274</Anchor>
    <Abstract>Stream out content of target file. </Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Target</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Anchor>a402406cd09106a593b157cfa40bac133</Anchor>
    <Abstract>Open the given source to a target file for reading. </Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTargetNames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Anchor>ae02273c20d882d4718bce44c3c591c1a</Anchor>
    <Abstract>Get list of targets for the desired type. </Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Anchor>a0a233a4183bee0e973e027b311c58fd9</Anchor>
    <Abstract>Get targets and/or GIDSet grouped by the given target. </Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Anchor>a7364ce13f80d4829ea0c77c89ddc6154</Anchor>
    <Abstract>Parse a given target into a GID set. </Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Abstract>Information about the current Brion version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>a7724662e5f6b8e067440ac22acec9657</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>abfeb86012f499e974116645aa4682830</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>abb649c2122bcb69b00e2485d6695fdee</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>a100387ecec439ad9a41c6125d4584288</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>a6f481c7090688eeb4742a22a53982c14</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>a08a68ae8561176060e77710c79cad778</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>a0529b8442a3578b60213b46007be4624</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>a899ec6e0102c68a690e8b9143c7908c4</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enums</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>enums</Scope>
    </TokenIdentifier>
    <Path>namespaceenums.html</Path>
    <Abstract>Enumeration definitions. </Abstract>
  </Token>
</Tokens>
