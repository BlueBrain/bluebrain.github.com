<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>DEFLECTQT_VERSION_MAJOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>qt_2version_8h.html</Path>
    <Anchor>a32a65e18cc388759f128b6db5f1119f4</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>qt/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFLECTQT_VERSION_MINOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>qt_2version_8h.html</Path>
    <Anchor>a25a7f5f60624872de0ef7ad6731bc477</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>qt/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFLECTQT_VERSION_PATCH</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>qt_2version_8h.html</Path>
    <Anchor>aa11681985e42693dbff55d1f457917ec</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>qt/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFLECTQT_VERSION_REVISION</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>qt_2version_8h.html</Path>
    <Anchor>a4070fc13376581c19b9e3a94208d3487</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>qt/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFLECTQT_VERSION_ABI</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>qt_2version_8h.html</Path>
    <Anchor>a7c109eecfaaa179ba3232efbce776e1a</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>qt/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFLECTQT_VERSION_GT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>qt_2version_8h.html</Path>
    <Anchor>a20692e8014e995ded191b79c139dcf2c</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>qt/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFLECTQT_VERSION_GE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>qt_2version_8h.html</Path>
    <Anchor>a91b4397923fdfc5d94cda9b6b979626f</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>qt/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFLECTQT_VERSION_LT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>qt_2version_8h.html</Path>
    <Anchor>acec93480d5c7317c316ae78b0778921f</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>qt/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFLECTQT_VERSION_LE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>qt_2version_8h.html</Path>
    <Anchor>afd7970d21b62024da2a1b4e0aea3f207</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>qt/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFLECT_VERSION_MAJOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>ae3eebd8e944254875015072f4cb7f37f</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFLECT_VERSION_MINOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>ab48339917d1b2a14e87e49a8057b726a</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFLECT_VERSION_PATCH</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>adb67443327ce82101d0b9b9bc14f4ff7</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFLECT_VERSION_REVISION</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a1ab1cd6de5387ddfac49de020e6ae99a</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFLECT_VERSION_ABI</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>aab0ced3f934c8c127ad7678102776039</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFLECT_VERSION_GT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a45d6a7b7b556de87f4bf82f87c2604cd</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFLECT_VERSION_GE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>aea712840105306381b2796df55f45e2a</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFLECT_VERSION_LT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a48a9242c7729eac8473e59e05b86ec4d</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFLECT_VERSION_LE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>af6790bb5cc318de25c30bfa96558913b</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Changelog</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>_changelog.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::Event</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::Event</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_event.html</Path>
    <Abstract>A user event within a window. </Abstract>
    <DeclaredIn>Event.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Event</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>deflect::Event</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_event.html</Path>
    <Anchor>a8212fb4013179eff56a621ed7f5a40ca</Anchor>
    <Abstract>Construct a new event. </Abstract>
    <DeclaredIn>Event.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Event</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_event.html</Path>
    <Anchor>a53cf20f805ffc8b02eefc09630f2830c</Anchor>
    <Abstract>The type of event. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mouseX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Event</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_event.html</Path>
    <Anchor>a42c48f6ac9f5ce439938465304f83823</Anchor>
    <Abstract>Normalized X mouse/touch position relative to the window. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mouseY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Event</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_event.html</Path>
    <Anchor>a4e99317297b97c36acad4e095f49d1fe</Anchor>
    <Abstract>Normalized Y mouse/touch position relative to the window. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dx</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Event</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_event.html</Path>
    <Anchor>a16b046b14e8d6f66685cc3db5f669f7d</Anchor>
    <Abstract>Normalized horizontal delta for pan/pinch events / delta in pixels for wheel events. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Event</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_event.html</Path>
    <Anchor>a2a2dcc09ecccae9283d91290b2e33ced</Anchor>
    <Abstract>Normalized vertical delta for pan/pinch events / delta in pixels for wheel events. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mouseLeft</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Event</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_event.html</Path>
    <Anchor>a68f0b1c510d0dac47e73764312e39578</Anchor>
    <Abstract>The state of the left mouse button (pressed=true) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mouseRight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Event</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_event.html</Path>
    <Anchor>a1348a405ee165fa57767eee687e4a1b7</Anchor>
    <Abstract>The state of the right mouse button (pressed=true) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mouseMiddle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Event</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_event.html</Path>
    <Anchor>ae20855655437dc0c2927ff3c122d20f5</Anchor>
    <Abstract>The state of the middle mouse button (pressed=true) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>key</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Event</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_event.html</Path>
    <Anchor>ad0a05174d31daebea94896a083d65ee8</Anchor>
    <Abstract>The key code, see QKeyEvent::key() / number of fingers for gestures / point id for touch events...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modifiers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Event</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_event.html</Path>
    <Anchor>af9f96947fd3600458b99223389f5d293</Anchor>
    <Abstract>The keyboard modifiers, see QKeyEvent::modifiers() </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>text</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Event</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_event.html</Path>
    <Anchor>ade0b96971d9b67e03c492b745bba2685</Anchor>
    <Abstract>Carries unicode for key, see QKeyEvent::text() </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serializedSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Event</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_event.html</Path>
    <Anchor>a5938de50a58544e35146cd7746e9ddd9</Anchor>
    <Abstract>The size of the QDataStream serialized output. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::EventReceiver</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::EventReceiver</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_event_receiver.html</Path>
    <Abstract>Interface for classes to register as receivers for events. </Abstract>
    <DeclaredIn>EventReceiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::Frame</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::Frame</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_frame.html</Path>
    <Abstract>A frame for a PixelStream. </Abstract>
    <DeclaredIn>Frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Frame</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_frame.html</Path>
    <Anchor>a1f3b6dc77aa6b6d2848af592a1e8539f</Anchor>
    <Abstract>Get the total dimensions of this frame. </Abstract>
    <DeclaredIn>Frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>segments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Frame</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_frame.html</Path>
    <Anchor>a443833619529fbdde2ed613810e5e189</Anchor>
    <Abstract>The full set of segments for this frame. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uri</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Frame</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_frame.html</Path>
    <Anchor>a930b8466220144877f4bbdd44db083f4</Anchor>
    <Abstract>The PixelStream uri to which this frame is associated. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::FrameDispatcher</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::FrameDispatcher</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_frame_dispatcher.html</Path>
    <Abstract>Gather segments from multiple sources and dispatch full frames. </Abstract>
    <DeclaredIn>FrameDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>deflect::FrameDispatcher</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_frame_dispatcher.html</Path>
    <Anchor>ae3c9b1961877b8e7be00fa878519a114</Anchor>
    <Abstract>Add a source of Segments for a Stream. </Abstract>
    <DeclaredIn>FrameDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>deflect::FrameDispatcher</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_frame_dispatcher.html</Path>
    <Anchor>ad26b5acc92ce3fbc61f656a9def62328</Anchor>
    <Abstract>Add a source of Segments for a Stream. </Abstract>
    <DeclaredIn>FrameDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processSegment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>deflect::FrameDispatcher</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_frame_dispatcher.html</Path>
    <Anchor>a29be6885dfde466e9e7a738a04a6e945</Anchor>
    <Abstract>Process a new Segement. </Abstract>
    <DeclaredIn>FrameDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processFrameFinished</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>deflect::FrameDispatcher</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_frame_dispatcher.html</Path>
    <Anchor>a71969da5de085dea8749501c8572f5b3</Anchor>
    <Abstract>The given source has finished sending segments for the current frame. </Abstract>
    <DeclaredIn>FrameDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>deflect::FrameDispatcher</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_frame_dispatcher.html</Path>
    <Anchor>aaef1c92e79914d6796d570fad2cb262c</Anchor>
    <Abstract>Delete an entire stream. </Abstract>
    <DeclaredIn>FrameDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>deflect::FrameDispatcher</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_frame_dispatcher.html</Path>
    <Anchor>a9bce9a9c691743d0589bc5c50375c1b9</Anchor>
    <Abstract>Called by the user to request the dispatching of a new frame. </Abstract>
    <DeclaredIn>FrameDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openPixelStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>deflect::FrameDispatcher</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_frame_dispatcher.html</Path>
    <Anchor>a214dcee4ab2d21edddbbff98a77bf2ae</Anchor>
    <Abstract>Notify that a PixelStream has been opened. </Abstract>
    <DeclaredIn>FrameDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deletePixelStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>deflect::FrameDispatcher</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_frame_dispatcher.html</Path>
    <Anchor>a179f5bdad5747d863ef0a1146fa45f3d</Anchor>
    <Abstract>Notify that a pixel stream has been deleted. </Abstract>
    <DeclaredIn>FrameDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>deflect::FrameDispatcher</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_frame_dispatcher.html</Path>
    <Anchor>a28c789e275fb5a72451d2a52e3f781af</Anchor>
    <Abstract>Dispatch a full frame. </Abstract>
    <DeclaredIn>FrameDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FrameDispatcher</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::FrameDispatcher</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_frame_dispatcher.html</Path>
    <Anchor>a32aefa1a635e655cd16a6d2ab09f8efe</Anchor>
    <Abstract>Construct a dispatcher. </Abstract>
    <DeclaredIn>FrameDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FrameDispatcher</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::FrameDispatcher</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_frame_dispatcher.html</Path>
    <Anchor>abd53b6bf875cea3e1456e8cfa3ab9a2b</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>FrameDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::ImageWrapper</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_image_wrapper.html</Path>
    <Abstract>A simple wrapper around an image data buffer. </Abstract>
    <DeclaredIn>ImageWrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImageWrapper</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>deflect::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_image_wrapper.html</Path>
    <Anchor>a0da702eb682bc4f12f2ceb8bd0a22380</Anchor>
    <Abstract>ImageWrapper constructor. </Abstract>
    <DeclaredIn>ImageWrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBytesPerPixel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>deflect::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_image_wrapper.html</Path>
    <Anchor>a6e1357a7aa3628ddc8f272a6bc340df9</Anchor>
    <Abstract>Get the number of bytes per pixel based on the pixelFormat. </Abstract>
    <DeclaredIn>ImageWrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBufferSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>deflect::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_image_wrapper.html</Path>
    <Anchor>a1bbcaaa81b91344e9864a90c5b09fc6c</Anchor>
    <Abstract>Get the size of the data buffer in bytes: width*height*format.bpp. </Abstract>
    <DeclaredIn>ImageWrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapYAxis</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>deflect::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_image_wrapper.html</Path>
    <Anchor>a0259fff8d07a883a02541da59e55de1a</Anchor>
    <Abstract>Swap an image along the Y axis. </Abstract>
    <DeclaredIn>ImageWrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_image_wrapper.html</Path>
    <Anchor>a36c9098b98a8086e903ed777ebee9a35</Anchor>
    <Abstract>Pointer to the image data of size getBufferSize(). </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pixelFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_image_wrapper.html</Path>
    <Anchor>ad2d409293b0c361bf47a76b9ac5f4330</Anchor>
    <Abstract>The pixel format describing the arrangement of the data buffer. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_image_wrapper.html</Path>
    <Anchor>a628b197165c3e428e4b895e3fbd18146</Anchor>
    <Abstract>The image width in pixels. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>height</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_image_wrapper.html</Path>
    <Anchor>ae94eda15c61b09f3874a23b2a93fe0f9</Anchor>
    <Abstract>The image height in pixels. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>x</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_image_wrapper.html</Path>
    <Anchor>a9390a77359e5104598c1d5a8afc51df5</Anchor>
    <Abstract>The X coordinate. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>y</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_image_wrapper.html</Path>
    <Anchor>aaaa2941b2a63cedd5592391bbcba6912</Anchor>
    <Abstract>The Y coordinate. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compressionPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_image_wrapper.html</Path>
    <Anchor>a117951a971e2db4500d2a01ba6ac1e58</Anchor>
    <Abstract>Is the image to be compressed (default: auto). </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compressionQuality</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_image_wrapper.html</Path>
    <Anchor>aea79767865a32c31889e30a4c8bd5e41</Anchor>
    <Abstract>Compression quality (0 worst, 100 best, default: 75). </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::MTQueue</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>deflect::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_m_t_queue.html</Path>
    <Abstract>Thread-safe multiple producer, multiple consumer queue. </Abstract>
    <DeclaredIn>MTQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MTQueue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_m_t_queue.html</Path>
    <Anchor>a4612c53a9d1a8ea4640dd5ba128dd480</Anchor>
    <DeclaredIn>MTQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enqueue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_m_t_queue.html</Path>
    <Anchor>a8624e908aee3eb76d7ebcf968bedadae</Anchor>
    <Abstract>Push a new value to the end of the queue. </Abstract>
    <DeclaredIn>MTQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dequeue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_m_t_queue.html</Path>
    <Anchor>af694237052ea1ddc9e1a4ad3c7f7811f</Anchor>
    <Abstract>Pop a value from the front of the queue. </Abstract>
    <DeclaredIn>MTQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_m_t_queue.html</Path>
    <Anchor>ad8bd074548d26f5a8f1ef728f46a175d</Anchor>
    <Abstract>Clears the queue. </Abstract>
    <DeclaredIn>MTQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_m_t_queue.html</Path>
    <Anchor>af94a1641b365c84e9b4d4a86e41ebc4f</Anchor>
    <DeclaredIn>MTQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>empty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_m_t_queue.html</Path>
    <Anchor>a2ba4cb0076d919cb0dc7adf788ddb82f</Anchor>
    <DeclaredIn>MTQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::Segment</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::Segment</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_segment.html</Path>
    <Abstract>Image data and parameters for a single segment of a PixelStream. </Abstract>
    <DeclaredIn>Segment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Segment</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_segment.html</Path>
    <Anchor>a1ff3f793b8c42de0ea8801bbee0d2a1a</Anchor>
    <Abstract>Parameters of the segment. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>imageData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Segment</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_segment.html</Path>
    <Anchor>aa6986be5e20460cd10cd7900b02c4ec4</Anchor>
    <Abstract>Image data of the segment. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::SegmentDecoder</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::SegmentDecoder</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_segment_decoder.html</Path>
    <Abstract>Decode a Segment&amp;#39;s image asynchronously. </Abstract>
    <DeclaredIn>SegmentDecoder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SegmentDecoder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::SegmentDecoder</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_segment_decoder.html</Path>
    <Anchor>a27136dcbc7c0447aa638a41e00afd46d</Anchor>
    <Abstract>Construct a Decoder. </Abstract>
    <DeclaredIn>SegmentDecoder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SegmentDecoder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::SegmentDecoder</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_segment_decoder.html</Path>
    <Anchor>a77e3722e9a7a4e093539bb35d7d3be4c</Anchor>
    <Abstract>Destruct a Decoder. </Abstract>
    <DeclaredIn>SegmentDecoder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::SegmentDecoder</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_segment_decoder.html</Path>
    <Anchor>a4894a1c487eee14f898261fe50bca5c4</Anchor>
    <Abstract>Decode a segment. </Abstract>
    <DeclaredIn>SegmentDecoder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startDecoding</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::SegmentDecoder</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_segment_decoder.html</Path>
    <Anchor>ae33a772afaa7890061d16d51576f34e7</Anchor>
    <Abstract>Start decoding a segment. </Abstract>
    <DeclaredIn>SegmentDecoder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitDecoding</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::SegmentDecoder</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_segment_decoder.html</Path>
    <Anchor>a68feab2dd3806cce0cafef1fcd7c1670</Anchor>
    <Abstract>Waits for the decoding of a segment to finish, initiated by startDecoding(). </Abstract>
    <DeclaredIn>SegmentDecoder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRunning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::SegmentDecoder</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_segment_decoder.html</Path>
    <Anchor>a35da9b04b0e76ef1c34577af537c5717</Anchor>
    <Abstract>Check if the decoding thread is running. </Abstract>
    <DeclaredIn>SegmentDecoder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::SegmentParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::SegmentParameters</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_segment_parameters.html</Path>
    <Abstract>Parameters for a Frame Segment. </Abstract>
    <DeclaredIn>SegmentParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SegmentParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>deflect::SegmentParameters</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_segment_parameters.html</Path>
    <Anchor>aff4e6956b8e4efe8d637beeb1044eb47</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>SegmentParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compressed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::SegmentParameters</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_segment_parameters.html</Path>
    <Anchor>a456f97d2a2eb04e402030a9d81bcccbb</Anchor>
    <Abstract>Is the image raw pixel data or compressed in jpeg format. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>x</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::SegmentParameters</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_segment_parameters.html</Path>
    <Anchor>a3f240ee176780d59a9387b61c20def0c</Anchor>
    <Abstract>The x position in pixels. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>y</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::SegmentParameters</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_segment_parameters.html</Path>
    <Anchor>a21545402b3b897e04bcf8406c2de29b4</Anchor>
    <Abstract>The y position in pixels. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::SegmentParameters</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_segment_parameters.html</Path>
    <Anchor>a6db86d0c0e9af3debf3c97c582d9ef8b</Anchor>
    <Abstract>The width in pixels. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>height</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::SegmentParameters</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_segment_parameters.html</Path>
    <Anchor>a2c0faa24e63997bd09fe39d265d0a4c0</Anchor>
    <Abstract>The height in pixels. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::Server</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::Server</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_server.html</Path>
    <Abstract>Listen to incoming PixelStream connections from Stream clients. </Abstract>
    <DeclaredIn>Server.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Server</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Server</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_server.html</Path>
    <Anchor>a5c0d102c85af38a8c9731e46afc4ee51</Anchor>
    <Abstract>Create a new server listening for Stream connections. </Abstract>
    <DeclaredIn>Server.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Server</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Server</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_server.html</Path>
    <Anchor>a9927853800848d801e441d98bf3e0005</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>Server.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelStreamDispatcher</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Server</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_server.html</Path>
    <Anchor>a36db17ad6f96b2cefe9633169d34f391</Anchor>
    <Abstract>Get the PixelStreamDispatcher. </Abstract>
    <DeclaredIn>Server.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>defaultPortNumber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Server</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_server.html</Path>
    <Anchor>ad9de65318605b69ca87b786d9178bddd</Anchor>
    <Abstract>The default port number used for Stream connections. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serviceName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Server</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_server.html</Path>
    <Anchor>a4429d1f3f1ce07f9d2c52b54d4a69886</Anchor>
    <Abstract>The zeroconf service name for announcing stream connections. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::SizeHints</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::SizeHints</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_size_hints.html</Path>
    <Abstract>A struct that contains hints about minimum, maximum and preferred sizes of a streamer which can be in...</Abstract>
    <DeclaredIn>SizeHints.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UNSPECIFIED_SIZE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::SizeHints</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_size_hints.html</Path>
    <Anchor>ab5669f53ce44753dda1934a2b1208e48</Anchor>
    <Abstract>value for an unspecified size value; streamer did not report any hint </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::Stream</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Abstract>Stream visual data to a deflect::Server. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Stream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>a5bef22dd831e886429004e86af59c3ad</Anchor>
    <Abstract>Open a new connection to the Server using environment variables. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Stream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>a34c51c546f2c9136c5fa4bd0f886e8ff</Anchor>
    <Abstract>Open a new connection to the Server. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Stream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>a3aef9921d1bc59ffea7b2de8cdf2b7e3</Anchor>
    <Abstract>Destruct the Stream, closing the connection. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isConnected</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>a293a7b9fd53066c2643e30258bf071d4</Anchor>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getId</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>abe0550c3b1ace7e363c3f28803dbe4e8</Anchor>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHost</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>a03c95cab2ab9d04e944b6c65457e8f46</Anchor>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerForEvents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>ac41c7f5a1389da41e2778b677138a870</Anchor>
    <Abstract>Register to receive Events. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRegisteredForEvents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>a3ca77e7708fc30bc084a3093158456a7</Anchor>
    <Abstract>Is this stream registered to receive events. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDescriptor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>a5857ea5f888d3619222f2594cfee6a10</Anchor>
    <Abstract>Get the native descriptor for the data stream. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>ad577d5ab15c1a26347f9852d330af9a9</Anchor>
    <Abstract>Check if a new Event is available. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>a8d891e83326740017b339e01162eeafc</Anchor>
    <Abstract>Get the next Event. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendSizeHints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>ae580afe8ed6e374789be1b088667e1d9</Anchor>
    <Abstract>Send size hints to the stream host to indicate sizes that should be respected by resize operations on...</Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>ad4d57fc018a327a553c985ec7de390dc</Anchor>
    <Abstract>Send data to the Server. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>a31fd6e85be950b8799f557be71ef787d</Anchor>
    <Abstract>Send an image synchronously. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finishFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>a700b709756992a9f87fb1edbfa839ebc</Anchor>
    <Abstract>Notify that all the images for this frame have been sent. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disconnected</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>a1021de00de42059139af3808905a54d9</Anchor>
    <Abstract>Emitted after the stream was disconnected. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Future</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>a4a9e3727dddb1c25d5f8cbaf77a35914</Anchor>
    <Abstract>Future signaling success of asyncSend(). </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asyncSend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>a4604db39475ac4f6c5514fa1776a9ee5</Anchor>
    <Abstract>Send an image and finish the frame asynchronously. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_version.html</Path>
    <Abstract>Information about the current Deflect version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>deflect::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_version.html</Path>
    <Anchor>ae5d71acc7fad06dbcb673e37c905e263</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>deflect::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_version.html</Path>
    <Anchor>aa634ce089d675e03f59580e703d2aaa6</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>deflect::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_version.html</Path>
    <Anchor>ab2bd448e81b1014087e824efacd8fe91</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>deflect::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_version.html</Path>
    <Anchor>ac87161d36ea0dd6d8cc648f3cd6408d6</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>deflect::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_version.html</Path>
    <Anchor>af3f12dad6076c78e85cba4c791ef0292</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>deflect::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_version.html</Path>
    <Anchor>af9af044c68918db0efb0ebc620198e14</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>deflect::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_version.html</Path>
    <Anchor>ad5609c825783681386c5cbb295c632d4</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>deflect::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_version.html</Path>
    <Anchor>a324cd0b47c982f26f290c4a3939bfb68</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::qt::QmlStreamer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::qt::QmlStreamer</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1qt_1_1_qml_streamer.html</Path>
    <Abstract>Based on http://doc.qt.io/qt-5/qtquick-rendercontrol-example.html. </Abstract>
    <DeclaredIn>QmlStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>streamClosed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>deflect::qt::QmlStreamer</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1qt_1_1_qml_streamer.html</Path>
    <Anchor>a4a13cac43c74f70aed903e14912904d8</Anchor>
    <Abstract>Emitted when the stream has been closed. </Abstract>
    <DeclaredIn>QmlStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>QmlStreamer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::qt::QmlStreamer</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1qt_1_1_qml_streamer.html</Path>
    <Anchor>a6f173716042ae0ebaadf6472bb3934e1</Anchor>
    <Abstract>Construct a new qml streamer by loading the QML, accessible by getRootItem() and sets up the Deflect ...</Abstract>
    <DeclaredIn>QmlStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRootItem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::qt::QmlStreamer</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1qt_1_1_qml_streamer.html</Path>
    <Anchor>a673998481aea2dce5ed02ee54b42175b</Anchor>
    <DeclaredIn>QmlStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getQmlEngine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::qt::QmlStreamer</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1qt_1_1_qml_streamer.html</Path>
    <Anchor>a480ea640490c026e4f96f6411c995433</Anchor>
    <DeclaredIn>QmlStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::qt::QmlStreamer</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1qt_1_1_qml_streamer.html</Path>
    <Anchor>a47eace10c1740c5b82ea9ff468495456</Anchor>
    <Abstract>Send data to the Server. </Abstract>
    <DeclaredIn>QmlStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::qt::TouchInjector</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::qt::TouchInjector</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1qt_1_1_touch_injector.html</Path>
    <Abstract>Inject complete QTouchEvent from separate touch added/updated/removed events. </Abstract>
    <DeclaredIn>TouchInjector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MapToSceneFunc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>deflect::qt::TouchInjector</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1qt_1_1_touch_injector.html</Path>
    <Anchor>a1dda68b03b458ad8008c79541194040d</Anchor>
    <Abstract>Function to map normalized coordinates to scene / window coordinates. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TouchInjector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::qt::TouchInjector</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1qt_1_1_touch_injector.html</Path>
    <Anchor>a5347f1348ab37ddc04e15ca953eef83c</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>TouchInjector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTouchPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::qt::TouchInjector</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1qt_1_1_touch_injector.html</Path>
    <Anchor>a0594e115df0d4cb5c8d306f4da4d42e0</Anchor>
    <Abstract>Insert a new touch point. </Abstract>
    <DeclaredIn>TouchInjector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateTouchPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::qt::TouchInjector</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1qt_1_1_touch_injector.html</Path>
    <Anchor>ae53469ba2912e4847687619deab2f10d</Anchor>
    <Abstract>Update an existing touch point. </Abstract>
    <DeclaredIn>TouchInjector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeTouchPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::qt::TouchInjector</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1qt_1_1_touch_injector.html</Path>
    <Anchor>a1b15ba90f5754acf4e577ed827ff4be0</Anchor>
    <Abstract>Remove an existing touch point. </Abstract>
    <DeclaredIn>TouchInjector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAllTouchPoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::qt::TouchInjector</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1qt_1_1_touch_injector.html</Path>
    <Anchor>a96c53f72080981e4c3165b1d58dcbdf8</Anchor>
    <Abstract>Remove all touch points. </Abstract>
    <DeclaredIn>TouchInjector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflectqt::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflectqt::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflectqt_1_1_version.html</Path>
    <Abstract>Information about the current DeflectQt version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>deflectqt::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflectqt_1_1_version.html</Path>
    <Anchor>ad719dcab026548e7fd7ee9d6cca1d077</Anchor>
    <DeclaredIn>qt/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>deflectqt::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflectqt_1_1_version.html</Path>
    <Anchor>a6e82575721f6c56f603524abd70a8b9f</Anchor>
    <DeclaredIn>qt/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>deflectqt::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflectqt_1_1_version.html</Path>
    <Anchor>a435dcf8e4769d9b65c234ff46c79630a</Anchor>
    <DeclaredIn>qt/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>deflectqt::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflectqt_1_1_version.html</Path>
    <Anchor>a07061034d741f2ac3ee2990f441c74a9</Anchor>
    <DeclaredIn>qt/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>deflectqt::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflectqt_1_1_version.html</Path>
    <Anchor>a619fc2343b6b4f53cfb2145f9fd3632a</Anchor>
    <DeclaredIn>qt/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>deflectqt::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflectqt_1_1_version.html</Path>
    <Anchor>af99fcd20940f4b109a4426c46d6f2c55</Anchor>
    <DeclaredIn>qt/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>deflectqt::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflectqt_1_1_version.html</Path>
    <Anchor>a3e55d79cf8922c5469ffbd51bf694a1f</Anchor>
    <DeclaredIn>qt/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>deflectqt::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflectqt_1_1_version.html</Path>
    <Anchor>a49b067fd920d62cdd1c7a2577ddabd26</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>qt/version.h</DeclaredIn>
  </Token>
</Tokens>
