<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>DEFLECTQT_VERSION_MAJOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>qt_2version_8h.html</Path>
    <Anchor>a32a65e18cc388759f128b6db5f1119f4</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>qt/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFLECTQT_VERSION_MINOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>qt_2version_8h.html</Path>
    <Anchor>a25a7f5f60624872de0ef7ad6731bc477</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>qt/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFLECTQT_VERSION_PATCH</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>qt_2version_8h.html</Path>
    <Anchor>aa11681985e42693dbff55d1f457917ec</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>qt/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFLECTQT_VERSION_REVISION</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>qt_2version_8h.html</Path>
    <Anchor>a4070fc13376581c19b9e3a94208d3487</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>qt/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFLECTQT_VERSION_ABI</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>qt_2version_8h.html</Path>
    <Anchor>a7c109eecfaaa179ba3232efbce776e1a</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>qt/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFLECTQT_VERSION_GT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>qt_2version_8h.html</Path>
    <Anchor>a20692e8014e995ded191b79c139dcf2c</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>qt/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFLECTQT_VERSION_GE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>qt_2version_8h.html</Path>
    <Anchor>a91b4397923fdfc5d94cda9b6b979626f</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>qt/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFLECTQT_VERSION_LT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>qt_2version_8h.html</Path>
    <Anchor>acec93480d5c7317c316ae78b0778921f</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>qt/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFLECTQT_VERSION_LE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>qt_2version_8h.html</Path>
    <Anchor>afd7970d21b62024da2a1b4e0aea3f207</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>qt/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFLECT_VERSION_MAJOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>ae3eebd8e944254875015072f4cb7f37f</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFLECT_VERSION_MINOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>ab48339917d1b2a14e87e49a8057b726a</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFLECT_VERSION_PATCH</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>adb67443327ce82101d0b9b9bc14f4ff7</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFLECT_VERSION_REVISION</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a1ab1cd6de5387ddfac49de020e6ae99a</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFLECT_VERSION_ABI</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>aab0ced3f934c8c127ad7678102776039</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFLECT_VERSION_GT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a45d6a7b7b556de87f4bf82f87c2604cd</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFLECT_VERSION_GE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>aea712840105306381b2796df55f45e2a</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFLECT_VERSION_LT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a48a9242c7729eac8473e59e05b86ec4d</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFLECT_VERSION_LE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>af6790bb5cc318de25c30bfa96558913b</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Changelog</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>_changelog.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::AbstractCommandHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::AbstractCommandHandler</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_abstract_command_handler.html</Path>
    <Abstract>The base interface for Command handlers. </Abstract>
    <DeclaredIn>AbstractCommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~AbstractCommandHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::AbstractCommandHandler</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_abstract_command_handler.html</Path>
    <Anchor>a3c3ec9cddf6c56b68c5e26f02895e6ae</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>AbstractCommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::AbstractCommandHandler</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_abstract_command_handler.html</Path>
    <Anchor>af1069082a22e3ef896c6048fe2fa4744</Anchor>
    <Abstract>Get the type of commands handled by the implementation. </Abstract>
    <DeclaredIn>AbstractCommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::AbstractCommandHandler</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_abstract_command_handler.html</Path>
    <Anchor>a1a19f68a169f1a93c430ab1e64ab7988</Anchor>
    <Abstract>Handle a Command. </Abstract>
    <DeclaredIn>AbstractCommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::Command</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::Command</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_command.html</Path>
    <Abstract>String format, prefix-base network command. </Abstract>
    <DeclaredIn>Command.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Command</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Command</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_command.html</Path>
    <Anchor>aaa92ffa034373b474aeaf3d5d679a2e7</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Command.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Command</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Command</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_command.html</Path>
    <Anchor>a879a36df1bc3962ef234ec8d8b85d715</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Command.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Command</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Command</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_command.html</Path>
    <Anchor>a17fd83a718f90377d218503728b749a9</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>Command.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Command</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_command.html</Path>
    <Anchor>a331fa597af9557953cb3598a12569bda</Anchor>
    <Abstract>Get the command type. </Abstract>
    <DeclaredIn>Command.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getArguments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Command</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_command.html</Path>
    <Anchor>a759ff964232cf91ae16efe000ad0d522</Anchor>
    <Abstract>Get the command arguments. </Abstract>
    <DeclaredIn>Command.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCommand</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Command</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_command.html</Path>
    <Anchor>adc163f5bfd533ff42304e291524f510a</Anchor>
    <Abstract>Get the command in string format, typically for sending over network. </Abstract>
    <DeclaredIn>Command.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Command</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_command.html</Path>
    <Anchor>ad36e96184ddb8498e7c09d5ec32c6458</Anchor>
    <Abstract>Check if the Command is valid (i.e. </Abstract>
    <DeclaredIn>Command.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::CommandHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::CommandHandler</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_command_handler.html</Path>
    <Abstract>A command handler for String formatted network commands. </Abstract>
    <DeclaredIn>CommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>deflect::CommandHandler</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_command_handler.html</Path>
    <Anchor>a1bb327aa3678db11bde8a691bbeec75b</Anchor>
    <Abstract>Process a command. </Abstract>
    <DeclaredIn>CommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommandHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::CommandHandler</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_command_handler.html</Path>
    <Anchor>a4ee5bd4ad06891e8c945c4de8796f883</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>CommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~CommandHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::CommandHandler</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_command_handler.html</Path>
    <Anchor>a450f0dcebde4ca8bdeabba6be194b752</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>CommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerCommandHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::CommandHandler</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_command_handler.html</Path>
    <Anchor>a7550869ca481559c8a76c7fc6e7e5f09</Anchor>
    <Abstract>Register a command handler. </Abstract>
    <DeclaredIn>CommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unregisterCommandHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::CommandHandler</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_command_handler.html</Path>
    <Anchor>a110d1730f81d7bba8967b5418423aa2d</Anchor>
    <Abstract>Unregister a command handler. </Abstract>
    <DeclaredIn>CommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::Event</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::Event</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_event.html</Path>
    <Abstract>A user event within a window. </Abstract>
    <DeclaredIn>Event.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Event</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>deflect::Event</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_event.html</Path>
    <Anchor>a8212fb4013179eff56a621ed7f5a40ca</Anchor>
    <Abstract>Construct a new event. </Abstract>
    <DeclaredIn>Event.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Event</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_event.html</Path>
    <Anchor>a53cf20f805ffc8b02eefc09630f2830c</Anchor>
    <Abstract>The type of event. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mouseX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Event</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_event.html</Path>
    <Anchor>a42c48f6ac9f5ce439938465304f83823</Anchor>
    <Abstract>Normalized X mouse/touch position relative to the window. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mouseY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Event</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_event.html</Path>
    <Anchor>a4e99317297b97c36acad4e095f49d1fe</Anchor>
    <Abstract>Normalized Y mouse/touch position relative to the window. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dx</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Event</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_event.html</Path>
    <Anchor>a16b046b14e8d6f66685cc3db5f669f7d</Anchor>
    <Abstract>Normalized horizontal delta for scroll events / delta in pixels for wheel events. ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Event</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_event.html</Path>
    <Anchor>a2a2dcc09ecccae9283d91290b2e33ced</Anchor>
    <Abstract>Normalized vertical delta for scroll events / delta in pixels for wheel events. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mouseLeft</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Event</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_event.html</Path>
    <Anchor>a68f0b1c510d0dac47e73764312e39578</Anchor>
    <Abstract>The state of the left mouse button (pressed=true) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mouseRight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Event</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_event.html</Path>
    <Anchor>a1348a405ee165fa57767eee687e4a1b7</Anchor>
    <Abstract>The state of the right mouse button (pressed=true) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mouseMiddle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Event</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_event.html</Path>
    <Anchor>ae20855655437dc0c2927ff3c122d20f5</Anchor>
    <Abstract>The state of the middle mouse button (pressed=true) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>key</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Event</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_event.html</Path>
    <Anchor>ad0a05174d31daebea94896a083d65ee8</Anchor>
    <Abstract>The key code, see QKeyEvent::key() </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modifiers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Event</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_event.html</Path>
    <Anchor>af9f96947fd3600458b99223389f5d293</Anchor>
    <Abstract>The keyboard modifiers, see QKeyEvent::modifiers() </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>text</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Event</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_event.html</Path>
    <Anchor>ade0b96971d9b67e03c492b745bba2685</Anchor>
    <Abstract>Carries unicode for key, see QKeyEvent::text() </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serializedSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Event</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_event.html</Path>
    <Anchor>a5938de50a58544e35146cd7746e9ddd9</Anchor>
    <Abstract>The size of the QDataStream serialized output. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::EventReceiver</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::EventReceiver</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_event_receiver.html</Path>
    <Abstract>Interface for classes to register as receivers for events. </Abstract>
    <DeclaredIn>EventReceiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::Frame</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::Frame</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_frame.html</Path>
    <Abstract>A frame for a PixelStream. </Abstract>
    <DeclaredIn>Frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Frame</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_frame.html</Path>
    <Anchor>a35a14e1318c751e785eb65e87c89e15b</Anchor>
    <Abstract>Get the total dimensions of this frame. </Abstract>
    <DeclaredIn>Frame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>segments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Frame</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_frame.html</Path>
    <Anchor>a443833619529fbdde2ed613810e5e189</Anchor>
    <Abstract>The full set of segments for this frame. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uri</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Frame</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_frame.html</Path>
    <Anchor>a930b8466220144877f4bbdd44db083f4</Anchor>
    <Abstract>The PixelStream uri to which this frame is associated. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::FrameDispatcher</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::FrameDispatcher</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_frame_dispatcher.html</Path>
    <Abstract>Gather segments from multiple sources and dispatch full frames. </Abstract>
    <DeclaredIn>FrameDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>deflect::FrameDispatcher</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_frame_dispatcher.html</Path>
    <Anchor>a976140e940f6249646bc3e6d8b6b2771</Anchor>
    <Abstract>Add a source of Segments for a Stream. </Abstract>
    <DeclaredIn>FrameDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>deflect::FrameDispatcher</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_frame_dispatcher.html</Path>
    <Anchor>a087580978abdaab5e974252859b53554</Anchor>
    <Abstract>Add a source of Segments for a Stream. </Abstract>
    <DeclaredIn>FrameDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processSegment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>deflect::FrameDispatcher</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_frame_dispatcher.html</Path>
    <Anchor>a9339d63b016c29094f3e7c5d2ac267f9</Anchor>
    <Abstract>Process a new Segement. </Abstract>
    <DeclaredIn>FrameDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processFrameFinished</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>deflect::FrameDispatcher</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_frame_dispatcher.html</Path>
    <Anchor>a0cdf8ac3a7b0fb1f5b0df3f35dccfcfd</Anchor>
    <Abstract>The given source has finished sending segments for the current frame. </Abstract>
    <DeclaredIn>FrameDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>deflect::FrameDispatcher</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_frame_dispatcher.html</Path>
    <Anchor>abb6087d8560f0da745ae7ca98d8d5b1d</Anchor>
    <Abstract>Delete an entire stream. </Abstract>
    <DeclaredIn>FrameDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>deflect::FrameDispatcher</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_frame_dispatcher.html</Path>
    <Anchor>a6f0a4f618e6a54f8e33ea201792ec4b5</Anchor>
    <Abstract>Called by the user to request the dispatching of a new frame. </Abstract>
    <DeclaredIn>FrameDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openPixelStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>deflect::FrameDispatcher</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_frame_dispatcher.html</Path>
    <Anchor>a79ed227e7877a5d4cf79969ac6b33c57</Anchor>
    <Abstract>Notify that a PixelStream has been opened. </Abstract>
    <DeclaredIn>FrameDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deletePixelStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>deflect::FrameDispatcher</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_frame_dispatcher.html</Path>
    <Anchor>a9f13070deed88cc00db9e75ec3e4cb20</Anchor>
    <Abstract>Notify that a pixel stream has been deleted. </Abstract>
    <DeclaredIn>FrameDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>deflect::FrameDispatcher</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_frame_dispatcher.html</Path>
    <Anchor>a0a9058dd86e0dab020638557ef9226fa</Anchor>
    <Abstract>Dispatch a full frame. </Abstract>
    <DeclaredIn>FrameDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FrameDispatcher</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::FrameDispatcher</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_frame_dispatcher.html</Path>
    <Anchor>afc017939edad9bc6a7e4dc7c1b38329e</Anchor>
    <Abstract>Construct a dispatcher. </Abstract>
    <DeclaredIn>FrameDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FrameDispatcher</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::FrameDispatcher</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_frame_dispatcher.html</Path>
    <Anchor>adc93e594dad1ffc804725d3af97ee23e</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>FrameDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::ImageWrapper</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_image_wrapper.html</Path>
    <Abstract>A simple wrapper around an image data buffer. </Abstract>
    <DeclaredIn>ImageWrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImageWrapper</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>deflect::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_image_wrapper.html</Path>
    <Anchor>a088b24a5f4d47399b2974367913a46bc</Anchor>
    <Abstract>ImageWrapper constructor. </Abstract>
    <DeclaredIn>ImageWrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBytesPerPixel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>deflect::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_image_wrapper.html</Path>
    <Anchor>a0cea19d976a6d723edeb989915e83692</Anchor>
    <Abstract>Get the number of bytes per pixel based on the pixelFormat. </Abstract>
    <DeclaredIn>ImageWrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBufferSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>deflect::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_image_wrapper.html</Path>
    <Anchor>a6577b27817b1cf2bdfceb5b0d203ec3f</Anchor>
    <Abstract>Get the size of the data buffer in bytes: width*height*format.bpp. </Abstract>
    <DeclaredIn>ImageWrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapYAxis</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>deflect::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_image_wrapper.html</Path>
    <Anchor>aa10d2ecda96e3954b33f4017cbc937e6</Anchor>
    <Abstract>Swap an image along the Y axis. </Abstract>
    <DeclaredIn>ImageWrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_image_wrapper.html</Path>
    <Anchor>a36c9098b98a8086e903ed777ebee9a35</Anchor>
    <Abstract>Pointer to the image data of size getBufferSize(). </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pixelFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_image_wrapper.html</Path>
    <Anchor>ad2d409293b0c361bf47a76b9ac5f4330</Anchor>
    <Abstract>The pixel format describing the arrangement of the data buffer. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_image_wrapper.html</Path>
    <Anchor>a628b197165c3e428e4b895e3fbd18146</Anchor>
    <Abstract>The image width in pixels. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>height</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_image_wrapper.html</Path>
    <Anchor>ae94eda15c61b09f3874a23b2a93fe0f9</Anchor>
    <Abstract>The image height in pixels. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>x</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_image_wrapper.html</Path>
    <Anchor>a9390a77359e5104598c1d5a8afc51df5</Anchor>
    <Abstract>The X coordinate. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>y</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_image_wrapper.html</Path>
    <Anchor>aaaa2941b2a63cedd5592391bbcba6912</Anchor>
    <Abstract>The Y coordinate. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compressionPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_image_wrapper.html</Path>
    <Anchor>a117951a971e2db4500d2a01ba6ac1e58</Anchor>
    <Abstract>Is the image to be compressed (default: auto). </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compressionQuality</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_image_wrapper.html</Path>
    <Anchor>aea79767865a32c31889e30a4c8bd5e41</Anchor>
    <Abstract>Compression quality (0 worst, 100 best, default: 75). </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::MTQueue</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>deflect::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_m_t_queue.html</Path>
    <Abstract>Thread-safe multiple producer, multiple consumer queue. </Abstract>
    <DeclaredIn>MTQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MTQueue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_m_t_queue.html</Path>
    <Anchor>a4612c53a9d1a8ea4640dd5ba128dd480</Anchor>
    <DeclaredIn>MTQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enqueue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_m_t_queue.html</Path>
    <Anchor>a8624e908aee3eb76d7ebcf968bedadae</Anchor>
    <Abstract>Push a new value to the end of the queue. </Abstract>
    <DeclaredIn>MTQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dequeue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_m_t_queue.html</Path>
    <Anchor>af694237052ea1ddc9e1a4ad3c7f7811f</Anchor>
    <Abstract>Pop a value from the front of the queue. </Abstract>
    <DeclaredIn>MTQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_m_t_queue.html</Path>
    <Anchor>ad8bd074548d26f5a8f1ef728f46a175d</Anchor>
    <Abstract>Clears the queue. </Abstract>
    <DeclaredIn>MTQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_m_t_queue.html</Path>
    <Anchor>af94a1641b365c84e9b4d4a86e41ebc4f</Anchor>
    <DeclaredIn>MTQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>empty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_m_t_queue.html</Path>
    <Anchor>a2ba4cb0076d919cb0dc7adf788ddb82f</Anchor>
    <DeclaredIn>MTQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::Segment</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::Segment</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_segment.html</Path>
    <Abstract>Image data and parameters for a single segment of a PixelStream. </Abstract>
    <DeclaredIn>Segment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Segment</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_segment.html</Path>
    <Anchor>a1ff3f793b8c42de0ea8801bbee0d2a1a</Anchor>
    <Abstract>Parameters of the segment. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>imageData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Segment</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_segment.html</Path>
    <Anchor>aa6986be5e20460cd10cd7900b02c4ec4</Anchor>
    <Abstract>Image data of the segment. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::SegmentDecoder</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::SegmentDecoder</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_segment_decoder.html</Path>
    <Abstract>Decode a Segment&amp;#39;s image asynchronously. </Abstract>
    <DeclaredIn>SegmentDecoder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SegmentDecoder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::SegmentDecoder</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_segment_decoder.html</Path>
    <Anchor>a21916051e0351b50233de83d2a807ba6</Anchor>
    <Abstract>Construct a Decoder. </Abstract>
    <DeclaredIn>SegmentDecoder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SegmentDecoder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::SegmentDecoder</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_segment_decoder.html</Path>
    <Anchor>a4f44bb71d230609ff9dc0b92b7531f85</Anchor>
    <Abstract>Destruct a Decoder. </Abstract>
    <DeclaredIn>SegmentDecoder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startDecoding</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::SegmentDecoder</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_segment_decoder.html</Path>
    <Anchor>acbbcc788ba293fe476406f614f7428cd</Anchor>
    <Abstract>Start decoding a segment. </Abstract>
    <DeclaredIn>SegmentDecoder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitDecoding</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::SegmentDecoder</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_segment_decoder.html</Path>
    <Anchor>a2a4d1f691e6ddb80144aeba925395e0c</Anchor>
    <Abstract>Waits for the decoding of a segment to finish, initiated by startDecoding(). </Abstract>
    <DeclaredIn>SegmentDecoder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRunning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::SegmentDecoder</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_segment_decoder.html</Path>
    <Anchor>a478195c0c18ab254e5957390e18dffa4</Anchor>
    <Abstract>Check if the decoding thread is running. </Abstract>
    <DeclaredIn>SegmentDecoder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::SegmentParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::SegmentParameters</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_segment_parameters.html</Path>
    <Abstract>Parameters for a Frame Segment. </Abstract>
    <DeclaredIn>SegmentParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SegmentParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>deflect::SegmentParameters</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_segment_parameters.html</Path>
    <Anchor>aff4e6956b8e4efe8d637beeb1044eb47</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>SegmentParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compressed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::SegmentParameters</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_segment_parameters.html</Path>
    <Anchor>a456f97d2a2eb04e402030a9d81bcccbb</Anchor>
    <Abstract>Is the image raw pixel data or compressed in jpeg format. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>x</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::SegmentParameters</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_segment_parameters.html</Path>
    <Anchor>a3f240ee176780d59a9387b61c20def0c</Anchor>
    <Abstract>The x position in pixels. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>y</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::SegmentParameters</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_segment_parameters.html</Path>
    <Anchor>a21545402b3b897e04bcf8406c2de29b4</Anchor>
    <Abstract>The y position in pixels. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::SegmentParameters</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_segment_parameters.html</Path>
    <Anchor>a6db86d0c0e9af3debf3c97c582d9ef8b</Anchor>
    <Abstract>The width in pixels. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>height</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::SegmentParameters</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_segment_parameters.html</Path>
    <Anchor>a2c0faa24e63997bd09fe39d265d0a4c0</Anchor>
    <Abstract>The height in pixels. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::Server</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::Server</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_server.html</Path>
    <Abstract>Listen to incoming PixelStream connections from Stream clients. </Abstract>
    <DeclaredIn>Server.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Server</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Server</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_server.html</Path>
    <Anchor>a27d1ef2d31838da225124cbf65092041</Anchor>
    <Abstract>Create a new server listening for Stream connections. </Abstract>
    <DeclaredIn>Server.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Server</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Server</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_server.html</Path>
    <Anchor>a1349dc5063e2b8e9aa1dcc8fd696af4b</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>Server.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCommandHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Server</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_server.html</Path>
    <Anchor>ad370e11c1e92c11476308dbf7a91a330</Anchor>
    <Abstract>Get the command handler. </Abstract>
    <DeclaredIn>Server.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelStreamDispatcher</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Server</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_server.html</Path>
    <Anchor>aa043e2e038925b380fa6fbc1a66cac10</Anchor>
    <Abstract>Get the PixelStreamDispatcher. </Abstract>
    <DeclaredIn>Server.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>defaultPortNumber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Server</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_server.html</Path>
    <Anchor>a3011f59853f580e4f125766318955dd3</Anchor>
    <Abstract>The default port number used for Stream connections. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serviceName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Server</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_server.html</Path>
    <Anchor>ae528ab7b82fa35c06266d1ed2eac6f19</Anchor>
    <Abstract>The zeroconf service name for announcing stream connections. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::SizeHints</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::SizeHints</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_size_hints.html</Path>
    <Abstract>A struct that contains hints about minimum, maximum and preferred sizes of a streamer which can be in...</Abstract>
    <DeclaredIn>SizeHints.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UNSPECIFIED_SIZE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::SizeHints</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_size_hints.html</Path>
    <Anchor>ab5669f53ce44753dda1934a2b1208e48</Anchor>
    <Abstract>value for an unspecified size value; streamer did not report any hint </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::Stream</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Abstract>Stream visual data to a DisplayCluster application. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Stream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>a6e6d41027017644c3cb8f7a7f6d728f3</Anchor>
    <Abstract>Open a new connection to the DisplayCluster application. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Stream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>a60d34179c413a2945f3f2b9d97a87a84</Anchor>
    <Abstract>Destruct the Stream, closing the connection. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isConnected</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>abe9bc7b540a7d560d67125dbe4e86aa2</Anchor>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerForEvents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>a3e448805a804952cc775fb7b3121c706</Anchor>
    <Abstract>Register to receive Events. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRegisteredForEvents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>a1463bdc227c783a9ca38b895fe19c840</Anchor>
    <Abstract>Is this stream registered to receive events. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDescriptor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>ac743480a024cde9c3db79324950e7993</Anchor>
    <Abstract>Get the native descriptor for the data stream. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>a634d0dd031131960fb11bbc2842c959d</Anchor>
    <Abstract>Check if a new Event is available. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>a4ee6b8499d11bd1fe19808df361970af</Anchor>
    <Abstract>Get the next Event. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendSizeHints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>a056d810265c9733f14528ea71f6fec1a</Anchor>
    <Abstract>Send size hints to the stream host to indicate sizes that should be respected by resize operations on...</Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>a3f29c291554881cf3e518fd7c431b208</Anchor>
    <Abstract>Send an image synchronously. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finishFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>ae69d1e42b07027d9488a449b861655c9</Anchor>
    <Abstract>Notify that all the images for this frame have been sent. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disconnected</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>a1021de00de42059139af3808905a54d9</Anchor>
    <Abstract>Emitted after the stream was disconnected. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Future</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>a4a9e3727dddb1c25d5f8cbaf77a35914</Anchor>
    <Abstract>Future signaling success of asyncSend(). </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asyncSend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>a6570d0b18acefed238ba629e02cc4b18</Anchor>
    <Abstract>Send an image and finish the frame asynchronously. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_version.html</Path>
    <Abstract>Information about the current Deflect version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>deflect::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_version.html</Path>
    <Anchor>ae5d71acc7fad06dbcb673e37c905e263</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>deflect::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_version.html</Path>
    <Anchor>aa634ce089d675e03f59580e703d2aaa6</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>deflect::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_version.html</Path>
    <Anchor>ab2bd448e81b1014087e824efacd8fe91</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>deflect::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_version.html</Path>
    <Anchor>ac87161d36ea0dd6d8cc648f3cd6408d6</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>deflect::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_version.html</Path>
    <Anchor>af3f12dad6076c78e85cba4c791ef0292</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>deflect::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_version.html</Path>
    <Anchor>af9af044c68918db0efb0ebc620198e14</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>deflect::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_version.html</Path>
    <Anchor>ad5609c825783681386c5cbb295c632d4</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>deflect::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_version.html</Path>
    <Anchor>a324cd0b47c982f26f290c4a3939bfb68</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::qt::QmlStreamer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::qt::QmlStreamer</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1qt_1_1_qml_streamer.html</Path>
    <Abstract>Based on http://doc.qt.io/qt-5/qtquick-rendercontrol-example.html. </Abstract>
    <DeclaredIn>QmlStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>QmlStreamer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::qt::QmlStreamer</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1qt_1_1_qml_streamer.html</Path>
    <Anchor>ab225aa00c6cdc4a0dcb54d25a5246a6e</Anchor>
    <Abstract>Construct a new qml streamer by loading the QML, accessible by getRootItem() and sets up the Deflect ...</Abstract>
    <DeclaredIn>QmlStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRootItem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::qt::QmlStreamer</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1qt_1_1_qml_streamer.html</Path>
    <Anchor>a38af8a75a8d33fcad833649ba0844c01</Anchor>
    <DeclaredIn>QmlStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflectqt::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflectqt::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflectqt_1_1_version.html</Path>
    <Abstract>Information about the current DeflectQt version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>deflectqt::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflectqt_1_1_version.html</Path>
    <Anchor>ad719dcab026548e7fd7ee9d6cca1d077</Anchor>
    <DeclaredIn>qt/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>deflectqt::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflectqt_1_1_version.html</Path>
    <Anchor>a6e82575721f6c56f603524abd70a8b9f</Anchor>
    <DeclaredIn>qt/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>deflectqt::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflectqt_1_1_version.html</Path>
    <Anchor>a435dcf8e4769d9b65c234ff46c79630a</Anchor>
    <DeclaredIn>qt/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>deflectqt::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflectqt_1_1_version.html</Path>
    <Anchor>a07061034d741f2ac3ee2990f441c74a9</Anchor>
    <DeclaredIn>qt/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>deflectqt::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflectqt_1_1_version.html</Path>
    <Anchor>a619fc2343b6b4f53cfb2145f9fd3632a</Anchor>
    <DeclaredIn>qt/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>deflectqt::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflectqt_1_1_version.html</Path>
    <Anchor>af99fcd20940f4b109a4426c46d6f2c55</Anchor>
    <DeclaredIn>qt/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>deflectqt::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflectqt_1_1_version.html</Path>
    <Anchor>a3e55d79cf8922c5469ffbd51bf694a1f</Anchor>
    <DeclaredIn>qt/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>deflectqt::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflectqt_1_1_version.html</Path>
    <Anchor>a49b067fd920d62cdd1c7a2577ddabd26</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>qt/version.h</DeclaredIn>
  </Token>
</Tokens>
