<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>FIVOX_VERSION_MAJOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>livre_2version_8h.html</Path>
    <Anchor>ae725abfee838f2efbd43ec6b03ad7de0</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>livre/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIVOX_VERSION_MINOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>livre_2version_8h.html</Path>
    <Anchor>a006bcaaddb06b38f1dd6f29584f7c881</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>livre/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIVOX_VERSION_PATCH</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>livre_2version_8h.html</Path>
    <Anchor>a9610fba0f43b6c7409013bac83e41bd6</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>livre/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIVOX_VERSION_REVISION</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>livre_2version_8h.html</Path>
    <Anchor>a77a33e45a2f6d55e67b474f24ff1d532</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>livre/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIVOX_VERSION_ABI</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>livre_2version_8h.html</Path>
    <Anchor>aad799dd8b9fd21024697eee04459860b</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>livre/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIVOX_VERSION_GT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>livre_2version_8h.html</Path>
    <Anchor>a412013758b51c28eed13dbef285a33bc</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>livre/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIVOX_VERSION_GE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>livre_2version_8h.html</Path>
    <Anchor>aee9dd187f8b26d41a9b23d904b3970dd</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>livre/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIVOX_VERSION_LT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>livre_2version_8h.html</Path>
    <Anchor>a520059e6f6900c19ca757e8deb5b79ed</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>livre/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIVOX_VERSION_LE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>livre_2version_8h.html</Path>
    <Anchor>a5a7fdab4fdf8f925bd1102baef84cdc4</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>livre/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIVOX_VERSION_MAJOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>ae725abfee838f2efbd43ec6b03ad7de0</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIVOX_VERSION_MINOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a006bcaaddb06b38f1dd6f29584f7c881</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIVOX_VERSION_PATCH</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a9610fba0f43b6c7409013bac83e41bd6</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIVOX_VERSION_REVISION</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a77a33e45a2f6d55e67b474f24ff1d532</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIVOX_VERSION_ABI</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>aad799dd8b9fd21024697eee04459860b</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIVOX_VERSION_GT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a412013758b51c28eed13dbef285a33bc</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIVOX_VERSION_GE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>aee9dd187f8b26d41a9b23d904b3970dd</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIVOX_VERSION_LT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a520059e6f6900c19ca757e8deb5b79ed</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIVOX_VERSION_LE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a5a7fdab4fdf8f925bd1102baef84cdc4</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changelog</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>changelog.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Features</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>Features.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pointDataEvolution</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>pointDataEvolution.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rescaleOutput</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>rescaleOutput.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>md__jenkins_02_workspace_oss.Fivox.documentation_build_type_Debug_platform_cscsviz-vm_sources_doc_userGuide_applications</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>md__jenkins_02_workspace_oss.Fivox.documentation_build_type_Debug_platform_cscsviz-vm_sources_doc_userGuide_applications.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeVSD</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>computeVSD.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UserGuide</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>UserGuide.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fivox</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>fivox</Scope>
    </TokenIdentifier>
    <Path>namespacefivox.html</Path>
    <Abstract>Field Voxelization Library. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FULLDATARANGE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>fivox</Scope>
    </TokenIdentifier>
    <Path>namespacefivox.html</Path>
    <Anchor>ac6dfd5ad2c742e24be4647a2d650b950</Anchor>
    <Abstract>Indicates to consider all data for potential rescaling. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>density</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>fivox</Scope>
    </TokenIdentifier>
    <Path>namespacefivox.html</Path>
    <Anchor>afb62d6fb959abf801014c895658768a3a35f3675343000d6bb5f10ce451a571a4</Anchor>
    <Abstract>sum( magnitude of events in voxel ) / volume of voxel </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lfp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>fivox</Scope>
    </TokenIdentifier>
    <Path>namespacefivox.html</Path>
    <Anchor>afb62d6fb959abf801014c895658768a3a0e51c219713b61c7d4a62d8de4b423e7</Anchor>
    <Abstract>LFP computation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>field</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>fivox</Scope>
    </TokenIdentifier>
    <Path>namespacefivox.html</Path>
    <Anchor>afb62d6fb959abf801014c895658768a3a06e3d36fa30cea095545139854ad1fb9</Anchor>
    <Abstract>quadratic falloff of magnitude in space </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>fivox</Scope>
    </TokenIdentifier>
    <Path>namespacefivox.html</Path>
    <Anchor>afb62d6fb959abf801014c895658768a3afad6c43b628858e0b472d0c164557fcf</Anchor>
    <Abstract>maximum magnitude of all events in voxel </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>event</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>fivox</Scope>
    </TokenIdentifier>
    <Path>namespacefivox.html</Path>
    <Anchor>afc42aa0bf971ea7c85afbcb4ed8d3455a4119639092e62c55ea8be348e4d9260d</Anchor>
    <Abstract>e.g. spikes reports </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>fivox</Scope>
    </TokenIdentifier>
    <Path>namespacefivox.html</Path>
    <Anchor>afc42aa0bf971ea7c85afbcb4ed8d3455adcf3e36ee8115282aad46485cab6a4be</Anchor>
    <Abstract>e.g. compartment reports </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unknown</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>fivox</Scope>
    </TokenIdentifier>
    <Path>namespacefivox.html</Path>
    <Anchor>a82525812b4d046489a4e3f920714b9fcaad921d60486366258809553a3db49a4a</Anchor>
    <Abstract>Unknown URI scheme. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>fivox</Scope>
    </TokenIdentifier>
    <Path>namespacefivox.html</Path>
    <Anchor>a82525812b4d046489a4e3f920714b9fca098f6bcd4621d373cade4e832627b4f6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compartments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>fivox</Scope>
    </TokenIdentifier>
    <Path>namespacefivox.html</Path>
    <Anchor>a82525812b4d046489a4e3f920714b9fca4e9d78104c402c263f5154f3360372c7</Anchor>
    <Abstract>BBP compartment simulation reports. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>somas</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>fivox</Scope>
    </TokenIdentifier>
    <Path>namespacefivox.html</Path>
    <Anchor>a82525812b4d046489a4e3f920714b9fca31fbce8c7257fd5236df2cae44a085ac</Anchor>
    <Abstract>BBP soma simulation reports. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>spikes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>fivox</Scope>
    </TokenIdentifier>
    <Path>namespacefivox.html</Path>
    <Anchor>a82525812b4d046489a4e3f920714b9fca8ffacdb2b75195d944d3c9fb88fcb83a</Anchor>
    <Abstract>BBP spike simulation reports. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synapses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>fivox</Scope>
    </TokenIdentifier>
    <Path>namespacefivox.html</Path>
    <Anchor>a82525812b4d046489a4e3f920714b9fca866e8ec5e7e57c04ff0daa7921c4d2a5</Anchor>
    <Abstract>BBP synapse positions. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vsd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>fivox</Scope>
    </TokenIdentifier>
    <Path>namespacefivox.html</Path>
    <Anchor>a82525812b4d046489a4e3f920714b9fcac8cfb7e972533537a9a3abd8c387027b</Anchor>
    <Abstract>BBP voltage sensitive dye simulation reports. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fivox::AttenuationCurve</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>fivox::AttenuationCurve</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_attenuation_curve.html</Path>
    <Abstract>Attentuation curve access for depth-based interpolation. </Abstract>
    <DeclaredIn>attenuationCurve.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AttenuationCurve</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::AttenuationCurve</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_attenuation_curve.html</Path>
    <Anchor>a18db6a2e1b1bd420f6faa76784cd4b5d</Anchor>
    <Abstract>Construct an empty attenuation curve. </Abstract>
    <DeclaredIn>attenuationCurve.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AttenuationCurve</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::AttenuationCurve</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_attenuation_curve.html</Path>
    <Anchor>a66436862f197101d002633be373ee779</Anchor>
    <DeclaredIn>attenuationCurve.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAttenuation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::AttenuationCurve</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_attenuation_curve.html</Path>
    <Anchor>a548ea76dc5f2ff2ae158fcdc95c3a025</Anchor>
    <Abstract>Get the attenuation for the given Y-coordinate. </Abstract>
    <DeclaredIn>attenuationCurve.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fivox::CompartmentLoader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>fivox::CompartmentLoader</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_compartment_loader.html</Path>
    <Abstract>Loads BBP compartment report data to be sampled by an EventFunctor. </Abstract>
    <DeclaredIn>compartmentLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompartmentLoader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::CompartmentLoader</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_compartment_loader.html</Path>
    <Anchor>abbfdb52657e1d9bd6bdd7923c3f1bfeb</Anchor>
    <Abstract>Construct a new compartment event source. </Abstract>
    <DeclaredIn>compartmentLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~CompartmentLoader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::CompartmentLoader</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_compartment_loader.html</Path>
    <Anchor>a69c34c4d7a5139c3cd81e4846037efd6</Anchor>
    <Abstract>Destruct this event source. </Abstract>
    <DeclaredIn>compartmentLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a8d2fe69cd37db0c57e6366fd4cbebc83</Anchor>
    <Abstract>Resize the underlying event structure to the specified size, and initialize all event attributes to 0...</Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator[]</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a3912d0b6960006420f832fd0474d2a4a</Anchor>
    <Abstract>Get a reference to the value of an event contained in the EventSource by its index. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumEvents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>aadafb5334f857e9f0c9294441dc73e9d</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPositionsX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>aed37a2d2fe91166bed7a1a8ffe0da4a1</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPositionsY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a90d825d799fb71ad5a28d4ebc1216861</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPositionsZ</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a646afd6a2e71710950fc01723910f9cc</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRadii</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a6f3f0e2bdd5678d75494fb7a93b0e3de</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getValues</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>ab0c4026dea3692838f5feb9270a05c85</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findEvents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a4ea28d127b400412bfbaf3ba1f1638f4</Anchor>
    <Abstract>Find all events in the given area. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBoundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a80f1761c9e83a78d1bbee97230a6432f</Anchor>
    <Abstract>Set bounding box of upcoming events. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBoundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a36cd3f9e13e20bbebfd84a08116234ea</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCutOffDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a134f842c23cde45681f2e154a3e3498c</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>ae525ad76a7bdeaa77ca5401b3705644f</Anchor>
    <Abstract>Update attributes of the event specified by the index. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>adb6b3270e95ba849400723c4b5f3b5f9</Anchor>
    <Abstract>Given a frame number, update the event source with new events to be sampled. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>ae138db1aaf78f76ba8805e03db295961</Anchor>
    <Abstract>Given a timestamp, update the event source with new events to be sampled. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>aef0553017c50ba4f338c986252940c9d</Anchor>
    <Abstract>Gets the valid frame range according to data. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInFrameRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a27a6c48f2b2d0ec7053b171c46b4b8a8</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a8b0b9afd1cd85d9ca7d12cd81dea02fc</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>af6dbbe8f044ddb142f2fbc1cb75b83e2</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>ae3e007a355cc0059809fb64ce4b6158c</Anchor>
    <Abstract>Load and update events for the given chunks of the data source. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a9a793173b9de76aa07661ac5ca55bd5b</Anchor>
    <Abstract>Load and update all events of the current frame. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumChunks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a0876ef2be2459951a604648b0e576b36</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a7bc0e2bc80f3536ecea7e865696d1198</Anchor>
    <Abstract>Set the dt that the datasource is using to correctly compute frame number from time in load()...</Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fivox::CudaImageSource</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>fivox::CudaImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_cuda_image_source.html</Path>
    <Abstract>Image source using a CUDA compute kernel on each pixel to generate the output. </Abstract>
    <DeclaredIn>cudaImageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Self</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>fivox::CudaImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_cuda_image_source.html</Path>
    <Anchor>a0dc803dbc2632f936d8f4210aa9d92c7</Anchor>
    <Abstract>Standard class typedefs. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Self</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a0f201fd40bef7e95187f3f69b5d9a9f5</Anchor>
    <Abstract>Standard class typedefs. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImagePixelType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a59eb3ae9016c17df2aaa9a57c56e9ea4</Anchor>
    <Abstract>Typedef to describe the type of pixel. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImageIndexType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a903d80e9ab5cdc3f6f824c9f1530e836</Anchor>
    <Abstract>Typedef to describe the output and input image index and size types. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>itkNewMacro</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::CudaImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_cuda_image_source.html</Path>
    <Anchor>a28ddfd7fcc407983310be6545959b281</Anchor>
    <Abstract>Method for creation through the object factory. </Abstract>
    <DeclaredIn>cudaImageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>itkNewMacro</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a96696f2dff90b8537ab0176405404c5b</Anchor>
    <Abstract>Method for creation through the object factory. </Abstract>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>itkStaticConstMacro</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a85254497bc383a3e86c8d95aca3cc9db</Anchor>
    <Abstract>ImageDimension enumeration. </Abstract>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEventSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a2f6d166ef99af7b3815e8c565f2cc214</Anchor>
    <Abstract>Set the event source that is used for sampling into the volume. </Abstract>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEventSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a9c18d6e34788517cd492eae9f004e6dd</Anchor>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a151e054f361313546cb1b915480658b2</Anchor>
    <Abstract>Setup size and resolution of output volume depending on user input. </Abstract>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBoundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>ad7c53efb6a48637b9dfff113119effd9</Anchor>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSizeInMicrometer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>ab7df135cca081bd6bb8a75901504b432</Anchor>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSizeInVoxel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a0ece698385897838a2175e3679ce81af</Anchor>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getResolution</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a3ac87e1e9976c6e7ecdbb3b9ec7561aa</Anchor>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImageType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>aff674bf88cccacf89160e951ff3067bb</Anchor>
    <Abstract>Typedef to describe the output image region types. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fivox::DensityFunctor</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>fivox::DensityFunctor</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_density_functor.html</Path>
    <Abstract>Samples events into the given voxel counting magnitude per volume. </Abstract>
    <DeclaredIn>densityFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforeGenerate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::DensityFunctor</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_density_functor.html</Path>
    <Anchor>acb279f184532d1ed0004b277ee1d8592</Anchor>
    <Abstract>Called before threads are starting to voxelize. </Abstract>
    <DeclaredIn>densityFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fivox::EventFunctor</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>fivox::EventFunctor</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_functor.html</Path>
    <Abstract>Samples spatial events into the given voxel. </Abstract>
    <DeclaredIn>eventFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforeGenerate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventFunctor</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_functor.html</Path>
    <Anchor>af1502f221288374242a5b6b4186235d4</Anchor>
    <Abstract>Called before threads are starting to voxelize. </Abstract>
    <DeclaredIn>eventFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fivox::EventsDeleter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>fivox::EventsDeleter</Scope>
    </TokenIdentifier>
    <Path>structfivox_1_1_events_deleter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fivox::EventSource</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Abstract>Base class for an Event source. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a8d2fe69cd37db0c57e6366fd4cbebc83</Anchor>
    <Abstract>Resize the underlying event structure to the specified size, and initialize all event attributes to 0...</Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator[]</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a3912d0b6960006420f832fd0474d2a4a</Anchor>
    <Abstract>Get a reference to the value of an event contained in the EventSource by its index. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumEvents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>aadafb5334f857e9f0c9294441dc73e9d</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPositionsX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>aed37a2d2fe91166bed7a1a8ffe0da4a1</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPositionsY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a90d825d799fb71ad5a28d4ebc1216861</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPositionsZ</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a646afd6a2e71710950fc01723910f9cc</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRadii</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a6f3f0e2bdd5678d75494fb7a93b0e3de</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getValues</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>ab0c4026dea3692838f5feb9270a05c85</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findEvents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a4ea28d127b400412bfbaf3ba1f1638f4</Anchor>
    <Abstract>Find all events in the given area. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBoundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a80f1761c9e83a78d1bbee97230a6432f</Anchor>
    <Abstract>Set bounding box of upcoming events. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBoundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a36cd3f9e13e20bbebfd84a08116234ea</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCutOffDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a134f842c23cde45681f2e154a3e3498c</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>ae525ad76a7bdeaa77ca5401b3705644f</Anchor>
    <Abstract>Update attributes of the event specified by the index. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>adb6b3270e95ba849400723c4b5f3b5f9</Anchor>
    <Abstract>Given a frame number, update the event source with new events to be sampled. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>ae138db1aaf78f76ba8805e03db295961</Anchor>
    <Abstract>Given a timestamp, update the event source with new events to be sampled. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>aef0553017c50ba4f338c986252940c9d</Anchor>
    <Abstract>Gets the valid frame range according to data. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInFrameRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a27a6c48f2b2d0ec7053b171c46b4b8a8</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a8b0b9afd1cd85d9ca7d12cd81dea02fc</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>af6dbbe8f044ddb142f2fbc1cb75b83e2</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>ae3e007a355cc0059809fb64ce4b6158c</Anchor>
    <Abstract>Load and update events for the given chunks of the data source. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a9a793173b9de76aa07661ac5ca55bd5b</Anchor>
    <Abstract>Load and update all events of the current frame. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumChunks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a0876ef2be2459951a604648b0e576b36</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a7bc0e2bc80f3536ecea7e865696d1198</Anchor>
    <Abstract>Set the dt that the datasource is using to correctly compute frame number from time in load()...</Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_getTimeRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a6b93749e2981a953d0c85b0ea1d1340a</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a5b196eb73d7e12308f4608216c163c4f</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>aab3aac43d066fb2d08abd6b3e670d782</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_hasEnded</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>aebf81e2bb5fd982329a4307ba11404dc</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_getNumChunks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a55b57ea62ed3d0c9999573d88c7f8db8</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fivox::EventValueSummationImageSource</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>fivox::EventValueSummationImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_value_summation_image_source.html</Path>
    <Abstract>Image source iterating over all events and summing their values into the voxel they fall into...</Abstract>
    <DeclaredIn>eventValueSummationImageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Self</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>fivox::EventValueSummationImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_value_summation_image_source.html</Path>
    <Anchor>a9d07e1b5fe6d2b52ff3a4c028e23c489</Anchor>
    <Abstract>Standard class typedefs. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Self</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a0f201fd40bef7e95187f3f69b5d9a9f5</Anchor>
    <Abstract>Standard class typedefs. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImagePixelType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a59eb3ae9016c17df2aaa9a57c56e9ea4</Anchor>
    <Abstract>Typedef to describe the type of pixel. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImageIndexType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a903d80e9ab5cdc3f6f824c9f1530e836</Anchor>
    <Abstract>Typedef to describe the output and input image index and size types. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>itkNewMacro</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventValueSummationImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_value_summation_image_source.html</Path>
    <Anchor>a92fafeafdd1dddc8a73fb04999a330cf</Anchor>
    <Abstract>Method for creation through the object factory. </Abstract>
    <DeclaredIn>eventValueSummationImageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>itkNewMacro</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a96696f2dff90b8537ab0176405404c5b</Anchor>
    <Abstract>Method for creation through the object factory. </Abstract>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>itkStaticConstMacro</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a85254497bc383a3e86c8d95aca3cc9db</Anchor>
    <Abstract>ImageDimension enumeration. </Abstract>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEventSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a2f6d166ef99af7b3815e8c565f2cc214</Anchor>
    <Abstract>Set the event source that is used for sampling into the volume. </Abstract>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEventSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a9c18d6e34788517cd492eae9f004e6dd</Anchor>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a151e054f361313546cb1b915480658b2</Anchor>
    <Abstract>Setup size and resolution of output volume depending on user input. </Abstract>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBoundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>ad7c53efb6a48637b9dfff113119effd9</Anchor>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSizeInMicrometer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>ab7df135cca081bd6bb8a75901504b432</Anchor>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSizeInVoxel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a0ece698385897838a2175e3679ce81af</Anchor>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getResolution</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a3ac87e1e9976c6e7ecdbb3b9ec7561aa</Anchor>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImageType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>aff674bf88cccacf89160e951ff3067bb</Anchor>
    <Abstract>Typedef to describe the output image region types. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fivox::FieldFunctor</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>fivox::FieldFunctor</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_field_functor.html</Path>
    <Abstract>Samples spatial events into the given pixel using a squared falloff. </Abstract>
    <DeclaredIn>fieldFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforeGenerate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventFunctor</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_functor.html</Path>
    <Anchor>af1502f221288374242a5b6b4186235d4</Anchor>
    <Abstract>Called before threads are starting to voxelize. </Abstract>
    <DeclaredIn>eventFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fivox::FrequencyFunctor</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>fivox::FrequencyFunctor</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_frequency_functor.html</Path>
    <Abstract>Projects maximum frequency of events into the given voxel. </Abstract>
    <DeclaredIn>frequencyFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforeGenerate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::FrequencyFunctor</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_frequency_functor.html</Path>
    <Anchor>a731b725cb6323b39223882c4b1dc8b3e</Anchor>
    <Abstract>Called before threads are starting to voxelize. </Abstract>
    <DeclaredIn>frequencyFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fivox::FunctorImageSource</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>fivox::FunctorImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_functor_image_source.html</Path>
    <Abstract>Image source using an EventFunctor on each pixel to generate the output. </Abstract>
    <DeclaredIn>functorImageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Self</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>fivox::FunctorImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_functor_image_source.html</Path>
    <Anchor>a74e94291cf87bf6f6751a245371d2bdb</Anchor>
    <Abstract>Standard class typedefs. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Self</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a0f201fd40bef7e95187f3f69b5d9a9f5</Anchor>
    <Abstract>Standard class typedefs. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImagePixelType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a59eb3ae9016c17df2aaa9a57c56e9ea4</Anchor>
    <Abstract>Typedef to describe the type of pixel. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImageIndexType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a903d80e9ab5cdc3f6f824c9f1530e836</Anchor>
    <Abstract>Typedef to describe the output and input image index and size types. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>itkNewMacro</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::FunctorImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_functor_image_source.html</Path>
    <Anchor>a5cc570675cf8708c42f2db851c205646</Anchor>
    <Abstract>Method for creation through the object factory. </Abstract>
    <DeclaredIn>functorImageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFunctor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::FunctorImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_functor_image_source.html</Path>
    <Anchor>a3f1706740b6029f651318743ea4d59c5</Anchor>
    <DeclaredIn>functorImageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFunctor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::FunctorImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_functor_image_source.html</Path>
    <Anchor>ab594d49db6785590d5a7f96fc1dac78e</Anchor>
    <Abstract>Set a new functor. </Abstract>
    <DeclaredIn>functorImageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>itkNewMacro</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a96696f2dff90b8537ab0176405404c5b</Anchor>
    <Abstract>Method for creation through the object factory. </Abstract>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>itkStaticConstMacro</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a85254497bc383a3e86c8d95aca3cc9db</Anchor>
    <Abstract>ImageDimension enumeration. </Abstract>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEventSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a2f6d166ef99af7b3815e8c565f2cc214</Anchor>
    <Abstract>Set the event source that is used for sampling into the volume. </Abstract>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEventSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a9c18d6e34788517cd492eae9f004e6dd</Anchor>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a151e054f361313546cb1b915480658b2</Anchor>
    <Abstract>Setup size and resolution of output volume depending on user input. </Abstract>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBoundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>ad7c53efb6a48637b9dfff113119effd9</Anchor>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSizeInMicrometer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>ab7df135cca081bd6bb8a75901504b432</Anchor>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSizeInVoxel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a0ece698385897838a2175e3679ce81af</Anchor>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getResolution</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a3ac87e1e9976c6e7ecdbb3b9ec7561aa</Anchor>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThreadedGenerateData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::FunctorImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_functor_image_source.html</Path>
    <Anchor>a0283a3997a2d864871a2ead3adb7544a</Anchor>
    <Abstract>FunctorImageSource is implemented as a multithreaded filter. </Abstract>
    <DeclaredIn>functorImageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImageType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>aff674bf88cccacf89160e951ff3067bb</Anchor>
    <Abstract>Typedef to describe the output image region types. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fivox::ImageSource</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Abstract>Base class for any image source to sample data from an event source. </Abstract>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Self</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a0f201fd40bef7e95187f3f69b5d9a9f5</Anchor>
    <Abstract>Standard class typedefs. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImagePixelType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a59eb3ae9016c17df2aaa9a57c56e9ea4</Anchor>
    <Abstract>Typedef to describe the type of pixel. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImageIndexType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a903d80e9ab5cdc3f6f824c9f1530e836</Anchor>
    <Abstract>Typedef to describe the output and input image index and size types. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>itkNewMacro</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a96696f2dff90b8537ab0176405404c5b</Anchor>
    <Abstract>Method for creation through the object factory. </Abstract>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>itkStaticConstMacro</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a85254497bc383a3e86c8d95aca3cc9db</Anchor>
    <Abstract>ImageDimension enumeration. </Abstract>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEventSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a2f6d166ef99af7b3815e8c565f2cc214</Anchor>
    <Abstract>Set the event source that is used for sampling into the volume. </Abstract>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEventSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a9c18d6e34788517cd492eae9f004e6dd</Anchor>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a151e054f361313546cb1b915480658b2</Anchor>
    <Abstract>Setup size and resolution of output volume depending on user input. </Abstract>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBoundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>ad7c53efb6a48637b9dfff113119effd9</Anchor>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSizeInMicrometer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>ab7df135cca081bd6bb8a75901504b432</Anchor>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSizeInVoxel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a0ece698385897838a2175e3679ce81af</Anchor>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getResolution</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a3ac87e1e9976c6e7ecdbb3b9ec7561aa</Anchor>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImageType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>aff674bf88cccacf89160e951ff3067bb</Anchor>
    <Abstract>Typedef to describe the output image region types. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fivox::LFPFunctor</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>fivox::LFPFunctor</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_l_f_p_functor.html</Path>
    <Abstract>Samples spatial events into the given pixel using a squared falloff. </Abstract>
    <DeclaredIn>lfpFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforeGenerate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventFunctor</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_functor.html</Path>
    <Anchor>af1502f221288374242a5b6b4186235d4</Anchor>
    <Abstract>Called before threads are starting to voxelize. </Abstract>
    <DeclaredIn>eventFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fivox::ProgressObserver</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>fivox::ProgressObserver</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_progress_observer.html</Path>
    <Abstract>Display the progress of an ITK filter on std::cout and emits a progress event using ZeroEQ (if availa...</Abstract>
    <DeclaredIn>progressObserver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ProgressObserver</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_progress_observer.html</Path>
    <Anchor>a2b034e9151c6391a8a5086dbcdb3e90a</Anchor>
    <Abstract>Resets the progress display for a new iteration. </Abstract>
    <DeclaredIn>progressObserver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enablePrint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ProgressObserver</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_progress_observer.html</Path>
    <Anchor>a64888b2cc26609aa4ad4979f06956b0d</Anchor>
    <Abstract>Enables cout printing of progress. </Abstract>
    <DeclaredIn>progressObserver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fivox::ScaleFilter</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>fivox::ScaleFilter</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_scale_filter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScaleFilter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ScaleFilter</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_scale_filter.html</Path>
    <Anchor>af2ecf88a3ac8fcee1d23eca561f6126e</Anchor>
    <Abstract>Default constructor (used in VolumeWriter&lt; float &gt;) </Abstract>
    <DeclaredIn>scaleFilter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScaleFilter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ScaleFilter</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_scale_filter.html</Path>
    <Anchor>ac3d5bfb13f2e0f4ad062b8f81837c748</Anchor>
    <Abstract>ScaleFilter constructor that takes as parameters the volume to be scaled and the input data range...</Abstract>
    <DeclaredIn>scaleFilter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fivox::SomaLoader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>fivox::SomaLoader</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_soma_loader.html</Path>
    <Abstract>Loads BBP soma report data to be sampled by an EventFunctor. </Abstract>
    <DeclaredIn>somaLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SomaLoader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::SomaLoader</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_soma_loader.html</Path>
    <Anchor>a337fcd7644e87478989c016dbfe4aa77</Anchor>
    <Abstract>Construct a new soma event source. </Abstract>
    <DeclaredIn>somaLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a8d2fe69cd37db0c57e6366fd4cbebc83</Anchor>
    <Abstract>Resize the underlying event structure to the specified size, and initialize all event attributes to 0...</Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator[]</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a3912d0b6960006420f832fd0474d2a4a</Anchor>
    <Abstract>Get a reference to the value of an event contained in the EventSource by its index. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumEvents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>aadafb5334f857e9f0c9294441dc73e9d</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPositionsX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>aed37a2d2fe91166bed7a1a8ffe0da4a1</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPositionsY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a90d825d799fb71ad5a28d4ebc1216861</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPositionsZ</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a646afd6a2e71710950fc01723910f9cc</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRadii</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a6f3f0e2bdd5678d75494fb7a93b0e3de</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getValues</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>ab0c4026dea3692838f5feb9270a05c85</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findEvents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a4ea28d127b400412bfbaf3ba1f1638f4</Anchor>
    <Abstract>Find all events in the given area. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBoundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a80f1761c9e83a78d1bbee97230a6432f</Anchor>
    <Abstract>Set bounding box of upcoming events. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBoundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a36cd3f9e13e20bbebfd84a08116234ea</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCutOffDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a134f842c23cde45681f2e154a3e3498c</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>ae525ad76a7bdeaa77ca5401b3705644f</Anchor>
    <Abstract>Update attributes of the event specified by the index. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>adb6b3270e95ba849400723c4b5f3b5f9</Anchor>
    <Abstract>Given a frame number, update the event source with new events to be sampled. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>ae138db1aaf78f76ba8805e03db295961</Anchor>
    <Abstract>Given a timestamp, update the event source with new events to be sampled. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>aef0553017c50ba4f338c986252940c9d</Anchor>
    <Abstract>Gets the valid frame range according to data. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInFrameRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a27a6c48f2b2d0ec7053b171c46b4b8a8</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a8b0b9afd1cd85d9ca7d12cd81dea02fc</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>af6dbbe8f044ddb142f2fbc1cb75b83e2</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>ae3e007a355cc0059809fb64ce4b6158c</Anchor>
    <Abstract>Load and update events for the given chunks of the data source. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a9a793173b9de76aa07661ac5ca55bd5b</Anchor>
    <Abstract>Load and update all events of the current frame. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumChunks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a0876ef2be2459951a604648b0e576b36</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a7bc0e2bc80f3536ecea7e865696d1198</Anchor>
    <Abstract>Set the dt that the datasource is using to correctly compute frame number from time in load()...</Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fivox::SpikeLoader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>fivox::SpikeLoader</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_spike_loader.html</Path>
    <Abstract>Loads BBP or NEST spike report data to be sampled by an EventFunctor. </Abstract>
    <DeclaredIn>spikeLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpikeLoader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::SpikeLoader</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_spike_loader.html</Path>
    <Anchor>a7145e50d6dd6756a3defff13aa570b15</Anchor>
    <Abstract>Construct a new spike event source. </Abstract>
    <DeclaredIn>spikeLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a8d2fe69cd37db0c57e6366fd4cbebc83</Anchor>
    <Abstract>Resize the underlying event structure to the specified size, and initialize all event attributes to 0...</Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator[]</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a3912d0b6960006420f832fd0474d2a4a</Anchor>
    <Abstract>Get a reference to the value of an event contained in the EventSource by its index. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumEvents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>aadafb5334f857e9f0c9294441dc73e9d</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPositionsX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>aed37a2d2fe91166bed7a1a8ffe0da4a1</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPositionsY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a90d825d799fb71ad5a28d4ebc1216861</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPositionsZ</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a646afd6a2e71710950fc01723910f9cc</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRadii</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a6f3f0e2bdd5678d75494fb7a93b0e3de</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getValues</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>ab0c4026dea3692838f5feb9270a05c85</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findEvents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a4ea28d127b400412bfbaf3ba1f1638f4</Anchor>
    <Abstract>Find all events in the given area. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBoundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a80f1761c9e83a78d1bbee97230a6432f</Anchor>
    <Abstract>Set bounding box of upcoming events. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBoundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a36cd3f9e13e20bbebfd84a08116234ea</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCutOffDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a134f842c23cde45681f2e154a3e3498c</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>ae525ad76a7bdeaa77ca5401b3705644f</Anchor>
    <Abstract>Update attributes of the event specified by the index. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>adb6b3270e95ba849400723c4b5f3b5f9</Anchor>
    <Abstract>Given a frame number, update the event source with new events to be sampled. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>ae138db1aaf78f76ba8805e03db295961</Anchor>
    <Abstract>Given a timestamp, update the event source with new events to be sampled. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>aef0553017c50ba4f338c986252940c9d</Anchor>
    <Abstract>Gets the valid frame range according to data. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInFrameRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a27a6c48f2b2d0ec7053b171c46b4b8a8</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a8b0b9afd1cd85d9ca7d12cd81dea02fc</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>af6dbbe8f044ddb142f2fbc1cb75b83e2</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>ae3e007a355cc0059809fb64ce4b6158c</Anchor>
    <Abstract>Load and update events for the given chunks of the data source. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a9a793173b9de76aa07661ac5ca55bd5b</Anchor>
    <Abstract>Load and update all events of the current frame. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumChunks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a0876ef2be2459951a604648b0e576b36</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a7bc0e2bc80f3536ecea7e865696d1198</Anchor>
    <Abstract>Set the dt that the datasource is using to correctly compute frame number from time in load()...</Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fivox::SynapseLoader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>fivox::SynapseLoader</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_synapse_loader.html</Path>
    <Abstract>Loads BBP synapse files to be sampled by an EventFunctor. </Abstract>
    <DeclaredIn>synapseLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SynapseLoader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::SynapseLoader</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_synapse_loader.html</Path>
    <Anchor>a4256a9c1b66f9d6e3391bdf2abedbd48</Anchor>
    <Abstract>Construct a new synapse event source. </Abstract>
    <DeclaredIn>synapseLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a8d2fe69cd37db0c57e6366fd4cbebc83</Anchor>
    <Abstract>Resize the underlying event structure to the specified size, and initialize all event attributes to 0...</Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator[]</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a3912d0b6960006420f832fd0474d2a4a</Anchor>
    <Abstract>Get a reference to the value of an event contained in the EventSource by its index. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumEvents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>aadafb5334f857e9f0c9294441dc73e9d</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPositionsX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>aed37a2d2fe91166bed7a1a8ffe0da4a1</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPositionsY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a90d825d799fb71ad5a28d4ebc1216861</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPositionsZ</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a646afd6a2e71710950fc01723910f9cc</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRadii</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a6f3f0e2bdd5678d75494fb7a93b0e3de</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getValues</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>ab0c4026dea3692838f5feb9270a05c85</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findEvents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a4ea28d127b400412bfbaf3ba1f1638f4</Anchor>
    <Abstract>Find all events in the given area. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBoundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a80f1761c9e83a78d1bbee97230a6432f</Anchor>
    <Abstract>Set bounding box of upcoming events. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBoundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a36cd3f9e13e20bbebfd84a08116234ea</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCutOffDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a134f842c23cde45681f2e154a3e3498c</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>ae525ad76a7bdeaa77ca5401b3705644f</Anchor>
    <Abstract>Update attributes of the event specified by the index. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>adb6b3270e95ba849400723c4b5f3b5f9</Anchor>
    <Abstract>Given a frame number, update the event source with new events to be sampled. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>ae138db1aaf78f76ba8805e03db295961</Anchor>
    <Abstract>Given a timestamp, update the event source with new events to be sampled. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>aef0553017c50ba4f338c986252940c9d</Anchor>
    <Abstract>Gets the valid frame range according to data. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInFrameRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a27a6c48f2b2d0ec7053b171c46b4b8a8</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a8b0b9afd1cd85d9ca7d12cd81dea02fc</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>af6dbbe8f044ddb142f2fbc1cb75b83e2</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>ae3e007a355cc0059809fb64ce4b6158c</Anchor>
    <Abstract>Load and update events for the given chunks of the data source. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a9a793173b9de76aa07661ac5ca55bd5b</Anchor>
    <Abstract>Load and update all events of the current frame. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumChunks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a0876ef2be2459951a604648b0e576b36</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a7bc0e2bc80f3536ecea7e865696d1198</Anchor>
    <Abstract>Set the dt that the datasource is using to correctly compute frame number from time in load()...</Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fivox::TestLoader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>fivox::TestLoader</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_test_loader.html</Path>
    <Abstract>Create a set of dummy events, arranged in a vertical straight line, to be sampled by an EventFunctor...</Abstract>
    <DeclaredIn>testLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TestLoader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::TestLoader</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_test_loader.html</Path>
    <Anchor>a97d6f1efcbaeae2cfd1ff8d265b245a5</Anchor>
    <Abstract>Construct a new test event source. </Abstract>
    <DeclaredIn>testLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a8d2fe69cd37db0c57e6366fd4cbebc83</Anchor>
    <Abstract>Resize the underlying event structure to the specified size, and initialize all event attributes to 0...</Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator[]</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a3912d0b6960006420f832fd0474d2a4a</Anchor>
    <Abstract>Get a reference to the value of an event contained in the EventSource by its index. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumEvents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>aadafb5334f857e9f0c9294441dc73e9d</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPositionsX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>aed37a2d2fe91166bed7a1a8ffe0da4a1</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPositionsY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a90d825d799fb71ad5a28d4ebc1216861</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPositionsZ</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a646afd6a2e71710950fc01723910f9cc</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRadii</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a6f3f0e2bdd5678d75494fb7a93b0e3de</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getValues</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>ab0c4026dea3692838f5feb9270a05c85</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findEvents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a4ea28d127b400412bfbaf3ba1f1638f4</Anchor>
    <Abstract>Find all events in the given area. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBoundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a80f1761c9e83a78d1bbee97230a6432f</Anchor>
    <Abstract>Set bounding box of upcoming events. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBoundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a36cd3f9e13e20bbebfd84a08116234ea</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCutOffDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a134f842c23cde45681f2e154a3e3498c</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>ae525ad76a7bdeaa77ca5401b3705644f</Anchor>
    <Abstract>Update attributes of the event specified by the index. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>adb6b3270e95ba849400723c4b5f3b5f9</Anchor>
    <Abstract>Given a frame number, update the event source with new events to be sampled. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>ae138db1aaf78f76ba8805e03db295961</Anchor>
    <Abstract>Given a timestamp, update the event source with new events to be sampled. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>aef0553017c50ba4f338c986252940c9d</Anchor>
    <Abstract>Gets the valid frame range according to data. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInFrameRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a27a6c48f2b2d0ec7053b171c46b4b8a8</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a8b0b9afd1cd85d9ca7d12cd81dea02fc</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>af6dbbe8f044ddb142f2fbc1cb75b83e2</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>ae3e007a355cc0059809fb64ce4b6158c</Anchor>
    <Abstract>Load and update events for the given chunks of the data source. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a9a793173b9de76aa07661ac5ca55bd5b</Anchor>
    <Abstract>Load and update all events of the current frame. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumChunks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a0876ef2be2459951a604648b0e576b36</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a7bc0e2bc80f3536ecea7e865696d1198</Anchor>
    <Abstract>Set the dt that the datasource is using to correctly compute frame number from time in load()...</Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fivox::URIHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>fivox::URIHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_u_r_i_handler.html</Path>
    <Abstract>Process an URI to provide all the parameters specified in it. </Abstract>
    <DeclaredIn>uriHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>URIHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::URIHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_u_r_i_handler.html</Path>
    <Anchor>a7f206af2931241f63ab8cb5dfcd513c0</Anchor>
    <Abstract>Construct a new URI handler. </Abstract>
    <DeclaredIn>uriHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~URIHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::URIHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_u_r_i_handler.html</Path>
    <Anchor>a54e53bdbffa6cbe9ff8b11d65bfed0f2</Anchor>
    <Abstract>Destruct this parameter processor. </Abstract>
    <DeclaredIn>uriHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::URIHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_u_r_i_handler.html</Path>
    <Anchor>a0fdb8fe8f1c4d024d547144893bc7dae</Anchor>
    <DeclaredIn>uriHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::URIHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_u_r_i_handler.html</Path>
    <Anchor>a7d33cf6c62be950ad8ef15cb78ea6ad5</Anchor>
    <DeclaredIn>uriHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPreGIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::URIHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_u_r_i_handler.html</Path>
    <Anchor>af36e1db5dadda54db06c18e336abba29</Anchor>
    <DeclaredIn>uriHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getReport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::URIHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_u_r_i_handler.html</Path>
    <Anchor>aeab4555ad69f10c935c1d2f83e76f6d8</Anchor>
    <Abstract>Get the specified report name. </Abstract>
    <DeclaredIn>uriHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAreas</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::URIHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_u_r_i_handler.html</Path>
    <Anchor>a1db2cc9dd1163e84084c1ca71c36ef78</Anchor>
    <Abstract>Get the specified path to the area report file. </Abstract>
    <DeclaredIn>uriHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::URIHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_u_r_i_handler.html</Path>
    <Anchor>a0cf08598c30cf1df02634b4a4a2aa776</Anchor>
    <Abstract>Get the specified timestep (dt). </Abstract>
    <DeclaredIn>uriHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSpikes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::URIHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_u_r_i_handler.html</Path>
    <Anchor>abb682a65e3544a28adf31156e0b0cdf2</Anchor>
    <DeclaredIn>uriHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::URIHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_u_r_i_handler.html</Path>
    <Anchor>acae4cf6c1736a55ec44a119eb4f89a97</Anchor>
    <Abstract>Get the specified duration. </Abstract>
    <DeclaredIn>uriHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInputRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::URIHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_u_r_i_handler.html</Path>
    <Anchor>aed19b5142e333bf6c7a49d8484d7ffd6</Anchor>
    <Abstract>Get the range of values to consider in the input data for rescaling into an output data type that is ...</Abstract>
    <DeclaredIn>uriHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getResolution</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::URIHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_u_r_i_handler.html</Path>
    <Anchor>ae4b1444288b0c08a3151f8cdd64899b4</Anchor>
    <Abstract>Get the specified resolution in voxels per unit (typically um). </Abstract>
    <DeclaredIn>uriHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxBlockSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::URIHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_u_r_i_handler.html</Path>
    <Anchor>a98ecf0123ffd1d0a10aef2c380a6e435</Anchor>
    <Abstract>Get the specified maximum size per block (bytes). </Abstract>
    <DeclaredIn>uriHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCutoffDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::URIHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_u_r_i_handler.html</Path>
    <Anchor>a708bdf0a86741e5a715c3235c47e50bc</Anchor>
    <Abstract>Get the specified cutoff distance in micrometers. </Abstract>
    <DeclaredIn>uriHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getExtendDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::URIHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_u_r_i_handler.html</Path>
    <Anchor>a03c056ea9813556d5e49492f894811ce</Anchor>
    <Abstract>Get the additional distance, in micrometers, by which the original data volume will be extended...</Abstract>
    <DeclaredIn>uriHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::URIHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_u_r_i_handler.html</Path>
    <Anchor>abf6d8df653ba4dafbca65b47f9cf389f</Anchor>
    <Abstract>Get the type of the volume that is being loaded (present in the URI schema) </Abstract>
    <DeclaredIn>uriHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFunctorType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::URIHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_u_r_i_handler.html</Path>
    <Anchor>aebf008427ee3f0db8977d93777b80b6b</Anchor>
    <Abstract>Available functors are &quot;density&quot;, &quot;field&quot; and &quot;frequency&quot;. </Abstract>
    <DeclaredIn>uriHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getReferenceVolume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::URIHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_u_r_i_handler.html</Path>
    <Anchor>adaf76a2c09693976923e2af4ce78926a</Anchor>
    <DeclaredIn>uriHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSizeInVoxel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::URIHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_u_r_i_handler.html</Path>
    <Anchor>a3bd5552266d04c2d24806f829b0d64ce</Anchor>
    <DeclaredIn>uriHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDescription</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::URIHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_u_r_i_handler.html</Path>
    <Anchor>a53abfe174aae35fefce65ad5010f2500</Anchor>
    <DeclaredIn>uriHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newImageSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::URIHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_u_r_i_handler.html</Path>
    <Anchor>a5828eaa334f6cdce1ffb2b6a82470382</Anchor>
    <DeclaredIn>uriHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newFunctor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::URIHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_u_r_i_handler.html</Path>
    <Anchor>a1a3a6485f94f0bf0e8ce74230b636643</Anchor>
    <DeclaredIn>uriHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newEventSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::URIHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_u_r_i_handler.html</Path>
    <Anchor>aaf2cd09ffd22d4a9ab90810c917f683b</Anchor>
    <DeclaredIn>uriHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fivox::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>fivox::Version</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_version.html</Path>
    <Abstract>Information about the current LivreFivoxSource version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>fivox::Version</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_version.html</Path>
    <Anchor>ac9f4e74af906258ba1fa6624944ce592</Anchor>
    <DeclaredIn>livre/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>fivox::Version</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_version.html</Path>
    <Anchor>a8bcf951c8c14d7e0f5e01c004ca6c916</Anchor>
    <DeclaredIn>livre/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>fivox::Version</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_version.html</Path>
    <Anchor>a268eaaeac25024e98105256728001749</Anchor>
    <DeclaredIn>livre/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>fivox::Version</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_version.html</Path>
    <Anchor>a205b597ac703c03cb828c240f77ea53e</Anchor>
    <DeclaredIn>livre/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>fivox::Version</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_version.html</Path>
    <Anchor>a94f45590b48b3539e6c455bd094710f6</Anchor>
    <DeclaredIn>livre/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>fivox::Version</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_version.html</Path>
    <Anchor>a6d258bd9a6a01c5f9e4ebe4f7fb19f80</Anchor>
    <DeclaredIn>livre/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>fivox::Version</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_version.html</Path>
    <Anchor>a66a4bd35cf85420c6cc92c5d0a70ace2</Anchor>
    <DeclaredIn>livre/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>fivox::Version</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_version.html</Path>
    <Anchor>a65572d35b2db7e801011d76a069cd7a5</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>livre/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>fivox::Version</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_version.html</Path>
    <Anchor>ac9f4e74af906258ba1fa6624944ce592</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>fivox::Version</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_version.html</Path>
    <Anchor>a8bcf951c8c14d7e0f5e01c004ca6c916</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>fivox::Version</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_version.html</Path>
    <Anchor>a268eaaeac25024e98105256728001749</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>fivox::Version</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_version.html</Path>
    <Anchor>a205b597ac703c03cb828c240f77ea53e</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>fivox::Version</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_version.html</Path>
    <Anchor>a94f45590b48b3539e6c455bd094710f6</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>fivox::Version</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_version.html</Path>
    <Anchor>a6d258bd9a6a01c5f9e4ebe4f7fb19f80</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>fivox::Version</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_version.html</Path>
    <Anchor>a66a4bd35cf85420c6cc92c5d0a70ace2</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>fivox::Version</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_version.html</Path>
    <Anchor>a65572d35b2db7e801011d76a069cd7a5</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fivox::VolumeHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>fivox::VolumeHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_volume_handler.html</Path>
    <Abstract>Performs common volume operations based on its size and extent. </Abstract>
    <DeclaredIn>volumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VolumeHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::VolumeHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_volume_handler.html</Path>
    <Anchor>a0b511d4f652bad0c4d36c01aeb363745</Anchor>
    <DeclaredIn>volumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeRegion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::VolumeHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_volume_handler.html</Path>
    <Anchor>aa1f521b1223cb5a8e842f304fb369d25</Anchor>
    <Abstract>Compute the region of interest of the volume. </Abstract>
    <DeclaredIn>volumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeSpacing</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::VolumeHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_volume_handler.html</Path>
    <Anchor>ad962ac1521b69401af0c27382d65efb9</Anchor>
    <Abstract>Compute the spacing of the volume. </Abstract>
    <DeclaredIn>volumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeOrigin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::VolumeHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_volume_handler.html</Path>
    <Anchor>a601ec4d61a929b4364f49a1e60a7ef7e</Anchor>
    <Abstract>Compute the origin of the volume. </Abstract>
    <DeclaredIn>volumeHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fivox::VSDLoader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>fivox::VSDLoader</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_v_s_d_loader.html</Path>
    <Abstract>Loads BBP report data for voltage sensitive dye sampling. </Abstract>
    <DeclaredIn>vsdLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VSDLoader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::VSDLoader</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_v_s_d_loader.html</Path>
    <Anchor>af8b4b591f60627c4a35a9880a6759de4</Anchor>
    <Abstract>Construct a new vsd event source. </Abstract>
    <DeclaredIn>vsdLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~VSDLoader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::VSDLoader</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_v_s_d_loader.html</Path>
    <Anchor>a9e54766cac5507770449a9100e9b45b6</Anchor>
    <Abstract>Destruct this vsd event source. </Abstract>
    <DeclaredIn>vsdLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCurve</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::VSDLoader</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_v_s_d_loader.html</Path>
    <Anchor>a47dfc2bd8fbb7c24aa2ecfde9c7c4d9e</Anchor>
    <Abstract>Set the attenuation curve that will be applied to the computed events. </Abstract>
    <DeclaredIn>vsdLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInterpolation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::VSDLoader</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_v_s_d_loader.html</Path>
    <Anchor>ae65aa5de26aa8dc6f1561b215e801e01</Anchor>
    <Abstract>Enable the interpolation of the attenuation values from the dye curve. </Abstract>
    <DeclaredIn>vsdLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::VSDLoader</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_v_s_d_loader.html</Path>
    <Anchor>a6f669db2e5feea6e248917676a310b15</Anchor>
    <DeclaredIn>vsdLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSomaPositions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::VSDLoader</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_v_s_d_loader.html</Path>
    <Anchor>a90b6473e4d000b0ef0c73c3461e6d8ca</Anchor>
    <DeclaredIn>vsdLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRestingPotential</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::VSDLoader</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_v_s_d_loader.html</Path>
    <Anchor>acff77e765afbb2309f71cfbebb7ec9e5</Anchor>
    <Abstract>Set the resting potential that will be used for the computation of the VSD. </Abstract>
    <DeclaredIn>vsdLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAreaMultiplier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::VSDLoader</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_v_s_d_loader.html</Path>
    <Anchor>a39936d1100ee2dd7fd69faf386cefda0</Anchor>
    <Abstract>Set the multiplier for surface area in background fluorescence term value. </Abstract>
    <DeclaredIn>vsdLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSpikeFilter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::VSDLoader</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_v_s_d_loader.html</Path>
    <Anchor>a47243769a7575beb804e47f6b0c42c55</Anchor>
    <Abstract>Enable the spike filtering. </Abstract>
    <DeclaredIn>vsdLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setApThreshold</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::VSDLoader</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_v_s_d_loader.html</Path>
    <Anchor>aac1c487eb853e071a61fcebb4b372215</Anchor>
    <Abstract>When the spike filtering is enabled, use this to set the action potential threshold, in millivolts. </Abstract>
    <DeclaredIn>vsdLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a8d2fe69cd37db0c57e6366fd4cbebc83</Anchor>
    <Abstract>Resize the underlying event structure to the specified size, and initialize all event attributes to 0...</Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator[]</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a3912d0b6960006420f832fd0474d2a4a</Anchor>
    <Abstract>Get a reference to the value of an event contained in the EventSource by its index. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumEvents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>aadafb5334f857e9f0c9294441dc73e9d</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPositionsX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>aed37a2d2fe91166bed7a1a8ffe0da4a1</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPositionsY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a90d825d799fb71ad5a28d4ebc1216861</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPositionsZ</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a646afd6a2e71710950fc01723910f9cc</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRadii</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a6f3f0e2bdd5678d75494fb7a93b0e3de</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getValues</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>ab0c4026dea3692838f5feb9270a05c85</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findEvents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a4ea28d127b400412bfbaf3ba1f1638f4</Anchor>
    <Abstract>Find all events in the given area. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBoundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a80f1761c9e83a78d1bbee97230a6432f</Anchor>
    <Abstract>Set bounding box of upcoming events. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBoundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a36cd3f9e13e20bbebfd84a08116234ea</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCutOffDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a134f842c23cde45681f2e154a3e3498c</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>ae525ad76a7bdeaa77ca5401b3705644f</Anchor>
    <Abstract>Update attributes of the event specified by the index. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>adb6b3270e95ba849400723c4b5f3b5f9</Anchor>
    <Abstract>Given a frame number, update the event source with new events to be sampled. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>ae138db1aaf78f76ba8805e03db295961</Anchor>
    <Abstract>Given a timestamp, update the event source with new events to be sampled. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>aef0553017c50ba4f338c986252940c9d</Anchor>
    <Abstract>Gets the valid frame range according to data. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInFrameRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a27a6c48f2b2d0ec7053b171c46b4b8a8</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a8b0b9afd1cd85d9ca7d12cd81dea02fc</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>af6dbbe8f044ddb142f2fbc1cb75b83e2</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>ae3e007a355cc0059809fb64ce4b6158c</Anchor>
    <Abstract>Load and update events for the given chunks of the data source. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a9a793173b9de76aa07661ac5ca55bd5b</Anchor>
    <Abstract>Load and update all events of the current frame. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumChunks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a0876ef2be2459951a604648b0e576b36</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a7bc0e2bc80f3536ecea7e865696d1198</Anchor>
    <Abstract>Set the dt that the datasource is using to correctly compute frame number from time in load()...</Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>itk::Image</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>itk::Image</Scope>
    </TokenIdentifier>
    <Path>classitk_1_1_image.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>itk::SmartPointer</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>itk::SmartPointer</Scope>
    </TokenIdentifier>
    <Path>classitk_1_1_smart_pointer.html</Path>
  </Token>
</Tokens>
