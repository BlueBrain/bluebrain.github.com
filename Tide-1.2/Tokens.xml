<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_MAJOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>core_2version_8h.html</Path>
    <Anchor>ac33465e1e7f363b93a6a1f2e116ce51b</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_MINOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>core_2version_8h.html</Path>
    <Anchor>a7bd6df5f9b090e20ac173861ad71b1ee</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_PATCH</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>core_2version_8h.html</Path>
    <Anchor>a49ed920229918ae2f9a98cd4c00b2d90</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_REVISION</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>core_2version_8h.html</Path>
    <Anchor>ac22eed025af348044c8fa3b9451b9013</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_ABI</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>core_2version_8h.html</Path>
    <Anchor>a0aa86ffa7ddbdcb743246a33af017df4</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_GT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>core_2version_8h.html</Path>
    <Anchor>a4a1a3b62c89f109bc7f67eadb3569d6a</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_GE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>core_2version_8h.html</Path>
    <Anchor>a6b21f5c841d19d1b0f4b945771bce4b5</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_LT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>core_2version_8h.html</Path>
    <Anchor>a9a044e2f907d5704810da462b75c3f5e</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_LE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>core_2version_8h.html</Path>
    <Anchor>aa09bf9c55eba6f5463a99fa68521bb92</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_MAJOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>master_2version_8h.html</Path>
    <Anchor>ac33465e1e7f363b93a6a1f2e116ce51b</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>master/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_MINOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>master_2version_8h.html</Path>
    <Anchor>a7bd6df5f9b090e20ac173861ad71b1ee</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>master/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_PATCH</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>master_2version_8h.html</Path>
    <Anchor>a49ed920229918ae2f9a98cd4c00b2d90</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>master/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_REVISION</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>master_2version_8h.html</Path>
    <Anchor>ac22eed025af348044c8fa3b9451b9013</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>master/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_ABI</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>master_2version_8h.html</Path>
    <Anchor>a0aa86ffa7ddbdcb743246a33af017df4</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>master/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_GT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>master_2version_8h.html</Path>
    <Anchor>a4a1a3b62c89f109bc7f67eadb3569d6a</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>master/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_GE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>master_2version_8h.html</Path>
    <Anchor>a6b21f5c841d19d1b0f4b945771bce4b5</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>master/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_LT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>master_2version_8h.html</Path>
    <Anchor>a9a044e2f907d5704810da462b75c3f5e</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>master/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_LE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>master_2version_8h.html</Path>
    <Anchor>aa09bf9c55eba6f5463a99fa68521bb92</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>master/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_MAJOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>wall_2version_8h.html</Path>
    <Anchor>ac33465e1e7f363b93a6a1f2e116ce51b</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>wall/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_MINOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>wall_2version_8h.html</Path>
    <Anchor>a7bd6df5f9b090e20ac173861ad71b1ee</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>wall/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_PATCH</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>wall_2version_8h.html</Path>
    <Anchor>a49ed920229918ae2f9a98cd4c00b2d90</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>wall/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_REVISION</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>wall_2version_8h.html</Path>
    <Anchor>ac22eed025af348044c8fa3b9451b9013</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>wall/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_ABI</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>wall_2version_8h.html</Path>
    <Anchor>a0aa86ffa7ddbdcb743246a33af017df4</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>wall/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_GT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>wall_2version_8h.html</Path>
    <Anchor>a4a1a3b62c89f109bc7f67eadb3569d6a</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>wall/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_GE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>wall_2version_8h.html</Path>
    <Anchor>a6b21f5c841d19d1b0f4b945771bce4b5</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>wall/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_LT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>wall_2version_8h.html</Path>
    <Anchor>a9a044e2f907d5704810da462b75c3f5e</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>wall/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_LE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>wall_2version_8h.html</Path>
    <Anchor>aa09bf9c55eba6f5463a99fa68521bb92</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>wall/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Changelog</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>_changelog.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentation</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>documentation.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UserGuide</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>_user_guide.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>todo</Name>
      <APILanguage>unknown</APILanguage>
    </TokenIdentifier>
    <Path>todo.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BackgroundWidget</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>BackgroundWidget</Scope>
    </TokenIdentifier>
    <Path>class_background_widget.html</Path>
    <Abstract>Simple widget to edit and save background settings. </Abstract>
    <DeclaredIn>BackgroundWidget.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>BackgroundWidget</Scope>
    </TokenIdentifier>
    <Path>class_background_widget.html</Path>
    <Anchor>af58dd01c6fb4b8599d1ab06417b92ec4</Anchor>
    <Abstract>Store the new settings and close the widget. </Abstract>
    <DeclaredIn>BackgroundWidget.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>BackgroundWidget</Scope>
    </TokenIdentifier>
    <Path>class_background_widget.html</Path>
    <Anchor>a46290d2cbf08a44b84533b6aacc631c5</Anchor>
    <Abstract>Revert to the previous settings and close the widget. </Abstract>
    <DeclaredIn>BackgroundWidget.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>backgroundColorChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>BackgroundWidget</Scope>
    </TokenIdentifier>
    <Path>class_background_widget.html</Path>
    <Anchor>a96f4a8796d277ffb83f8641eb1e7113a</Anchor>
    <Abstract>Emitted when the user selected a different color. </Abstract>
    <DeclaredIn>BackgroundWidget.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>backgroundContentChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>BackgroundWidget</Scope>
    </TokenIdentifier>
    <Path>class_background_widget.html</Path>
    <Anchor>a74f3426c998bd4920b7f5f6556a66faa</Anchor>
    <Abstract>Emitted when the user selected a different background. </Abstract>
    <DeclaredIn>BackgroundWidget.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BackgroundWidget</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BackgroundWidget</Scope>
    </TokenIdentifier>
    <Path>class_background_widget.html</Path>
    <Anchor>ae4a39993d86522e34618a67e466e9a18</Anchor>
    <Abstract>Create a BackgroundWidget. </Abstract>
    <DeclaredIn>BackgroundWidget.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BasicSynchronizer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>BasicSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_basic_synchronizer.html</Path>
    <Abstract>A basic synchronizer used for static content types. </Abstract>
    <DeclaredIn>BasicSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BasicSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BasicSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_basic_synchronizer.html</Path>
    <Anchor>a75fa01a8bfb21beb943ffab93807eac9</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>BasicSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BasicSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_basic_synchronizer.html</Path>
    <Anchor>ad541e1610630640018bc0f377939a627</Anchor>
    <Abstract>Update the Content. </Abstract>
    <DeclaredIn>BasicSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synchronize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BasicSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_basic_synchronizer.html</Path>
    <Anchor>ab4ffa1c6be625545255fa8f906d0752e</Anchor>
    <Abstract>Synchronize content advance accross processes. </Abstract>
    <DeclaredIn>BasicSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTilesArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BasicSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_basic_synchronizer.html</Path>
    <Anchor>a2a22d0498d275b5d3e3ab286deb701e8</Anchor>
    <Abstract>The total area covered by the tiles (may depend on current LOD). </Abstract>
    <DeclaredIn>BasicSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BasicSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_basic_synchronizer.html</Path>
    <Anchor>a425227b9efe2704d22983052cab41818</Anchor>
    <Abstract>Get statistics about this Content. </Abstract>
    <DeclaredIn>BasicSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onSwapReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BasicSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_basic_synchronizer.html</Path>
    <Anchor>abd26eebc223e5d5dc5f0442f51fce2fd</Anchor>
    <Abstract>Called when a tile is ready to swap. </Abstract>
    <DeclaredIn>BasicSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aa9b57c8a735fbfb9b35e3e79d9ac9682</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ContentSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a68aa090a819ade8f4193c6848aa5d7c0</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a637dfab5813107a509142633c32465cf</Anchor>
    <Abstract>Get the image for a given tile index. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoomContextTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a88d2e6727ef69fd33e0bda4d2f73f199</Anchor>
    <Abstract>Notify the window to add a tile for the zoom context. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BasicSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_basic_synchronizer.html</Path>
    <Anchor>a3e9d3a2e8158ee28a44cf4e1e003546c</Anchor>
    <Abstract>Create this content&amp;#39;s unique tile with the given dimensions. </Abstract>
    <DeclaredIn>BasicSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onTextureReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aea4634e943d637574dc06c4a8000811e</Anchor>
    <Abstract>Called when a tile has finished initializing; re-emits requestUpdate. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tilesAreaChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aac807a9cb073a52d88a80ceca93b34a3</Anchor>
    <Abstract>Notifier for the tiles area property. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>statisticsChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a8b2131d6b3874d8d932a101ec3dcde05</Anchor>
    <Abstract>Notifier for the statistics property. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a07a22964fedee87ec47fddc4b02a40f0</Anchor>
    <Abstract>Notify the window to add a tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a755db8af943fc6bd0aab4220320d3a89</Anchor>
    <Abstract>Notify the window to remove a tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aba03b3c5af16950946e91c893d20eeaf</Anchor>
    <Abstract>Notify to update a tile&amp;#39;s coordinates. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestTileUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aa8eaddb3ad37209eb3df6cac7dc68db8</Anchor>
    <Abstract>Request an update of a specific tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zoomContextTileChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a936e9892ccd99cef73b82282b1d291e2</Anchor>
    <Abstract>Notify that the zoom context tile has changed and must be recreated. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a1ad34f14a76b9eae5f55b90ccf6d3db5</Anchor>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CachedDataSource</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>CachedDataSource</Scope>
    </TokenIdentifier>
    <Path>class_cached_data_source.html</Path>
    <Abstract>A data source which maintains a cache of the requested tiles. </Abstract>
    <DeclaredIn>CachedDataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CachedDataSource</Scope>
    </TokenIdentifier>
    <Path>class_cached_data_source.html</Path>
    <Anchor>a6fd04c5620ce585d49ef42494825bfd9</Anchor>
    <Abstract>Get a tile image by its id. threadsafe </Abstract>
    <DeclaredIn>CachedDataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CachedDataSource</Scope>
    </TokenIdentifier>
    <Path>class_cached_data_source.html</Path>
    <Anchor>a02e027db47c9407a6235d391a015704b</Anchor>
    <Abstract>Check if the cache contains an image for a tile. </Abstract>
    <DeclaredIn>CachedDataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DataSource</Scope>
    </TokenIdentifier>
    <Path>class_data_source.html</Path>
    <Anchor>a56340760205c3f9b6e843a794264b1bf</Anchor>
    <Abstract>Get the coordinates of a tile. </Abstract>
    <DeclaredIn>DataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTilesArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DataSource</Scope>
    </TokenIdentifier>
    <Path>class_data_source.html</Path>
    <Anchor>a6f8ae80fe107221b880f1644e84ba427</Anchor>
    <DeclaredIn>DataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeVisibleSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DataSource</Scope>
    </TokenIdentifier>
    <Path>class_data_source.html</Path>
    <Anchor>a8499485c72c7b2cfadc6b84daf377bd7</Anchor>
    <Abstract>Compute the indices of the tiles which are visible in the given area. </Abstract>
    <DeclaredIn>DataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxLod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DataSource</Scope>
    </TokenIdentifier>
    <Path>class_data_source.html</Path>
    <Anchor>a117c0536c7c0a7b24a86578d7806cf97</Anchor>
    <DeclaredIn>DataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCachableTileImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CachedDataSource</Scope>
    </TokenIdentifier>
    <Path>class_cached_data_source.html</Path>
    <Anchor>acd3cc5e87e55d14336e41fe87ebefa84</Anchor>
    <Abstract>Get a tile image which will be cached. </Abstract>
    <DeclaredIn>CachedDataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CairoDeleter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>CairoDeleter</Scope>
    </TokenIdentifier>
    <Path>struct_cairo_deleter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CairoSurfaceDeleter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>CairoSurfaceDeleter</Scope>
    </TokenIdentifier>
    <Path>struct_cairo_surface_deleter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommandLineOptions</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>CommandLineOptions</Scope>
    </TokenIdentifier>
    <Path>class_command_line_options.html</Path>
    <Abstract>Command line options to pass startup parameters to a local application. </Abstract>
    <DeclaredIn>CommandLineOptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommandLineOptions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandLineOptions</Scope>
    </TokenIdentifier>
    <Path>class_command_line_options.html</Path>
    <Anchor>ad470c893b63d2f91ebf0b65824473727</Anchor>
    <Abstract>Construct an empty instance. </Abstract>
    <DeclaredIn>CommandLineOptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommandLineOptions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandLineOptions</Scope>
    </TokenIdentifier>
    <Path>class_command_line_options.html</Path>
    <Anchor>a2dde83b128fd9b439e8cd9f080e6db30</Anchor>
    <Abstract>Construct from command line parameters. </Abstract>
    <DeclaredIn>CommandLineOptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showSyntax</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandLineOptions</Scope>
    </TokenIdentifier>
    <Path>class_command_line_options.html</Path>
    <Anchor>a7afe005172796945c93d08dfe495eb92</Anchor>
    <Abstract>Print syntax to std::out. </Abstract>
    <DeclaredIn>CommandLineOptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCommandLine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandLineOptions</Scope>
    </TokenIdentifier>
    <Path>class_command_line_options.html</Path>
    <Anchor>a3d8b4c329b6a3634e20a2d661a1e0453</Anchor>
    <Abstract>Get the arguments joined in command line format. </Abstract>
    <DeclaredIn>CommandLineOptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCommandLineArguments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandLineOptions</Scope>
    </TokenIdentifier>
    <Path>class_command_line_options.html</Path>
    <Anchor>ab5f3af16b94d02c33fa42c6caefcb301</Anchor>
    <Abstract>Get the command line arguments in list format. </Abstract>
    <DeclaredIn>CommandLineOptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommandLineParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>CommandLineParameters</Scope>
    </TokenIdentifier>
    <Path>class_command_line_parameters.html</Path>
    <Abstract>Parse command line parameters for the Tide application. </Abstract>
    <DeclaredIn>CommandLineParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommandLineParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandLineParameters</Scope>
    </TokenIdentifier>
    <Path>class_command_line_parameters.html</Path>
    <Anchor>a61991864c07ad0a1a01f2186342c5ce3</Anchor>
    <Abstract>Construct from command line parameters. </Abstract>
    <DeclaredIn>CommandLineParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHelp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandLineParameters</Scope>
    </TokenIdentifier>
    <Path>class_command_line_parameters.html</Path>
    <Anchor>a3ccedd0ff83ea1f3e80ae8027f22cae6</Anchor>
    <Abstract>Was the –help flag given. </Abstract>
    <DeclaredIn>CommandLineParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showSyntax</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandLineParameters</Scope>
    </TokenIdentifier>
    <Path>class_command_line_parameters.html</Path>
    <Anchor>ab06563f0abec4cf64d3909966b966966</Anchor>
    <Abstract>Print syntax to std::out. </Abstract>
    <DeclaredIn>CommandLineParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfigFilename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandLineParameters</Scope>
    </TokenIdentifier>
    <Path>class_command_line_parameters.html</Path>
    <Anchor>a5e5007ec463af1b85876f41111a2fef9</Anchor>
    <Abstract>Get the config filename. </Abstract>
    <DeclaredIn>CommandLineParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSessionFilename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandLineParameters</Scope>
    </TokenIdentifier>
    <Path>class_command_line_parameters.html</Path>
    <Anchor>a634eb8b05481d08528ed6cf0be9ca3de</Anchor>
    <Abstract>Get the config filename. </Abstract>
    <DeclaredIn>CommandLineParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Configuration</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Configuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a4f41abbe40c7e1345a325369c86aaaca</Anchor>
    <Abstract>Create a new configuration from an xml file. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Configuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a1226f87dc3c27be16eb16e53301eb2f3</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFilename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>ae479e2755c17646c271292b1f101e5da</Anchor>
    <Abstract>Get the filename passed to the constructor. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalScreenCountX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aca560ac9d3b46ef39444287ab4ba800f</Anchor>
    <Abstract>Get the total number of screens along the x axis. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalScreenCountY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a0f61e23c663322c808a33b8deeab198e</Anchor>
    <Abstract>Get the total number of screens along the y axis. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScreenWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a957a6e17a77943ca1469a599c4116987</Anchor>
    <Abstract>Get the width of a screen. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScreenHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>acac053b8e85c8e13dc1b24f829d70b25</Anchor>
    <Abstract>Get the height of a screen. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMullionWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aa4f921578b584411cab548d015e9ceba</Anchor>
    <Abstract>Get the padding nedded to compensate for the physical displays&amp;#39; bezel. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMullionHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aebf3438c6130ea0a50ed85d0ed2bde93</Anchor>
    <Abstract>Get the padding nedded to compensate for the physical displays&amp;#39; bezel. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aa7b4b828ea7bc8afcf2bed3857007eaa</Anchor>
    <Abstract>Get the total width of the DisplayWall, including the Mullion padding. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aba8af0457ab8769b5baab775ecebb8ba</Anchor>
    <Abstract>Get the total height of the DisplayWall, including the Mullion padding. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a3c3e0bc67693859c0450d4c5f4a79318</Anchor>
    <Abstract>Get the total size of the DisplayWall, including Mullion padding. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a1031736dbddf1becee943184afb27dda</Anchor>
    <Abstract>Get the aspect ratio of the DisplayWall, including Mullion padding. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScreenRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>ad9220206ff95419518e3b1eb6712b5d9</Anchor>
    <Abstract>Get the coordinates and dimensions of a screen in pixel units. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFullscreen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a3d38c54f965dce34f3839867a508779a</Anchor>
    <Abstract>Display the windows in fullscreen mode. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDouble</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a6eb03db6204ebfc4c5d2e02840427bd4</Anchor>
    <Abstract>Evaluate the querry and set the result to value on success. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_filename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>ae3544038cf10d426a6c8c4b3adc430c5</Anchor>
    <Abstract>The path to the xml configuration file. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Content</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Abstract>An abstract Content displayed in a ContentWindow. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a44c022cb6fed6fb1b0dff45e39ececb9</Anchor>
    <Abstract>Emitted by any Content subclass when its state has been modified. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Content</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ae491288d2efce7fa63d3e777580630b4</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a887d2b952cd824d70f64106ae048a5f8</Anchor>
    <Abstract>Get the content URI. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af9e369355bb2be4ab07ed23f0f82113d</Anchor>
    <Abstract>Get the content type. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMetadata</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a6822bf4cf94ae866c561b23e62506303</Anchor>
    <Abstract>Read content metadata from the data source. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>aa4681ca97acea99fbe88e20f0e664bc0</Anchor>
    <Abstract>Get the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a8cf06fbd623453fd2aa349d91ebbca3b</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPreferredDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a508b7f5c09ffa4f5a1a7f3e89cbec489</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a70fbc6b9c9dfd95c426819a1c14464f9</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a1b7a6f49f447c124b497b0a844fd6ea6</Anchor>
    <Abstract>Set the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a113bd8ba35685e77bcf8a8650fab636a</Anchor>
    <Abstract>Get the aspect ratio. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFixedAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>adceac372a702843a1e0bd207f670680a</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a461bb62d3989d0eb5b4d1f824e7a66c0</Anchor>
    <Abstract>Get the zoom rectangle in normalized coordinates, [0,0,1,1] default. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0f3e5f9203b97450e3856d39a12807e3</Anchor>
    <Abstract>Set the zoom rectangle in normalized coordinates. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ad5094c72f8c6d7ec5390108534804c1f</Anchor>
    <Abstract>Resets the zoom to [0,0,1,1]. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getActions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a7ae29df27d493e89dd7dccd775efbff8</Anchor>
    <Abstract>Get the actions from QML. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getQmlControls</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af64c08ff1aafa0206bf178a6e4bfa634</Anchor>
    <Abstract>Get content-specific qml controls file (default: empty). </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKeyboardState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0e10f71c92fe8434a9b40183cb7239a0</Anchor>
    <Abstract>Get the keyboard state from QML. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInteractionPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a2dea2403b7d96fad93fae78ca4986197</Anchor>
    <Abstract>Get the interaction policy (default: AUTO). </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSizeHints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a70292d652fb37ee21640801fce53c186</Anchor>
    <Abstract>Set optional size hints to constrain resize/scale and 1:1 size. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCaptureInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a7e7c36edf987322675eea81f27e8017d</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCaptureInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a18477814caa57d8f9aa0330fd19487ab</Anchor>
    <Abstract>Tell the content to capture interaction (only for Policy::AUTO). </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a87465efbfaf4e2e5b0a5e7e8af0985f2</Anchor>
    <Abstract>Set the maximum factor for zoom and resize; value times content size. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a04642ff3171681aa5fd2c8c8291a7949</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af5fc9d76b3c2899937927c9cd65689d5</Anchor>
    <Abstract>Serialize for sending to Wall applications. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_members_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a6787ec5cdec336c8f25c5e9671977598</Anchor>
    <Abstract>Serialize for saving to an xml file. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_for_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a4c9c0b425c1197cdf34f2d62119b6f4d</Anchor>
    <Abstract>Loading from xml. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_for_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a8d0e71e26ce26abdd7b414dee1ca2c9e</Anchor>
    <Abstract>Saving to xml. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentAction</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ContentAction</Scope>
    </TokenIdentifier>
    <Path>class_content_action.html</Path>
    <Abstract>A content-specific action for use in QML by ContentActionsModel. </Abstract>
    <DeclaredIn>ContentAction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trigger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>ContentAction</Scope>
    </TokenIdentifier>
    <Path>class_content_action.html</Path>
    <Anchor>ad38737ffd4ee0b2623f00f0326136df3</Anchor>
    <Abstract>Trigger the action. </Abstract>
    <DeclaredIn>ContentAction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checked</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentAction</Scope>
    </TokenIdentifier>
    <Path>class_content_action.html</Path>
    <Anchor>a563fe54bba76599da58a0da5d1eaf21e</Anchor>
    <Abstract>The action has been checked. </Abstract>
    <DeclaredIn>ContentAction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unchecked</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentAction</Scope>
    </TokenIdentifier>
    <Path>class_content_action.html</Path>
    <Anchor>a0246cbdec2ccc7db7d3dc8821a499725</Anchor>
    <Abstract>The action has been unchecked. </Abstract>
    <DeclaredIn>ContentAction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>triggered</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentAction</Scope>
    </TokenIdentifier>
    <Path>class_content_action.html</Path>
    <Anchor>ad53201dc988d6e4aa0ec81e9c820045d</Anchor>
    <Abstract>The action has been triggered. </Abstract>
    <DeclaredIn>ContentAction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentAction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentAction</Scope>
    </TokenIdentifier>
    <Path>class_content_action.html</Path>
    <Anchor>a89c834fd1dbfffe821032d135895aa56</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ContentAction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentActionsModel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ContentActionsModel</Scope>
    </TokenIdentifier>
    <Path>class_content_actions_model.html</Path>
    <Abstract>Exposes the actions of a Content for viewing in a QML ListView. </Abstract>
    <DeclaredIn>ContentActionsModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentActionsModel</Scope>
    </TokenIdentifier>
    <Path>class_content_actions_model.html</Path>
    <Anchor>a9a9cb3b60ae95fb603176530cf22ba0e</Anchor>
    <Abstract>Add an action and retains ownership by setting itself as the parent. </Abstract>
    <DeclaredIn>ContentActionsModel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentFactory</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ContentFactory</Scope>
    </TokenIdentifier>
    <Path>class_content_factory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentFactory</Scope>
    </TokenIdentifier>
    <Path>class_content_factory.html</Path>
    <Anchor>afe819dd6acbe85688da779e3c538b72a</Anchor>
    <Abstract>Get a Content of the appropriate type based on the given URI. </Abstract>
    <DeclaredIn>ContentFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelStreamContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentFactory</Scope>
    </TokenIdentifier>
    <Path>class_content_factory.html</Path>
    <Anchor>a543b86956c936cd618405ba7bda7f254</Anchor>
    <Abstract>Special case: PixelStreamContent type cannot be derived from its uri. </Abstract>
    <DeclaredIn>ContentFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWebbrowserContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentFactory</Scope>
    </TokenIdentifier>
    <Path>class_content_factory.html</Path>
    <Anchor>a2524fdbf31ac60bf92efd4f8ca29a82c</Anchor>
    <Abstract>Create a Webbrowser Content (special type of PixelStream). </Abstract>
    <DeclaredIn>ContentFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getErrorContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentFactory</Scope>
    </TokenIdentifier>
    <Path>class_content_factory.html</Path>
    <Anchor>ac918ac8c6d3ca3b33ef198f4a70dbf82</Anchor>
    <Abstract>Get a Content object representing a loading error. </Abstract>
    <DeclaredIn>ContentFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSupportedExtensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentFactory</Scope>
    </TokenIdentifier>
    <Path>class_content_factory.html</Path>
    <Anchor>a34aeae89b1319f4c53e2ec6a270fe436</Anchor>
    <Abstract>Get all the supported file extensions. </Abstract>
    <DeclaredIn>ContentFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSupportedFilesFilter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentFactory</Scope>
    </TokenIdentifier>
    <Path>class_content_factory.html</Path>
    <Anchor>aa50bde011337a7eedf6a36629eddcf30</Anchor>
    <Abstract>Get all the supported file extensions prefixed with &amp;#39;. </Abstract>
    <DeclaredIn>ContentFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSupportedFilesFilterAsString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentFactory</Scope>
    </TokenIdentifier>
    <Path>class_content_factory.html</Path>
    <Anchor>a86e8179fd94acab556d60f47eef1423e</Anchor>
    <Abstract>Get all the file extensions prefixed with &amp;#39;. </Abstract>
    <DeclaredIn>ContentFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getContentTypeForFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentFactory</Scope>
    </TokenIdentifier>
    <Path>class_content_factory.html</Path>
    <Anchor>a74978c0900870f45c3bb46a2450e6288</Anchor>
    <Abstract>Get the content type for a given uri. </Abstract>
    <DeclaredIn>ContentFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentInteractionDelegate</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ContentInteractionDelegate</Scope>
    </TokenIdentifier>
    <Path>class_content_interaction_delegate.html</Path>
    <Abstract>Handle user interaction with the Content of a ContentWindow. </Abstract>
    <DeclaredIn>ContentInteractionDelegate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentInteractionDelegate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentInteractionDelegate</Scope>
    </TokenIdentifier>
    <Path>class_content_interaction_delegate.html</Path>
    <Anchor>a71cf944be02e2b4ca86a76273f026616</Anchor>
    <Abstract>Construct a default interaction delegate that does nothing. </Abstract>
    <DeclaredIn>ContentInteractionDelegate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ContentInteractionDelegate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentInteractionDelegate</Scope>
    </TokenIdentifier>
    <Path>class_content_interaction_delegate.html</Path>
    <Anchor>acb5fa802e1b625e1c24b1f59ee15a784</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>ContentInteractionDelegate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentLoader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ContentLoader</Scope>
    </TokenIdentifier>
    <Path>class_content_loader.html</Path>
    <Abstract>Helper class to open Content on a DisplayGroup. </Abstract>
    <DeclaredIn>ContentLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentLoader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentLoader</Scope>
    </TokenIdentifier>
    <Path>class_content_loader.html</Path>
    <Anchor>a8849d8193ac2e3ffe2cb93ac68775608</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ContentLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentLoader</Scope>
    </TokenIdentifier>
    <Path>class_content_loader.html</Path>
    <Anchor>a3001ad42bf2610f9cd3bf727ba53b3f0</Anchor>
    <Abstract>Load a Content from a file and create a window for it. </Abstract>
    <DeclaredIn>ContentLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAlreadyOpen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentLoader</Scope>
    </TokenIdentifier>
    <Path>class_content_loader.html</Path>
    <Anchor>a4435cade83c73bb3701e4b82d9f2fc38</Anchor>
    <Abstract>Check if a content is already open. </Abstract>
    <DeclaredIn>ContentLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentSynchronizer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Abstract>Interface for synchronizing QML content rendering. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onSwapReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a6388e244907ebe33a267b47cf123b64c</Anchor>
    <Abstract>Called when a tile is ready to swap. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onTextureReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aea4634e943d637574dc06c4a8000811e</Anchor>
    <Abstract>Called when a tile has finished initializing; re-emits requestUpdate. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tilesAreaChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aac807a9cb073a52d88a80ceca93b34a3</Anchor>
    <Abstract>Notifier for the tiles area property. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>statisticsChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a8b2131d6b3874d8d932a101ec3dcde05</Anchor>
    <Abstract>Notifier for the statistics property. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a07a22964fedee87ec47fddc4b02a40f0</Anchor>
    <Abstract>Notify the window to add a tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a755db8af943fc6bd0aab4220320d3a89</Anchor>
    <Abstract>Notify the window to remove a tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aba03b3c5af16950946e91c893d20eeaf</Anchor>
    <Abstract>Notify to update a tile&amp;#39;s coordinates. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestTileUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aa8eaddb3ad37209eb3df6cac7dc68db8</Anchor>
    <Abstract>Request an update of a specific tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zoomContextTileChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a936e9892ccd99cef73b82282b1d291e2</Anchor>
    <Abstract>Notify that the zoom context tile has changed and must be recreated. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aa9b57c8a735fbfb9b35e3e79d9ac9682</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ContentSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a68aa090a819ade8f4193c6848aa5d7c0</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>ae364f07df110634b5f1999ae6f0d3ac6</Anchor>
    <Abstract>Update the Content. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synchronize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a7d31a22c5564f6ef79ea3b39c071d938</Anchor>
    <Abstract>Synchronize content advance accross processes. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTilesArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>ad1d547e9b327f320163aa2976bfffa8e</Anchor>
    <Abstract>The total area covered by the tiles (may depend on current LOD). </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aac53ae2d14888ef268e22f7c7a5eb14f</Anchor>
    <Abstract>Get statistics about this Content. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a637dfab5813107a509142633c32465cf</Anchor>
    <Abstract>Get the image for a given tile index. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoomContextTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a88d2e6727ef69fd33e0bda4d2f73f199</Anchor>
    <Abstract>Notify the window to add a tile for the zoom context. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a1ad34f14a76b9eae5f55b90ccf6d3db5</Anchor>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentWindow</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Abstract>A window for displaying Content on the Wall. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>aa4596875ce3ce01a07ad63c097249a30</Anchor>
    <Abstract>Set the current state. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setActiveHandle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>aedda82443d698625d64b047bfacefcf0</Anchor>
    <Abstract>Set the current active resize handle. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResizePolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a1135aa5bd6e44c4311d4372e8f606275</Anchor>
    <Abstract>Set the resize policy. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a139cb8e6dd3fc0bbdc4b45774c54fa46</Anchor>
    <Abstract>Set the current state. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contentModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a4e489035e70456bcedc092b70b66b9f9</Anchor>
    <Abstract>Emitted when the Content signals that it has been modified. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a32931ee8f5106d270e959e998b34d14c</Anchor>
    <Abstract>Emitted whenever this object is modified. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>coordinatesChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a2124659668dfee637f722e31aa3eed53</Anchor>
    <Abstract>Emitted when setCoordinates has been called. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a318b342ac7fd8854094dfa617da0a3e6</Anchor>
    <Abstract>Create a new window. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ContentWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a048c11ac7d49072c2655e7adb0737844</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a57e025ed7564316980c09ca48f8b78e4</Anchor>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPanel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>ada977a7c22d00eeb905ad9224be20e30</Anchor>
    <Abstract>Is the window a panel. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getContentPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a73da45d8ecfcc73d79a00cdc1c30ff4c</Anchor>
    <Abstract>Get the content from QML. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a8b06006200dda25a6afbd03025e14d37</Anchor>
    <Abstract>Get the content. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>ad6d59fb6f13898f2f12bc027672cda0f</Anchor>
    <Abstract>Set the content, replacing the existing one. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getController</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a3193f989f93139504794baf48826b007</Anchor>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getController</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>ae6fb0b346d66c89f1b22ad14830f78f7</Anchor>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setController</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a5ee93aada445d75e591e8fb5ac06dc1e</Anchor>
    <Abstract>Assign a controller. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCoordinates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>ac4a6c11c1a4cf8e83c4bca9bff8c1115</Anchor>
    <Abstract>Set the coordinates in pixel units. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getActiveHandle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>afb02bcc6e440a57ca958e5bbee867aa6</Anchor>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getResizePolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a766bb6acd0544c0c69814ae1a44a13de</Anchor>
    <Abstract>Get the current resize policy. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>ab2e3fba6cc9bb40a86132cf1283c0bca</Anchor>
    <Abstract>Get the current state. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFocused</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>ab81535e0639c5bf3582f4df57e6ec7e2</Anchor>
    <Abstract>Is the window focused. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFullscreen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a0425680dc9e71347979a11a3c7a56a67</Anchor>
    <Abstract>Is the window fullscreen. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFocusedCoordinates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a1ee56f12f78de8b6f5941f6a008420f2</Anchor>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFocusedCoordinates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a54fbc8b177ae6997a5ca0f3cb8388626</Anchor>
    <Abstract>Set the focused coordinates of this window. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFullscreenCoordinates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a38a64c46cec31b4f65acf0b23c2e0b11</Anchor>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFullscreenCoordinates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>aafb20e336e47bccf9ba43127d5e405b6</Anchor>
    <Abstract>Set the fullscreen coordinates of this window. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDisplayCoordinates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a9fca8d920f103d51dff590cd6349c60c</Anchor>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>abf8ec51962379b4bd3fb6837ee04ba0b</Anchor>
    <Abstract>Get the current state. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMoving</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>ac557a80bb17253cb4c2ecb3f5f468f1a</Anchor>
    <Abstract>Check if moving. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isResizing</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>ab29dccf5622f243136a0f2d7409542b6</Anchor>
    <Abstract>Check if resizing. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isHidden</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a5d8a2935e14cb43f890e776a1c9f2315</Anchor>
    <Abstract>Check if hidden. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInteractionDelegate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a3282541923caeefe51c2ef39491f8fa5</Anchor>
    <Abstract>Get the interaction delegate. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLabel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a707246cc3cd2f5b79c74259e36c5edca</Anchor>
    <Abstract>Get the label for the window. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getControlsVisible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a37c96044fcb6b57432c2fa548ae942f1</Anchor>
    <Abstract>Get the visibility of the window control buttons. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setControlsVisible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>aa17b3d88e6a5928efe395ee36edc4367</Anchor>
    <Abstract>Set the visibility of the window control buttons. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentWindowController</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ContentWindowController</Scope>
    </TokenIdentifier>
    <Path>class_content_window_controller.html</Path>
    <Abstract>Controller for moving and resizing windows. </Abstract>
    <DeclaredIn>ContentWindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindowController</Scope>
    </TokenIdentifier>
    <Path>class_content_window_controller.html</Path>
    <Anchor>a0069301d97e2ab70db7abffb74f6d15d</Anchor>
    <Abstract>Resize the window. </Abstract>
    <DeclaredIn>ContentWindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resizeRelative</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindowController</Scope>
    </TokenIdentifier>
    <Path>class_content_window_controller.html</Path>
    <Anchor>a3a20b4c22eb64fa0c094a44df766c138</Anchor>
    <Abstract>Resize the window relative to the current active window border. </Abstract>
    <DeclaredIn>ContentWindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindowController</Scope>
    </TokenIdentifier>
    <Path>class_content_window_controller.html</Path>
    <Anchor>a0692b71b65e4d3fcae4e6648a7c2f93a</Anchor>
    <Abstract>Scale the window by the given pixel delta (around the given center). </Abstract>
    <DeclaredIn>ContentWindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>adjustSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindowController</Scope>
    </TokenIdentifier>
    <Path>class_content_window_controller.html</Path>
    <Anchor>a42007dfd0544667544dcaef7e3fea231</Anchor>
    <Abstract>Adjust the window coordinates to match the desired state. </Abstract>
    <DeclaredIn>ContentWindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>adjustSizeOneToOne</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindowController</Scope>
    </TokenIdentifier>
    <Path>class_content_window_controller.html</Path>
    <Anchor>ad121ca248b1a4ea27f86f5cef4d69ff7</Anchor>
    <Abstract>Adjust the window coordinates to match the Content dimensions. </Abstract>
    <DeclaredIn>ContentWindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindowController</Scope>
    </TokenIdentifier>
    <Path>class_content_window_controller.html</Path>
    <Anchor>ac675e17bebe6711f1f35e0a8e499756e</Anchor>
    <Abstract>Move the window to the desired position. </Abstract>
    <DeclaredIn>ContentWindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveCenterTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindowController</Scope>
    </TokenIdentifier>
    <Path>class_content_window_controller.html</Path>
    <Anchor>ab5311fc946d3a957af4447c1be37a8e0</Anchor>
    <Abstract>Move the center of the window to the desired position. </Abstract>
    <DeclaredIn>ContentWindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindowController</Scope>
    </TokenIdentifier>
    <Path>class_content_window_controller.html</Path>
    <Anchor>aa1ff2ae84100c3cd50ddc1d827a72cc0</Anchor>
    <DeclaredIn>ContentWindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindowController</Scope>
    </TokenIdentifier>
    <Path>class_content_window_controller.html</Path>
    <Anchor>aa749c1d5555254079c7250bead04fbf3</Anchor>
    <DeclaredIn>ContentWindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxContentSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindowController</Scope>
    </TokenIdentifier>
    <Path>class_content_window_controller.html</Path>
    <Anchor>a3995ee27f3024d4a7d386ec3b51c0d59</Anchor>
    <DeclaredIn>ContentWindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>constrainSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindowController</Scope>
    </TokenIdentifier>
    <Path>class_content_window_controller.html</Path>
    <Anchor>a1b88c694e55003f2a30ab9d1f488557b</Anchor>
    <Abstract>Constrain the given size between getMinSize() and getMaxSize(). </Abstract>
    <DeclaredIn>ContentWindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scaleRectAroundPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentWindowController</Scope>
    </TokenIdentifier>
    <Path>class_content_window_controller.html</Path>
    <Anchor>a1279562400102db76a46ce1b20566f2a</Anchor>
    <Abstract>Helper function to resize a rectangle (window, zoom rectangle) around a point of interest (pinch cent...</Abstract>
    <DeclaredIn>ContentWindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Coordinates</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Coordinates</Scope>
    </TokenIdentifier>
    <Path>class_coordinates.html</Path>
    <Abstract>Exposes the coordinates of a rectangle as QProperties for QML binding. </Abstract>
    <DeclaredIn>Coordinates.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DataProvider</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>DataProvider</Scope>
    </TokenIdentifier>
    <Path>class_data_provider.html</Path>
    <Abstract>Load image data in parallel. </Abstract>
    <DeclaredIn>DataProvider.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadAsync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>DataProvider</Scope>
    </TokenIdentifier>
    <Path>class_data_provider.html</Path>
    <Anchor>a51137504d80c6cee7ba57236a229bc3c</Anchor>
    <Abstract>Load an image asynchronously. </Abstract>
    <DeclaredIn>DataProvider.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNewFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>DataProvider</Scope>
    </TokenIdentifier>
    <Path>class_data_provider.html</Path>
    <Anchor>a78d4bb1be6e4cfb61c54e6fd1bf20363</Anchor>
    <Abstract>Add a new frame. </Abstract>
    <DeclaredIn>DataProvider.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>imageLoaded</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>DataProvider</Scope>
    </TokenIdentifier>
    <Path>class_data_provider.html</Path>
    <Anchor>a850e56f3c1c0fed4257a03d964c70244</Anchor>
    <Abstract>Notify that loadAsync has completed for the given tile. </Abstract>
    <DeclaredIn>DataProvider.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>DataProvider</Scope>
    </TokenIdentifier>
    <Path>class_data_provider.html</Path>
    <Anchor>ad877b8b8c6430f423e4b4d1970ca0ffd</Anchor>
    <Abstract>Emitted to request a new frame after a successful swap. </Abstract>
    <DeclaredIn>DataProvider.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStreamDataSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DataProvider</Scope>
    </TokenIdentifier>
    <Path>class_data_provider.html</Path>
    <Anchor>a6048dded1131a79725cb2ff8aa13fe63</Anchor>
    <Abstract>Get the data source for the given stream uri. </Abstract>
    <DeclaredIn>DataProvider.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DataSource</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>DataSource</Scope>
    </TokenIdentifier>
    <Path>class_data_source.html</Path>
    <Abstract>Base interface for shared data sources. </Abstract>
    <DeclaredIn>DataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DataSource</Scope>
    </TokenIdentifier>
    <Path>class_data_source.html</Path>
    <Anchor>ac7179f6da971155d699bdbacd45a0d7e</Anchor>
    <Abstract>Get a tile image by its id. </Abstract>
    <DeclaredIn>DataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DataSource</Scope>
    </TokenIdentifier>
    <Path>class_data_source.html</Path>
    <Anchor>a56340760205c3f9b6e843a794264b1bf</Anchor>
    <Abstract>Get the coordinates of a tile. </Abstract>
    <DeclaredIn>DataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTilesArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DataSource</Scope>
    </TokenIdentifier>
    <Path>class_data_source.html</Path>
    <Anchor>a6f8ae80fe107221b880f1644e84ba427</Anchor>
    <DeclaredIn>DataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeVisibleSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DataSource</Scope>
    </TokenIdentifier>
    <Path>class_data_source.html</Path>
    <Anchor>a8499485c72c7b2cfadc6b84daf377bd7</Anchor>
    <Abstract>Compute the indices of the tiles which are visible in the given area. </Abstract>
    <DeclaredIn>DataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxLod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DataSource</Scope>
    </TokenIdentifier>
    <Path>class_data_source.html</Path>
    <Anchor>a117c0536c7c0a7b24a86578d7806cf97</Anchor>
    <DeclaredIn>DataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultThumbnailGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>DefaultThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_default_thumbnail_generator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DisplayGroup</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Abstract>A collection of ContentWindows. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a0c10092c41d5dee217dd49f52c7e2302</Anchor>
    <Abstract>Clear all ContentWindows. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeWindowLater</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>ac1f675d4906600bf534fe42f094f10bc</Anchor>
    <Abstract>Remove a content window later (using a Qt::QueuedConnection). </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeContentWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a29eff017c9c16b6959a0991f13a3f5a5</Anchor>
    <Abstract>Remove a content window. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveContentWindowToFront</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>ac9fdb362fa9fe16bcb43f4d438815537</Anchor>
    <Abstract>Remove a content window. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveContentWindowToFront</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a426a5219ee17a10f991dad5f2f35a21e</Anchor>
    <Abstract>Move a content window to the front. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a2d45f47c71869da3799d9e1c88274cbd</Anchor>
    <Abstract>Emitted whenever the DisplayGroup is modified. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contentWindowAdded</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a7d776c2d2ae02dcbd1a0011446a1c5de</Anchor>
    <Abstract>Emitted when a content window is added. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contentWindowRemoved</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a2901850c2b9893e2c3826cbdf6b1795a</Anchor>
    <Abstract>Emitted when a content window is removed. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contentWindowMovedToFront</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a018a418c963074c2fee79896c327e950</Anchor>
    <Abstract>Emitted when a content window is moved to the front. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFocusedWindowsChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a40f1bb735ad449fb1637d4c9fb24657b</Anchor>
    <Abstract>Notifier for the hasFocusedWindows property. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFullscreenWindowsChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a7c0fae7540969609d07b0447b39991fb</Anchor>
    <Abstract>Notifier for the hasFullscreenWindows property. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DisplayGroup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a779255c3aa959085ad613850286dd43d</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~DisplayGroup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>ae621c03bd2408c8ece4a61237efca355</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addContentWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a979fd60adf1b87cecd02fe848d9d8add</Anchor>
    <Abstract>Add a content window. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a2bd3c3a118c0a2be043c10bb6ca8c3dd</Anchor>
    <Abstract>Is the DisplayGroup empty. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getActiveWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>ac369a679a2abf36c39e3ea6bfd034cf0</Anchor>
    <Abstract>Get the active window. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getContentWindows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>aa1940079d2bc1464f59e38c52ac1bffb</Anchor>
    <Abstract>Get all windows. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getContentWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a1b578c1cd18a8b8c8fe637de45b4302b</Anchor>
    <Abstract>Get a single window by its id. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContentWindows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>abcb9d177127229072220a803804e7721</Anchor>
    <Abstract>Replace the content windows. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZindex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a337d8975b3c7815be8b574faf2b77c84</Anchor>
    <Abstract>Get the z index of a window. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFocusedWindows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a24a30aa05f0ca717c9b559aed1b6c50d</Anchor>
    <Abstract>Are there focused windows. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFullscreenWindows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a4e9e08eed111cfe5e704ca5b68310ade</Anchor>
    <Abstract>Is there a fullscreen window. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>focus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>abe8c0ccc90732fa127118db09877e000</Anchor>
    <Abstract>Focus a window. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unfocus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>af09535f73c71da284b767b32e293d2e8</Anchor>
    <Abstract>Unfocus a window. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unfocusAll</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a7de33cf817c38e2ca511bf2426c6d24a</Anchor>
    <Abstract>Unfocus all focused windows. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFocusedWindows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>ad34ce28749abdf4530486c499c84cc9c</Anchor>
    <Abstract>Get the set of focused windows. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showFullscreen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a36ab8d22dc17f8e862567193d8138561</Anchor>
    <Abstract>Show a window in fullscreen. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exitFullscreen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a168761b0ca9987061a5b200585cadc57</Anchor>
    <Abstract>Leave fullscreen mode, restoring the window to its previous state. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveToThread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a8273099bf01b9991adb9c454ba576836</Anchor>
    <Abstract>Move this object and its member QObjects to the given QThread. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getShowWindowTitles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a1da05076e3571e8efd80f40e99973abc</Anchor>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setShowWindowTitles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a6534257568d23aaf6c87c02db77f9bba</Anchor>
    <Abstract>Enable/Disable visibility of window titles when saving the session. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DisplayGroupController</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>DisplayGroupController</Scope>
    </TokenIdentifier>
    <Path>class_display_group_controller.html</Path>
    <Abstract>Controller for rescaling and adjusting DisplayGroup. </Abstract>
    <DeclaredIn>DisplayGroupController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DisplayGroupController</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupController</Scope>
    </TokenIdentifier>
    <Path>class_display_group_controller.html</Path>
    <Anchor>ac3bd75cfaf3d6374085e2cc117beae82</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>DisplayGroupController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupController</Scope>
    </TokenIdentifier>
    <Path>class_display_group_controller.html</Path>
    <Anchor>aa76ed17f5cb0257daff3d77719edfd06</Anchor>
    <Abstract>Scale the DisplayGroup and its windows by the given x and y factors. </Abstract>
    <DeclaredIn>DisplayGroupController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>adjust</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupController</Scope>
    </TokenIdentifier>
    <Path>class_display_group_controller.html</Path>
    <Anchor>aca22819db57854ca08f7b91b4ed12929</Anchor>
    <Abstract>Rescale to fit inside the given size, preserving aspect ratio. </Abstract>
    <DeclaredIn>DisplayGroupController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reshape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupController</Scope>
    </TokenIdentifier>
    <Path>class_display_group_controller.html</Path>
    <Anchor>a7a1d92a21f52d11526f4f145e865fc9d</Anchor>
    <Abstract>Reshape to fit inside the given size, scaling and centering windows. </Abstract>
    <DeclaredIn>DisplayGroupController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>denormalize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupController</Scope>
    </TokenIdentifier>
    <Path>class_display_group_controller.html</Path>
    <Anchor>a6d1a39818b26bcd4d47537bcbcbff9a4</Anchor>
    <Abstract>Transform from normalized coordinates to pixel coordinates. </Abstract>
    <DeclaredIn>DisplayGroupController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>adjustWindowsAspectRatioToContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupController</Scope>
    </TokenIdentifier>
    <Path>class_display_group_controller.html</Path>
    <Anchor>a9505e0a188ddbd55d0fc145e45c2690f</Anchor>
    <Abstract>Resize windows in place so that their aspect ratio matches content&amp;#39;s. </Abstract>
    <DeclaredIn>DisplayGroupController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>estimateSurface</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupController</Scope>
    </TokenIdentifier>
    <Path>class_display_group_controller.html</Path>
    <Anchor>aa811e20657983c85b39c4ec682159862</Anchor>
    <Abstract>Estimate the surface covered by the windows in the group. </Abstract>
    <DeclaredIn>DisplayGroupController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DisplayGroupListWidget</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>DisplayGroupListWidget</Scope>
    </TokenIdentifier>
    <Path>class_display_group_list_widget.html</Path>
    <Abstract>A list view of a DisplayGroup&amp;#39;s ContentWindows. </Abstract>
    <DeclaredIn>DisplayGroupListWidget.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DisplayGroupListWidget</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupListWidget</Scope>
    </TokenIdentifier>
    <Path>class_display_group_list_widget.html</Path>
    <Anchor>a80c4e4b0a83d25dea87c7ff79029745a</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>DisplayGroupListWidget.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDataModel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupListWidget</Scope>
    </TokenIdentifier>
    <Path>class_display_group_list_widget.html</Path>
    <Anchor>a0424e0f76d98a4514b4417122ecf05e3</Anchor>
    <Abstract>Set the DisplayGroup model that this view should present. </Abstract>
    <DeclaredIn>DisplayGroupListWidget.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DisplayGroupRenderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>DisplayGroupRenderer</Scope>
    </TokenIdentifier>
    <Path>class_display_group_renderer.html</Path>
    <Abstract>Renders a DisplayGroup. </Abstract>
    <DeclaredIn>DisplayGroupRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDisplayGroup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>DisplayGroupRenderer</Scope>
    </TokenIdentifier>
    <Path>class_display_group_renderer.html</Path>
    <Anchor>ace9e977654ad391c3626e6aaf8815250</Anchor>
    <Abstract>Set the DisplayGroup to render, replacing the previous one. </Abstract>
    <DeclaredIn>DisplayGroupRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateRenderedFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>DisplayGroupRenderer</Scope>
    </TokenIdentifier>
    <Path>class_display_group_renderer.html</Path>
    <Anchor>a15035b434100007d96eeee453e26efb5</Anchor>
    <Abstract>Increment number of rendered/swapped frames for FPS display. </Abstract>
    <DeclaredIn>DisplayGroupRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DisplayGroupRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupRenderer</Scope>
    </TokenIdentifier>
    <Path>class_display_group_renderer.html</Path>
    <Anchor>a4a2ff328df8cc22d6a8d5e330a498373</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>DisplayGroupRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRenderingOptions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupRenderer</Scope>
    </TokenIdentifier>
    <Path>class_display_group_renderer.html</Path>
    <Anchor>ada0e93d084100854df430f175abb0b92</Anchor>
    <Abstract>Set different options used for rendering. </Abstract>
    <DeclaredIn>DisplayGroupRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMarkers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupRenderer</Scope>
    </TokenIdentifier>
    <Path>class_display_group_renderer.html</Path>
    <Anchor>a1cadb5bae289c0f58053b7bc9b559577</Anchor>
    <Abstract>Set different touchpoint&amp;#39;s markers. </Abstract>
    <DeclaredIn>DisplayGroupRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synchronize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupRenderer</Scope>
    </TokenIdentifier>
    <Path>class_display_group_renderer.html</Path>
    <Anchor>a555236ae0a2601ffa54b9fff31ca0713</Anchor>
    <Abstract>Update the contents, using the channel to synchronize processes. </Abstract>
    <DeclaredIn>DisplayGroupRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>needRedraw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupRenderer</Scope>
    </TokenIdentifier>
    <Path>class_display_group_renderer.html</Path>
    <Anchor>a8bbe7e1d1f8a109818f72a69a691f0e1</Anchor>
    <DeclaredIn>DisplayGroupRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DisplayGroupView</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>DisplayGroupView</Scope>
    </TokenIdentifier>
    <Path>class_display_group_view.html</Path>
    <Abstract>An interactive graphical view of a DisplayGroup&amp;#39;s ContentWindows. </Abstract>
    <DeclaredIn>DisplayGroupView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>backgroundTap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>DisplayGroupView</Scope>
    </TokenIdentifier>
    <Path>class_display_group_view.html</Path>
    <Anchor>ac159274a50a82ef19037b1e2bc0809f1</Anchor>
    <Abstract>Emitted when a user taps the background. </Abstract>
    <DeclaredIn>DisplayGroupView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>backgroundTapAndHold</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>DisplayGroupView</Scope>
    </TokenIdentifier>
    <Path>class_display_group_view.html</Path>
    <Anchor>aa8715cd5fbdec8ce7dd28fadf7b86db6</Anchor>
    <Abstract>Emitted when a user taps and holds the background. </Abstract>
    <DeclaredIn>DisplayGroupView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>launcherControlPressed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>DisplayGroupView</Scope>
    </TokenIdentifier>
    <Path>class_display_group_view.html</Path>
    <Anchor>abddda5fe611ba5d9e0a797a70d21036a</Anchor>
    <Abstract>Emitted when a user taps the launcher control. </Abstract>
    <DeclaredIn>DisplayGroupView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>settingsControlsPressed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>DisplayGroupView</Scope>
    </TokenIdentifier>
    <Path>class_display_group_view.html</Path>
    <Anchor>a30728a285bda55b37927e194820a9ff4</Anchor>
    <Abstract>Emitted when a user taps the settings control. </Abstract>
    <DeclaredIn>DisplayGroupView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DisplayGroupView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupView</Scope>
    </TokenIdentifier>
    <Path>class_display_group_view.html</Path>
    <Anchor>ad2df5ac523506bac5674fc0c2bb31caf</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>DisplayGroupView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~DisplayGroupView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupView</Scope>
    </TokenIdentifier>
    <Path>class_display_group_view.html</Path>
    <Anchor>a94b62e9d249ffa7452569891d00a581f</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>DisplayGroupView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDataModel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupView</Scope>
    </TokenIdentifier>
    <Path>class_display_group_view.html</Path>
    <Anchor>a217ec2c8ba202c74db38262038ccd8c3</Anchor>
    <Abstract>Set the DisplayGroup model that this view should present. </Abstract>
    <DeclaredIn>DisplayGroupView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mapToWallPos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupView</Scope>
    </TokenIdentifier>
    <Path>class_display_group_view.html</Path>
    <Anchor>a8d0b47b243973fa5f6d64d436c9c3245</Anchor>
    <Abstract>Map a normalized touch event on the wall to this view&amp;#39;s coordinates. </Abstract>
    <DeclaredIn>DisplayGroupView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>event</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupView</Scope>
    </TokenIdentifier>
    <Path>class_display_group_view.html</Path>
    <Anchor>a41aa355f4e303424741166f72089fe84</Anchor>
    <Abstract>Re-implement QWindow event to capture tab key. </Abstract>
    <DeclaredIn>DisplayGroupView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DynamicTextureContent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>DynamicTextureContent</Scope>
    </TokenIdentifier>
    <Path>class_dynamic_texture_content.html</Path>
    <Abstract>Legacy image pyramid format, no longer supported. </Abstract>
    <DeclaredIn>DynamicTextureContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DynamicTextureContent</Scope>
    </TokenIdentifier>
    <Path>class_dynamic_texture_content.html</Path>
    <Anchor>a9daaca7b2bf59bc2d79bc237673b30a4</Anchor>
    <Abstract>Get the content type. </Abstract>
    <DeclaredIn>DynamicTextureContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMetadata</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DynamicTextureContent</Scope>
    </TokenIdentifier>
    <Path>class_dynamic_texture_content.html</Path>
    <Anchor>ab74f1fd46ec931ccf9aabc767e33aa5d</Anchor>
    <DeclaredIn>DynamicTextureContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Content</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ae491288d2efce7fa63d3e777580630b4</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a887d2b952cd824d70f64106ae048a5f8</Anchor>
    <Abstract>Get the content URI. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>aa4681ca97acea99fbe88e20f0e664bc0</Anchor>
    <Abstract>Get the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a8cf06fbd623453fd2aa349d91ebbca3b</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPreferredDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a508b7f5c09ffa4f5a1a7f3e89cbec489</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a70fbc6b9c9dfd95c426819a1c14464f9</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a1b7a6f49f447c124b497b0a844fd6ea6</Anchor>
    <Abstract>Set the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a113bd8ba35685e77bcf8a8650fab636a</Anchor>
    <Abstract>Get the aspect ratio. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFixedAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>adceac372a702843a1e0bd207f670680a</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a461bb62d3989d0eb5b4d1f824e7a66c0</Anchor>
    <Abstract>Get the zoom rectangle in normalized coordinates, [0,0,1,1] default. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0f3e5f9203b97450e3856d39a12807e3</Anchor>
    <Abstract>Set the zoom rectangle in normalized coordinates. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ad5094c72f8c6d7ec5390108534804c1f</Anchor>
    <Abstract>Resets the zoom to [0,0,1,1]. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getActions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a7ae29df27d493e89dd7dccd775efbff8</Anchor>
    <Abstract>Get the actions from QML. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getQmlControls</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af64c08ff1aafa0206bf178a6e4bfa634</Anchor>
    <Abstract>Get content-specific qml controls file (default: empty). </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKeyboardState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0e10f71c92fe8434a9b40183cb7239a0</Anchor>
    <Abstract>Get the keyboard state from QML. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInteractionPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a2dea2403b7d96fad93fae78ca4986197</Anchor>
    <Abstract>Get the interaction policy (default: AUTO). </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSizeHints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a70292d652fb37ee21640801fce53c186</Anchor>
    <Abstract>Set optional size hints to constrain resize/scale and 1:1 size. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCaptureInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a7e7c36edf987322675eea81f27e8017d</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCaptureInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a18477814caa57d8f9aa0330fd19487ab</Anchor>
    <Abstract>Tell the content to capture interaction (only for Policy::AUTO). </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a44c022cb6fed6fb1b0dff45e39ececb9</Anchor>
    <Abstract>Emitted by any Content subclass when its state has been modified. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a87465efbfaf4e2e5b0a5e7e8af0985f2</Anchor>
    <Abstract>Set the maximum factor for zoom and resize; value times content size. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a04642ff3171681aa5fd2c8c8291a7949</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af5fc9d76b3c2899937927c9cd65689d5</Anchor>
    <Abstract>Serialize for sending to Wall applications. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_members_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a6787ec5cdec336c8f25c5e9671977598</Anchor>
    <Abstract>Serialize for saving to an xml file. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_for_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a4c9c0b425c1197cdf34f2d62119b6f4d</Anchor>
    <Abstract>Loading from xml. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_for_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a8d0e71e26ce26abdd7b414dee1ca2c9e</Anchor>
    <Abstract>Saving to xml. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ElapsedTimer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ElapsedTimer</Scope>
    </TokenIdentifier>
    <Path>class_elapsed_timer.html</Path>
    <Abstract>Simple timer to mesures time differences. </Abstract>
    <DeclaredIn>ElapsedTimer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ElapsedTimer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ElapsedTimer</Scope>
    </TokenIdentifier>
    <Path>class_elapsed_timer.html</Path>
    <Anchor>a898261990fc2ab88f0ac3c35f0de83d0</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ElapsedTimer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCurrentTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ElapsedTimer</Scope>
    </TokenIdentifier>
    <Path>class_elapsed_timer.html</Path>
    <Anchor>a0a3be4fb86ac666df6007078a2c35997</Anchor>
    <Abstract>Set the current time. </Abstract>
    <DeclaredIn>ElapsedTimer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ElapsedTimer</Scope>
    </TokenIdentifier>
    <Path>class_elapsed_timer.html</Path>
    <Anchor>a6559cc2f39064382de5ead5a9673e8e8</Anchor>
    <Abstract>Reset any elapsed time. </Abstract>
    <DeclaredIn>ElapsedTimer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getElapsedTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ElapsedTimer</Scope>
    </TokenIdentifier>
    <Path>class_elapsed_timer.html</Path>
    <Anchor>a7b19ebb48d1788a3e9d3e505705e21f2</Anchor>
    <Abstract>Get the elapsed time between the last two calls to setCurrentTime(). </Abstract>
    <DeclaredIn>ElapsedTimer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFMPEGFrame</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FFMPEGFrame</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_frame.html</Path>
    <Abstract>A frame of an FFMPEG movie. </Abstract>
    <DeclaredIn>FFMPEGFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFMPEGFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGFrame</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_frame.html</Path>
    <Anchor>a3c21a094e496afc9c64efe76e74fb609</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>FFMPEGFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FFMPEGFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGFrame</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_frame.html</Path>
    <Anchor>ad233e8ca905bf16f4361665ba24a7661</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>FFMPEGFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimestamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGFrame</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_frame.html</Path>
    <Anchor>aacf90ac6c1bcbc0d2226a81ac9c5b484</Anchor>
    <DeclaredIn>FFMPEGFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGFrame</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_frame.html</Path>
    <Anchor>a71fbfb5d1d00b2e5ddd26dc552ed7836</Anchor>
    <DeclaredIn>FFMPEGFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGFrame</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_frame.html</Path>
    <Anchor>aa0c1efe2ad87a14b4f24908a8dd85fee</Anchor>
    <DeclaredIn>FFMPEGFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGFrame</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_frame.html</Path>
    <Anchor>a4eb6439fee7a05dd65d81364b41304a8</Anchor>
    <DeclaredIn>FFMPEGFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGFrame</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_frame.html</Path>
    <Anchor>a56b90648351d20db62460fc98d673ee0</Anchor>
    <DeclaredIn>FFMPEGFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAVFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGFrame</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_frame.html</Path>
    <Anchor>a8e7dbdeeb04ac81ce77da9100d3e0e9f</Anchor>
    <Abstract>Get the FFMPEG frame. </Abstract>
    <DeclaredIn>FFMPEGFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>a5ce61ece7ea078a9fe1a4f259b25fb56</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGpuImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>ac3e10f35fb8dd895bda5627f43d96907</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateGpuImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>a8284c68a45d845a6ffd8eb81a4544092</Anchor>
    <Abstract>Generate the GPU image. </Abstract>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFMPEGMovie</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Abstract>Read and play movies using the FFMPEG library. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFMPEGMovie</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>a9fcab46d4c344400975ade1f085fa098</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FFMPEGMovie</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>ada29015e30fd77182119418abe0356cd</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>a0e0248f752f4b4fc318d3fc3b22069b4</Anchor>
    <Abstract>Is the movie valid. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>a9a0ec22f9170bb513afdce6b2095eb85</Anchor>
    <Abstract>Get the frame width. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>af925db8310451b645f8645941e054837</Anchor>
    <Abstract>Get the frame height. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>a1a4fccc1a7b190fd7ad462b0c568709a</Anchor>
    <Abstract>Get the current time position in seconds. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>ac79b8e3e5c0774e96849ffd57809311c</Anchor>
    <Abstract>Get the movie duration in seconds. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>ab8b72d1dd991fbdd0b527648314b7001</Anchor>
    <Abstract>Get the duration of a frame in seconds. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>a7d0104e8b62e7d75118c372fd1aa143d</Anchor>
    <Abstract>Get a frame at the given position in seconds. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFMPEGPicture</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FFMPEGPicture</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_picture.html</Path>
    <Abstract>A decoded frame of the movie stream. </Abstract>
    <DeclaredIn>FFMPEGPicture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFMPEGPicture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGPicture</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_picture.html</Path>
    <Anchor>af82b8bb425d3185b166dfbb539c5a35d</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>FFMPEGPicture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FFMPEGPicture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGPicture</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_picture.html</Path>
    <Anchor>a567d83133c1489d0e0f01ea5973d3da5</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>FFMPEGPicture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toQImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGPicture</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_picture.html</Path>
    <Anchor>aa25b7b1aa75fe4651ff575f8b8457a5b</Anchor>
    <Abstract>Get the picture as a QImage. </Abstract>
    <DeclaredIn>FFMPEGPicture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFMPEGFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGFrame</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_frame.html</Path>
    <Anchor>a3c21a094e496afc9c64efe76e74fb609</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>FFMPEGFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FFMPEGFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGFrame</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_frame.html</Path>
    <Anchor>ad233e8ca905bf16f4361665ba24a7661</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>FFMPEGFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimestamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGFrame</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_frame.html</Path>
    <Anchor>aacf90ac6c1bcbc0d2226a81ac9c5b484</Anchor>
    <DeclaredIn>FFMPEGFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGFrame</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_frame.html</Path>
    <Anchor>a71fbfb5d1d00b2e5ddd26dc552ed7836</Anchor>
    <DeclaredIn>FFMPEGFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGFrame</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_frame.html</Path>
    <Anchor>aa0c1efe2ad87a14b4f24908a8dd85fee</Anchor>
    <DeclaredIn>FFMPEGFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGFrame</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_frame.html</Path>
    <Anchor>a4eb6439fee7a05dd65d81364b41304a8</Anchor>
    <DeclaredIn>FFMPEGFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGFrame</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_frame.html</Path>
    <Anchor>a56b90648351d20db62460fc98d673ee0</Anchor>
    <DeclaredIn>FFMPEGFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAVFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGFrame</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_frame.html</Path>
    <Anchor>a8e7dbdeeb04ac81ce77da9100d3e0e9f</Anchor>
    <Abstract>Get the FFMPEG frame. </Abstract>
    <DeclaredIn>FFMPEGFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>a5ce61ece7ea078a9fe1a4f259b25fb56</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGpuImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>ac3e10f35fb8dd895bda5627f43d96907</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateGpuImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>a8284c68a45d845a6ffd8eb81a4544092</Anchor>
    <Abstract>Generate the GPU image. </Abstract>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFMPEGVideoFrameConverter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FFMPEGVideoFrameConverter</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_frame_converter.html</Path>
    <Abstract>Converts FFMPEG&amp;#39;s AVFrame format to a data buffer of user-defined format. </Abstract>
    <DeclaredIn>FFMPEGVideoFrameConverter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFMPEGVideoFrameConverter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoFrameConverter</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_frame_converter.html</Path>
    <Anchor>a0665398d273baaf846bd5794f60abcc0</Anchor>
    <Abstract>Create a new converter. </Abstract>
    <DeclaredIn>FFMPEGVideoFrameConverter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FFMPEGVideoFrameConverter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoFrameConverter</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_frame_converter.html</Path>
    <Anchor>aeefb0051a145deb3d6b6fd58bb4906ac</Anchor>
    <Abstract>Desturctor. </Abstract>
    <DeclaredIn>FFMPEGVideoFrameConverter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convert</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoFrameConverter</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_frame_converter.html</Path>
    <Anchor>a3ad2bf176bf86fd55cf17a558452ca03</Anchor>
    <Abstract>Convert an AVFrame to the target data format. </Abstract>
    <DeclaredIn>FFMPEGVideoFrameConverter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFMPEGVideoStream</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Abstract>A video stream from an FFMPEG file. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFMPEGVideoStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>a3462dbb6d35dbca8ae9692320765ea70</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FFMPEGVideoStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>ac156456c4ed8b05d38a475d562de746e</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>a740cc6e53585987ed948ce75de986b1b</Anchor>
    <Abstract>Decode a video packet. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decodeTimestamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>a59a72231402aae3c00200f20129329b3</Anchor>
    <Abstract>Partially decode a video packet to determine its timestamp. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decodePictureForLastPacket</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>a3ee83f7561e1fc56cceb14bc613f5b0e</Anchor>
    <Abstract>Call after a successful decodeTimestamp to get the corresponding picture. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>a2a229012cd32b78f4fce8790b5621968</Anchor>
    <Abstract>Get the width of the video stream. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>a5bf7b63236263fae23dc4338c119ec74</Anchor>
    <Abstract>Get the height of the video stream. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>a6751a0e306c8f0c176681496d5448982</Anchor>
    <Abstract>Get the video stream duration in seconds. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>a6aa24924ff435f71adf39625d0a4f8a4</Anchor>
    <Abstract>Get the duration of a frame in seconds. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>afd2dc7e4aca544cf9e63604be3640560</Anchor>
    <Abstract>Get the frameIndex corresponding to the given time in seconds. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimestamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>aeb13ff830c91d0644e28092fe71c3a96</Anchor>
    <Abstract>Get the timestamp corresponding to the given time in seconds. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimestamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>a7f8ddef524406c30c3973190428d9d6e</Anchor>
    <Abstract>Get the timestamp corresponding to the given frameIndex. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>abd1bbcc36fc1f0e6d38df4fae161ec8a</Anchor>
    <Abstract>Get the frameIndex corresponding to the given timestamp. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPositionInSec</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>a6e0f039858303528e97219efa68a087b</Anchor>
    <Abstract>Convert a timestamp to a time in seconds. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>seekToNearestFullframe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>ab78b40e3d19ec1de95c31ea52163937c</Anchor>
    <Abstract>Seek to the nearest full frame in the video. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FolderThumbnailGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FolderThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_folder_thumbnail_generator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FpsCounter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FpsCounter</Scope>
    </TokenIdentifier>
    <Path>class_fps_counter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Image</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Abstract>An interface to provide necessary image information for the texture upload and swap in TextureUploade...</Abstract>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>a1de2a9d72e71620e6bf1217b502faa06</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>a136b4da4ac615de0c06d0ee31af351a2</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>a5ce61ece7ea078a9fe1a4f259b25fb56</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>ae5dcd7b14a734e7cf6b574e0b14f41eb</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>a5589918ba61331ff92c34f6d958ebb2a</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGpuImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>ac3e10f35fb8dd895bda5627f43d96907</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateGpuImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>a8284c68a45d845a6ffd8eb81a4544092</Anchor>
    <Abstract>Generate the GPU image. </Abstract>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImagePyramidContent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ImagePyramidContent</Scope>
    </TokenIdentifier>
    <Path>class_image_pyramid_content.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImagePyramidContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ImagePyramidContent</Scope>
    </TokenIdentifier>
    <Path>class_image_pyramid_content.html</Path>
    <Anchor>afc3b21948f6c00850d193980081aa11b</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ImagePyramidContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ImagePyramidContent</Scope>
    </TokenIdentifier>
    <Path>class_image_pyramid_content.html</Path>
    <Anchor>a8e16e4aab77c8be9efdc53da7e8c4ff2</Anchor>
    <Abstract>Get the content type. </Abstract>
    <DeclaredIn>ImagePyramidContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMetadata</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ImagePyramidContent</Scope>
    </TokenIdentifier>
    <Path>class_image_pyramid_content.html</Path>
    <Anchor>a306dc9f5ea9089c6d2c48b65abe905b4</Anchor>
    <Abstract>Read texture metadata. </Abstract>
    <DeclaredIn>ImagePyramidContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Content</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ae491288d2efce7fa63d3e777580630b4</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a887d2b952cd824d70f64106ae048a5f8</Anchor>
    <Abstract>Get the content URI. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>aa4681ca97acea99fbe88e20f0e664bc0</Anchor>
    <Abstract>Get the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a8cf06fbd623453fd2aa349d91ebbca3b</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPreferredDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a508b7f5c09ffa4f5a1a7f3e89cbec489</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a70fbc6b9c9dfd95c426819a1c14464f9</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a1b7a6f49f447c124b497b0a844fd6ea6</Anchor>
    <Abstract>Set the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a113bd8ba35685e77bcf8a8650fab636a</Anchor>
    <Abstract>Get the aspect ratio. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFixedAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>adceac372a702843a1e0bd207f670680a</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a461bb62d3989d0eb5b4d1f824e7a66c0</Anchor>
    <Abstract>Get the zoom rectangle in normalized coordinates, [0,0,1,1] default. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0f3e5f9203b97450e3856d39a12807e3</Anchor>
    <Abstract>Set the zoom rectangle in normalized coordinates. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ad5094c72f8c6d7ec5390108534804c1f</Anchor>
    <Abstract>Resets the zoom to [0,0,1,1]. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getActions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a7ae29df27d493e89dd7dccd775efbff8</Anchor>
    <Abstract>Get the actions from QML. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getQmlControls</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af64c08ff1aafa0206bf178a6e4bfa634</Anchor>
    <Abstract>Get content-specific qml controls file (default: empty). </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKeyboardState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0e10f71c92fe8434a9b40183cb7239a0</Anchor>
    <Abstract>Get the keyboard state from QML. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInteractionPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a2dea2403b7d96fad93fae78ca4986197</Anchor>
    <Abstract>Get the interaction policy (default: AUTO). </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSizeHints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a70292d652fb37ee21640801fce53c186</Anchor>
    <Abstract>Set optional size hints to constrain resize/scale and 1:1 size. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCaptureInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a7e7c36edf987322675eea81f27e8017d</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCaptureInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a18477814caa57d8f9aa0330fd19487ab</Anchor>
    <Abstract>Tell the content to capture interaction (only for Policy::AUTO). </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a87465efbfaf4e2e5b0a5e7e8af0985f2</Anchor>
    <Abstract>Set the maximum factor for zoom and resize; value times content size. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a04642ff3171681aa5fd2c8c8291a7949</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a44c022cb6fed6fb1b0dff45e39ececb9</Anchor>
    <Abstract>Emitted by any Content subclass when its state has been modified. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af5fc9d76b3c2899937927c9cd65689d5</Anchor>
    <Abstract>Serialize for sending to Wall applications. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_members_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a6787ec5cdec336c8f25c5e9671977598</Anchor>
    <Abstract>Serialize for saving to an xml file. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_for_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a4c9c0b425c1197cdf34f2d62119b6f4d</Anchor>
    <Abstract>Loading from xml. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_for_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a8d0e71e26ce26abdd7b414dee1ca2c9e</Anchor>
    <Abstract>Saving to xml. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImagePyramidDataSource</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ImagePyramidDataSource</Scope>
    </TokenIdentifier>
    <Path>class_image_pyramid_data_source.html</Path>
    <Abstract>A data source for tiled image pyramids. </Abstract>
    <DeclaredIn>ImagePyramidDataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImagePyramidDataSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ImagePyramidDataSource</Scope>
    </TokenIdentifier>
    <Path>class_image_pyramid_data_source.html</Path>
    <Anchor>ac397eafadab0288bc7df40c47631b40c</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ImagePyramidDataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>a8cfbf1d951a1d4ddd2b38b3049310d3e</Anchor>
    <Abstract>Get the coordinates of a tile. </Abstract>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTilesArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>a505d41a890ecf672d6b36e3365f9fdff</Anchor>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeVisibleSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>ac9f7302d1fc7c786bcf6a0f132d2d389</Anchor>
    <Abstract>Compute the indices of the tiles which are visible in the given area. </Abstract>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxLod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>a1f48c3a3fe7870ef430a9244874b0253</Anchor>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNormalizedTileRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>a085c9b2df8260fb774572242b411fdd3</Anchor>
    <Abstract>Get the tile rectangle in normalized coordinates. </Abstract>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CachedDataSource</Scope>
    </TokenIdentifier>
    <Path>class_cached_data_source.html</Path>
    <Anchor>a6fd04c5620ce585d49ef42494825bfd9</Anchor>
    <Abstract>Get a tile image by its id. threadsafe </Abstract>
    <DeclaredIn>CachedDataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CachedDataSource</Scope>
    </TokenIdentifier>
    <Path>class_cached_data_source.html</Path>
    <Anchor>a02e027db47c9407a6235d391a015704b</Anchor>
    <Abstract>Check if the cache contains an image for a tile. </Abstract>
    <DeclaredIn>CachedDataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LodTiler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>a6fb20a5bd71ee276d60d95f57a197517</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImagePyramidSynchronizer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ImagePyramidSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_image_pyramid_synchronizer.html</Path>
    <Abstract>A synchronizer which provides the list of Tiles for image pyramids. </Abstract>
    <DeclaredIn>ImagePyramidSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImagePyramidSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ImagePyramidSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_image_pyramid_synchronizer.html</Path>
    <Anchor>af5454ca093b89113598223e7b45b01c3</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ImagePyramidSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ImagePyramidSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ImagePyramidSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_image_pyramid_synchronizer.html</Path>
    <Anchor>a79afd1052656f748b606ca2df589a448</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>ImagePyramidSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synchronize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ImagePyramidSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_image_pyramid_synchronizer.html</Path>
    <Anchor>ac2f1b7c983dc8b78f3902841ae3b3de3</Anchor>
    <Abstract>Synchronize content advance accross processes. </Abstract>
    <DeclaredIn>ImagePyramidSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LodSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Anchor>ae58845a6fc6e41b1d5ed769e0529ca08</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Anchor>a5954e68efdac62476dca84251c416c51</Anchor>
    <Abstract>Update the Content. </Abstract>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTilesArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Anchor>a16def68e81a838582f93c7b544634b24</Anchor>
    <Abstract>The total area covered by the tiles (may depend on current LOD). </Abstract>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Anchor>ae54dd22eea77b13579224ca5399cdc27</Anchor>
    <Abstract>Get statistics about this Content. </Abstract>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Anchor>a6aa8ea489e0a5d0c0e2988357f2ef32e</Anchor>
    <Abstract>Get the image for a given tile index. </Abstract>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoomContextTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Anchor>aa42ce964a5aa8a09782cbdd25cb7809a</Anchor>
    <Abstract>Notify the window to add a tile for the zoom context. </Abstract>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TiledSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a70ae3f4171110fc5308407e870044fcd</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onSwapReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a8ae5165f31bd9575d16a2849c46eb256</Anchor>
    <Abstract>Called when a tile is ready to swap. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aa9b57c8a735fbfb9b35e3e79d9ac9682</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ContentSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a68aa090a819ade8f4193c6848aa5d7c0</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onTextureReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aea4634e943d637574dc06c4a8000811e</Anchor>
    <Abstract>Called when a tile has finished initializing; re-emits requestUpdate. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tilesAreaChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aac807a9cb073a52d88a80ceca93b34a3</Anchor>
    <Abstract>Notifier for the tiles area property. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>statisticsChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a8b2131d6b3874d8d932a101ec3dcde05</Anchor>
    <Abstract>Notifier for the statistics property. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a07a22964fedee87ec47fddc4b02a40f0</Anchor>
    <Abstract>Notify the window to add a tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a755db8af943fc6bd0aab4220320d3a89</Anchor>
    <Abstract>Notify the window to remove a tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aba03b3c5af16950946e91c893d20eeaf</Anchor>
    <Abstract>Notify to update a tile&amp;#39;s coordinates. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestTileUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aa8eaddb3ad37209eb3df6cac7dc68db8</Anchor>
    <Abstract>Request an update of a specific tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zoomContextTileChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a936e9892ccd99cef73b82282b1d291e2</Anchor>
    <Abstract>Notify that the zoom context tile has changed and must be recreated. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a1ad34f14a76b9eae5f55b90ccf6d3db5</Anchor>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Anchor>a2e34ef7461644353ec641acc6e5f5627</Anchor>
    <Abstract>Get the appropriate LOD for a given display size. </Abstract>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBackgroundTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Anchor>a81e10f2ecb83c92a9183c9c50e4b4bfc</Anchor>
    <Abstract>Create the background tile to smooth the LOD change. </Abstract>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>ac2d23b0e012c2d6a32b1d9302f7e98f6</Anchor>
    <Abstract>Update the tiles, adding or removing them from the view. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>aff88bcf6044fa835c350785e60053300</Anchor>
    <Abstract>Perform a synchronized tile swap across all processes. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImagePyramidThumbnailGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ImagePyramidThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_image_pyramid_thumbnail_generator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImageSource</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ImageSource</Scope>
    </TokenIdentifier>
    <Path>class_image_source.html</Path>
    <Abstract>Cached data source for regular images. </Abstract>
    <DeclaredIn>ImageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImageSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ImageSource</Scope>
    </TokenIdentifier>
    <Path>class_image_source.html</Path>
    <Anchor>acca0d3d0e1927f39881e365007f9d51c</Anchor>
    <Abstract>Construct an image source. </Abstract>
    <DeclaredIn>ImageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ImageSource</Scope>
    </TokenIdentifier>
    <Path>class_image_source.html</Path>
    <Anchor>a9873cf16d09d2276586740f8f8a07f1d</Anchor>
    <Abstract>Get the coordinates of a tile. </Abstract>
    <DeclaredIn>ImageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTilesArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ImageSource</Scope>
    </TokenIdentifier>
    <Path>class_image_source.html</Path>
    <Anchor>a8e8fbc827b392236ebe545703ae3cfc4</Anchor>
    <DeclaredIn>ImageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeVisibleSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ImageSource</Scope>
    </TokenIdentifier>
    <Path>class_image_source.html</Path>
    <Anchor>aebdd99ac97e51075714c9729e5ce2126</Anchor>
    <Abstract>Compute the indices of the tiles which are visible in the given area. </Abstract>
    <DeclaredIn>ImageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxLod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ImageSource</Scope>
    </TokenIdentifier>
    <Path>class_image_source.html</Path>
    <Anchor>ab3c5634f3c4b98f83491c275289d0569</Anchor>
    <DeclaredIn>ImageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CachedDataSource</Scope>
    </TokenIdentifier>
    <Path>class_cached_data_source.html</Path>
    <Anchor>a6fd04c5620ce585d49ef42494825bfd9</Anchor>
    <Abstract>Get a tile image by its id. threadsafe </Abstract>
    <DeclaredIn>CachedDataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CachedDataSource</Scope>
    </TokenIdentifier>
    <Path>class_cached_data_source.html</Path>
    <Anchor>a02e027db47c9407a6235d391a015704b</Anchor>
    <Abstract>Check if the cache contains an image for a tile. </Abstract>
    <DeclaredIn>CachedDataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImageSynchronizer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ImageSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_image_synchronizer.html</Path>
    <Abstract>Synchronizer for simple images. </Abstract>
    <DeclaredIn>ImageSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImageSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ImageSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_image_synchronizer.html</Path>
    <Anchor>a6b8d0d7d138b9c58738c26acd6bd60c9</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ImageSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ImageSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_image_synchronizer.html</Path>
    <Anchor>abb4ab3acb2a62dc31d7a8687f5d67759</Anchor>
    <Abstract>Update the Content. </Abstract>
    <DeclaredIn>ImageSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ImageSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_image_synchronizer.html</Path>
    <Anchor>abf792b50576f30c5fb879987e670b3ad</Anchor>
    <Abstract>Get the image for a given tile index. </Abstract>
    <DeclaredIn>ImageSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoomContextTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ImageSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_image_synchronizer.html</Path>
    <Anchor>ace4a4f56d053bfe935c45c95fe3628ac</Anchor>
    <Abstract>Notify the window to add a tile for the zoom context. </Abstract>
    <DeclaredIn>ImageSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BasicSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BasicSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_basic_synchronizer.html</Path>
    <Anchor>a75fa01a8bfb21beb943ffab93807eac9</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>BasicSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synchronize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BasicSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_basic_synchronizer.html</Path>
    <Anchor>ab4ffa1c6be625545255fa8f906d0752e</Anchor>
    <Abstract>Synchronize content advance accross processes. </Abstract>
    <DeclaredIn>BasicSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTilesArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BasicSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_basic_synchronizer.html</Path>
    <Anchor>a2a22d0498d275b5d3e3ab286deb701e8</Anchor>
    <Abstract>The total area covered by the tiles (may depend on current LOD). </Abstract>
    <DeclaredIn>BasicSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BasicSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_basic_synchronizer.html</Path>
    <Anchor>a425227b9efe2704d22983052cab41818</Anchor>
    <Abstract>Get statistics about this Content. </Abstract>
    <DeclaredIn>BasicSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onSwapReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BasicSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_basic_synchronizer.html</Path>
    <Anchor>abd26eebc223e5d5dc5f0442f51fce2fd</Anchor>
    <Abstract>Called when a tile is ready to swap. </Abstract>
    <DeclaredIn>BasicSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aa9b57c8a735fbfb9b35e3e79d9ac9682</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ContentSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a68aa090a819ade8f4193c6848aa5d7c0</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onTextureReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aea4634e943d637574dc06c4a8000811e</Anchor>
    <Abstract>Called when a tile has finished initializing; re-emits requestUpdate. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tilesAreaChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aac807a9cb073a52d88a80ceca93b34a3</Anchor>
    <Abstract>Notifier for the tiles area property. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>statisticsChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a8b2131d6b3874d8d932a101ec3dcde05</Anchor>
    <Abstract>Notifier for the statistics property. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a07a22964fedee87ec47fddc4b02a40f0</Anchor>
    <Abstract>Notify the window to add a tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a755db8af943fc6bd0aab4220320d3a89</Anchor>
    <Abstract>Notify the window to remove a tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aba03b3c5af16950946e91c893d20eeaf</Anchor>
    <Abstract>Notify to update a tile&amp;#39;s coordinates. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestTileUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aa8eaddb3ad37209eb3df6cac7dc68db8</Anchor>
    <Abstract>Request an update of a specific tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zoomContextTileChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a936e9892ccd99cef73b82282b1d291e2</Anchor>
    <Abstract>Notify that the zoom context tile has changed and must be recreated. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a1ad34f14a76b9eae5f55b90ccf6d3db5</Anchor>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BasicSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_basic_synchronizer.html</Path>
    <Anchor>a3e9d3a2e8158ee28a44cf4e1e003546c</Anchor>
    <Abstract>Create this content&amp;#39;s unique tile with the given dimensions. </Abstract>
    <DeclaredIn>BasicSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImageThumbnailGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ImageThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_image_thumbnail_generator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>JsonOptions</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>JsonOptions</Scope>
    </TokenIdentifier>
    <Path>class_json_options.html</Path>
    <Abstract>Exposes the application&amp;#39;s Options in JSON format through the REST interface. </Abstract>
    <DeclaredIn>JsonOptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>JsonOptions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>JsonOptions</Scope>
    </TokenIdentifier>
    <Path>class_json_options.html</Path>
    <Anchor>a41f9b68c8beeff875f72c31e16f88ae1</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>JsonOptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>KeyboardState</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>KeyboardState</Scope>
    </TokenIdentifier>
    <Path>class_keyboard_state.html</Path>
    <Abstract>The state of the virtual keyboard, distributed by master to wall processes. </Abstract>
    <DeclaredIn>KeyboardState.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVisible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>KeyboardState</Scope>
    </TokenIdentifier>
    <Path>class_keyboard_state.html</Path>
    <Anchor>ad29cf00777bb60224403574120365250</Anchor>
    <Abstract>Set the visibility of the keyboard. </Abstract>
    <DeclaredIn>KeyboardState.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setShiftActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>KeyboardState</Scope>
    </TokenIdentifier>
    <Path>class_keyboard_state.html</Path>
    <Anchor>adbcd5243dfbf48c6fda05b09463633bd</Anchor>
    <Abstract>(De)Activate the shift key. </Abstract>
    <DeclaredIn>KeyboardState.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSymbolsActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>KeyboardState</Scope>
    </TokenIdentifier>
    <Path>class_keyboard_state.html</Path>
    <Anchor>a046f7ed57fb2df2279bb8aeb9ffe7c72</Anchor>
    <Abstract>(De)Activate the symbols key. </Abstract>
    <DeclaredIn>KeyboardState.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setActiveKeyId</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>KeyboardState</Scope>
    </TokenIdentifier>
    <Path>class_keyboard_state.html</Path>
    <Anchor>a9f090fa5c6ec36058d57463f678c5316</Anchor>
    <Abstract>Set the identifier of the active key. </Abstract>
    <DeclaredIn>KeyboardState.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>KeyboardState</Scope>
    </TokenIdentifier>
    <Path>class_keyboard_state.html</Path>
    <Anchor>abff446f04460e5c3e5aa337591d33648</Anchor>
    <Abstract>Emitted whenever any field has been modified. </Abstract>
    <DeclaredIn>KeyboardState.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isVisible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>KeyboardState</Scope>
    </TokenIdentifier>
    <Path>class_keyboard_state.html</Path>
    <Anchor>a56d1826dcca6d6f0c46629db0f2432a0</Anchor>
    <DeclaredIn>KeyboardState.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getShiftActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>KeyboardState</Scope>
    </TokenIdentifier>
    <Path>class_keyboard_state.html</Path>
    <Anchor>a295d8a7049405a8a702faf8a4119abf9</Anchor>
    <DeclaredIn>KeyboardState.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSymbolsActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>KeyboardState</Scope>
    </TokenIdentifier>
    <Path>class_keyboard_state.html</Path>
    <Anchor>a635c9096e6455805614be41944bf7bd2</Anchor>
    <DeclaredIn>KeyboardState.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getActiveKeyId</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>KeyboardState</Scope>
    </TokenIdentifier>
    <Path>class_keyboard_state.html</Path>
    <Anchor>a1108a531e36d36d28f036c5f59ca0479</Anchor>
    <DeclaredIn>KeyboardState.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LayoutEngine</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>LayoutEngine</Scope>
    </TokenIdentifier>
    <Path>class_layout_engine.html</Path>
    <Abstract>Layout engine for positionning windows on the wall. </Abstract>
    <DeclaredIn>LayoutEngine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFocusedCoord</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LayoutEngine</Scope>
    </TokenIdentifier>
    <Path>class_layout_engine.html</Path>
    <Anchor>a5e9fcc786df14049fcd0d3467cb8eaf3</Anchor>
    <DeclaredIn>LayoutEngine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LodSynchronizer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Abstract>Base synchronizer for tiled contents with multiple levels of detail. </Abstract>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LodSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Anchor>ae58845a6fc6e41b1d5ed769e0529ca08</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Anchor>a5954e68efdac62476dca84251c416c51</Anchor>
    <Abstract>Update the Content. </Abstract>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTilesArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Anchor>a16def68e81a838582f93c7b544634b24</Anchor>
    <Abstract>The total area covered by the tiles (may depend on current LOD). </Abstract>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Anchor>ae54dd22eea77b13579224ca5399cdc27</Anchor>
    <Abstract>Get statistics about this Content. </Abstract>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Anchor>a6aa8ea489e0a5d0c0e2988357f2ef32e</Anchor>
    <Abstract>Get the image for a given tile index. </Abstract>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoomContextTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Anchor>aa42ce964a5aa8a09782cbdd25cb7809a</Anchor>
    <Abstract>Notify the window to add a tile for the zoom context. </Abstract>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TiledSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a70ae3f4171110fc5308407e870044fcd</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onSwapReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a8ae5165f31bd9575d16a2849c46eb256</Anchor>
    <Abstract>Called when a tile is ready to swap. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aa9b57c8a735fbfb9b35e3e79d9ac9682</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ContentSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a68aa090a819ade8f4193c6848aa5d7c0</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synchronize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a7d31a22c5564f6ef79ea3b39c071d938</Anchor>
    <Abstract>Synchronize content advance accross processes. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Anchor>a2e34ef7461644353ec641acc6e5f5627</Anchor>
    <Abstract>Get the appropriate LOD for a given display size. </Abstract>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDataSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Anchor>a9d33b8741af986c7cde7ff711e26f36b</Anchor>
    <Abstract>Derived classes must implement this method to return their data source. </Abstract>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBackgroundTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Anchor>a81e10f2ecb83c92a9183c9c50e4b4bfc</Anchor>
    <Abstract>Create the background tile to smooth the LOD change. </Abstract>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>ac2d23b0e012c2d6a32b1d9302f7e98f6</Anchor>
    <Abstract>Update the tiles, adding or removing them from the view. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>aff88bcf6044fa835c350785e60053300</Anchor>
    <Abstract>Perform a synchronized tile swap across all processes. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onTextureReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aea4634e943d637574dc06c4a8000811e</Anchor>
    <Abstract>Called when a tile has finished initializing; re-emits requestUpdate. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tilesAreaChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aac807a9cb073a52d88a80ceca93b34a3</Anchor>
    <Abstract>Notifier for the tiles area property. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>statisticsChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a8b2131d6b3874d8d932a101ec3dcde05</Anchor>
    <Abstract>Notifier for the statistics property. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a07a22964fedee87ec47fddc4b02a40f0</Anchor>
    <Abstract>Notify the window to add a tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a755db8af943fc6bd0aab4220320d3a89</Anchor>
    <Abstract>Notify the window to remove a tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aba03b3c5af16950946e91c893d20eeaf</Anchor>
    <Abstract>Notify to update a tile&amp;#39;s coordinates. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestTileUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aa8eaddb3ad37209eb3df6cac7dc68db8</Anchor>
    <Abstract>Request an update of a specific tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zoomContextTileChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a936e9892ccd99cef73b82282b1d291e2</Anchor>
    <Abstract>Notify that the zoom context tile has changed and must be recreated. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a1ad34f14a76b9eae5f55b90ccf6d3db5</Anchor>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LodTiler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Abstract>Base class to provide tiles for multi-LOD tiled data source. </Abstract>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>a8cfbf1d951a1d4ddd2b38b3049310d3e</Anchor>
    <Abstract>Get the coordinates of a tile. </Abstract>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTilesArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>a505d41a890ecf672d6b36e3365f9fdff</Anchor>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeVisibleSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>ac9f7302d1fc7c786bcf6a0f132d2d389</Anchor>
    <Abstract>Compute the indices of the tiles which are visible in the given area. </Abstract>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxLod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>a1f48c3a3fe7870ef430a9244874b0253</Anchor>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNormalizedTileRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>a085c9b2df8260fb774572242b411fdd3</Anchor>
    <Abstract>Get the tile rectangle in normalized coordinates. </Abstract>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CachedDataSource</Scope>
    </TokenIdentifier>
    <Path>class_cached_data_source.html</Path>
    <Anchor>a6fd04c5620ce585d49ef42494825bfd9</Anchor>
    <Abstract>Get a tile image by its id. threadsafe </Abstract>
    <DeclaredIn>CachedDataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CachedDataSource</Scope>
    </TokenIdentifier>
    <Path>class_cached_data_source.html</Path>
    <Anchor>a02e027db47c9407a6235d391a015704b</Anchor>
    <Abstract>Check if the cache contains an image for a tile. </Abstract>
    <DeclaredIn>CachedDataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LodTiler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>a6fb20a5bd71ee276d60d95f57a197517</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCachableTileImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CachedDataSource</Scope>
    </TokenIdentifier>
    <Path>class_cached_data_source.html</Path>
    <Anchor>acd3cc5e87e55d14336e41fe87ebefa84</Anchor>
    <Abstract>Get a tile image which will be cached. </Abstract>
    <DeclaredIn>CachedDataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LodTools</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>LodTools</Scope>
    </TokenIdentifier>
    <Path>class_lod_tools.html</Path>
    <Abstract>Tools to compute LOD pyramid data for a 2D tiled image. </Abstract>
    <DeclaredIn>LodTools.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LodTools</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTools</Scope>
    </TokenIdentifier>
    <Path>class_lod_tools.html</Path>
    <Anchor>a31ca10c2a26eca743f63827cdd7d7b15</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>LodTools.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxLod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTools</Scope>
    </TokenIdentifier>
    <Path>class_lod_tools.html</Path>
    <Anchor>a3fbb2bcb9a1d4a59d67c9b4d902fd112</Anchor>
    <DeclaredIn>LodTools.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTilesArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTools</Scope>
    </TokenIdentifier>
    <Path>class_lod_tools.html</Path>
    <Anchor>a1ccac890a674a08401c453ba1b5a0865</Anchor>
    <DeclaredIn>LodTools.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTilesCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTools</Scope>
    </TokenIdentifier>
    <Path>class_lod_tools.html</Path>
    <Anchor>a4b01b652ba5ed40843c2611353e6a06a</Anchor>
    <DeclaredIn>LodTools.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTilesCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTools</Scope>
    </TokenIdentifier>
    <Path>class_lod_tools.html</Path>
    <Anchor>a88dbc8c39df74577ea9e7c2f41e1dc21</Anchor>
    <DeclaredIn>LodTools.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFirstTileId</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTools</Scope>
    </TokenIdentifier>
    <Path>class_lod_tools.html</Path>
    <Anchor>a91b25c6820b837fd9694b9be1a249bc2</Anchor>
    <DeclaredIn>LodTools.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTools</Scope>
    </TokenIdentifier>
    <Path>class_lod_tools.html</Path>
    <Anchor>af9fd4d6d9d00d668b04cd6ca534d3d80</Anchor>
    <DeclaredIn>LodTools.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileCoord</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTools</Scope>
    </TokenIdentifier>
    <Path>class_lod_tools.html</Path>
    <Anchor>ab3cf204d5d8a346f1f5ba205f529087a</Anchor>
    <DeclaredIn>LodTools.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAllTileInfos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTools</Scope>
    </TokenIdentifier>
    <Path>class_lod_tools.html</Path>
    <Anchor>a9cf262dc1bfc5080ba96778f418c8b0d</Anchor>
    <DeclaredIn>LodTools.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVisibleTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTools</Scope>
    </TokenIdentifier>
    <Path>class_lod_tools.html</Path>
    <Anchor>ad02ae289d9cf778b922cb70e6e318fee</Anchor>
    <DeclaredIn>LodTools.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LodTools::TileIndex</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>LodTools::TileIndex</Scope>
    </TokenIdentifier>
    <Path>struct_lod_tools_1_1_tile_index.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LodTools::TileInfo</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>LodTools::TileInfo</Scope>
    </TokenIdentifier>
    <Path>struct_lod_tools_1_1_tile_info.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LoggingUtility</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>LoggingUtility</Scope>
    </TokenIdentifier>
    <Path>class_logging_utility.html</Path>
    <Abstract>Provides information/statistics on application usage. </Abstract>
    <DeclaredIn>LoggingUtility.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contentWindowAdded</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>LoggingUtility</Scope>
    </TokenIdentifier>
    <Path>class_logging_utility.html</Path>
    <Anchor>a1faa262f91ad9d25c894ace63ab1524a</Anchor>
    <Abstract>Log the event, update the counters and update the timestamp of last interaction. </Abstract>
    <DeclaredIn>LoggingUtility.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contentWindowMovedToFront</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>LoggingUtility</Scope>
    </TokenIdentifier>
    <Path>class_logging_utility.html</Path>
    <Anchor>a819c7cd03f7243347c64cabf190a359e</Anchor>
    <Abstract>Log the event, update the counters and update the timestamp of last interaction. </Abstract>
    <DeclaredIn>LoggingUtility.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contentWindowRemoved</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>LoggingUtility</Scope>
    </TokenIdentifier>
    <Path>class_logging_utility.html</Path>
    <Anchor>a1b4961ce92b0464015f357b87fa25f1c</Anchor>
    <Abstract>Log the event, update the counters and update the timestamp of last interaction. </Abstract>
    <DeclaredIn>LoggingUtility.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAccumulatedWindowCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LoggingUtility</Scope>
    </TokenIdentifier>
    <Path>class_logging_utility.html</Path>
    <Anchor>a546bf7a69a9440e3d2a92edf1113d929</Anchor>
    <DeclaredIn>LoggingUtility.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCounterModificationTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LoggingUtility</Scope>
    </TokenIdentifier>
    <Path>class_logging_utility.html</Path>
    <Anchor>a8b0050de689d1caeee668eab75582fd7</Anchor>
    <DeclaredIn>LoggingUtility.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInteractionCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LoggingUtility</Scope>
    </TokenIdentifier>
    <Path>class_logging_utility.html</Path>
    <Anchor>ac02c26b1ba446e25db8226fa2d09cd61</Anchor>
    <DeclaredIn>LoggingUtility.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLastInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LoggingUtility</Scope>
    </TokenIdentifier>
    <Path>class_logging_utility.html</Path>
    <Anchor>ab7423d3e44b7481a8735aa85e7d09dfa</Anchor>
    <DeclaredIn>LoggingUtility.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLastInteractionTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LoggingUtility</Scope>
    </TokenIdentifier>
    <Path>class_logging_utility.html</Path>
    <Anchor>aa715077f4a9d558a5cd0c7a6a4a4bf79</Anchor>
    <DeclaredIn>LoggingUtility.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWindowCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LoggingUtility</Scope>
    </TokenIdentifier>
    <Path>class_logging_utility.html</Path>
    <Anchor>aaf9f91a24f75a993fa0318795a95ebbe</Anchor>
    <DeclaredIn>LoggingUtility.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Markers</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Markers</Scope>
    </TokenIdentifier>
    <Path>class_markers.html</Path>
    <Abstract>Store Markers to display user interaction. </Abstract>
    <DeclaredIn>Markers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Markers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Markers</Scope>
    </TokenIdentifier>
    <Path>class_markers.html</Path>
    <Anchor>a8274924d49d7d6f1ed3ce3489ea98739</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Markers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MasterApplication</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MasterApplication</Scope>
    </TokenIdentifier>
    <Path>class_master_application.html</Path>
    <Abstract>The main application for the Master process. </Abstract>
    <DeclaredIn>MasterApplication.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MasterApplication</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterApplication</Scope>
    </TokenIdentifier>
    <Path>class_master_application.html</Path>
    <Anchor>aeac41cab164926055074b36fe813d5de</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>MasterApplication.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MasterApplication</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterApplication</Scope>
    </TokenIdentifier>
    <Path>class_master_application.html</Path>
    <Anchor>a8ff4aef9c90eb363f2778154ec7b6af9</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>MasterApplication.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MasterConfiguration</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MasterConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_master_configuration.html</Path>
    <Abstract>The MasterConfiguration class manages all the parameters needed to setup the Master process...</Abstract>
    <DeclaredIn>MasterConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MasterConfiguration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_master_configuration.html</Path>
    <Anchor>a1e9671231ef79842a80c80009584987e</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>MasterConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getContentDir</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_master_configuration.html</Path>
    <Anchor>accd88a306419367f6714fb5158d06655</Anchor>
    <Abstract>Get the root directory for opening contents. </Abstract>
    <DeclaredIn>MasterConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSessionsDir</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_master_configuration.html</Path>
    <Anchor>a4985b2568e33198f6e283ddf9fa8e2ca</Anchor>
    <Abstract>Get the sessions directory. </Abstract>
    <DeclaredIn>MasterConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLauncherDisplay</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_master_configuration.html</Path>
    <Anchor>a8d210bd05849a09ef2692bf143fd6f87</Anchor>
    <Abstract>Get the DISPLAY identifier in string format for starting the Launcher. </Abstract>
    <DeclaredIn>MasterConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDemoServiceUrl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_master_configuration.html</Path>
    <Anchor>aed8e72f877a93c14ac153e8dcbd2a376</Anchor>
    <Abstract>Get the url for the demo service. </Abstract>
    <DeclaredIn>MasterConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDemoServiceImageFolder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_master_configuration.html</Path>
    <Anchor>a464e5fac6d5a0232052d96e00894e073</Anchor>
    <Abstract>Get the image folder for the demo service. </Abstract>
    <DeclaredIn>MasterConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAppLauncherFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_master_configuration.html</Path>
    <Anchor>a1199c895673d2419cce48a0c4143ee24</Anchor>
    <Abstract>Get the Application Launcher QML file. </Abstract>
    <DeclaredIn>MasterConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWebServicePort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_master_configuration.html</Path>
    <Anchor>a161728807fc81592ff865956942bc4c3</Anchor>
    <Abstract>Get the port where the WebService server will be listening for incoming requests. ...</Abstract>
    <DeclaredIn>MasterConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWebBrowserDefaultURL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_master_configuration.html</Path>
    <Anchor>a7786132d2c47c7575b7cd682752d1b3c</Anchor>
    <Abstract>Get the URL used as start page when opening a Web Browser. </Abstract>
    <DeclaredIn>MasterConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBackgroundUri</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_master_configuration.html</Path>
    <Anchor>a7d2355720bfbd14a13173cc2afcc6b5a</Anchor>
    <Abstract>Get the URI to the Content to be used as background. </Abstract>
    <DeclaredIn>MasterConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBackgroundColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_master_configuration.html</Path>
    <Anchor>af2e3ee4518883e324d113434b3e4bcb2</Anchor>
    <Abstract>Get the uniform color to use for Background. </Abstract>
    <DeclaredIn>MasterConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBackgroundColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_master_configuration.html</Path>
    <Anchor>a2b83fb924d0a1259eb7ef7a1a095bd64</Anchor>
    <Abstract>Set the background color. </Abstract>
    <DeclaredIn>MasterConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBackgroundUri</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_master_configuration.html</Path>
    <Anchor>a10c504ed2c3553c900b7605233c7421d</Anchor>
    <Abstract>Set the URI to the Content to be used as background. </Abstract>
    <DeclaredIn>MasterConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>save</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_master_configuration.html</Path>
    <Anchor>aa54097d7fb4f58aca81e9fe83620858d</Anchor>
    <Abstract>Save the configuration to the current xml file. </Abstract>
    <DeclaredIn>MasterConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>save</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_master_configuration.html</Path>
    <Anchor>a51fd2b31a51c1b4aa56c0ae1527567be</Anchor>
    <Abstract>Save the configuration to the specified xml file. </Abstract>
    <DeclaredIn>MasterConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Configuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a4f41abbe40c7e1345a325369c86aaaca</Anchor>
    <Abstract>Create a new configuration from an xml file. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Configuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a1226f87dc3c27be16eb16e53301eb2f3</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFilename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>ae479e2755c17646c271292b1f101e5da</Anchor>
    <Abstract>Get the filename passed to the constructor. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalScreenCountX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aca560ac9d3b46ef39444287ab4ba800f</Anchor>
    <Abstract>Get the total number of screens along the x axis. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalScreenCountY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a0f61e23c663322c808a33b8deeab198e</Anchor>
    <Abstract>Get the total number of screens along the y axis. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScreenWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a957a6e17a77943ca1469a599c4116987</Anchor>
    <Abstract>Get the width of a screen. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScreenHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>acac053b8e85c8e13dc1b24f829d70b25</Anchor>
    <Abstract>Get the height of a screen. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMullionWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aa4f921578b584411cab548d015e9ceba</Anchor>
    <Abstract>Get the padding nedded to compensate for the physical displays&amp;#39; bezel. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMullionHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aebf3438c6130ea0a50ed85d0ed2bde93</Anchor>
    <Abstract>Get the padding nedded to compensate for the physical displays&amp;#39; bezel. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aa7b4b828ea7bc8afcf2bed3857007eaa</Anchor>
    <Abstract>Get the total width of the DisplayWall, including the Mullion padding. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aba8af0457ab8769b5baab775ecebb8ba</Anchor>
    <Abstract>Get the total height of the DisplayWall, including the Mullion padding. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a3c3e0bc67693859c0450d4c5f4a79318</Anchor>
    <Abstract>Get the total size of the DisplayWall, including Mullion padding. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a1031736dbddf1becee943184afb27dda</Anchor>
    <Abstract>Get the aspect ratio of the DisplayWall, including Mullion padding. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScreenRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>ad9220206ff95419518e3b1eb6712b5d9</Anchor>
    <Abstract>Get the coordinates and dimensions of a screen in pixel units. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFullscreen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a3d38c54f965dce34f3839867a508779a</Anchor>
    <Abstract>Display the windows in fullscreen mode. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDouble</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a6eb03db6204ebfc4c5d2e02840427bd4</Anchor>
    <Abstract>Evaluate the querry and set the result to value on success. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_filename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>ae3544038cf10d426a6c8c4b3adc430c5</Anchor>
    <Abstract>The path to the xml configuration file. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MasterFromWallChannel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MasterFromWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_from_wall_channel.html</Path>
    <Abstract>Receiving channel from the wall processes to the master application. </Abstract>
    <DeclaredIn>MasterFromWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processMessages</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>MasterFromWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_from_wall_channel.html</Path>
    <Anchor>ac0e5d6e5be039476a7895461f22f4281</Anchor>
    <Abstract>Process messages until the QUIT message is received. </Abstract>
    <DeclaredIn>MasterFromWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receivedRequestFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MasterFromWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_from_wall_channel.html</Path>
    <Anchor>ab34184bf2068baeed81bc652149c994e</Anchor>
    <Abstract>Emitted when the given pixel stream was requested to send the next frame. </Abstract>
    <DeclaredIn>MasterFromWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MasterFromWallChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterFromWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_from_wall_channel.html</Path>
    <Anchor>ae3a1dc5ffe6841e24a3df3bd78254d38</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>MasterFromWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MasterToForkerChannel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MasterToForkerChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_to_forker_channel.html</Path>
    <Abstract>Sending channel from the master application to the forker process. </Abstract>
    <DeclaredIn>MasterToForkerChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>MasterToForkerChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_to_forker_channel.html</Path>
    <Anchor>a547b10de3a77ceaa1cf7822bedba9949</Anchor>
    <Abstract>Send a request to execute a command as new process. </Abstract>
    <DeclaredIn>MasterToForkerChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendQuit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>MasterToForkerChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_to_forker_channel.html</Path>
    <Anchor>abc8491459ada37d18aa93762cd22e152</Anchor>
    <Abstract>Send quit message to the forker application. </Abstract>
    <DeclaredIn>MasterToForkerChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MasterToForkerChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterToForkerChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_to_forker_channel.html</Path>
    <Anchor>a4281cf932f32d2db274303e2e176e792</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>MasterToForkerChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MasterToWallChannel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MasterToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_to_wall_channel.html</Path>
    <Abstract>Sending channel from the master application to the wall processes. </Abstract>
    <DeclaredIn>MasterToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendAsync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>MasterToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_to_wall_channel.html</Path>
    <Anchor>a5d52c566dc2810af957d041759958116</Anchor>
    <Abstract>Send the given DisplayGroup to the wall processes. </Abstract>
    <DeclaredIn>MasterToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendAsync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>MasterToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_to_wall_channel.html</Path>
    <Anchor>ab363eb3caaeb7c843c1bc2d3eae219f1</Anchor>
    <Abstract>Send the given Options to the wall processes. </Abstract>
    <DeclaredIn>MasterToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendAsync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>MasterToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_to_wall_channel.html</Path>
    <Anchor>a14f4b381b5a30ceb29d5bc24a977878f</Anchor>
    <Abstract>Send the given Markers to the wall processes. </Abstract>
    <DeclaredIn>MasterToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>MasterToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_to_wall_channel.html</Path>
    <Anchor>a576ef4ee2d2b6bff8bb514b6079e234e</Anchor>
    <Abstract>Send pixel stream frame to the wall processes. </Abstract>
    <DeclaredIn>MasterToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendQuit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>MasterToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_to_wall_channel.html</Path>
    <Anchor>ad0d468ff235b833e89f854b067e16117</Anchor>
    <Abstract>Send quit message to the wall processes, terminating the application. </Abstract>
    <DeclaredIn>MasterToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MasterToWallChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_to_wall_channel.html</Path>
    <Anchor>a8f671d612ef52095bf7290d791df4fc0</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>MasterToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MasterWindow</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MasterWindow</Scope>
    </TokenIdentifier>
    <Path>class_master_window.html</Path>
    <Abstract>The main UI window for Master applications. </Abstract>
    <DeclaredIn>MasterWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openWebBrowser</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MasterWindow</Scope>
    </TokenIdentifier>
    <Path>class_master_window.html</Path>
    <Anchor>ad4113336b83f4993c3a7129f7b453ffc</Anchor>
    <Abstract>Emitted when users want to open a webbrowser. </Abstract>
    <DeclaredIn>MasterWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openLauncher</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MasterWindow</Scope>
    </TokenIdentifier>
    <Path>class_master_window.html</Path>
    <Anchor>a29b454a98aaa3cc0d5713d59f4e79315</Anchor>
    <Abstract>Emitted when users want to open the launcher. </Abstract>
    <DeclaredIn>MasterWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hideLauncher</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MasterWindow</Scope>
    </TokenIdentifier>
    <Path>class_master_window.html</Path>
    <Anchor>a6ebb673d92b5883136aa147f98f7532f</Anchor>
    <Abstract>Emitted when users want to hide the launcher. </Abstract>
    <DeclaredIn>MasterWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MasterWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterWindow</Scope>
    </TokenIdentifier>
    <Path>class_master_window.html</Path>
    <Anchor>a72c6e4e684166ced410888e59d15c03a</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>MasterWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MasterWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterWindow</Scope>
    </TokenIdentifier>
    <Path>class_master_window.html</Path>
    <Anchor>a68d982a618e156542744291e156854e4</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>MasterWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDisplayGroupView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterWindow</Scope>
    </TokenIdentifier>
    <Path>class_master_window.html</Path>
    <Anchor>ad4a517459bb12cef15d5b0fe77fd3c8a</Anchor>
    <Abstract>Get the GraphicsView used for touch interaction. </Abstract>
    <DeclaredIn>MasterWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOptions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterWindow</Scope>
    </TokenIdentifier>
    <Path>class_master_window.html</Path>
    <Anchor>a689c0bd221a98a8e9ea0f00b0d7d4dd9</Anchor>
    <Abstract>Get the display options that change during runtime. </Abstract>
    <DeclaredIn>MasterWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MovieContent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MovieContent</Scope>
    </TokenIdentifier>
    <Path>class_movie_content.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a44c022cb6fed6fb1b0dff45e39ececb9</Anchor>
    <Abstract>Emitted by any Content subclass when its state has been modified. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MovieContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieContent</Scope>
    </TokenIdentifier>
    <Path>class_movie_content.html</Path>
    <Anchor>a156808cda9a564dd70229ad2fe203e9c</Anchor>
    <Abstract>Create a MovieContent from the given uri. </Abstract>
    <DeclaredIn>MovieContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieContent</Scope>
    </TokenIdentifier>
    <Path>class_movie_content.html</Path>
    <Anchor>a13e88bb1eafd5df79ff85595ac23b618</Anchor>
    <Abstract>Get the content type. </Abstract>
    <DeclaredIn>MovieContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMetadata</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieContent</Scope>
    </TokenIdentifier>
    <Path>class_movie_content.html</Path>
    <Anchor>a0e86020c0ed68ed8bb8e46c8c5997131</Anchor>
    <Abstract>Read movie informations from the source URI. </Abstract>
    <DeclaredIn>MovieContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getQmlControls</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieContent</Scope>
    </TokenIdentifier>
    <Path>class_movie_content.html</Path>
    <Anchor>afc88eb9b87e6c39f84c942508d71860a</Anchor>
    <DeclaredIn>MovieContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInteractionPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieContent</Scope>
    </TokenIdentifier>
    <Path>class_movie_content.html</Path>
    <Anchor>aff20baf58131ba182214f067c7e2accc</Anchor>
    <DeclaredIn>MovieContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Content</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ae491288d2efce7fa63d3e777580630b4</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a887d2b952cd824d70f64106ae048a5f8</Anchor>
    <Abstract>Get the content URI. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>aa4681ca97acea99fbe88e20f0e664bc0</Anchor>
    <Abstract>Get the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a8cf06fbd623453fd2aa349d91ebbca3b</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPreferredDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a508b7f5c09ffa4f5a1a7f3e89cbec489</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a70fbc6b9c9dfd95c426819a1c14464f9</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a1b7a6f49f447c124b497b0a844fd6ea6</Anchor>
    <Abstract>Set the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a113bd8ba35685e77bcf8a8650fab636a</Anchor>
    <Abstract>Get the aspect ratio. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFixedAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>adceac372a702843a1e0bd207f670680a</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a461bb62d3989d0eb5b4d1f824e7a66c0</Anchor>
    <Abstract>Get the zoom rectangle in normalized coordinates, [0,0,1,1] default. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0f3e5f9203b97450e3856d39a12807e3</Anchor>
    <Abstract>Set the zoom rectangle in normalized coordinates. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ad5094c72f8c6d7ec5390108534804c1f</Anchor>
    <Abstract>Resets the zoom to [0,0,1,1]. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getActions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a7ae29df27d493e89dd7dccd775efbff8</Anchor>
    <Abstract>Get the actions from QML. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKeyboardState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0e10f71c92fe8434a9b40183cb7239a0</Anchor>
    <Abstract>Get the keyboard state from QML. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSizeHints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a70292d652fb37ee21640801fce53c186</Anchor>
    <Abstract>Set optional size hints to constrain resize/scale and 1:1 size. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCaptureInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a7e7c36edf987322675eea81f27e8017d</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCaptureInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a18477814caa57d8f9aa0330fd19487ab</Anchor>
    <Abstract>Tell the content to capture interaction (only for Policy::AUTO). </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSupportedExtensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>MovieContent</Scope>
    </TokenIdentifier>
    <Path>class_movie_content.html</Path>
    <Anchor>a9768394f8669c363672ded77a93b19d9</Anchor>
    <DeclaredIn>MovieContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a87465efbfaf4e2e5b0a5e7e8af0985f2</Anchor>
    <Abstract>Set the maximum factor for zoom and resize; value times content size. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a04642ff3171681aa5fd2c8c8291a7949</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af5fc9d76b3c2899937927c9cd65689d5</Anchor>
    <Abstract>Serialize for sending to Wall applications. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_members_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a6787ec5cdec336c8f25c5e9671977598</Anchor>
    <Abstract>Serialize for saving to an xml file. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_for_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a4c9c0b425c1197cdf34f2d62119b6f4d</Anchor>
    <Abstract>Loading from xml. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_for_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a8d0e71e26ce26abdd7b414dee1ca2c9e</Anchor>
    <Abstract>Saving to xml. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MovieSynchronizer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MovieSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_movie_synchronizer.html</Path>
    <Abstract>Synchronizes a Movie between different QML windows. </Abstract>
    <DeclaredIn>MovieSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tilesAreaChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aac807a9cb073a52d88a80ceca93b34a3</Anchor>
    <Abstract>Notifier for the tiles area property. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>statisticsChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a8b2131d6b3874d8d932a101ec3dcde05</Anchor>
    <Abstract>Notifier for the statistics property. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a07a22964fedee87ec47fddc4b02a40f0</Anchor>
    <Abstract>Notify the window to add a tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a755db8af943fc6bd0aab4220320d3a89</Anchor>
    <Abstract>Notify the window to remove a tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aba03b3c5af16950946e91c893d20eeaf</Anchor>
    <Abstract>Notify to update a tile&amp;#39;s coordinates. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestTileUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aa8eaddb3ad37209eb3df6cac7dc68db8</Anchor>
    <Abstract>Request an update of a specific tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zoomContextTileChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a936e9892ccd99cef73b82282b1d291e2</Anchor>
    <Abstract>Notify that the zoom context tile has changed and must be recreated. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MovieSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_movie_synchronizer.html</Path>
    <Anchor>a17e0bdee24b8c040dbfc82a889610c33</Anchor>
    <Abstract>Construct a synchronizer for a movie, opening it in the provider. </Abstract>
    <DeclaredIn>MovieSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synchronize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_movie_synchronizer.html</Path>
    <Anchor>a07665902cfa001f6a62596aa6de292f0</Anchor>
    <Abstract>Update the movies, using the channel to synchronize accross processes. </Abstract>
    <DeclaredIn>MovieSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_movie_synchronizer.html</Path>
    <Anchor>a1e1c29aee5a55c76acc32b2997ed7412</Anchor>
    <Abstract>Update the Content. </Abstract>
    <DeclaredIn>MovieSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTilesArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_movie_synchronizer.html</Path>
    <Anchor>a2f6d81a9a4bbb8a9ccaa40fd22edd213</Anchor>
    <Abstract>The total area covered by the tiles (may depend on current LOD). </Abstract>
    <DeclaredIn>MovieSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_movie_synchronizer.html</Path>
    <Anchor>a3be7f58c65ae4e3abf59b151121a7437</Anchor>
    <Abstract>Get statistics about this Content. </Abstract>
    <DeclaredIn>MovieSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_movie_synchronizer.html</Path>
    <Anchor>a57be3b2b0c8c68c0753900189a734aad</Anchor>
    <Abstract>Get the image for a given tile index. </Abstract>
    <DeclaredIn>MovieSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onSwapReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_movie_synchronizer.html</Path>
    <Anchor>ac9589e8c7e46070781239fad3f01e336</Anchor>
    <Abstract>Called when a tile is ready to swap. </Abstract>
    <DeclaredIn>MovieSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSliderPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_movie_synchronizer.html</Path>
    <Anchor>a572cd81a07a0a8c3ee946f0eed766b2a</Anchor>
    <DeclaredIn>MovieSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aa9b57c8a735fbfb9b35e3e79d9ac9682</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ContentSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a68aa090a819ade8f4193c6848aa5d7c0</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoomContextTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a88d2e6727ef69fd33e0bda4d2f73f199</Anchor>
    <Abstract>Notify the window to add a tile for the zoom context. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onTextureReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aea4634e943d637574dc06c4a8000811e</Anchor>
    <Abstract>Called when a tile has finished initializing; re-emits requestUpdate. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a1ad34f14a76b9eae5f55b90ccf6d3db5</Anchor>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MovieThumbnailGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MovieThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_movie_thumbnail_generator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MovieUpdater</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MovieUpdater</Scope>
    </TokenIdentifier>
    <Path>class_movie_updater.html</Path>
    <Abstract>Updates Movies synchronously across different processes. </Abstract>
    <DeclaredIn>MovieUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieUpdater</Scope>
    </TokenIdentifier>
    <Path>class_movie_updater.html</Path>
    <Anchor>a905cba98d8218fb2441170910abcac67</Anchor>
    <Abstract>Get a tile image by its id. </Abstract>
    <DeclaredIn>MovieUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieUpdater</Scope>
    </TokenIdentifier>
    <Path>class_movie_updater.html</Path>
    <Anchor>a180f60006fa7fc50a807a2c395fe6c57</Anchor>
    <Abstract>Get the coordinates of a tile. </Abstract>
    <DeclaredIn>MovieUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTilesArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieUpdater</Scope>
    </TokenIdentifier>
    <Path>class_movie_updater.html</Path>
    <Anchor>ab7bba591fa0ccd73f313cb68ba06b1f7</Anchor>
    <DeclaredIn>MovieUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeVisibleSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieUpdater</Scope>
    </TokenIdentifier>
    <Path>class_movie_updater.html</Path>
    <Anchor>a41be653fb09025e13430c301ad8293ba</Anchor>
    <Abstract>Compute the indices of the tiles which are visible in the given area. </Abstract>
    <DeclaredIn>MovieUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxLod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieUpdater</Scope>
    </TokenIdentifier>
    <Path>class_movie_updater.html</Path>
    <Anchor>a0e2b8e0e95ad0ef149c9871086aea36b</Anchor>
    <DeclaredIn>MovieUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieUpdater</Scope>
    </TokenIdentifier>
    <Path>class_movie_updater.html</Path>
    <Anchor>a2b62db6f3187bb73f6500aa0f4e08296</Anchor>
    <Abstract>Update this datasource according to visibility and movie content. </Abstract>
    <DeclaredIn>MovieUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>advanceToNextFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieUpdater</Scope>
    </TokenIdentifier>
    <Path>class_movie_updater.html</Path>
    <Anchor>a688f6c611c42889541677bac8e9001b8</Anchor>
    <DeclaredIn>MovieUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canRequestNewFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieUpdater</Scope>
    </TokenIdentifier>
    <Path>class_movie_updater.html</Path>
    <Anchor>ac2ae41e78a4829c30ce5d7c496cf00e9</Anchor>
    <DeclaredIn>MovieUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lastFrameDone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieUpdater</Scope>
    </TokenIdentifier>
    <Path>class_movie_updater.html</Path>
    <Anchor>a5d88073beb18b817a7a8e372b4a852d3</Anchor>
    <Abstract>Indicates that the last requested frame was consumed and we can advance to the next frame...</Abstract>
    <DeclaredIn>MovieUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieUpdater</Scope>
    </TokenIdentifier>
    <Path>class_movie_updater.html</Path>
    <Anchor>a673c2b8f1a1ad2b3fd707e7e8765bf74</Anchor>
    <DeclaredIn>MovieUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieUpdater</Scope>
    </TokenIdentifier>
    <Path>class_movie_updater.html</Path>
    <Anchor>a5c4bd1ea41b30f51960ce2e765f9e077</Anchor>
    <DeclaredIn>MovieUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSkipping</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieUpdater</Scope>
    </TokenIdentifier>
    <Path>class_movie_updater.html</Path>
    <Anchor>ae809aa76a298144ba0cf50e6de7ed566</Anchor>
    <DeclaredIn>MovieUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSkipPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieUpdater</Scope>
    </TokenIdentifier>
    <Path>class_movie_updater.html</Path>
    <Anchor>a6d839c68bbe698546222d0bb27b02255</Anchor>
    <DeclaredIn>MovieUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MPIChannel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Abstract>Handle MPI communications between all Tide instances. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MPIChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>a3d6135b9ea469f6242b8396699ee74fd</Anchor>
    <Abstract>Create a new channel, initializing the MPI context. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MPIChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>a466aa85d1bc711eca37eb73eb0101126</Anchor>
    <Abstract>Create a new channel from splitting its parent channel. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MPIChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>a58250252d6b686e1d11d4144b40ca951</Anchor>
    <Abstract>Destructor, closes the MPI channel. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRank</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>ad9e9ffb350e0035706cb1e669ed6535d</Anchor>
    <Abstract>Get the rank of this process. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>a64a7a3cecb2a92ec2e24a0497ca4fa5a</Anchor>
    <Abstract>Get the number of processes in this channel. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>globalBarrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>a4bfe098a8a43b145ade329569ea9ecb9</Anchor>
    <Abstract>Block execution until all participants have reached the barrier. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>globalSum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>aba8510355b05801c5072c58d1b6644b0</Anchor>
    <Abstract>Get the sum of the given local values across all processes. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>ab33fc524ffb3ad2f205fd588df94ddad</Anchor>
    <Abstract>Send data to a single process. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendAll</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>a60416940b9302d92c904fabe6e03d9fc</Anchor>
    <Abstract>Send a signal to all processes. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>broadcast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>aedd7a83aa3c29703ec5c2fa878c277e9</Anchor>
    <Abstract>Send a brodcast message to all other processes. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMessageAvailable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>aa1e0f4381789f23123aff7c8b5fb1b0d</Anchor>
    <Abstract>Nonblocking probe for messages from a given source. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>probe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>ad3f062bbe7fc21c7bae3b5d668a2d125</Anchor>
    <Abstract>Perform a blocking probe operation that returns if a message is pending. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receiveHeader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>a9c2fa2fd32d788ddc632396580afd38f</Anchor>
    <Abstract>Receive a header from a specific process. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>acf6c03c4fb40017c5a6c5a7b84967116</Anchor>
    <Abstract>Receive a message from a specific process. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receiveBroadcast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>acfbacf7a49cc1ce09bac7d17f9de5bd7</Anchor>
    <Abstract>Recieve a broadcast. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gatherAll</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>a76a7f0709dcb3fc71dda271ca6a7df4a</Anchor>
    <Abstract>Gather the values accross all the processes. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MPIContext</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MPIContext</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_context.html</Path>
    <Abstract>A global MPI context. </Abstract>
    <DeclaredIn>MPIContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MPIContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIContext</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_context.html</Path>
    <Anchor>a1fc58d205deca92b9a9a307d49a124cb</Anchor>
    <Abstract>Constructor, initialize the MPI context. </Abstract>
    <DeclaredIn>MPIContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MPIContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIContext</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_context.html</Path>
    <Anchor>a3399b4521ba34fbe6977cc8c5358046b</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>MPIContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MultitouchArea</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MultitouchArea</Scope>
    </TokenIdentifier>
    <Path>class_multitouch_area.html</Path>
    <Abstract>A multipoint touch area to detect touch gestures on Qml objects. </Abstract>
    <DeclaredIn>MultitouchArea.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>touchStarted</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MultitouchArea</Scope>
    </TokenIdentifier>
    <Path>class_multitouch_area.html</Path>
    <Anchor>a9930406bdbbcb1a9ad99f10d691e2313</Anchor>
    <Abstract>Always emitted for the first finger that touches the area. </Abstract>
    <DeclaredIn>MultitouchArea.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>touchEnded</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MultitouchArea</Scope>
    </TokenIdentifier>
    <Path>class_multitouch_area.html</Path>
    <Anchor>a6e02038540cd46754d22afa699377624</Anchor>
    <Abstract>Always emitted for the last finger that is removed from the area. </Abstract>
    <DeclaredIn>MultitouchArea.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MultitouchArea</Scope>
    </TokenIdentifier>
    <Path>class_multitouch_area.html</Path>
    <Anchor>a4a7f521ad8c5eb0c7756f737134fb4e0</Anchor>
    <Abstract>Emitted for a one-finger touch and release in-place (i.e. </Abstract>
    <DeclaredIn>MultitouchArea.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doubleTap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MultitouchArea</Scope>
    </TokenIdentifier>
    <Path>class_multitouch_area.html</Path>
    <Anchor>adb8cdf3637fd79b43967ffc5d1faf8f5</Anchor>
    <Abstract>Emitted when two taps occur in a fast sequence. </Abstract>
    <DeclaredIn>MultitouchArea.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pinchStarted</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MultitouchArea</Scope>
    </TokenIdentifier>
    <Path>class_multitouch_area.html</Path>
    <Anchor>a9c989dba8fdecc040c302dcc76e53972</Anchor>
    <Abstract>Emitted when a pinch starts (i.e. </Abstract>
    <DeclaredIn>MultitouchArea.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pinch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MultitouchArea</Scope>
    </TokenIdentifier>
    <Path>class_multitouch_area.html</Path>
    <Anchor>aae244fdea93c301a57d2c44508a7f0d8</Anchor>
    <Abstract>Emitted for each step of a two-fingers pinch gesture. </Abstract>
    <DeclaredIn>MultitouchArea.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pinchEnded</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MultitouchArea</Scope>
    </TokenIdentifier>
    <Path>class_multitouch_area.html</Path>
    <Anchor>abba7bbdd185bc021830935a4874b4bcc</Anchor>
    <Abstract>Emitted when a pinch ends (i.e. </Abstract>
    <DeclaredIn>MultitouchArea.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swipeLeft</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MultitouchArea</Scope>
    </TokenIdentifier>
    <Path>class_multitouch_area.html</Path>
    <Anchor>a9b6c5bb959a9635e601caa42f8cbeeab</Anchor>
    <Abstract>Two-fingers swipe to the left. </Abstract>
    <DeclaredIn>MultitouchArea.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swipeRight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MultitouchArea</Scope>
    </TokenIdentifier>
    <Path>class_multitouch_area.html</Path>
    <Anchor>ab7a38b99b679b3c669908dd75dea0b20</Anchor>
    <Abstract>Two-fingers swipe to the right. </Abstract>
    <DeclaredIn>MultitouchArea.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swipeUp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MultitouchArea</Scope>
    </TokenIdentifier>
    <Path>class_multitouch_area.html</Path>
    <Anchor>aca86b7d783c0f2db38665328608fada8</Anchor>
    <Abstract>Two-fingers swipe up. </Abstract>
    <DeclaredIn>MultitouchArea.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swipeDown</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MultitouchArea</Scope>
    </TokenIdentifier>
    <Path>class_multitouch_area.html</Path>
    <Anchor>a4e496a1d465f0dc8095266c8730196b9</Anchor>
    <Abstract>Two-fingers swipe down. </Abstract>
    <DeclaredIn>MultitouchArea.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tapAndHold</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MultitouchArea</Scope>
    </TokenIdentifier>
    <Path>class_multitouch_area.html</Path>
    <Anchor>a968c008c352f09cb24486ed8257b0968</Anchor>
    <Abstract>Emitted after a prolonged non-moving touch with one or more fingers. </Abstract>
    <DeclaredIn>MultitouchArea.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>panStarted</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MultitouchArea</Scope>
    </TokenIdentifier>
    <Path>class_multitouch_area.html</Path>
    <Anchor>aa293ed637d9f6be952d767de2f24e6ca</Anchor>
    <Abstract>Emitted when a pan starts (i.e. </Abstract>
    <DeclaredIn>MultitouchArea.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MultitouchArea</Scope>
    </TokenIdentifier>
    <Path>class_multitouch_area.html</Path>
    <Anchor>aa8c67585684186f2c15c531699b80e3f</Anchor>
    <Abstract>Emitted for each finger movement between panStarted-panEnded. </Abstract>
    <DeclaredIn>MultitouchArea.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>panEnded</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MultitouchArea</Scope>
    </TokenIdentifier>
    <Path>class_multitouch_area.html</Path>
    <Anchor>a84b90afb21f9a1a305db11bf5655df09</Anchor>
    <Abstract>Emitted when a pan ends (finger released or new finger detected). </Abstract>
    <DeclaredIn>MultitouchArea.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MultitouchArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MultitouchArea</Scope>
    </TokenIdentifier>
    <Path>class_multitouch_area.html</Path>
    <Anchor>a9dc4b134e58f75bcb697f0d3452f98de</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>MultitouchArea.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>referenceItem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>MultitouchArea</Scope>
    </TokenIdentifier>
    <Path>class_multitouch_area.html</Path>
    <Anchor>acf4c07d20413d2c86eb5bf08e0cc3e13</Anchor>
    <Abstract>Set a target item to enable the touch area to move it. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>panThreshold</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>MultitouchArea</Scope>
    </TokenIdentifier>
    <Path>class_multitouch_area.html</Path>
    <Anchor>a8c09c39e97a782bbedafd33d6563e8a5</Anchor>
    <Abstract>The minimum displacement until a gesture is considered as a pan. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Options</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Options</Scope>
    </TokenIdentifier>
    <Path>class_options.html</Path>
    <Abstract>Rendering options which can be changed during runtime. </Abstract>
    <DeclaredIn>Options.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBackgroundColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>Options</Scope>
    </TokenIdentifier>
    <Path>class_options.html</Path>
    <Anchor>a5d4c2e6e7c01d3a5df063e65faa08604</Anchor>
    <Abstract>Set the color of the background. </Abstract>
    <DeclaredIn>Options.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBackgroundContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>Options</Scope>
    </TokenIdentifier>
    <Path>class_options.html</Path>
    <Anchor>adaef915fef86c8fc6f06fcaece08aeaa</Anchor>
    <Abstract>Set the background content. </Abstract>
    <DeclaredIn>Options.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBackgroundUri</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>Options</Scope>
    </TokenIdentifier>
    <Path>class_options.html</Path>
    <Anchor>a07da8d28e6cb1c6b7d2098dd40fc217f</Anchor>
    <Abstract>Set the background content from a uri. </Abstract>
    <DeclaredIn>Options.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updated</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Options</Scope>
    </TokenIdentifier>
    <Path>class_options.html</Path>
    <Anchor>a3fa6a7dee05582eb932f4fc068575216</Anchor>
    <Abstract>Emitted when any value is changed by one of the setters. </Abstract>
    <DeclaredIn>Options.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Options</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Options</Scope>
    </TokenIdentifier>
    <Path>class_options.html</Path>
    <Anchor>ab72fb640172a6109e34c8a5366563753</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>Options.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveToThread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Options</Scope>
    </TokenIdentifier>
    <Path>class_options.html</Path>
    <Anchor>aaaa45e028fcd2f39732a6b361946073e</Anchor>
    <Abstract>Move this object and its member QObjects to the given QThread. </Abstract>
    <DeclaredIn>Options.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PDFBackend</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PDFBackend</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_backend.html</Path>
    <Abstract>An abstract interface for PDF backends. </Abstract>
    <DeclaredIn>PDFBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PDFBackend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFBackend</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_backend.html</Path>
    <Anchor>aa210c01b3297241fd5740ebaa23c2cd4</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>PDFBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFBackend</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_backend.html</Path>
    <Anchor>a6842b5be4e623676be18908c560f26c5</Anchor>
    <DeclaredIn>PDFBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPageCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFBackend</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_backend.html</Path>
    <Anchor>ab2359233e6c3cd3e3013efb092246336</Anchor>
    <DeclaredIn>PDFBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFBackend</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_backend.html</Path>
    <Anchor>a7b9125ff67c23db98c1c250ce332b252</Anchor>
    <Abstract>Go to a given page number. </Abstract>
    <DeclaredIn>PDFBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderToImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFBackend</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_backend.html</Path>
    <Anchor>ae4ed178225ca51f827f0c7bbfcae7f32</Anchor>
    <Abstract>Render the document to an image. </Abstract>
    <DeclaredIn>PDFBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PDFContent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PDFContent</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_content.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pageChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PDFContent</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_content.html</Path>
    <Anchor>a817129d408c9907e2081ab588659d8a4</Anchor>
    <Abstract>Emitted when the page number is changed. </Abstract>
    <DeclaredIn>PDFContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a44c022cb6fed6fb1b0dff45e39ececb9</Anchor>
    <Abstract>Emitted by any Content subclass when its state has been modified. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PDFContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFContent</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_content.html</Path>
    <Anchor>a4ae008684cb13c9a6bd52ed35f827781</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>PDFContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFContent</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_content.html</Path>
    <Anchor>a1f062a289684e4b20107fb841b356352</Anchor>
    <Abstract>Get the content type. </Abstract>
    <DeclaredIn>PDFContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMetadata</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFContent</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_content.html</Path>
    <Anchor>af7cf516a0351264f60c076b11c33a45d</Anchor>
    <Abstract>Reaad PDF informations from the source URI. </Abstract>
    <DeclaredIn>PDFContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextPage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFContent</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_content.html</Path>
    <Anchor>a1e83cbc2b1b7845c39e42fb9076803f1</Anchor>
    <Abstract>Rank0 : go to next page. </Abstract>
    <DeclaredIn>PDFContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>previousPage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFContent</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_content.html</Path>
    <Anchor>a0d52e1a8ee7954872bcad5a9d74c342b</Anchor>
    <Abstract>Rank0 : go to previous page. </Abstract>
    <DeclaredIn>PDFContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFContent</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_content.html</Path>
    <Anchor>a7593da6369ce1925bcd1a98e96bf3f52</Anchor>
    <Abstract>Get the current page number. </Abstract>
    <DeclaredIn>PDFContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPageCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFContent</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_content.html</Path>
    <Anchor>ae10df3325d44dee3e4b0dfec6334bb09</Anchor>
    <Abstract>Get the total number of pages. </Abstract>
    <DeclaredIn>PDFContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VectorialContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>VectorialContent</Scope>
    </TokenIdentifier>
    <Path>class_vectorial_content.html</Path>
    <Anchor>aee9a53f4f5acc149fe99f83b3eb2766e</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>VectorialContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>VectorialContent</Scope>
    </TokenIdentifier>
    <Path>class_vectorial_content.html</Path>
    <Anchor>a3f3574943f9a5cd05af0f97993de75d1</Anchor>
    <DeclaredIn>VectorialContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Content</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ae491288d2efce7fa63d3e777580630b4</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a887d2b952cd824d70f64106ae048a5f8</Anchor>
    <Abstract>Get the content URI. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>aa4681ca97acea99fbe88e20f0e664bc0</Anchor>
    <Abstract>Get the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a8cf06fbd623453fd2aa349d91ebbca3b</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPreferredDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a508b7f5c09ffa4f5a1a7f3e89cbec489</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a1b7a6f49f447c124b497b0a844fd6ea6</Anchor>
    <Abstract>Set the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a113bd8ba35685e77bcf8a8650fab636a</Anchor>
    <Abstract>Get the aspect ratio. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFixedAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>adceac372a702843a1e0bd207f670680a</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a461bb62d3989d0eb5b4d1f824e7a66c0</Anchor>
    <Abstract>Get the zoom rectangle in normalized coordinates, [0,0,1,1] default. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0f3e5f9203b97450e3856d39a12807e3</Anchor>
    <Abstract>Set the zoom rectangle in normalized coordinates. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ad5094c72f8c6d7ec5390108534804c1f</Anchor>
    <Abstract>Resets the zoom to [0,0,1,1]. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getActions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a7ae29df27d493e89dd7dccd775efbff8</Anchor>
    <Abstract>Get the actions from QML. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getQmlControls</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af64c08ff1aafa0206bf178a6e4bfa634</Anchor>
    <Abstract>Get content-specific qml controls file (default: empty). </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKeyboardState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0e10f71c92fe8434a9b40183cb7239a0</Anchor>
    <Abstract>Get the keyboard state from QML. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInteractionPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a2dea2403b7d96fad93fae78ca4986197</Anchor>
    <Abstract>Get the interaction policy (default: AUTO). </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSizeHints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a70292d652fb37ee21640801fce53c186</Anchor>
    <Abstract>Set optional size hints to constrain resize/scale and 1:1 size. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCaptureInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a7e7c36edf987322675eea81f27e8017d</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCaptureInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a18477814caa57d8f9aa0330fd19487ab</Anchor>
    <Abstract>Tell the content to capture interaction (only for Policy::AUTO). </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>VectorialContent</Scope>
    </TokenIdentifier>
    <Path>class_vectorial_content.html</Path>
    <Anchor>a02ed9ed4fd5cfea1f01912271d06ed95</Anchor>
    <Abstract>Set the maximum factor for zoom and resize; value times base size. </Abstract>
    <DeclaredIn>VectorialContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>VectorialContent</Scope>
    </TokenIdentifier>
    <Path>class_vectorial_content.html</Path>
    <Anchor>ac40105f009e9278f53d4843c75cee9a5</Anchor>
    <DeclaredIn>VectorialContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a87465efbfaf4e2e5b0a5e7e8af0985f2</Anchor>
    <Abstract>Set the maximum factor for zoom and resize; value times content size. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a04642ff3171681aa5fd2c8c8291a7949</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af5fc9d76b3c2899937927c9cd65689d5</Anchor>
    <Abstract>Serialize for sending to Wall applications. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_members_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a6787ec5cdec336c8f25c5e9671977598</Anchor>
    <Abstract>Serialize for saving to an xml file. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_for_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a4c9c0b425c1197cdf34f2d62119b6f4d</Anchor>
    <Abstract>Loading from xml. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_for_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a8d0e71e26ce26abdd7b414dee1ca2c9e</Anchor>
    <Abstract>Saving to xml. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PDFPopplerQtBackend</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PDFPopplerQtBackend</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_poppler_qt_backend.html</Path>
    <Abstract>A PDF backend based on the Poppler-Qt library. </Abstract>
    <DeclaredIn>PDFPopplerQtBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PDFPopplerQtBackend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFPopplerQtBackend</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_poppler_qt_backend.html</Path>
    <Anchor>af85d60a6df140b5852a319e591c07212</Anchor>
    <Abstract>Open a PDF document for rendering. </Abstract>
    <DeclaredIn>PDFPopplerQtBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PDFPopplerQtBackend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFPopplerQtBackend</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_poppler_qt_backend.html</Path>
    <Anchor>af21b0b8a9b2163bad7f9c68a2fca57eb</Anchor>
    <Abstract>Close the document. </Abstract>
    <DeclaredIn>PDFPopplerQtBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFPopplerQtBackend</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_poppler_qt_backend.html</Path>
    <Anchor>aaeb8e567b8bdb3b1727ea0d5a43bf98e</Anchor>
    <DeclaredIn>PDFPopplerQtBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPageCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFPopplerQtBackend</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_poppler_qt_backend.html</Path>
    <Anchor>a6e03bb180ab5c3b829e688d8999a5f5d</Anchor>
    <DeclaredIn>PDFPopplerQtBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFPopplerQtBackend</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_poppler_qt_backend.html</Path>
    <Anchor>ab31e13f95731115b36054c34dec64a05</Anchor>
    <Abstract>Go to a given page number. </Abstract>
    <DeclaredIn>PDFPopplerQtBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderToImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFPopplerQtBackend</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_poppler_qt_backend.html</Path>
    <Anchor>a1cc8e1087c84bc19285ded42bbc704ed</Anchor>
    <Abstract>Render the document to an image. </Abstract>
    <DeclaredIn>PDFPopplerQtBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PDFBackend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFBackend</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_backend.html</Path>
    <Anchor>aa210c01b3297241fd5740ebaa23c2cd4</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>PDFBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PDFSynchronizer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PDFSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_synchronizer.html</Path>
    <Abstract>Synchronize PDF content. </Abstract>
    <DeclaredIn>PDFSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PDFSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_synchronizer.html</Path>
    <Anchor>a3cf58b8bf0d1a4c333b6d892a8236737</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>PDFSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_synchronizer.html</Path>
    <Anchor>a18dd031cf1cb1de0542c69650523c23f</Anchor>
    <Abstract>Update the Content. </Abstract>
    <DeclaredIn>PDFSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synchronize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_synchronizer.html</Path>
    <Anchor>a26f1f1784d1ee99e1487e06a042a77a1</Anchor>
    <Abstract>Synchronize content advance accross processes. </Abstract>
    <DeclaredIn>PDFSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_synchronizer.html</Path>
    <Anchor>ad9bfb503a0985a25809b4f4f4602bcae</Anchor>
    <Abstract>Get statistics about this Content. </Abstract>
    <DeclaredIn>PDFSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoomContextTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_synchronizer.html</Path>
    <Anchor>a6ac91ad96e478e57941cff3e50aec400</Anchor>
    <Abstract>Notify the window to add a tile for the zoom context. </Abstract>
    <DeclaredIn>PDFSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LodSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Anchor>ae58845a6fc6e41b1d5ed769e0529ca08</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTilesArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Anchor>a16def68e81a838582f93c7b544634b24</Anchor>
    <Abstract>The total area covered by the tiles (may depend on current LOD). </Abstract>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Anchor>a6aa8ea489e0a5d0c0e2988357f2ef32e</Anchor>
    <Abstract>Get the image for a given tile index. </Abstract>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TiledSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a70ae3f4171110fc5308407e870044fcd</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onSwapReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a8ae5165f31bd9575d16a2849c46eb256</Anchor>
    <Abstract>Called when a tile is ready to swap. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aa9b57c8a735fbfb9b35e3e79d9ac9682</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ContentSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a68aa090a819ade8f4193c6848aa5d7c0</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onTextureReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aea4634e943d637574dc06c4a8000811e</Anchor>
    <Abstract>Called when a tile has finished initializing; re-emits requestUpdate. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tilesAreaChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aac807a9cb073a52d88a80ceca93b34a3</Anchor>
    <Abstract>Notifier for the tiles area property. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>statisticsChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a8b2131d6b3874d8d932a101ec3dcde05</Anchor>
    <Abstract>Notifier for the statistics property. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a07a22964fedee87ec47fddc4b02a40f0</Anchor>
    <Abstract>Notify the window to add a tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a755db8af943fc6bd0aab4220320d3a89</Anchor>
    <Abstract>Notify the window to remove a tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aba03b3c5af16950946e91c893d20eeaf</Anchor>
    <Abstract>Notify to update a tile&amp;#39;s coordinates. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestTileUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aa8eaddb3ad37209eb3df6cac7dc68db8</Anchor>
    <Abstract>Request an update of a specific tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zoomContextTileChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a936e9892ccd99cef73b82282b1d291e2</Anchor>
    <Abstract>Notify that the zoom context tile has changed and must be recreated. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a1ad34f14a76b9eae5f55b90ccf6d3db5</Anchor>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Anchor>a2e34ef7461644353ec641acc6e5f5627</Anchor>
    <Abstract>Get the appropriate LOD for a given display size. </Abstract>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBackgroundTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Anchor>a81e10f2ecb83c92a9183c9c50e4b4bfc</Anchor>
    <Abstract>Create the background tile to smooth the LOD change. </Abstract>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>ac2d23b0e012c2d6a32b1d9302f7e98f6</Anchor>
    <Abstract>Update the tiles, adding or removing them from the view. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>aff88bcf6044fa835c350785e60053300</Anchor>
    <Abstract>Perform a synchronized tile swap across all processes. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PDFTiler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PDFTiler</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_tiler.html</Path>
    <Abstract>Represent a PDF document as a multi-LOD tiled data source. </Abstract>
    <DeclaredIn>PDFTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PDFTiler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFTiler</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_tiler.html</Path>
    <Anchor>a050c5f6aaa1b52b10861ca9cbb35e919</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>PDFTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFTiler</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_tiler.html</Path>
    <Anchor>a1bf6180a683ed2c85be53b25de1196fc</Anchor>
    <Abstract>Get the coordinates of a tile. </Abstract>
    <DeclaredIn>PDFTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeVisibleSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFTiler</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_tiler.html</Path>
    <Anchor>a585571ec436da545faa0177ba3515c60</Anchor>
    <Abstract>Compute the indices of the tiles which are visible in the given area. </Abstract>
    <DeclaredIn>PDFTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCachableTileImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFTiler</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_tiler.html</Path>
    <Anchor>a0220b7100fed815abb97724ca3cb8d3d</Anchor>
    <Abstract>Get a tile image which will be cached. </Abstract>
    <DeclaredIn>PDFTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPreviewTileId</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFTiler</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_tiler.html</Path>
    <Anchor>a2c4a57d9ea33729ed2cdd16901d3480b</Anchor>
    <DeclaredIn>PDFTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTilesArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>a505d41a890ecf672d6b36e3365f9fdff</Anchor>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxLod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>a1f48c3a3fe7870ef430a9244874b0253</Anchor>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNormalizedTileRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>a085c9b2df8260fb774572242b411fdd3</Anchor>
    <Abstract>Get the tile rectangle in normalized coordinates. </Abstract>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CachedDataSource</Scope>
    </TokenIdentifier>
    <Path>class_cached_data_source.html</Path>
    <Anchor>a6fd04c5620ce585d49ef42494825bfd9</Anchor>
    <Abstract>Get a tile image by its id. threadsafe </Abstract>
    <DeclaredIn>CachedDataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CachedDataSource</Scope>
    </TokenIdentifier>
    <Path>class_cached_data_source.html</Path>
    <Anchor>a02e027db47c9407a6235d391a015704b</Anchor>
    <Abstract>Check if the cache contains an image for a tile. </Abstract>
    <DeclaredIn>CachedDataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LodTiler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>a6fb20a5bd71ee276d60d95f57a197517</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamContent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PixelStreamContent</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_content.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamContent</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_content.html</Path>
    <Anchor>a2a0d5fbde3ac80753ad2e3e42a07327e</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>PixelStreamContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamContent</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_content.html</Path>
    <Anchor>a1da19d9ae276ac73c4a966a7b2505b34</Anchor>
    <Abstract>Get the content type. </Abstract>
    <DeclaredIn>PixelStreamContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMetadata</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamContent</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_content.html</Path>
    <Anchor>af1fde82b270db2ed217ec6542924c3e4</Anchor>
    <Abstract>Content method overload, not used for PixelStreams. </Abstract>
    <DeclaredIn>PixelStreamContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasEventReceivers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamContent</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_content.html</Path>
    <Anchor>a0e40610bb7d62536fcce4a31f268098e</Anchor>
    <Abstract>Does this content already have registered EventReceiver(s) </Abstract>
    <DeclaredIn>PixelStreamContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>incrementEventReceiverCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamContent</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_content.html</Path>
    <Anchor>a5109f320daef0181de2110d271cd545c</Anchor>
    <Abstract>Register to receive events on this content. </Abstract>
    <DeclaredIn>PixelStreamContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInteractionPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamContent</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_content.html</Path>
    <Anchor>ad9c2f1c69fded0c63eecf35a9bdabd84</Anchor>
    <DeclaredIn>PixelStreamContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Content</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ae491288d2efce7fa63d3e777580630b4</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a887d2b952cd824d70f64106ae048a5f8</Anchor>
    <Abstract>Get the content URI. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>aa4681ca97acea99fbe88e20f0e664bc0</Anchor>
    <Abstract>Get the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a8cf06fbd623453fd2aa349d91ebbca3b</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPreferredDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a508b7f5c09ffa4f5a1a7f3e89cbec489</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a70fbc6b9c9dfd95c426819a1c14464f9</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a1b7a6f49f447c124b497b0a844fd6ea6</Anchor>
    <Abstract>Set the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a113bd8ba35685e77bcf8a8650fab636a</Anchor>
    <Abstract>Get the aspect ratio. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFixedAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>adceac372a702843a1e0bd207f670680a</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a461bb62d3989d0eb5b4d1f824e7a66c0</Anchor>
    <Abstract>Get the zoom rectangle in normalized coordinates, [0,0,1,1] default. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0f3e5f9203b97450e3856d39a12807e3</Anchor>
    <Abstract>Set the zoom rectangle in normalized coordinates. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ad5094c72f8c6d7ec5390108534804c1f</Anchor>
    <Abstract>Resets the zoom to [0,0,1,1]. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getActions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a7ae29df27d493e89dd7dccd775efbff8</Anchor>
    <Abstract>Get the actions from QML. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getQmlControls</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af64c08ff1aafa0206bf178a6e4bfa634</Anchor>
    <Abstract>Get content-specific qml controls file (default: empty). </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKeyboardState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0e10f71c92fe8434a9b40183cb7239a0</Anchor>
    <Abstract>Get the keyboard state from QML. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSizeHints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a70292d652fb37ee21640801fce53c186</Anchor>
    <Abstract>Set optional size hints to constrain resize/scale and 1:1 size. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCaptureInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a7e7c36edf987322675eea81f27e8017d</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCaptureInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a18477814caa57d8f9aa0330fd19487ab</Anchor>
    <Abstract>Tell the content to capture interaction (only for Policy::AUTO). </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a44c022cb6fed6fb1b0dff45e39ececb9</Anchor>
    <Abstract>Emitted by any Content subclass when its state has been modified. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a87465efbfaf4e2e5b0a5e7e8af0985f2</Anchor>
    <Abstract>Set the maximum factor for zoom and resize; value times content size. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a04642ff3171681aa5fd2c8c8291a7949</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af5fc9d76b3c2899937927c9cd65689d5</Anchor>
    <Abstract>Serialize for sending to Wall applications. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_members_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a6787ec5cdec336c8f25c5e9671977598</Anchor>
    <Abstract>Serialize for saving to an xml file. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_for_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a4c9c0b425c1197cdf34f2d62119b6f4d</Anchor>
    <Abstract>Loading from xml. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_for_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a8d0e71e26ce26abdd7b414dee1ca2c9e</Anchor>
    <Abstract>Saving to xml. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Abstract>Interface for Pixel Streamers. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Anchor>a3a59b36c4477a063e71de6a95b6a97c0</Anchor>
    <Abstract>Process an Event. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>imageUpdated</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Anchor>ae9f831bd8e004763f4e2fd05b17a21a1</Anchor>
    <Abstract>Emit this signal after a new image has been generated. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Anchor>ac397a643a355ec36446edb8a55e52c81</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PixelStreamer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Anchor>ac9d996a5dadc05b54dcfa0824eb1a573</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Anchor>a413ae104f919f14a0974b357e5e7d9e7</Anchor>
    <Abstract>Get the size of the images generated by this streamer. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamerFactory</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PixelStreamerFactory</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer_factory.html</Path>
    <Abstract>Factory for PixelStreamers. </Abstract>
    <DeclaredIn>PixelStreamerFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>PixelStreamerFactory</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer_factory.html</Path>
    <Anchor>a901701ac6afa91292aad59749d3782ad</Anchor>
    <Abstract>Create a PixelStreamer of the given type. </Abstract>
    <DeclaredIn>PixelStreamerFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamerLauncher</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PixelStreamerLauncher</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer_launcher.html</Path>
    <Abstract>Launch Pixel Streamers as separate processes. </Abstract>
    <DeclaredIn>PixelStreamerLauncher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openWebBrowser</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamerLauncher</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer_launcher.html</Path>
    <Anchor>a2570a4a7985d254b2e5a420f0ffda1ec</Anchor>
    <Abstract>Open a WebBrowser. </Abstract>
    <DeclaredIn>PixelStreamerLauncher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openLauncher</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamerLauncher</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer_launcher.html</Path>
    <Anchor>abec11d7adeb5d7afb60c5e08000f4b2b</Anchor>
    <Abstract>Open the Qml launcher. </Abstract>
    <DeclaredIn>PixelStreamerLauncher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hideLauncher</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamerLauncher</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer_launcher.html</Path>
    <Anchor>aeba47f1f510c639b194db271367e253b</Anchor>
    <Abstract>Hide the Qml Launcher. </Abstract>
    <DeclaredIn>PixelStreamerLauncher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PixelStreamerLauncher</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer_launcher.html</Path>
    <Anchor>a8723160ae4f5cba40778e9e727c1f52c</Anchor>
    <Abstract>Request the launch of a command in a working directory and given ENV. </Abstract>
    <DeclaredIn>PixelStreamerLauncher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamerLauncher</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamerLauncher</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer_launcher.html</Path>
    <Anchor>aa6afe5831da8128c53d47b7527c0f332</Anchor>
    <Abstract>Create a new PixelStreamerLauncher. </Abstract>
    <DeclaredIn>PixelStreamerLauncher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamInteractionDelegate</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PixelStreamInteractionDelegate</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_interaction_delegate.html</Path>
    <Abstract>Forward user actions to a deflect::Stream using Deflect events. </Abstract>
    <DeclaredIn>PixelStreamInteractionDelegate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notify</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PixelStreamInteractionDelegate</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_interaction_delegate.html</Path>
    <Anchor>ab79d2e593a10dc5d973fdf4922e96095</Anchor>
    <Abstract>Emitted when an Event occured. </Abstract>
    <DeclaredIn>PixelStreamInteractionDelegate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamInteractionDelegate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamInteractionDelegate</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_interaction_delegate.html</Path>
    <Anchor>a4fe0211dc870c9fb9ef30e15a55d86dd</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>PixelStreamInteractionDelegate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentInteractionDelegate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentInteractionDelegate</Scope>
    </TokenIdentifier>
    <Path>class_content_interaction_delegate.html</Path>
    <Anchor>a71cf944be02e2b4ca86a76273f026616</Anchor>
    <Abstract>Construct a default interaction delegate that does nothing. </Abstract>
    <DeclaredIn>ContentInteractionDelegate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ContentInteractionDelegate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentInteractionDelegate</Scope>
    </TokenIdentifier>
    <Path>class_content_interaction_delegate.html</Path>
    <Anchor>acb5fa802e1b625e1c24b1f59ee15a784</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>ContentInteractionDelegate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamSynchronizer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PixelStreamSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_synchronizer.html</Path>
    <Abstract>Synchronizes a PixelStream between different QML windows. </Abstract>
    <DeclaredIn>PixelStreamSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_synchronizer.html</Path>
    <Anchor>a12666d81a8a86b90e41dd750027f2373</Anchor>
    <Abstract>Construct a synchronizer for a stream. </Abstract>
    <DeclaredIn>PixelStreamSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDataSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_synchronizer.html</Path>
    <Anchor>ae674b7e55539e08c3211261890d6d5ad</Anchor>
    <Abstract>Set the source of data for the stream. </Abstract>
    <DeclaredIn>PixelStreamSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_synchronizer.html</Path>
    <Anchor>aa32e353578381044b7b30f5e4bbc9b16</Anchor>
    <Abstract>Update the Content. </Abstract>
    <DeclaredIn>PixelStreamSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synchronize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_synchronizer.html</Path>
    <Anchor>ae9039a5a2cac4a04ca8f70f32eec96b1</Anchor>
    <Abstract>Synchronize content advance accross processes. </Abstract>
    <DeclaredIn>PixelStreamSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTilesArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_synchronizer.html</Path>
    <Anchor>ae3616b7a06a7e809772d127f8a10dc08</Anchor>
    <Abstract>The total area covered by the tiles (may depend on current LOD). </Abstract>
    <DeclaredIn>PixelStreamSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_synchronizer.html</Path>
    <Anchor>a6b0ae9339e04bd1e1972ebb3eab6ebef</Anchor>
    <Abstract>Get statistics about this Content. </Abstract>
    <DeclaredIn>PixelStreamSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_synchronizer.html</Path>
    <Anchor>a850f91c504e2e240b3edeb5a58f6804d</Anchor>
    <Abstract>Get the image for a given tile index. </Abstract>
    <DeclaredIn>PixelStreamSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TiledSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a70ae3f4171110fc5308407e870044fcd</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onSwapReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a8ae5165f31bd9575d16a2849c46eb256</Anchor>
    <Abstract>Called when a tile is ready to swap. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aa9b57c8a735fbfb9b35e3e79d9ac9682</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ContentSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a68aa090a819ade8f4193c6848aa5d7c0</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoomContextTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a88d2e6727ef69fd33e0bda4d2f73f199</Anchor>
    <Abstract>Notify the window to add a tile for the zoom context. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onTextureReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aea4634e943d637574dc06c4a8000811e</Anchor>
    <Abstract>Called when a tile has finished initializing; re-emits requestUpdate. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tilesAreaChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aac807a9cb073a52d88a80ceca93b34a3</Anchor>
    <Abstract>Notifier for the tiles area property. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>statisticsChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a8b2131d6b3874d8d932a101ec3dcde05</Anchor>
    <Abstract>Notifier for the statistics property. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a07a22964fedee87ec47fddc4b02a40f0</Anchor>
    <Abstract>Notify the window to add a tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a755db8af943fc6bd0aab4220320d3a89</Anchor>
    <Abstract>Notify the window to remove a tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aba03b3c5af16950946e91c893d20eeaf</Anchor>
    <Abstract>Notify to update a tile&amp;#39;s coordinates. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestTileUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aa8eaddb3ad37209eb3df6cac7dc68db8</Anchor>
    <Abstract>Request an update of a specific tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zoomContextTileChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a936e9892ccd99cef73b82282b1d291e2</Anchor>
    <Abstract>Notify that the zoom context tile has changed and must be recreated. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a1ad34f14a76b9eae5f55b90ccf6d3db5</Anchor>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>ac2d23b0e012c2d6a32b1d9302f7e98f6</Anchor>
    <Abstract>Update the tiles, adding or removing them from the view. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>aff88bcf6044fa835c350785e60053300</Anchor>
    <Abstract>Perform a synchronized tile swap across all processes. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamUpdater</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PixelStreamUpdater</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_updater.html</Path>
    <Abstract>Synchronize the update of PixelStreams and send new frame requests. </Abstract>
    <DeclaredIn>PixelStreamUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updatePixelStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamUpdater</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_updater.html</Path>
    <Anchor>a148f149b1b3ebd3d11feb6b20416b518</Anchor>
    <Abstract>Update the appropriate PixelStream with the given frame. </Abstract>
    <DeclaredIn>PixelStreamUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pictureUpdated</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PixelStreamUpdater</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_updater.html</Path>
    <Anchor>a3fb5e7ef6ef99b1edcc1671712501dc9</Anchor>
    <Abstract>Emitted when a new picture has become available. </Abstract>
    <DeclaredIn>PixelStreamUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PixelStreamUpdater</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_updater.html</Path>
    <Anchor>aa7a5c7435ad6f310bfc66096f9dea7ee</Anchor>
    <Abstract>Emitted to request a new frame after a successful swap. </Abstract>
    <DeclaredIn>PixelStreamUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamUpdater</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamUpdater</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_updater.html</Path>
    <Anchor>a6c2d85e507658b80c95666d6b5f7c44a</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>PixelStreamUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamUpdater</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_updater.html</Path>
    <Anchor>a3add16a38fead452a4bf441e24410829</Anchor>
    <Abstract>Get a tile image by its id. </Abstract>
    <DeclaredIn>PixelStreamUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamUpdater</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_updater.html</Path>
    <Anchor>a31f2b37a4ff124bf3e0a57fde653cc5a</Anchor>
    <Abstract>Get the coordinates of a tile. </Abstract>
    <DeclaredIn>PixelStreamUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTilesArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamUpdater</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_updater.html</Path>
    <Anchor>a84819f40e6ec01c84818f565134e9c52</Anchor>
    <DeclaredIn>PixelStreamUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeVisibleSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamUpdater</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_updater.html</Path>
    <Anchor>a21afdf4d8d6427b8f078dfaa02666683</Anchor>
    <Abstract>Compute the indices of the tiles which are visible in the given area. </Abstract>
    <DeclaredIn>PixelStreamUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxLod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamUpdater</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_updater.html</Path>
    <Anchor>aa777248b18a09c38bdab80abf00d5ab6</Anchor>
    <DeclaredIn>PixelStreamUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synchronizeFramesSwap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamUpdater</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_updater.html</Path>
    <Anchor>a4a24aba38619591c8de2834a60794c90</Anchor>
    <Abstract>Synchronize the update of the PixelStreams. </Abstract>
    <DeclaredIn>PixelStreamUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNextFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamUpdater</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_updater.html</Path>
    <Anchor>aadf125779b550179707ad6edf33f27c5</Anchor>
    <Abstract>Allow the updater to request next frame (flow control). </Abstract>
    <DeclaredIn>PixelStreamUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamWindowManager</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Abstract>Handles window creation, association and updates for pixel streamers, both local and external...</Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openPixelStreamWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>a29d8232ee6b125dfdf4e9639741922ff</Anchor>
    <Abstract>Open a window for a new external PixelStream. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>closePixelStreamWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>a007d2144a767aef3e5e2a1840a58ab0e</Anchor>
    <Abstract>Close the window of a PixelStream. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerEventReceiver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>aa4317964b249dffd8ad5bc9fa4f49e6f</Anchor>
    <Abstract>Is called when the streamer wants to enable event handling. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateStreamDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>a212f02234877ba3df2222e0f314cae36</Anchor>
    <Abstract>Update the dimension of the content according to the stream&amp;#39;s dimension. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateSizeHints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>a8f0622d497aa3a47157912dc9f59fbfe</Anchor>
    <Abstract>Update the size hints for the content, sent by the streamer. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutoFocusNewWindows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>a84dc3f67f094ed3f01d9d2f558d2bcb3</Anchor>
    <Abstract>Open new windows in focus mode. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pixelStreamWindowClosed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>a84442417ad4ed329a06ac08051e7266a</Anchor>
    <Abstract>Is emitted when the associated content window of the streamer is closed. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eventRegistrationReply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>a1b3863d3e2718e80072d2db26004db08</Anchor>
    <Abstract>Is emitted after registerEventReceiver() was executed. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamWindowManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>a8d3cae6a2b05961dac58bf22810be44a</Anchor>
    <Abstract>Create a window manager that handles windows for streamers. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getContentWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>a4465be2e1991152689dc4bb07b22c907</Anchor>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hideWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>a74bb0eb12ff7357fef0fbbd1d9c92aff</Anchor>
    <Abstract>Hide the associated content window of the stream. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>a6e68e2ca3ba0213a872e22acd082b468</Anchor>
    <Abstract>Show the associated content window of the stream. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>a3f878a4364c8e4d9a8cb43ca20519126</Anchor>
    <Abstract>Open a window for a new PixelStream. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAutoFocusNewWindows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>a22fcff539e065134b0dce6d07bf3872f</Anchor>
    <Abstract>Check if new windows open in focus mode. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProbeResult</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ProbeResult</Scope>
    </TokenIdentifier>
    <Path>struct_probe_result.html</Path>
    <Abstract>The result of an MPIChannel::probe() operation. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ProbeResult</Scope>
    </TokenIdentifier>
    <Path>struct_probe_result.html</Path>
    <Anchor>a63373d9b2c6353ad460b391f00b8fde0</Anchor>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>src</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ProbeResult</Scope>
    </TokenIdentifier>
    <Path>struct_probe_result.html</Path>
    <Anchor>a1bf3e57be475361e7541e26f977aa0a6</Anchor>
    <Abstract>The source process that has sent a message. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ProbeResult</Scope>
    </TokenIdentifier>
    <Path>struct_probe_result.html</Path>
    <Anchor>a431ed1636026488911b1d35e0b97ac78</Anchor>
    <Abstract>The size of the message. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>message</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ProbeResult</Scope>
    </TokenIdentifier>
    <Path>struct_probe_result.html</Path>
    <Anchor>af15554a30e968ef7341d18a786899f95</Anchor>
    <Abstract>The type of the message. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProcessForker</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ProcessForker</Scope>
    </TokenIdentifier>
    <Path>class_process_forker.html</Path>
    <Abstract>Run as a separate MPI process, listening to commands to fork new executables. </Abstract>
    <DeclaredIn>ProcessForker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProcessForker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ProcessForker</Scope>
    </TokenIdentifier>
    <Path>class_process_forker.html</Path>
    <Anchor>a4c5e2a604695ca2a659692ad394b8dc0</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ProcessForker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ProcessForker</Scope>
    </TokenIdentifier>
    <Path>class_process_forker.html</Path>
    <Anchor>ad1528d488d2aa41dec482bbadb431cd3</Anchor>
    <Abstract>Process MPI commands until a quit message is received. </Abstract>
    <DeclaredIn>ProcessForker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>QmlWindowRenderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>QmlWindowRenderer</Scope>
    </TokenIdentifier>
    <Path>class_qml_window_renderer.html</Path>
    <Abstract>Provide a Qml representation of a ContentWindow on the Wall. </Abstract>
    <DeclaredIn>QmlWindowRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>QmlWindowRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>QmlWindowRenderer</Scope>
    </TokenIdentifier>
    <Path>class_qml_window_renderer.html</Path>
    <Anchor>ac7cd73cc58eee03b30f09ca2036fa1f3</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>QmlWindowRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~QmlWindowRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>QmlWindowRenderer</Scope>
    </TokenIdentifier>
    <Path>class_qml_window_renderer.html</Path>
    <Anchor>a64b49a4fef3f1bd26e2f2b1a6fa4db3c</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>QmlWindowRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>QmlWindowRenderer</Scope>
    </TokenIdentifier>
    <Path>class_qml_window_renderer.html</Path>
    <Anchor>ac538c8469f1d8f084eef055a523a51c0</Anchor>
    <Abstract>Update the qml object with a new data model. </Abstract>
    <DeclaredIn>QmlWindowRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synchronize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>QmlWindowRenderer</Scope>
    </TokenIdentifier>
    <Path>class_qml_window_renderer.html</Path>
    <Anchor>aef403dbcfc436427f98e8e448e69a721</Anchor>
    <Abstract>Update the contents, using the channel to synchronize processes. </Abstract>
    <DeclaredIn>QmlWindowRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getQuickItem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>QmlWindowRenderer</Scope>
    </TokenIdentifier>
    <Path>class_qml_window_renderer.html</Path>
    <Anchor>a74bdbfff2afeb76d5735f9045dbdc34a</Anchor>
    <Abstract>Get the QML item. </Abstract>
    <DeclaredIn>QmlWindowRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getContentWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>QmlWindowRenderer</Scope>
    </TokenIdentifier>
    <Path>class_qml_window_renderer.html</Path>
    <Anchor>a718810ffc17b8efd7cf77c567896211f</Anchor>
    <Abstract>Get the ContentWindow. </Abstract>
    <DeclaredIn>QmlWindowRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>QtImage</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>QtImage</Scope>
    </TokenIdentifier>
    <Path>class_qt_image.html</Path>
    <Abstract>Image wrapper for QImage. </Abstract>
    <DeclaredIn>QtImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>QtImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>QtImage</Scope>
    </TokenIdentifier>
    <Path>class_qt_image.html</Path>
    <Anchor>af82fe4230e7a5f40a4b59fea7e82ba35</Anchor>
    <Abstract>Constructor, stores the given QImage. </Abstract>
    <DeclaredIn>QtImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>QtImage</Scope>
    </TokenIdentifier>
    <Path>class_qt_image.html</Path>
    <Anchor>a7aab2699208e013e3b876a40d1258eb2</Anchor>
    <DeclaredIn>QtImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>QtImage</Scope>
    </TokenIdentifier>
    <Path>class_qt_image.html</Path>
    <Anchor>aae5b605ebaf85f470767b395e6600566</Anchor>
    <DeclaredIn>QtImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>QtImage</Scope>
    </TokenIdentifier>
    <Path>class_qt_image.html</Path>
    <Anchor>a062c201f0b967f17d800f9088980587a</Anchor>
    <DeclaredIn>QtImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>QtImage</Scope>
    </TokenIdentifier>
    <Path>class_qt_image.html</Path>
    <Anchor>a63cc1509fcd3a8f9392080880aa20978</Anchor>
    <DeclaredIn>QtImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>a5ce61ece7ea078a9fe1a4f259b25fb56</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGpuImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>ac3e10f35fb8dd895bda5627f43d96907</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateGpuImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>a8284c68a45d845a6ffd8eb81a4544092</Anchor>
    <Abstract>Generate the GPU image. </Abstract>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is32Bits</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>QtImage</Scope>
    </TokenIdentifier>
    <Path>class_qt_image.html</Path>
    <Anchor>abd7d2845d3a9ec14bc3627c939627570</Anchor>
    <DeclaredIn>QtImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>QuadLineNode</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>QuadLineNode</Scope>
    </TokenIdentifier>
    <Path>class_quad_line_node.html</Path>
    <Abstract>A line quad to draw rectangle borders. </Abstract>
    <DeclaredIn>QuadLineNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>QuadLineNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>QuadLineNode</Scope>
    </TokenIdentifier>
    <Path>class_quad_line_node.html</Path>
    <Anchor>a8ce53446c0218021d8d52666cb4fcf00</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>QuadLineNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>QuadLineNode</Scope>
    </TokenIdentifier>
    <Path>class_quad_line_node.html</Path>
    <Anchor>ad0422ea5f0d04a3a93de1236f810e34f</Anchor>
    <Abstract>Set the geometry. </Abstract>
    <DeclaredIn>QuadLineNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLineWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>QuadLineNode</Scope>
    </TokenIdentifier>
    <Path>class_quad_line_node.html</Path>
    <Anchor>a19f9f3248c339ab0c2ed6fd3184ce51d</Anchor>
    <Abstract>Set the line width. </Abstract>
    <DeclaredIn>QuadLineNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>QuadLineNode</Scope>
    </TokenIdentifier>
    <Path>class_quad_line_node.html</Path>
    <Anchor>a0e35d866e0dd76e2d56a8ee02516c4ef</Anchor>
    <Abstract>Set the color of the lines. </Abstract>
    <DeclaredIn>QuadLineNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>QuickRenderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>QuickRenderer</Scope>
    </TokenIdentifier>
    <Path>class_quick_renderer.html</Path>
    <Abstract>Renders the QML scene from the given window using QQuickRenderControl onto the surface of the window ...</Abstract>
    <DeclaredIn>QuickRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameSwapped</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>QuickRenderer</Scope>
    </TokenIdentifier>
    <Path>class_quick_renderer.html</Path>
    <Anchor>ab050dc439300f27ba7a212a04bf54e0b</Anchor>
    <Abstract>Emitted after swapBuffers(). </Abstract>
    <DeclaredIn>QuickRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>QuickRenderer</Scope>
    </TokenIdentifier>
    <Path>class_quick_renderer.html</Path>
    <Anchor>a510f528b785124da782b83e87e349196</Anchor>
    <Abstract>To be called from GUI/main thread to initialize this object on render thread. </Abstract>
    <DeclaredIn>QuickRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>QuickRenderer</Scope>
    </TokenIdentifier>
    <Path>class_quick_renderer.html</Path>
    <Anchor>a1be7f97016a2b998b4bdeaba4f789a71</Anchor>
    <Abstract>To be called from GUI/main thread to stop using this object on the render thread. ...</Abstract>
    <DeclaredIn>QuickRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>QuickRenderer</Scope>
    </TokenIdentifier>
    <Path>class_quick_renderer.html</Path>
    <Anchor>a1a325bec6cfbd42b0b52e610773e2ae9</Anchor>
    <Abstract>To be called from GUI/main thread to trigger rendering and swapBuffers(). </Abstract>
    <DeclaredIn>QuickRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RenderController</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>RenderController</Scope>
    </TokenIdentifier>
    <Path>class_render_controller.html</Path>
    <Abstract>Setup the scene and control the rendering options during runtime. </Abstract>
    <DeclaredIn>RenderController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RenderController</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RenderController</Scope>
    </TokenIdentifier>
    <Path>class_render_controller.html</Path>
    <Anchor>a5587c28a55be4fdea3cbb95a44747006</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>RenderController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDisplayGroup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RenderController</Scope>
    </TokenIdentifier>
    <Path>class_render_controller.html</Path>
    <Anchor>a51dad7216110bac1db2b2cd6156eee0d</Anchor>
    <Abstract>Get the DisplayGroup. </Abstract>
    <DeclaredIn>RenderController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RestCommand</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>RestCommand</Scope>
    </TokenIdentifier>
    <Path>class_rest_command.html</Path>
    <Abstract>Handle a REST command with a &quot;uri&quot; payload in JSON format. </Abstract>
    <DeclaredIn>RestCommand.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>received</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>RestCommand</Scope>
    </TokenIdentifier>
    <Path>class_rest_command.html</Path>
    <Anchor>abd42d768a3e1a651ec55ff1a19b86612</Anchor>
    <Abstract>Emitted when the command has been received. </Abstract>
    <DeclaredIn>RestCommand.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RestCommand</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RestCommand</Scope>
    </TokenIdentifier>
    <Path>class_rest_command.html</Path>
    <Anchor>a50a835b10e9fd4692a1cc24f7af3d236</Anchor>
    <Abstract>Construct a REST command which can be exposed by a ZeroEQ http server. </Abstract>
    <DeclaredIn>RestCommand.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTypeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RestCommand</Scope>
    </TokenIdentifier>
    <Path>class_rest_command.html</Path>
    <Anchor>a16c132e3cb03d61676e60938549468aa</Anchor>
    <DeclaredIn>RestCommand.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RestInterface</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>RestInterface</Scope>
    </TokenIdentifier>
    <Path>class_rest_interface.html</Path>
    <Abstract>Enables remote control of Tide through a REST API. </Abstract>
    <DeclaredIn>RestInterface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>RestInterface</Scope>
    </TokenIdentifier>
    <Path>class_rest_interface.html</Path>
    <Anchor>a8ce014feb6a7e4a74ec591dd70420228</Anchor>
    <Abstract>Open a content. </Abstract>
    <DeclaredIn>RestInterface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>RestInterface</Scope>
    </TokenIdentifier>
    <Path>class_rest_interface.html</Path>
    <Anchor>a869287a469d5e1de00228671039daee6</Anchor>
    <Abstract>Load a session. </Abstract>
    <DeclaredIn>RestInterface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>save</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>RestInterface</Scope>
    </TokenIdentifier>
    <Path>class_rest_interface.html</Path>
    <Anchor>a1e60a9fe71f5f22c24e7232dd521e51c</Anchor>
    <Abstract>Save a session to the given file. </Abstract>
    <DeclaredIn>RestInterface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>RestInterface</Scope>
    </TokenIdentifier>
    <Path>class_rest_interface.html</Path>
    <Anchor>a50bdbfca3ff5afa3af1f387616915729</Anchor>
    <Abstract>Clear all contents. </Abstract>
    <DeclaredIn>RestInterface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>browse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>RestInterface</Scope>
    </TokenIdentifier>
    <Path>class_rest_interface.html</Path>
    <Anchor>a7ccff908d6bfa278e559007cec31e16b</Anchor>
    <Abstract>Browse a website. </Abstract>
    <DeclaredIn>RestInterface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RestInterface</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RestInterface</Scope>
    </TokenIdentifier>
    <Path>class_rest_interface.html</Path>
    <Anchor>ade3270177673fd1cf4f1f2830d131857</Anchor>
    <Abstract>Construct a REST interface. </Abstract>
    <DeclaredIn>RestInterface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~RestInterface</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RestInterface</Scope>
    </TokenIdentifier>
    <Path>class_rest_interface.html</Path>
    <Anchor>aeafc0fc94ce9d822611933385bfa9325</Anchor>
    <Abstract>Out-of-line destructor. </Abstract>
    <DeclaredIn>RestInterface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RestLogger</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>RestLogger</Scope>
    </TokenIdentifier>
    <Path>class_rest_logger.html</Path>
    <Abstract>Exposes usage statistics content to ZeroEQ http server gathered by LoggingUtility. </Abstract>
    <DeclaredIn>RestLogger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RestLogger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RestLogger</Scope>
    </TokenIdentifier>
    <Path>class_rest_logger.html</Path>
    <Anchor>ad2e6c051aa957c45b134db1204d248a5</Anchor>
    <Abstract>Construct dynamic content used by REST interface. </Abstract>
    <DeclaredIn>RestLogger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTypeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RestLogger</Scope>
    </TokenIdentifier>
    <Path>class_rest_logger.html</Path>
    <Anchor>afb7fe923c9ae66c69f6fc7900627e51b</Anchor>
    <DeclaredIn>RestLogger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SerializeBuffer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SerializeBuffer</Scope>
    </TokenIdentifier>
    <Path>class_serialize_buffer.html</Path>
    <Abstract>Utility class to ease and optimize (de)serialization of any object using boost.serialization. </Abstract>
    <DeclaredIn>SerializeBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SerializeBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SerializeBuffer</Scope>
    </TokenIdentifier>
    <Path>class_serialize_buffer.html</Path>
    <Anchor>af432cc840a76dda7cee935f41d1e0049</Anchor>
    <Abstract>Construct any empty serialization buffer. </Abstract>
    <DeclaredIn>SerializeBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SerializeBuffer</Scope>
    </TokenIdentifier>
    <Path>class_serialize_buffer.html</Path>
    <Anchor>a98ce3df6d8c5a1934619b83499a48ebf</Anchor>
    <Abstract>Set the new size of the buffer and grow the storage if necessary. </Abstract>
    <DeclaredIn>SerializeBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SerializeBuffer</Scope>
    </TokenIdentifier>
    <Path>class_serialize_buffer.html</Path>
    <Anchor>a46d56faa41307a1efb941563bf23136c</Anchor>
    <DeclaredIn>SerializeBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SerializeBuffer</Scope>
    </TokenIdentifier>
    <Path>class_serialize_buffer.html</Path>
    <Anchor>a86478d9a1fc56d5dc719176931941feb</Anchor>
    <Abstract>Direct write access to the buffer, don&amp;#39;t write beyond size() </Abstract>
    <DeclaredIn>SerializeBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SerializeBuffer</Scope>
    </TokenIdentifier>
    <Path>class_serialize_buffer.html</Path>
    <Anchor>a0460cf60db742505d7732966a6bbf9a0</Anchor>
    <Abstract>Deserialize the current buffer into the given object. </Abstract>
    <DeclaredIn>SerializeBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>SerializeBuffer</Scope>
    </TokenIdentifier>
    <Path>class_serialize_buffer.html</Path>
    <Anchor>a25ed1d7ea246751e43cd62619d4ef3e8</Anchor>
    <Abstract>Serialize the given object using a binary archive to a string. </Abstract>
    <DeclaredIn>SerializeBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>State</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>State</Scope>
    </TokenIdentifier>
    <Path>class_state.html</Path>
    <Abstract>A state is the collection of opened contents which can be saved and restored using this class...</Abstract>
    <DeclaredIn>State.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>State</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>State</Scope>
    </TokenIdentifier>
    <Path>class_state.html</Path>
    <Anchor>ab91bb1dd5aa6260ab2a456581daf9ec2</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>State.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>State</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>State</Scope>
    </TokenIdentifier>
    <Path>class_state.html</Path>
    <Anchor>ab46b49d64046781249ed09988d54a8b8</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>State.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>legacyLoadXML</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>State</Scope>
    </TokenIdentifier>
    <Path>class_state.html</Path>
    <Anchor>a9d239d0be957febba6229da5a599124e</Anchor>
    <Abstract>Load content windows stored in the given XML file. </Abstract>
    <DeclaredIn>State.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVersion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>State</Scope>
    </TokenIdentifier>
    <Path>class_state.html</Path>
    <Anchor>abbc8de8c5bbedb5da2f5c6776b81d9ef</Anchor>
    <Abstract>Get the version that was last used for loading or saving. </Abstract>
    <DeclaredIn>State.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDisplayGroup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>State</Scope>
    </TokenIdentifier>
    <Path>class_state.html</Path>
    <Anchor>ace82eaefa9cff610299da27ea0024c7b</Anchor>
    <Abstract>Get the DisplayGroup. </Abstract>
    <DeclaredIn>State.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StatePreview</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>StatePreview</Scope>
    </TokenIdentifier>
    <Path>class_state_preview.html</Path>
    <Abstract>A state preview is a thumbnail image saved alongside a state file. </Abstract>
    <DeclaredIn>StatePreview.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StatePreview</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StatePreview</Scope>
    </TokenIdentifier>
    <Path>class_state_preview.html</Path>
    <Anchor>aea9bf32a2c4e97bae3d363e21eca1e33</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>StatePreview.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadFromFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StatePreview</Scope>
    </TokenIdentifier>
    <Path>class_state_preview.html</Path>
    <Anchor>adb7ad5d66ab2b54eb66e5912aa827c9a</Anchor>
    <Abstract>Load the thumbnail image from disk. </Abstract>
    <DeclaredIn>StatePreview.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StatePreview</Scope>
    </TokenIdentifier>
    <Path>class_state_preview.html</Path>
    <Anchor>aa855eb3b0bb12cc534458fe639336c04</Anchor>
    <Abstract>Retrieve the image loaded with loadFromFile() or generated with generateImage(). </Abstract>
    <DeclaredIn>StatePreview.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StatePreview</Scope>
    </TokenIdentifier>
    <Path>class_state_preview.html</Path>
    <Anchor>ad52539007cf3bcc2c37adf935a536e6a</Anchor>
    <Abstract>Generate the preview image from a list of ContentWindows. </Abstract>
    <DeclaredIn>StatePreview.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>saveToFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StatePreview</Scope>
    </TokenIdentifier>
    <Path>class_state_preview.html</Path>
    <Anchor>ab9451a422ef3233febfffae46eb82b91</Anchor>
    <Abstract>Save the thumbnail created by generateImage() to a file. </Abstract>
    <DeclaredIn>StatePreview.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFileExtension</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>StatePreview</Scope>
    </TokenIdentifier>
    <Path>class_state_preview.html</Path>
    <Anchor>a092ab0b12d351e6380a822fb02118459</Anchor>
    <Abstract>Get the file extension used for state images. </Abstract>
    <DeclaredIn>StatePreview.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StateSerializationHelper</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>StateSerializationHelper</Scope>
    </TokenIdentifier>
    <Path>class_state_serialization_helper.html</Path>
    <Abstract>Helper class to store a session to a state file and restore it later. </Abstract>
    <DeclaredIn>StateSerializationHelper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StateSerializationHelper</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StateSerializationHelper</Scope>
    </TokenIdentifier>
    <Path>class_state_serialization_helper.html</Path>
    <Anchor>aeec09c20c25b648f391d4dde45431caf</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>StateSerializationHelper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>save</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StateSerializationHelper</Scope>
    </TokenIdentifier>
    <Path>class_state_serialization_helper.html</Path>
    <Anchor>a550a2065c121d963334a1b9aad23f161</Anchor>
    <Abstract>Save the state of the application. </Abstract>
    <DeclaredIn>StateSerializationHelper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StateSerializationHelper</Scope>
    </TokenIdentifier>
    <Path>class_state_serialization_helper.html</Path>
    <Anchor>a30c833084caaae45fbf29ebaa33b431a</Anchor>
    <Abstract>Load the state from a given xml file. </Abstract>
    <DeclaredIn>StateSerializationHelper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StateThumbnailGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>StateThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_state_thumbnail_generator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StaticContent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>StaticContent</Scope>
    </TokenIdentifier>
    <Path>class_static_content.html</Path>
    <Abstract>Expose a static content to the REST interface. </Abstract>
    <DeclaredIn>StaticContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StaticContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StaticContent</Scope>
    </TokenIdentifier>
    <Path>class_static_content.html</Path>
    <Anchor>a009f0d78eaed6c9f2983439877f41c57</Anchor>
    <Abstract>Construct a static content which can be exposed by a ZeroEQ http server. </Abstract>
    <DeclaredIn>StaticContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTypeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StaticContent</Scope>
    </TokenIdentifier>
    <Path>class_static_content.html</Path>
    <Anchor>a1a5ad75e6f78ca3a6257aa19281d4ee0</Anchor>
    <DeclaredIn>StaticContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StreamImage</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>StreamImage</Scope>
    </TokenIdentifier>
    <Path>class_stream_image.html</Path>
    <Abstract>Image wrapper for a pixel stream image. </Abstract>
    <DeclaredIn>StreamImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StreamImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StreamImage</Scope>
    </TokenIdentifier>
    <Path>class_stream_image.html</Path>
    <Anchor>a255b8ab37b846ff1368fde57753efc32</Anchor>
    <Abstract>Constructor, stores the given deflect frame. </Abstract>
    <DeclaredIn>StreamImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StreamImage</Scope>
    </TokenIdentifier>
    <Path>class_stream_image.html</Path>
    <Anchor>abc48234506e2b5baf00d895effff0466</Anchor>
    <DeclaredIn>StreamImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StreamImage</Scope>
    </TokenIdentifier>
    <Path>class_stream_image.html</Path>
    <Anchor>a882268afcf2e6947b741c206fcfd9cf4</Anchor>
    <DeclaredIn>StreamImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StreamImage</Scope>
    </TokenIdentifier>
    <Path>class_stream_image.html</Path>
    <Anchor>a5cdc423c774d5877dc2e3ea2df121a8e</Anchor>
    <DeclaredIn>StreamImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StreamImage</Scope>
    </TokenIdentifier>
    <Path>class_stream_image.html</Path>
    <Anchor>ad8fd4397c7bdcd0e0fcfcf1bf1905279</Anchor>
    <DeclaredIn>StreamImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>a5ce61ece7ea078a9fe1a4f259b25fb56</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGpuImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>ac3e10f35fb8dd895bda5627f43d96907</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateGpuImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>a8284c68a45d845a6ffd8eb81a4544092</Anchor>
    <Abstract>Generate the GPU image. </Abstract>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SVG</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SVG</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g.html</Path>
    <Abstract>An SVG document which can be rendered as a QImage. </Abstract>
    <DeclaredIn>SVG.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SVG</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVG</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g.html</Path>
    <Anchor>a3474f26fa7ac0b471564acd9c7b13721</Anchor>
    <Abstract>Open an svg document. </Abstract>
    <DeclaredIn>SVG.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SVG</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVG</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g.html</Path>
    <Anchor>af34129c53df4a18f880e4f2ebfcb9cd8</Anchor>
    <Abstract>Create an svg document from existing data. </Abstract>
    <DeclaredIn>SVG.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SVG</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVG</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g.html</Path>
    <Anchor>ad34298f0fb0cc7bf208c5667b26dd21b</Anchor>
    <Abstract>Close the document. </Abstract>
    <DeclaredIn>SVG.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFilename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVG</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g.html</Path>
    <Anchor>aaf26d6bac8e016b30c1efdb0ccc5e488</Anchor>
    <DeclaredIn>SVG.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVG</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g.html</Path>
    <Anchor>ad47f7ad5b8d6ceb973df825c07124dd8</Anchor>
    <DeclaredIn>SVG.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVG</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g.html</Path>
    <Anchor>aadfc02f573f9e9e3baef4a613b9b7ce8</Anchor>
    <DeclaredIn>SVG.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVG</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g.html</Path>
    <Anchor>aeba95968d27151a97193fa34802a11d5</Anchor>
    <DeclaredIn>SVG.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderToImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVG</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g.html</Path>
    <Anchor>a0caf324174ee21227db6a766d6bcd770</Anchor>
    <Abstract>Render the document to an image. </Abstract>
    <DeclaredIn>SVG.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SVGBackend</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SVGBackend</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_backend.html</Path>
    <Abstract>An abstract interface for SVG backends. </Abstract>
    <DeclaredIn>SVGBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SVGBackend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGBackend</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_backend.html</Path>
    <Anchor>a54c3fe3bbb119d468dab5bfe875894ad</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>SVGBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGBackend</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_backend.html</Path>
    <Anchor>a65459c012790b820453eb8f603cfcf68</Anchor>
    <DeclaredIn>SVGBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderToImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGBackend</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_backend.html</Path>
    <Anchor>aaf1d572b32ebab13dbf3aa4411ae94af</Anchor>
    <Abstract>Render the document to an image. </Abstract>
    <DeclaredIn>SVGBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SVGContent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SVGContent</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_content.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SVGContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGContent</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_content.html</Path>
    <Anchor>a9813e8e86203ad9d19507fbc0ef7b6fb</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>SVGContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGContent</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_content.html</Path>
    <Anchor>a91f39603b508a02d634f8b67e41d1449</Anchor>
    <Abstract>Get the content type. </Abstract>
    <DeclaredIn>SVGContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMetadata</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGContent</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_content.html</Path>
    <Anchor>ab1498c71f69ee1f0720fb5686bef3ecf</Anchor>
    <Abstract>Read SVG metadata. </Abstract>
    <DeclaredIn>SVGContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VectorialContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>VectorialContent</Scope>
    </TokenIdentifier>
    <Path>class_vectorial_content.html</Path>
    <Anchor>aee9a53f4f5acc149fe99f83b3eb2766e</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>VectorialContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>VectorialContent</Scope>
    </TokenIdentifier>
    <Path>class_vectorial_content.html</Path>
    <Anchor>a3f3574943f9a5cd05af0f97993de75d1</Anchor>
    <DeclaredIn>VectorialContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Content</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ae491288d2efce7fa63d3e777580630b4</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a887d2b952cd824d70f64106ae048a5f8</Anchor>
    <Abstract>Get the content URI. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>aa4681ca97acea99fbe88e20f0e664bc0</Anchor>
    <Abstract>Get the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a8cf06fbd623453fd2aa349d91ebbca3b</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPreferredDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a508b7f5c09ffa4f5a1a7f3e89cbec489</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a1b7a6f49f447c124b497b0a844fd6ea6</Anchor>
    <Abstract>Set the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a113bd8ba35685e77bcf8a8650fab636a</Anchor>
    <Abstract>Get the aspect ratio. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFixedAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>adceac372a702843a1e0bd207f670680a</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a461bb62d3989d0eb5b4d1f824e7a66c0</Anchor>
    <Abstract>Get the zoom rectangle in normalized coordinates, [0,0,1,1] default. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0f3e5f9203b97450e3856d39a12807e3</Anchor>
    <Abstract>Set the zoom rectangle in normalized coordinates. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ad5094c72f8c6d7ec5390108534804c1f</Anchor>
    <Abstract>Resets the zoom to [0,0,1,1]. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getActions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a7ae29df27d493e89dd7dccd775efbff8</Anchor>
    <Abstract>Get the actions from QML. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getQmlControls</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af64c08ff1aafa0206bf178a6e4bfa634</Anchor>
    <Abstract>Get content-specific qml controls file (default: empty). </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKeyboardState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0e10f71c92fe8434a9b40183cb7239a0</Anchor>
    <Abstract>Get the keyboard state from QML. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInteractionPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a2dea2403b7d96fad93fae78ca4986197</Anchor>
    <Abstract>Get the interaction policy (default: AUTO). </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSizeHints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a70292d652fb37ee21640801fce53c186</Anchor>
    <Abstract>Set optional size hints to constrain resize/scale and 1:1 size. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCaptureInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a7e7c36edf987322675eea81f27e8017d</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCaptureInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a18477814caa57d8f9aa0330fd19487ab</Anchor>
    <Abstract>Tell the content to capture interaction (only for Policy::AUTO). </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>VectorialContent</Scope>
    </TokenIdentifier>
    <Path>class_vectorial_content.html</Path>
    <Anchor>a02ed9ed4fd5cfea1f01912271d06ed95</Anchor>
    <Abstract>Set the maximum factor for zoom and resize; value times base size. </Abstract>
    <DeclaredIn>VectorialContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>VectorialContent</Scope>
    </TokenIdentifier>
    <Path>class_vectorial_content.html</Path>
    <Anchor>ac40105f009e9278f53d4843c75cee9a5</Anchor>
    <DeclaredIn>VectorialContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a87465efbfaf4e2e5b0a5e7e8af0985f2</Anchor>
    <Abstract>Set the maximum factor for zoom and resize; value times content size. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a04642ff3171681aa5fd2c8c8291a7949</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a44c022cb6fed6fb1b0dff45e39ececb9</Anchor>
    <Abstract>Emitted by any Content subclass when its state has been modified. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af5fc9d76b3c2899937927c9cd65689d5</Anchor>
    <Abstract>Serialize for sending to Wall applications. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_members_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a6787ec5cdec336c8f25c5e9671977598</Anchor>
    <Abstract>Serialize for saving to an xml file. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_for_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a4c9c0b425c1197cdf34f2d62119b6f4d</Anchor>
    <Abstract>Loading from xml. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_for_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a8d0e71e26ce26abdd7b414dee1ca2c9e</Anchor>
    <Abstract>Saving to xml. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SVGGpuImage</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SVGGpuImage</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_gpu_image.html</Path>
    <Abstract>Image wrapper for an SVG tile which will be rendered on the GPU. </Abstract>
    <DeclaredIn>SVGGpuImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SVGGpuImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGGpuImage</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_gpu_image.html</Path>
    <Anchor>ae72dc82feae79c1109cc2bc77cb4368a</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>SVGGpuImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGGpuImage</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_gpu_image.html</Path>
    <Anchor>a765c40b71dfbcabe5b2472fdea562e03</Anchor>
    <DeclaredIn>SVGGpuImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGGpuImage</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_gpu_image.html</Path>
    <Anchor>ac6ce4464cd20325bfbb3431f2abd88ab</Anchor>
    <DeclaredIn>SVGGpuImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGGpuImage</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_gpu_image.html</Path>
    <Anchor>af8c628d4469f944970c8590be82c5c20</Anchor>
    <DeclaredIn>SVGGpuImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGGpuImage</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_gpu_image.html</Path>
    <Anchor>a57a63120a2b1fe363c873071f5bf145e</Anchor>
    <DeclaredIn>SVGGpuImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGpuImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGGpuImage</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_gpu_image.html</Path>
    <Anchor>a0abbacb389af081da9a75360fabfec77</Anchor>
    <DeclaredIn>SVGGpuImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateGpuImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGGpuImage</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_gpu_image.html</Path>
    <Anchor>a6db44b92e6c465a0a5d9dc2ba7b90f83</Anchor>
    <Abstract>Generate the GPU image. </Abstract>
    <DeclaredIn>SVGGpuImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>a5ce61ece7ea078a9fe1a4f259b25fb56</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SVGQtGpuBackend</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SVGQtGpuBackend</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_qt_gpu_backend.html</Path>
    <Abstract>Renders an svg document into a texure using hardware antialiasing. </Abstract>
    <DeclaredIn>SVGQtGpuBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SVGQtGpuBackend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGQtGpuBackend</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_qt_gpu_backend.html</Path>
    <Anchor>a068829bd34e16dcb2657282731a2c1e0</Anchor>
    <Abstract>Create an SVG renderer. </Abstract>
    <DeclaredIn>SVGQtGpuBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGQtGpuBackend</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_qt_gpu_backend.html</Path>
    <Anchor>adf617444ef6d75c5036ac90a9e48fc89</Anchor>
    <DeclaredIn>SVGQtGpuBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderToImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGQtGpuBackend</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_qt_gpu_backend.html</Path>
    <Anchor>a4dc7cfa1120bcf3c92a2a073dee3c72c</Anchor>
    <Abstract>Render the specified area on the GPU and downloads it into core memory. </Abstract>
    <DeclaredIn>SVGQtGpuBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SVGBackend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGBackend</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_backend.html</Path>
    <Anchor>a54c3fe3bbb119d468dab5bfe875894ad</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>SVGBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SVGSynchronizer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SVGSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_synchronizer.html</Path>
    <Abstract>Synchronize SVG content. </Abstract>
    <DeclaredIn>SVGSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SVGSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_synchronizer.html</Path>
    <Anchor>a34f6cfdb4ab870682334ec119e77ec8c</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>SVGSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SVGSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_synchronizer.html</Path>
    <Anchor>aa05d79048efff7633966cf1c8cfed078</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>SVGSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synchronize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_synchronizer.html</Path>
    <Anchor>a8e5bd2d63945b0a280b6d8228c1a09e8</Anchor>
    <Abstract>Synchronize content advance accross processes. </Abstract>
    <DeclaredIn>SVGSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_synchronizer.html</Path>
    <Anchor>ab82caeab6a61ff2ff12856ea800d785d</Anchor>
    <Abstract>Get the image for a given tile index. </Abstract>
    <DeclaredIn>SVGSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LodSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Anchor>ae58845a6fc6e41b1d5ed769e0529ca08</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Anchor>a5954e68efdac62476dca84251c416c51</Anchor>
    <Abstract>Update the Content. </Abstract>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTilesArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Anchor>a16def68e81a838582f93c7b544634b24</Anchor>
    <Abstract>The total area covered by the tiles (may depend on current LOD). </Abstract>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Anchor>ae54dd22eea77b13579224ca5399cdc27</Anchor>
    <Abstract>Get statistics about this Content. </Abstract>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoomContextTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Anchor>aa42ce964a5aa8a09782cbdd25cb7809a</Anchor>
    <Abstract>Notify the window to add a tile for the zoom context. </Abstract>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TiledSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a70ae3f4171110fc5308407e870044fcd</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onSwapReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a8ae5165f31bd9575d16a2849c46eb256</Anchor>
    <Abstract>Called when a tile is ready to swap. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aa9b57c8a735fbfb9b35e3e79d9ac9682</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ContentSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a68aa090a819ade8f4193c6848aa5d7c0</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onTextureReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aea4634e943d637574dc06c4a8000811e</Anchor>
    <Abstract>Called when a tile has finished initializing; re-emits requestUpdate. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tilesAreaChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aac807a9cb073a52d88a80ceca93b34a3</Anchor>
    <Abstract>Notifier for the tiles area property. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>statisticsChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a8b2131d6b3874d8d932a101ec3dcde05</Anchor>
    <Abstract>Notifier for the statistics property. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a07a22964fedee87ec47fddc4b02a40f0</Anchor>
    <Abstract>Notify the window to add a tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a755db8af943fc6bd0aab4220320d3a89</Anchor>
    <Abstract>Notify the window to remove a tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aba03b3c5af16950946e91c893d20eeaf</Anchor>
    <Abstract>Notify to update a tile&amp;#39;s coordinates. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestTileUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aa8eaddb3ad37209eb3df6cac7dc68db8</Anchor>
    <Abstract>Request an update of a specific tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zoomContextTileChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a936e9892ccd99cef73b82282b1d291e2</Anchor>
    <Abstract>Notify that the zoom context tile has changed and must be recreated. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a1ad34f14a76b9eae5f55b90ccf6d3db5</Anchor>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Anchor>a2e34ef7461644353ec641acc6e5f5627</Anchor>
    <Abstract>Get the appropriate LOD for a given display size. </Abstract>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBackgroundTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Anchor>a81e10f2ecb83c92a9183c9c50e4b4bfc</Anchor>
    <Abstract>Create the background tile to smooth the LOD change. </Abstract>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>ac2d23b0e012c2d6a32b1d9302f7e98f6</Anchor>
    <Abstract>Update the tiles, adding or removing them from the view. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>aff88bcf6044fa835c350785e60053300</Anchor>
    <Abstract>Perform a synchronized tile swap across all processes. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SVGTiler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SVGTiler</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_tiler.html</Path>
    <Abstract>Represent an SVG image as a multi-LOD tiled data source. </Abstract>
    <DeclaredIn>SVGTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SVGTiler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGTiler</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_tiler.html</Path>
    <Anchor>a600f887a1e495c20a36a79394cd9d94c</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>SVGTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>a8cfbf1d951a1d4ddd2b38b3049310d3e</Anchor>
    <Abstract>Get the coordinates of a tile. </Abstract>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTilesArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>a505d41a890ecf672d6b36e3365f9fdff</Anchor>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeVisibleSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>ac9f7302d1fc7c786bcf6a0f132d2d389</Anchor>
    <Abstract>Compute the indices of the tiles which are visible in the given area. </Abstract>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxLod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>a1f48c3a3fe7870ef430a9244874b0253</Anchor>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNormalizedTileRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>a085c9b2df8260fb774572242b411fdd3</Anchor>
    <Abstract>Get the tile rectangle in normalized coordinates. </Abstract>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CachedDataSource</Scope>
    </TokenIdentifier>
    <Path>class_cached_data_source.html</Path>
    <Anchor>a6fd04c5620ce585d49ef42494825bfd9</Anchor>
    <Abstract>Get a tile image by its id. threadsafe </Abstract>
    <DeclaredIn>CachedDataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CachedDataSource</Scope>
    </TokenIdentifier>
    <Path>class_cached_data_source.html</Path>
    <Anchor>a02e027db47c9407a6235d391a015704b</Anchor>
    <Abstract>Check if the cache contains an image for a tile. </Abstract>
    <DeclaredIn>CachedDataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LodTiler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>a6fb20a5bd71ee276d60d95f57a197517</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TestPattern</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>TestPattern</Scope>
    </TokenIdentifier>
    <Path>class_test_pattern.html</Path>
    <Abstract>Render a test pattern to help setup and debug the display configuration. </Abstract>
    <DeclaredIn>TestPattern.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TestPattern</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TestPattern</Scope>
    </TokenIdentifier>
    <Path>class_test_pattern.html</Path>
    <Anchor>a0d3c3504086d1a78f7631c65af92a9ac</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>TestPattern.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>paint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TestPattern</Scope>
    </TokenIdentifier>
    <Path>class_test_pattern.html</Path>
    <Anchor>a7ad9a56b63b91c661dd198a23935b3a7</Anchor>
    <Abstract>Render the test pattern. </Abstract>
    <DeclaredIn>TestPattern.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TextureContent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>TextureContent</Scope>
    </TokenIdentifier>
    <Path>class_texture_content.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TextureContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureContent</Scope>
    </TokenIdentifier>
    <Path>class_texture_content.html</Path>
    <Anchor>a34ede22c00496d1f2309d56c0bfcf70b</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>TextureContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureContent</Scope>
    </TokenIdentifier>
    <Path>class_texture_content.html</Path>
    <Anchor>a9cc5fa88ef8586888049572041f79225</Anchor>
    <Abstract>Get the content type. </Abstract>
    <DeclaredIn>TextureContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMetadata</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureContent</Scope>
    </TokenIdentifier>
    <Path>class_texture_content.html</Path>
    <Anchor>aac9af25e443cae0cfef848825719f56f</Anchor>
    <Abstract>Read texture metadata. </Abstract>
    <DeclaredIn>TextureContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Content</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ae491288d2efce7fa63d3e777580630b4</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a887d2b952cd824d70f64106ae048a5f8</Anchor>
    <Abstract>Get the content URI. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>aa4681ca97acea99fbe88e20f0e664bc0</Anchor>
    <Abstract>Get the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a8cf06fbd623453fd2aa349d91ebbca3b</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPreferredDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a508b7f5c09ffa4f5a1a7f3e89cbec489</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a70fbc6b9c9dfd95c426819a1c14464f9</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a1b7a6f49f447c124b497b0a844fd6ea6</Anchor>
    <Abstract>Set the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a113bd8ba35685e77bcf8a8650fab636a</Anchor>
    <Abstract>Get the aspect ratio. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFixedAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>adceac372a702843a1e0bd207f670680a</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a461bb62d3989d0eb5b4d1f824e7a66c0</Anchor>
    <Abstract>Get the zoom rectangle in normalized coordinates, [0,0,1,1] default. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0f3e5f9203b97450e3856d39a12807e3</Anchor>
    <Abstract>Set the zoom rectangle in normalized coordinates. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ad5094c72f8c6d7ec5390108534804c1f</Anchor>
    <Abstract>Resets the zoom to [0,0,1,1]. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getActions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a7ae29df27d493e89dd7dccd775efbff8</Anchor>
    <Abstract>Get the actions from QML. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getQmlControls</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af64c08ff1aafa0206bf178a6e4bfa634</Anchor>
    <Abstract>Get content-specific qml controls file (default: empty). </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKeyboardState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0e10f71c92fe8434a9b40183cb7239a0</Anchor>
    <Abstract>Get the keyboard state from QML. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInteractionPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a2dea2403b7d96fad93fae78ca4986197</Anchor>
    <Abstract>Get the interaction policy (default: AUTO). </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSizeHints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a70292d652fb37ee21640801fce53c186</Anchor>
    <Abstract>Set optional size hints to constrain resize/scale and 1:1 size. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCaptureInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a7e7c36edf987322675eea81f27e8017d</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCaptureInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a18477814caa57d8f9aa0330fd19487ab</Anchor>
    <Abstract>Tell the content to capture interaction (only for Policy::AUTO). </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a87465efbfaf4e2e5b0a5e7e8af0985f2</Anchor>
    <Abstract>Set the maximum factor for zoom and resize; value times content size. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a04642ff3171681aa5fd2c8c8291a7949</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a44c022cb6fed6fb1b0dff45e39ececb9</Anchor>
    <Abstract>Emitted by any Content subclass when its state has been modified. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af5fc9d76b3c2899937927c9cd65689d5</Anchor>
    <Abstract>Serialize for sending to Wall applications. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_members_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a6787ec5cdec336c8f25c5e9671977598</Anchor>
    <Abstract>Serialize for saving to an xml file. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_for_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a4c9c0b425c1197cdf34f2d62119b6f4d</Anchor>
    <Abstract>Loading from xml. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_for_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a8d0e71e26ce26abdd7b414dee1ca2c9e</Anchor>
    <Abstract>Saving to xml. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TextureNode</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>TextureNode</Scope>
    </TokenIdentifier>
    <Path>class_texture_node.html</Path>
    <Abstract>A node with a double buffered texture. </Abstract>
    <DeclaredIn>TextureNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBackGlTexture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureNode</Scope>
    </TokenIdentifier>
    <Path>class_texture_node.html</Path>
    <Anchor>a8821312d108e5d5480c064b4233f0e91</Anchor>
    <DeclaredIn>TextureNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureNode</Scope>
    </TokenIdentifier>
    <Path>class_texture_node.html</Path>
    <Anchor>a2bab880a6aa2ac51d66462c3a1367556</Anchor>
    <Abstract>Swap the front and back textures. </Abstract>
    <DeclaredIn>TextureNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBackTextureSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureNode</Scope>
    </TokenIdentifier>
    <Path>class_texture_node.html</Path>
    <Anchor>a16ad4cad8dcb8d491954ba81a71ae404</Anchor>
    <Abstract>Create or resize the back texture as needed. </Abstract>
    <DeclaredIn>TextureNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMipmapFiltering</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureNode</Scope>
    </TokenIdentifier>
    <Path>class_texture_node.html</Path>
    <Anchor>ac7826da8d3fb368fd69ab3906829035a</Anchor>
    <DeclaredIn>TextureNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TextureUploader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>TextureUploader</Scope>
    </TokenIdentifier>
    <Path>class_texture_uploader.html</Path>
    <Abstract>A class responsible for uploading pixel data from CPU memory to GPU memory using a PixelBufferObject...</Abstract>
    <DeclaredIn>TextureUploader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uploadTexture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>TextureUploader</Scope>
    </TokenIdentifier>
    <Path>class_texture_uploader.html</Path>
    <Anchor>a43ddea0b3f1cfddbacf83352dcdf95fe</Anchor>
    <Abstract>Performs the upload of pixels into the given tile&amp;#39;s back texture. </Abstract>
    <DeclaredIn>TextureUploader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>TextureUploader</Scope>
    </TokenIdentifier>
    <Path>class_texture_uploader.html</Path>
    <Anchor>ac3aa512b3ceabf72f9741a42ae6678e5</Anchor>
    <Abstract>Does the necessary OpenGL setup, needs to be called from the dedicated upload thread. </Abstract>
    <DeclaredIn>TextureUploader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>TextureUploader</Scope>
    </TokenIdentifier>
    <Path>class_texture_uploader.html</Path>
    <Anchor>a2bd2570b84aeb95d7d8c005f07848579</Anchor>
    <Abstract>Does the necessary OpenGL teardown, needs to be called from the dedicated upload thread. </Abstract>
    <DeclaredIn>TextureUploader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uploaded</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>TextureUploader</Scope>
    </TokenIdentifier>
    <Path>class_texture_uploader.html</Path>
    <Anchor>a197926c629c7efccb0f3321983b28a2c</Anchor>
    <Abstract>Emitted after a texture was successfully uploaded. </Abstract>
    <DeclaredIn>TextureUploader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TextureUploader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureUploader</Scope>
    </TokenIdentifier>
    <Path>class_texture_uploader.html</Path>
    <Anchor>a9eebced66394a5caef7cb265843a8c06</Anchor>
    <Abstract>Construction does not need any OpenGL context. </Abstract>
    <DeclaredIn>TextureUploader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThumbnailGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThumbnailGeneratorFactory</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ThumbnailGeneratorFactory</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator_factory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThumbnailProvider</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ThumbnailProvider</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_provider.html</Path>
    <Abstract>Provide thumbnails for files and folders to the Qml FileBrowser. </Abstract>
    <DeclaredIn>ThumbnailProvider.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TiffPyramidReader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>TiffPyramidReader</Scope>
    </TokenIdentifier>
    <Path>class_tiff_pyramid_reader.html</Path>
    <Abstract>Reader for TIFF image pyramid files. </Abstract>
    <DeclaredIn>TiffPyramidReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TiffPyramidReader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiffPyramidReader</Scope>
    </TokenIdentifier>
    <Path>class_tiff_pyramid_reader.html</Path>
    <Anchor>a638f589e9402e9fe6eb08e0e0a5a47ec</Anchor>
    <Abstract>Open an image file for reading. </Abstract>
    <DeclaredIn>TiffPyramidReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~TiffPyramidReader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiffPyramidReader</Scope>
    </TokenIdentifier>
    <Path>class_tiff_pyramid_reader.html</Path>
    <Anchor>a2d45866756f830e4e5d63e5706d7e5aa</Anchor>
    <Abstract>Close the image. </Abstract>
    <DeclaredIn>TiffPyramidReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getImageSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiffPyramidReader</Scope>
    </TokenIdentifier>
    <Path>class_tiff_pyramid_reader.html</Path>
    <Anchor>a109fa3d3565fff1364da1d64522ddd65</Anchor>
    <Abstract>Get the full size of the image. </Abstract>
    <DeclaredIn>TiffPyramidReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiffPyramidReader</Scope>
    </TokenIdentifier>
    <Path>class_tiff_pyramid_reader.html</Path>
    <Anchor>a21feb217c322e2281cebdb8de02cb800</Anchor>
    <Abstract>Get the size of the image tiles (all tiles have the same size). </Abstract>
    <DeclaredIn>TiffPyramidReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBytesPerPixel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiffPyramidReader</Scope>
    </TokenIdentifier>
    <Path>class_tiff_pyramid_reader.html</Path>
    <Anchor>ad6cfb76c30597cd6dacc05e27d4a3ecd</Anchor>
    <Abstract>Get the number of bytes by pixel. </Abstract>
    <DeclaredIn>TiffPyramidReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findTopPyramidLevel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiffPyramidReader</Scope>
    </TokenIdentifier>
    <Path>class_tiff_pyramid_reader.html</Path>
    <Anchor>a4b30829f1c7de3b8ffaf86dc87dba823</Anchor>
    <Abstract>Find the index of the top LOD of the image pyramid. </Abstract>
    <DeclaredIn>TiffPyramidReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiffPyramidReader</Scope>
    </TokenIdentifier>
    <Path>class_tiff_pyramid_reader.html</Path>
    <Anchor>adb36b47012ffc56167a81c073d74f772</Anchor>
    <Abstract>Read a tile for the given indices and level of detail. </Abstract>
    <DeclaredIn>TiffPyramidReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readTopLevelImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiffPyramidReader</Scope>
    </TokenIdentifier>
    <Path>class_tiff_pyramid_reader.html</Path>
    <Anchor>ae1dab67ed7e2115c2be1a807314bb7c4</Anchor>
    <Abstract>Read the image at the top of the pyramid (i.e. </Abstract>
    <DeclaredIn>TiffPyramidReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tile</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Tile</Scope>
    </TokenIdentifier>
    <Path>class_tile.html</Path>
    <Abstract>Qml item to render an image tile with texture double-buffering. </Abstract>
    <DeclaredIn>Tile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setShowBorder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>Tile</Scope>
    </TokenIdentifier>
    <Path>class_tile.html</Path>
    <Anchor>a6bad45f0c243e03d3ff7cca96eb2a3a8</Anchor>
    <Abstract>Show a border around the tile (for debugging purposes). </Abstract>
    <DeclaredIn>Tile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>Tile</Scope>
    </TokenIdentifier>
    <Path>class_tile.html</Path>
    <Anchor>aa25c497af8534d86245f6fced15579eb</Anchor>
    <Abstract>Swap the front and back texture. </Abstract>
    <DeclaredIn>Tile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showBorderChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Tile</Scope>
    </TokenIdentifier>
    <Path>class_tile.html</Path>
    <Anchor>a028768ac22c3cdea32c1f364b3574237</Anchor>
    <Abstract>Notifier for the showBorder property. </Abstract>
    <DeclaredIn>Tile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textureReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Tile</Scope>
    </TokenIdentifier>
    <Path>class_tile.html</Path>
    <Anchor>af4a65319df0b8bf8f04deb7188376b16</Anchor>
    <Abstract>Notifies that the back texture is ready to be updated. </Abstract>
    <DeclaredIn>Tile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textureUpdated</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Tile</Scope>
    </TokenIdentifier>
    <Path>class_tile.html</Path>
    <Anchor>abae1e7053ffc4d4f2ae9f8352bbe7011</Anchor>
    <Abstract>Notify that the back texture has been updated and it can be swapped. </Abstract>
    <DeclaredIn>Tile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tile</Scope>
    </TokenIdentifier>
    <Path>class_tile.html</Path>
    <Anchor>a41ea6d041ad065dfc8c85fb75980d636</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Tile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getId</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tile</Scope>
    </TokenIdentifier>
    <Path>class_tile.html</Path>
    <Anchor>a6a653b4a1bfe89750a133644af00cc72</Anchor>
    <DeclaredIn>Tile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getShowBorder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tile</Scope>
    </TokenIdentifier>
    <Path>class_tile.html</Path>
    <Anchor>a0fbceb037e1e468b30a8a5fa492f47fa</Anchor>
    <DeclaredIn>Tile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tile</Scope>
    </TokenIdentifier>
    <Path>class_tile.html</Path>
    <Anchor>aa32d44a7e8b178afd2a05b326acfc899</Anchor>
    <Abstract>Request an update of the back texture, resing it if necessary. </Abstract>
    <DeclaredIn>Tile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBackGlTexture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tile</Scope>
    </TokenIdentifier>
    <Path>class_tile.html</Path>
    <Anchor>a5b1a939bc985b19447bc00162ed060fd</Anchor>
    <DeclaredIn>Tile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBackGlTextureSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tile</Scope>
    </TokenIdentifier>
    <Path>class_tile.html</Path>
    <Anchor>a804cbccc790850dacb8f7aab4382c27d</Anchor>
    <DeclaredIn>Tile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSizePolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tile</Scope>
    </TokenIdentifier>
    <Path>class_tile.html</Path>
    <Anchor>a441cb2fbdf0fbc0792693a2713a2bfad</Anchor>
    <Abstract>Set the size policy. </Abstract>
    <DeclaredIn>Tile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updatePaintNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tile</Scope>
    </TokenIdentifier>
    <Path>class_tile.html</Path>
    <Anchor>a4bf3b822a2cec71a85b4d1188998485f</Anchor>
    <Abstract>Called on the render thread to update the scene graph. </Abstract>
    <DeclaredIn>Tile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TiledSynchronizer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Abstract>A base synchronizer used for tiled content types with optional LOD. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TiledSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a70ae3f4171110fc5308407e870044fcd</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onSwapReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a8ae5165f31bd9575d16a2849c46eb256</Anchor>
    <Abstract>Called when a tile is ready to swap. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aa9b57c8a735fbfb9b35e3e79d9ac9682</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ContentSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a68aa090a819ade8f4193c6848aa5d7c0</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>ae364f07df110634b5f1999ae6f0d3ac6</Anchor>
    <Abstract>Update the Content. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synchronize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a7d31a22c5564f6ef79ea3b39c071d938</Anchor>
    <Abstract>Synchronize content advance accross processes. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTilesArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>ad1d547e9b327f320163aa2976bfffa8e</Anchor>
    <Abstract>The total area covered by the tiles (may depend on current LOD). </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aac53ae2d14888ef268e22f7c7a5eb14f</Anchor>
    <Abstract>Get statistics about this Content. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a637dfab5813107a509142633c32465cf</Anchor>
    <Abstract>Get the image for a given tile index. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoomContextTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a88d2e6727ef69fd33e0bda4d2f73f199</Anchor>
    <Abstract>Notify the window to add a tile for the zoom context. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>ac2d23b0e012c2d6a32b1d9302f7e98f6</Anchor>
    <Abstract>Update the tiles, adding or removing them from the view. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>aff88bcf6044fa835c350785e60053300</Anchor>
    <Abstract>Perform a synchronized tile swap across all processes. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onTextureReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aea4634e943d637574dc06c4a8000811e</Anchor>
    <Abstract>Called when a tile has finished initializing; re-emits requestUpdate. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tilesAreaChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aac807a9cb073a52d88a80ceca93b34a3</Anchor>
    <Abstract>Notifier for the tiles area property. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>statisticsChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a8b2131d6b3874d8d932a101ec3dcde05</Anchor>
    <Abstract>Notifier for the statistics property. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a07a22964fedee87ec47fddc4b02a40f0</Anchor>
    <Abstract>Notify the window to add a tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a755db8af943fc6bd0aab4220320d3a89</Anchor>
    <Abstract>Notify the window to remove a tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aba03b3c5af16950946e91c893d20eeaf</Anchor>
    <Abstract>Notify to update a tile&amp;#39;s coordinates. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestTileUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aa8eaddb3ad37209eb3df6cac7dc68db8</Anchor>
    <Abstract>Request an update of a specific tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zoomContextTileChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a936e9892ccd99cef73b82282b1d291e2</Anchor>
    <Abstract>Notify that the zoom context tile has changed and must be recreated. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a1ad34f14a76b9eae5f55b90ccf6d3db5</Anchor>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VectorialContent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>VectorialContent</Scope>
    </TokenIdentifier>
    <Path>class_vectorial_content.html</Path>
    <Abstract>Base class for vectorial content types. </Abstract>
    <DeclaredIn>VectorialContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VectorialContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>VectorialContent</Scope>
    </TokenIdentifier>
    <Path>class_vectorial_content.html</Path>
    <Anchor>aee9a53f4f5acc149fe99f83b3eb2766e</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>VectorialContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>VectorialContent</Scope>
    </TokenIdentifier>
    <Path>class_vectorial_content.html</Path>
    <Anchor>a3f3574943f9a5cd05af0f97993de75d1</Anchor>
    <DeclaredIn>VectorialContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Content</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ae491288d2efce7fa63d3e777580630b4</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a887d2b952cd824d70f64106ae048a5f8</Anchor>
    <Abstract>Get the content URI. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af9e369355bb2be4ab07ed23f0f82113d</Anchor>
    <Abstract>Get the content type. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMetadata</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a6822bf4cf94ae866c561b23e62506303</Anchor>
    <Abstract>Read content metadata from the data source. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>aa4681ca97acea99fbe88e20f0e664bc0</Anchor>
    <Abstract>Get the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a8cf06fbd623453fd2aa349d91ebbca3b</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPreferredDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a508b7f5c09ffa4f5a1a7f3e89cbec489</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a1b7a6f49f447c124b497b0a844fd6ea6</Anchor>
    <Abstract>Set the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a113bd8ba35685e77bcf8a8650fab636a</Anchor>
    <Abstract>Get the aspect ratio. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFixedAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>adceac372a702843a1e0bd207f670680a</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a461bb62d3989d0eb5b4d1f824e7a66c0</Anchor>
    <Abstract>Get the zoom rectangle in normalized coordinates, [0,0,1,1] default. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0f3e5f9203b97450e3856d39a12807e3</Anchor>
    <Abstract>Set the zoom rectangle in normalized coordinates. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ad5094c72f8c6d7ec5390108534804c1f</Anchor>
    <Abstract>Resets the zoom to [0,0,1,1]. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getActions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a7ae29df27d493e89dd7dccd775efbff8</Anchor>
    <Abstract>Get the actions from QML. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getQmlControls</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af64c08ff1aafa0206bf178a6e4bfa634</Anchor>
    <Abstract>Get content-specific qml controls file (default: empty). </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKeyboardState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0e10f71c92fe8434a9b40183cb7239a0</Anchor>
    <Abstract>Get the keyboard state from QML. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInteractionPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a2dea2403b7d96fad93fae78ca4986197</Anchor>
    <Abstract>Get the interaction policy (default: AUTO). </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSizeHints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a70292d652fb37ee21640801fce53c186</Anchor>
    <Abstract>Set optional size hints to constrain resize/scale and 1:1 size. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCaptureInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a7e7c36edf987322675eea81f27e8017d</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCaptureInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a18477814caa57d8f9aa0330fd19487ab</Anchor>
    <Abstract>Tell the content to capture interaction (only for Policy::AUTO). </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>VectorialContent</Scope>
    </TokenIdentifier>
    <Path>class_vectorial_content.html</Path>
    <Anchor>a02ed9ed4fd5cfea1f01912271d06ed95</Anchor>
    <Abstract>Set the maximum factor for zoom and resize; value times base size. </Abstract>
    <DeclaredIn>VectorialContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>VectorialContent</Scope>
    </TokenIdentifier>
    <Path>class_vectorial_content.html</Path>
    <Anchor>ac40105f009e9278f53d4843c75cee9a5</Anchor>
    <DeclaredIn>VectorialContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a87465efbfaf4e2e5b0a5e7e8af0985f2</Anchor>
    <Abstract>Set the maximum factor for zoom and resize; value times content size. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a04642ff3171681aa5fd2c8c8291a7949</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a44c022cb6fed6fb1b0dff45e39ececb9</Anchor>
    <Abstract>Emitted by any Content subclass when its state has been modified. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af5fc9d76b3c2899937927c9cd65689d5</Anchor>
    <Abstract>Serialize for sending to Wall applications. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_members_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a6787ec5cdec336c8f25c5e9671977598</Anchor>
    <Abstract>Serialize for saving to an xml file. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_for_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a4c9c0b425c1197cdf34f2d62119b6f4d</Anchor>
    <Abstract>Loading from xml. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_for_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a8d0e71e26ce26abdd7b414dee1ca2c9e</Anchor>
    <Abstract>Saving to xml. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VisibilityHelper</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>VisibilityHelper</Scope>
    </TokenIdentifier>
    <Path>class_visibility_helper.html</Path>
    <Abstract>Helper to determine the visible parts of windows on the wall. </Abstract>
    <DeclaredIn>VisibilityHelper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallApplication</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WallApplication</Scope>
    </TokenIdentifier>
    <Path>class_wall_application.html</Path>
    <Abstract>The main application for Wall processes. </Abstract>
    <DeclaredIn>WallApplication.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallApplication</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallApplication</Scope>
    </TokenIdentifier>
    <Path>class_wall_application.html</Path>
    <Anchor>a8b3f627770c09407345a9dbbacb29979</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WallApplication.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~WallApplication</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallApplication</Scope>
    </TokenIdentifier>
    <Path>class_wall_application.html</Path>
    <Anchor>a8178cc81cec13ae323948ade5a76227a</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>WallApplication.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallConfiguration</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WallConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_wall_configuration.html</Path>
    <Abstract>The WallConfiguration class manages all the parameters needed to setup a Wall process. </Abstract>
    <DeclaredIn>WallConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallConfiguration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_wall_configuration.html</Path>
    <Anchor>a7e44c5d98df432d18c455bcae2decf3a</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WallConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHost</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_wall_configuration.html</Path>
    <Anchor>ad0378a8d4da77e3f8b6f8c5c3c9e9090</Anchor>
    <Abstract>Get the name of the host on which this process is running. </Abstract>
    <DeclaredIn>WallConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDisplay</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_wall_configuration.html</Path>
    <Anchor>a876b1979b3e3ad41c10df2e6edddcf55</Anchor>
    <Abstract>Get the display identifier in string format matching the current Linux DISPLAY env_var. </Abstract>
    <DeclaredIn>WallConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGlobalScreenIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_wall_configuration.html</Path>
    <Anchor>aeb7f6f8d57a52a8422bba9b52c6de22c</Anchor>
    <Abstract>Get the global index for the screen. </Abstract>
    <DeclaredIn>WallConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWindowPos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_wall_configuration.html</Path>
    <Anchor>a42dfeb2077a8f4f6a9cb2e3620fa759b</Anchor>
    <Abstract>Get the coordinates of the screen in pixel units. </Abstract>
    <DeclaredIn>WallConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProcessIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_wall_configuration.html</Path>
    <Anchor>a520529a16c97b2fcee43558fe356a827</Anchor>
    <Abstract>Get the index of the process. </Abstract>
    <DeclaredIn>WallConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Configuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a4f41abbe40c7e1345a325369c86aaaca</Anchor>
    <Abstract>Create a new configuration from an xml file. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Configuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a1226f87dc3c27be16eb16e53301eb2f3</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFilename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>ae479e2755c17646c271292b1f101e5da</Anchor>
    <Abstract>Get the filename passed to the constructor. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalScreenCountX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aca560ac9d3b46ef39444287ab4ba800f</Anchor>
    <Abstract>Get the total number of screens along the x axis. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalScreenCountY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a0f61e23c663322c808a33b8deeab198e</Anchor>
    <Abstract>Get the total number of screens along the y axis. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScreenWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a957a6e17a77943ca1469a599c4116987</Anchor>
    <Abstract>Get the width of a screen. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScreenHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>acac053b8e85c8e13dc1b24f829d70b25</Anchor>
    <Abstract>Get the height of a screen. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMullionWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aa4f921578b584411cab548d015e9ceba</Anchor>
    <Abstract>Get the padding nedded to compensate for the physical displays&amp;#39; bezel. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMullionHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aebf3438c6130ea0a50ed85d0ed2bde93</Anchor>
    <Abstract>Get the padding nedded to compensate for the physical displays&amp;#39; bezel. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aa7b4b828ea7bc8afcf2bed3857007eaa</Anchor>
    <Abstract>Get the total width of the DisplayWall, including the Mullion padding. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aba8af0457ab8769b5baab775ecebb8ba</Anchor>
    <Abstract>Get the total height of the DisplayWall, including the Mullion padding. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a3c3e0bc67693859c0450d4c5f4a79318</Anchor>
    <Abstract>Get the total size of the DisplayWall, including Mullion padding. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a1031736dbddf1becee943184afb27dda</Anchor>
    <Abstract>Get the aspect ratio of the DisplayWall, including Mullion padding. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScreenRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>ad9220206ff95419518e3b1eb6712b5d9</Anchor>
    <Abstract>Get the coordinates and dimensions of a screen in pixel units. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFullscreen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a3d38c54f965dce34f3839867a508779a</Anchor>
    <Abstract>Display the windows in fullscreen mode. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDouble</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a6eb03db6204ebfc4c5d2e02840427bd4</Anchor>
    <Abstract>Evaluate the querry and set the result to value on success. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_filename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>ae3544038cf10d426a6c8c4b3adc430c5</Anchor>
    <Abstract>The path to the xml configuration file. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallFromMasterChannel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WallFromMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_from_master_channel.html</Path>
    <Abstract>Receiving channel from the master application to the wall processes. </Abstract>
    <DeclaredIn>WallFromMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processMessages</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>WallFromMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_from_master_channel.html</Path>
    <Anchor>ac31fbc2ac8f416a651cd24b736af42f9</Anchor>
    <Abstract>Process messages until the QUIT message is received. </Abstract>
    <DeclaredIn>WallFromMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>received</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>WallFromMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_from_master_channel.html</Path>
    <Anchor>ab57f20a60ab6c83820e4344915a4f109</Anchor>
    <Abstract>Emitted when a displayGroup was recieved. </Abstract>
    <DeclaredIn>WallFromMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>received</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>WallFromMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_from_master_channel.html</Path>
    <Anchor>afb6a2af77cb53d4daff226e765de3338</Anchor>
    <Abstract>Emitted when new Options were recieved. </Abstract>
    <DeclaredIn>WallFromMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>received</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>WallFromMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_from_master_channel.html</Path>
    <Anchor>a32ac04eade034a8cd78c198a1b6decfd</Anchor>
    <Abstract>Emitted when new Markers were recieved. </Abstract>
    <DeclaredIn>WallFromMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>received</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>WallFromMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_from_master_channel.html</Path>
    <Anchor>a7e9d59550c96986e0f417d86ee08f053</Anchor>
    <Abstract>Emitted when a new PixelStream frame was recieved. </Abstract>
    <DeclaredIn>WallFromMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receivedQuit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>WallFromMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_from_master_channel.html</Path>
    <Anchor>af64048387bb958cc6678929489337ebc</Anchor>
    <Abstract>Emitted when the quit message was recieved. </Abstract>
    <DeclaredIn>WallFromMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallFromMasterChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallFromMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_from_master_channel.html</Path>
    <Anchor>a8f799726df2923051e9615728de8ed36</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WallFromMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMessageAvailable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallFromMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_from_master_channel.html</Path>
    <Anchor>a34a7629d9a71d873394d4bc51e687d04</Anchor>
    <Abstract>Check if a message is available from the Master process. </Abstract>
    <DeclaredIn>WallFromMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receiveMessage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallFromMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_from_master_channel.html</Path>
    <Anchor>a8ee7bd69b551972aa732743a116c7c04</Anchor>
    <Abstract>Receive a message. </Abstract>
    <DeclaredIn>WallFromMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallToMasterChannel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WallToMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_master_channel.html</Path>
    <Abstract>Sending channel from a wall process to the master application. </Abstract>
    <DeclaredIn>WallToMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendRequestFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>WallToMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_master_channel.html</Path>
    <Anchor>a74fb74cce59cd3a2bd40b1a87e0e418e</Anchor>
    <Abstract>Send a request frame message for the given pixel stream. </Abstract>
    <DeclaredIn>WallToMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendQuit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>WallToMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_master_channel.html</Path>
    <Anchor>a41e1681f9d52ad4debdcf1b41ade7fc5</Anchor>
    <Abstract>Send quit message to the master application to stop the receiver. </Abstract>
    <DeclaredIn>WallToMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallToMasterChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_master_channel.html</Path>
    <Anchor>a566e3c97ead7e0578a81e11d2d24adcd</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WallToMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallToWallChannel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Abstract>Communication channel between the Wall processes. </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallToWallChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>aba4b1dba030d03dde3e677ded75a688f</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRank</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>a3a7e61b7880b49c94d48b9d196104d3d</Anchor>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>globalSum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>a01ed3dfc790638a104438814b6302a1d</Anchor>
    <Abstract>Get the sum of the given local values across all processes. </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>ae2cde7fe2d3fcbc7afb2de6b009355f4</Anchor>
    <Abstract>Check if all processes are ready to perform a common action. </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>a933c06ef0a4c24468d2884fe14259d60</Anchor>
    <Abstract>Get the current timestamp, synchronized accross processes. </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synchronizeClock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>a10fc64c27e001a7399fba31effaba473</Anchor>
    <Abstract>Synchronize clock time across all processes. </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>globalBarrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>acc9fd1d36ca77ac667cde210b63b3354</Anchor>
    <Abstract>Block execution until all programs have reached the barrier. </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkVersion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>addd62ca5f6199f4ca0c31c23d282066d</Anchor>
    <Abstract>Check that all processes have the same version of an object. </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>electLeader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>a947d17d21cade981e36a68f5bc7407ad</Anchor>
    <Abstract>Elect a leader amongst wall processes. </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>broadcast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>a1849ff8865aea47796d4d121020668de</Anchor>
    <Abstract>Broadcast a timestamp. </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receiveTimestampBroadcast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>a3e9656b0a41c6d18d7e3775e7cc1aa5b</Anchor>
    <Abstract>Receive a timestamp broadcasted by broadcast(timestamp). </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallWindow</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WallWindow</Scope>
    </TokenIdentifier>
    <Path>class_wall_window.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallWindow</Scope>
    </TokenIdentifier>
    <Path>class_wall_window.html</Path>
    <Anchor>a49ca521f1e4e8c9cbee074be4598bd83</Anchor>
    <Abstract>Create a wall window. </Abstract>
    <DeclaredIn>WallWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDisplayGroupRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallWindow</Scope>
    </TokenIdentifier>
    <Path>class_wall_window.html</Path>
    <Anchor>a7353021c5005a2bc9277f14f11fb83db</Anchor>
    <DeclaredIn>WallWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>syncAndRender</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallWindow</Scope>
    </TokenIdentifier>
    <Path>class_wall_window.html</Path>
    <Anchor>af06bf1a1e1be548ccb4fd05ba36db817</Anchor>
    <Abstract>Update and synchronize scene objects and trigger frame rendering. </Abstract>
    <DeclaredIn>WallWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRenderOptions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallWindow</Scope>
    </TokenIdentifier>
    <Path>class_wall_window.html</Path>
    <Anchor>ad5f47bfad5bbab58dec6e0d951d8d16c</Anchor>
    <Abstract>Set new render options. </Abstract>
    <DeclaredIn>WallWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDisplayGroup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallWindow</Scope>
    </TokenIdentifier>
    <Path>class_wall_window.html</Path>
    <Anchor>ae56d5687922a4769e3382c84aaab78dd</Anchor>
    <Abstract>Set new display group. </Abstract>
    <DeclaredIn>WallWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMarkers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallWindow</Scope>
    </TokenIdentifier>
    <Path>class_wall_window.html</Path>
    <Anchor>adbd10915534ee8eecdfd476a68f34c38</Anchor>
    <Abstract>Set new touchpoint&amp;#39;s markers. </Abstract>
    <DeclaredIn>WallWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDataProvider</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallWindow</Scope>
    </TokenIdentifier>
    <Path>class_wall_window.html</Path>
    <Anchor>a1c9043e6929bf4bc93bdf6341aac8f2e</Anchor>
    <DeclaredIn>WallWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>engine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallWindow</Scope>
    </TokenIdentifier>
    <Path>class_wall_window.html</Path>
    <Anchor>a6b9c7e14d424167dd53bc7e935c268a4</Anchor>
    <DeclaredIn>WallWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rootObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallWindow</Scope>
    </TokenIdentifier>
    <Path>class_wall_window.html</Path>
    <Anchor>ab8e15dff962c214995e15e9952b47d3f</Anchor>
    <DeclaredIn>WallWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWallChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallWindow</Scope>
    </TokenIdentifier>
    <Path>class_wall_window.html</Path>
    <Anchor>a9cb18d7b3d3d50169d9cafd15b4dcdb1</Anchor>
    <DeclaredIn>WallWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOpenGLContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallWindow</Scope>
    </TokenIdentifier>
    <Path>class_wall_window.html</Path>
    <Anchor>ae23003600f8aa70be18c016e69e838a4</Anchor>
    <DeclaredIn>WallWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRenderControl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallWindow</Scope>
    </TokenIdentifier>
    <Path>class_wall_window.html</Path>
    <Anchor>a2930b61e80f4ea2041e145f3d4a65747</Anchor>
    <DeclaredIn>WallWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUploader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallWindow</Scope>
    </TokenIdentifier>
    <Path>class_wall_window.html</Path>
    <Anchor>a0fb09948000db9164532ee5d3054270d</Anchor>
    <DeclaredIn>WallWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebbrowserContent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WebbrowserContent</Scope>
    </TokenIdentifier>
    <Path>class_webbrowser_content.html</Path>
    <Abstract>The Webbrowser is a PixelStream extended with history navigation. </Abstract>
    <DeclaredIn>WebbrowserContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebbrowserContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebbrowserContent</Scope>
    </TokenIdentifier>
    <Path>class_webbrowser_content.html</Path>
    <Anchor>a1b60ba36744bc8ed16badb076631d24a</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WebbrowserContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebbrowserContent</Scope>
    </TokenIdentifier>
    <Path>class_webbrowser_content.html</Path>
    <Anchor>a6a7371e6daf4866b315dbda94dcc445e</Anchor>
    <Abstract>Get the content type. </Abstract>
    <DeclaredIn>WebbrowserContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFixedAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebbrowserContent</Scope>
    </TokenIdentifier>
    <Path>class_webbrowser_content.html</Path>
    <Anchor>a3350594537be9a3ed268a23f2d0028ee</Anchor>
    <DeclaredIn>WebbrowserContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebbrowserContent</Scope>
    </TokenIdentifier>
    <Path>class_webbrowser_content.html</Path>
    <Anchor>a38240c8296eee08b94a07dc5a63ec6dd</Anchor>
    <Abstract>Get the index of the page navigation history (currently fixed). </Abstract>
    <DeclaredIn>WebbrowserContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPageCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebbrowserContent</Scope>
    </TokenIdentifier>
    <Path>class_webbrowser_content.html</Path>
    <Anchor>a61edc8f3e2f42254abdb24287fd90448</Anchor>
    <Abstract>Get the number of pages in the navigation history (currently fixed). </Abstract>
    <DeclaredIn>WebbrowserContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamContent</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_content.html</Path>
    <Anchor>a2a0d5fbde3ac80753ad2e3e42a07327e</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>PixelStreamContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMetadata</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamContent</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_content.html</Path>
    <Anchor>af1fde82b270db2ed217ec6542924c3e4</Anchor>
    <Abstract>Content method overload, not used for PixelStreams. </Abstract>
    <DeclaredIn>PixelStreamContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasEventReceivers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamContent</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_content.html</Path>
    <Anchor>a0e40610bb7d62536fcce4a31f268098e</Anchor>
    <Abstract>Does this content already have registered EventReceiver(s) </Abstract>
    <DeclaredIn>PixelStreamContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>incrementEventReceiverCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamContent</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_content.html</Path>
    <Anchor>a5109f320daef0181de2110d271cd545c</Anchor>
    <Abstract>Register to receive events on this content. </Abstract>
    <DeclaredIn>PixelStreamContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInteractionPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamContent</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_content.html</Path>
    <Anchor>ad9c2f1c69fded0c63eecf35a9bdabd84</Anchor>
    <DeclaredIn>PixelStreamContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Content</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ae491288d2efce7fa63d3e777580630b4</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a887d2b952cd824d70f64106ae048a5f8</Anchor>
    <Abstract>Get the content URI. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>aa4681ca97acea99fbe88e20f0e664bc0</Anchor>
    <Abstract>Get the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a8cf06fbd623453fd2aa349d91ebbca3b</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPreferredDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a508b7f5c09ffa4f5a1a7f3e89cbec489</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a70fbc6b9c9dfd95c426819a1c14464f9</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a1b7a6f49f447c124b497b0a844fd6ea6</Anchor>
    <Abstract>Set the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a113bd8ba35685e77bcf8a8650fab636a</Anchor>
    <Abstract>Get the aspect ratio. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a461bb62d3989d0eb5b4d1f824e7a66c0</Anchor>
    <Abstract>Get the zoom rectangle in normalized coordinates, [0,0,1,1] default. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0f3e5f9203b97450e3856d39a12807e3</Anchor>
    <Abstract>Set the zoom rectangle in normalized coordinates. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ad5094c72f8c6d7ec5390108534804c1f</Anchor>
    <Abstract>Resets the zoom to [0,0,1,1]. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getActions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a7ae29df27d493e89dd7dccd775efbff8</Anchor>
    <Abstract>Get the actions from QML. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getQmlControls</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af64c08ff1aafa0206bf178a6e4bfa634</Anchor>
    <Abstract>Get content-specific qml controls file (default: empty). </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKeyboardState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0e10f71c92fe8434a9b40183cb7239a0</Anchor>
    <Abstract>Get the keyboard state from QML. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSizeHints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a70292d652fb37ee21640801fce53c186</Anchor>
    <Abstract>Set optional size hints to constrain resize/scale and 1:1 size. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCaptureInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a7e7c36edf987322675eea81f27e8017d</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCaptureInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a18477814caa57d8f9aa0330fd19487ab</Anchor>
    <Abstract>Tell the content to capture interaction (only for Policy::AUTO). </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a44c022cb6fed6fb1b0dff45e39ececb9</Anchor>
    <Abstract>Emitted by any Content subclass when its state has been modified. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a87465efbfaf4e2e5b0a5e7e8af0985f2</Anchor>
    <Abstract>Set the maximum factor for zoom and resize; value times content size. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a04642ff3171681aa5fd2c8c8291a7949</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af5fc9d76b3c2899937927c9cd65689d5</Anchor>
    <Abstract>Serialize for sending to Wall applications. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_members_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a6787ec5cdec336c8f25c5e9671977598</Anchor>
    <Abstract>Serialize for saving to an xml file. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_for_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a4c9c0b425c1197cdf34f2d62119b6f4d</Anchor>
    <Abstract>Loading from xml. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize_for_xml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a8d0e71e26ce26abdd7b414dee1ca2c9e</Anchor>
    <Abstract>Saving to xml. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebbrowserWidget</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WebbrowserWidget</Scope>
    </TokenIdentifier>
    <Path>class_webbrowser_widget.html</Path>
    <Abstract>Dialog for opening a new webbrowser window. </Abstract>
    <DeclaredIn>WebbrowserWidget.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>WebbrowserWidget</Scope>
    </TokenIdentifier>
    <Path>class_webbrowser_widget.html</Path>
    <Anchor>a4c3385da8ba9044cb9cffce73103adea</Anchor>
    <Abstract>Store the new settings and close the widget. </Abstract>
    <DeclaredIn>WebbrowserWidget.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openWebBrowser</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>WebbrowserWidget</Scope>
    </TokenIdentifier>
    <Path>class_webbrowser_widget.html</Path>
    <Anchor>ab0c2a8efb418af56a12d63671a963d4f</Anchor>
    <Abstract>Emitted when users want to open a webbrowser. </Abstract>
    <DeclaredIn>WebbrowserWidget.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebbrowserWidget</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebbrowserWidget</Scope>
    </TokenIdentifier>
    <Path>class_webbrowser_widget.html</Path>
    <Anchor>a511515def8d79203579e13ca354edbe9</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WebbrowserWidget.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebkitAuthenticationHelper</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WebkitAuthenticationHelper</Scope>
    </TokenIdentifier>
    <Path>class_webkit_authentication_helper.html</Path>
    <Abstract>Handle HTTP authentication requests for a QWebView. </Abstract>
    <DeclaredIn>WebkitAuthenticationHelper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebkitAuthenticationHelper</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebkitAuthenticationHelper</Scope>
    </TokenIdentifier>
    <Path>class_webkit_authentication_helper.html</Path>
    <Anchor>a4566e282a6780eeb97b84b4d6f88930d</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WebkitAuthenticationHelper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebkitHtmlSelectReplacer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WebkitHtmlSelectReplacer</Scope>
    </TokenIdentifier>
    <Path>class_webkit_html_select_replacer.html</Path>
    <Abstract>Substitutes all &lt;select&gt; elements on a webpage by equivalent HTML lists. </Abstract>
    <DeclaredIn>WebkitHtmlSelectReplacer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebkitHtmlSelectReplacer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebkitHtmlSelectReplacer</Scope>
    </TokenIdentifier>
    <Path>class_webkit_html_select_replacer.html</Path>
    <Anchor>aeee70417fc142e48bb07331a33963d00</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WebkitHtmlSelectReplacer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replaceAllSelectElements</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebkitHtmlSelectReplacer</Scope>
    </TokenIdentifier>
    <Path>class_webkit_html_select_replacer.html</Path>
    <Anchor>a6a8236e75946bb10abca9b8683a9b117</Anchor>
    <Abstract>Replace all &lt;select&gt; elements by Html equivalents. </Abstract>
    <DeclaredIn>WebkitHtmlSelectReplacer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebkitPixelStreamer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WebkitPixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_webkit_pixel_streamer.html</Path>
    <Abstract>Stream webpages with user interaction support. </Abstract>
    <DeclaredIn>WebkitPixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>WebkitPixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_webkit_pixel_streamer.html</Path>
    <Anchor>a2c07bd48b58b94f34097d19d9c74fae1</Anchor>
    <Abstract>Process an Event. </Abstract>
    <DeclaredIn>WebkitPixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Anchor>a3a59b36c4477a063e71de6a95b6a97c0</Anchor>
    <Abstract>Process an Event. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebkitPixelStreamer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebkitPixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_webkit_pixel_streamer.html</Path>
    <Anchor>a45817a0fa98dfa974a04f60105c3e9ba</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WebkitPixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~WebkitPixelStreamer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebkitPixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_webkit_pixel_streamer.html</Path>
    <Anchor>aa0a741712313a0963f69bc28cae292e3</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>WebkitPixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebkitPixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_webkit_pixel_streamer.html</Path>
    <Anchor>a314e66c210f8d1ae19b9b36e26d4f59c</Anchor>
    <Abstract>Get the size of the webpage images. </Abstract>
    <DeclaredIn>WebkitPixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUrl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebkitPixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_webkit_pixel_streamer.html</Path>
    <Anchor>ad69dd3aadf96096e1b81360584af65b7</Anchor>
    <Abstract>Open a webpage. </Abstract>
    <DeclaredIn>WebkitPixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebkitPixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_webkit_pixel_streamer.html</Path>
    <Anchor>a24fa22352cd4b4e297889357ad3e0b6d</Anchor>
    <Abstract>Get the QWebView used internally by the streamer. </Abstract>
    <DeclaredIn>WebkitPixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Anchor>ac397a643a355ec36446edb8a55e52c81</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PixelStreamer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Anchor>ac9d996a5dadc05b54dcfa0824eb1a573</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>imageUpdated</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Anchor>ae9f831bd8e004763f4e2fd05b17a21a1</Anchor>
    <Abstract>Emit this signal after a new image has been generated. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ZoomHelper</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ZoomHelper</Scope>
    </TokenIdentifier>
    <Path>class_zoom_helper.html</Path>
    <Abstract>A helper class to convert zoom rectangle to and from scene coordinates. </Abstract>
    <DeclaredIn>ZoomHelper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ZoomInteractionDelegate</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ZoomInteractionDelegate</Scope>
    </TokenIdentifier>
    <Path>class_zoom_interaction_delegate.html</Path>
    <Abstract>Handle user interaction with a zoomable content. </Abstract>
    <DeclaredIn>ZoomInteractionDelegate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ZoomInteractionDelegate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ZoomInteractionDelegate</Scope>
    </TokenIdentifier>
    <Path>class_zoom_interaction_delegate.html</Path>
    <Anchor>a32d5bd09fd94077bbc2625d73ebf0966</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ZoomInteractionDelegate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ZoomInteractionDelegate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ZoomInteractionDelegate</Scope>
    </TokenIdentifier>
    <Path>class_zoom_interaction_delegate.html</Path>
    <Anchor>af502767e577191940a82bd0d03962908</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>ZoomInteractionDelegate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>adjustZoomToContentAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ZoomInteractionDelegate</Scope>
    </TokenIdentifier>
    <Path>class_zoom_interaction_delegate.html</Path>
    <Anchor>ad860fe134957a969f18a0a38e4ab4751</Anchor>
    <Abstract>Adjust the zoom of the window to the aspect ratio of the content. </Abstract>
    <DeclaredIn>ZoomInteractionDelegate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentInteractionDelegate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentInteractionDelegate</Scope>
    </TokenIdentifier>
    <Path>class_content_interaction_delegate.html</Path>
    <Anchor>a71cf944be02e2b4ca86a76273f026616</Anchor>
    <Abstract>Construct a default interaction delegate that does nothing. </Abstract>
    <DeclaredIn>ContentInteractionDelegate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ContentInteractionDelegate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentInteractionDelegate</Scope>
    </TokenIdentifier>
    <Path>class_content_interaction_delegate.html</Path>
    <Anchor>acb5fa802e1b625e1c24b1f59ee15a784</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>ContentInteractionDelegate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tide::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Abstract>Information about the current TideCore version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>a8839ec9495649dc52b6f1cbc3e6e48f8</Anchor>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>ae38ec59f6d1c305d5737a21e3e574394</Anchor>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>ac9dd21fa66e56caa86f6a41dcbca2ba4</Anchor>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>a803e009bd02d601bc708e9ac276e16f1</Anchor>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>a5ac34234a70f79244282a4ddb09a2ac9</Anchor>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>afdf47bdc2db574072947ff605eb4afc6</Anchor>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>a667071293731b328a5c44b574e794680</Anchor>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>a6db9588b945925020747cffdfc464db7</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>a8839ec9495649dc52b6f1cbc3e6e48f8</Anchor>
    <DeclaredIn>master/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>ae38ec59f6d1c305d5737a21e3e574394</Anchor>
    <DeclaredIn>master/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>ac9dd21fa66e56caa86f6a41dcbca2ba4</Anchor>
    <DeclaredIn>master/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>a803e009bd02d601bc708e9ac276e16f1</Anchor>
    <DeclaredIn>master/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>a5ac34234a70f79244282a4ddb09a2ac9</Anchor>
    <DeclaredIn>master/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>afdf47bdc2db574072947ff605eb4afc6</Anchor>
    <DeclaredIn>master/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>a667071293731b328a5c44b574e794680</Anchor>
    <DeclaredIn>master/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>a6db9588b945925020747cffdfc464db7</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>master/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>a8839ec9495649dc52b6f1cbc3e6e48f8</Anchor>
    <DeclaredIn>wall/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>ae38ec59f6d1c305d5737a21e3e574394</Anchor>
    <DeclaredIn>wall/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>ac9dd21fa66e56caa86f6a41dcbca2ba4</Anchor>
    <DeclaredIn>wall/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>a803e009bd02d601bc708e9ac276e16f1</Anchor>
    <DeclaredIn>wall/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>a5ac34234a70f79244282a4ddb09a2ac9</Anchor>
    <DeclaredIn>wall/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>afdf47bdc2db574072947ff605eb4afc6</Anchor>
    <DeclaredIn>wall/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>a667071293731b328a5c44b574e794680</Anchor>
    <DeclaredIn>wall/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>a6db9588b945925020747cffdfc464db7</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>wall/version.h</DeclaredIn>
  </Token>
</Tokens>
