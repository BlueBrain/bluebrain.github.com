<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>documentation</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>documentation.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dc::Event</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>dc::Event</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_event.html</Path>
    <Abstract>A user event within a window.</Abstract>
    <DeclaredIn>Event.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Event</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dc::Event</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_event.html</Path>
    <Anchor>a5532a2a1296147bfe17b51f3d6c7759d</Anchor>
    <Abstract>Construct a new event.</Abstract>
    <DeclaredIn>Event.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::Event</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_event.html</Path>
    <Anchor>aff9f3fba4273df98e24bc4501e462052</Anchor>
    <Abstract>The type of event.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mouseX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::Event</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_event.html</Path>
    <Anchor>a7190bb053d1ab320931292ef9e6d7494</Anchor>
    <Abstract>Normalized X mouse/touch position relative to the window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mouseY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::Event</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_event.html</Path>
    <Anchor>a0321ea9df556ac4df167cee47bbc4c6d</Anchor>
    <Abstract>Normalized Y mouse/touch position relative to the window.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dx</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::Event</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_event.html</Path>
    <Anchor>aa0f30907813296bcbc85b08df1f69866</Anchor>
    <Abstract>Normalized horizontal delta for scroll events / delta in pixels for wheel events.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::Event</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_event.html</Path>
    <Anchor>a59ac888e981252414fcf1d059a17c694</Anchor>
    <Abstract>Normalized vertical delta for scroll events / delta in pixels for wheel events.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mouseLeft</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::Event</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_event.html</Path>
    <Anchor>a1088502f97256df771d144d0957eb715</Anchor>
    <Abstract>The state of the left mouse button (pressed=true)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mouseRight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::Event</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_event.html</Path>
    <Anchor>a48762f39624f9fa50bec4de5a665024a</Anchor>
    <Abstract>The state of the right mouse button (pressed=true)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mouseMiddle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::Event</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_event.html</Path>
    <Anchor>ada35a5b9ac5066384f5c80b7993b2f44</Anchor>
    <Abstract>The state of the middle mouse button (pressed=true)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>key</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::Event</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_event.html</Path>
    <Anchor>a7d6deb3e2ca180dd5875381b615d90bb</Anchor>
    <Abstract>The key code, see QKeyEvent::key()</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modifiers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::Event</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_event.html</Path>
    <Anchor>aae053ae284c862424d8b517486fdfe1a</Anchor>
    <Abstract>The keyboard modifiers, see QKeyEvent::modifiers()</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>text</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::Event</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_event.html</Path>
    <Anchor>a98f31080fbc430b2cca2f8f54243f2a3</Anchor>
    <Abstract>Carries unicode for key, see QKeyEvent::text()</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serializedSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::Event</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_event.html</Path>
    <Anchor>a298cbd73dabcb546b07b9f94510280f3</Anchor>
    <Abstract>The size of the QDataStream serialized output.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dc::ImageWrapper</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>dc::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_image_wrapper.html</Path>
    <Abstract>A simple wrapper around an image data buffer.</Abstract>
    <DeclaredIn>ImageWrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImageWrapper</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dc::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_image_wrapper.html</Path>
    <Anchor>a4e74a4eb33b52ed4e6341519d369b497</Anchor>
    <Abstract>ImageWrapper constructor.</Abstract>
    <DeclaredIn>ImageWrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBytesPerPixel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dc::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_image_wrapper.html</Path>
    <Anchor>a79ea492c2ba7342bfb850feb7de6f55f</Anchor>
    <DeclaredIn>ImageWrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBufferSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dc::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_image_wrapper.html</Path>
    <Anchor>a677b3f30d4b910e07d212836d25b66a9</Anchor>
    <DeclaredIn>ImageWrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapYAxis</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dc::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_image_wrapper.html</Path>
    <Anchor>acfada442a3f3d12d69776297d41895e7</Anchor>
    <Abstract>Swap an image along the Y axis.</Abstract>
    <DeclaredIn>ImageWrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_image_wrapper.html</Path>
    <Anchor>adfdc4737d4db9589c33c6f0cfdb38f37</Anchor>
    <Abstract>Pointer to the image data of size getBufferSize().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pixelFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_image_wrapper.html</Path>
    <Anchor>a27de8777a0c9d9295bc0a3251f0d870e</Anchor>
    <Abstract>The pixel format describing the arrangement of the data buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_image_wrapper.html</Path>
    <Anchor>af24fe50f9dd524e4a51e5af98bec4fbb</Anchor>
    <Abstract>The image width in pixels.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>height</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_image_wrapper.html</Path>
    <Anchor>a57fc5c3e7deb83c2ec4f90223450d31d</Anchor>
    <Abstract>The image height in pixels.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>x</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_image_wrapper.html</Path>
    <Anchor>ae8db438f08b048740c1672339f890e33</Anchor>
    <Abstract>The X coordinate.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>y</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_image_wrapper.html</Path>
    <Anchor>a69de07322f099d52ec3834f32e503d44</Anchor>
    <Abstract>The Y coordinate.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compressionPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_image_wrapper.html</Path>
    <Anchor>a9d5596679536f8964e1eece05af5b45e</Anchor>
    <Abstract>Is the image to be compressed (default: auto).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compressionQuality</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_image_wrapper.html</Path>
    <Anchor>a4ec4d39657ac412a488abd235cf838e2</Anchor>
    <Abstract>Compression quality (0 worst, 100 best, default: 75).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dc::Stream</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>dc::Stream</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_stream.html</Path>
    <Abstract>Stream visual data to a DisplayCluster application.</Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Stream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dc::Stream</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_stream.html</Path>
    <Anchor>aeb1cf8a318b10c6d403214c4b035609a</Anchor>
    <Abstract>Open a new connection to the DisplayCluster application.</Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Stream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dc::Stream</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_stream.html</Path>
    <Anchor>a9a177844b5eef327a7f8f89b1d755478</Anchor>
    <Abstract>Destruct the Stream, closing the connection.</Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isConnected</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dc::Stream</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_stream.html</Path>
    <Anchor>a59ac6a56e3eae93dac523c4603546dc3</Anchor>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dc::Stream</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_stream.html</Path>
    <Anchor>ad6cb75f591cf3b29c9c94f97ea86363b</Anchor>
    <Abstract>Send an image.</Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finishFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dc::Stream</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_stream.html</Path>
    <Anchor>a377abac35a6617efe83a2636b1a11d55</Anchor>
    <Abstract>Notify that all the images for this frame have been sent.</Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerForEvents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dc::Stream</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_stream.html</Path>
    <Anchor>a8dd0396bfea54ea4c3edc552bc4d80b1</Anchor>
    <Abstract>Register to receive Events.</Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRegisteredForEvents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dc::Stream</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_stream.html</Path>
    <Anchor>a8779aff7933472c3641410d5f77f644c</Anchor>
    <Abstract>Is this stream registered to receive events.</Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDescriptor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dc::Stream</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_stream.html</Path>
    <Anchor>acc308d7ba3dd55502262f7c9d619dbb0</Anchor>
    <Abstract>Get the native descriptor for the data stream.</Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dc::Stream</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_stream.html</Path>
    <Anchor>a6de23ff5b08d761493c60dab72d3a176</Anchor>
    <Abstract>Check if a new Event is available.</Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dc::Stream</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_stream.html</Path>
    <Anchor>a8777d8ae17b6c3f1aa8f3387ddee1edd</Anchor>
    <Abstract>Get the next Event.</Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
</Tokens>
