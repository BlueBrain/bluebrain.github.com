var annotated =
[
    [ "attribute", "structattribute.html", "structattribute" ],
    [ "attribute_value", "unionattribute__value.html", "unionattribute__value" ],
    [ "attributed_data", "structattributed__data.html", "structattributed__data" ],
    [ "attributes", "structattributes.html", "structattributes" ],
    [ "avl_node", "structavl__node.html", "structavl__node" ],
    [ "avl_tree", "structavl__tree.html", "structavl__tree" ],
    [ "bi_node", "structbi__node.html", "structbi__node" ],
    [ "bi_tree", "structbi__tree.html", "structbi__tree" ],
    [ "branch", "structbranch.html", "structbranch" ],
    [ "buffer", "structbuffer.html", "structbuffer" ],
    [ "call", "structcall.html", "structcall" ],
    [ "cushion", "structcushion.html", "structcushion" ],
    [ "cut", "structcut.html", "structcut" ],
    [ "cut_branch", "structcut__branch.html", "structcut__branch" ],
    [ "cut_call", "structcut__call.html", "structcut__call" ],
    [ "cut_child", "structcut__child.html", "structcut__child" ],
    [ "cut_cushion", "structcut__cushion.html", "structcut__cushion" ],
    [ "cut_edge", "structcut__edge.html", "structcut__edge" ],
    [ "cut_forest", "structcut__forest.html", "structcut__forest" ],
    [ "cut_jungle", "structcut__jungle.html", "structcut__jungle" ],
    [ "cut_knot", "structcut__knot.html", "structcut__knot" ],
    [ "cut_multiscale", "structcut__multiscale.html", "structcut__multiscale" ],
    [ "cut_parent", "structcut__parent.html", "structcut__parent" ],
    [ "cut_rope", "structcut__rope.html", "structcut__rope" ],
    [ "cut_tangle", "structcut__tangle.html", "structcut__tangle" ],
    [ "cut_vertex", "structcut__vertex.html", "structcut__vertex" ],
    [ "cut_vine", "structcut__vine.html", "structcut__vine" ],
    [ "dms_value", "uniondms__value.html", "uniondms__value" ],
    [ "edge", "structedge.html", "structedge" ],
    [ "forest", "structforest.html", "structforest" ],
    [ "ibarrier", "structibarrier.html", "structibarrier" ],
    [ "int_node", "structint__node.html", "structint__node" ],
    [ "jungle", "structjungle.html", "structjungle" ],
    [ "knot", "structknot.html", "structknot" ],
    [ "ladder", "structladder.html", "structladder" ],
    [ "link", "structlink.html", "structlink" ],
    [ "message", "structmessage.html", "structmessage" ],
    [ "message_passer", "structmessage__passer.html", "structmessage__passer" ],
    [ "migrating_vertex", "structmigrating__vertex.html", "structmigrating__vertex" ],
    [ "migration", "structmigration.html", "structmigration" ],
    [ "migration_neighbor", "structmigration__neighbor.html", "structmigration__neighbor" ],
    [ "ms_value", "unionms__value.html", "unionms__value" ],
    [ "multiscale", "structmultiscale.html", "structmultiscale" ],
    [ "needle", "structneedle.html", "structneedle" ],
    [ "neighbor", "structneighbor.html", "structneighbor" ],
    [ "neighbors", "structneighbors.html", "structneighbors" ],
    [ "packed_attribute", "structpacked__attribute.html", "structpacked__attribute" ],
    [ "packed_attributes", "structpacked__attributes.html", "structpacked__attributes" ],
    [ "packed_edge", "structpacked__edge.html", "structpacked__edge" ],
    [ "packed_local_parent", "structpacked__local__parent.html", "structpacked__local__parent" ],
    [ "packed_vertex", "structpacked__vertex.html", "structpacked__vertex" ],
    [ "pin", "structpin.html", "structpin" ],
    [ "pin_head", "structpin__head.html", "structpin__head" ],
    [ "pin_heads", "structpin__heads.html", "structpin__heads" ],
    [ "pin_or_head", "unionpin__or__head.html", "unionpin__or__head" ],
    [ "rope", "structrope.html", "structrope" ],
    [ "rung", "structrung.html", "structrung" ],
    [ "tangle", "structtangle.html", "structtangle" ],
    [ "vertex", "structvertex.html", "structvertex" ],
    [ "vertex_call", "structvertex__call.html", "structvertex__call" ],
    [ "vertex_callback", "structvertex__callback.html", "structvertex__callback" ],
    [ "vertex_child", "structvertex__child.html", "structvertex__child" ],
    [ "vine", "structvine.html", "structvine" ],
    [ "word", "unionword.html", "unionword" ]
];