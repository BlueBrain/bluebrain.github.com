digraph G
{
  edge [fontname="FreeSans",fontsize="10",labelfontname="FreeSans",labelfontsize="10"];
  node [fontname="FreeSans",fontsize="10",shape=record];
  Node1 [label="{co::Node\n||+ Node()\l+ getNodeID()\l+ serialize()\l+ deserialize()\l+ getLastReceiveTime()\l+ getType()\l+ operator==()\l+ isReachable()\l+ isConnected()\l+ isClosed()\l+ isClosing()\l+ isListening()\l+ isLocal()\l+ addConnectionDescription()\l+ removeConnectionDescription()\l+ getConnectionDescriptions()\l+ getConnection()\l+ getMulticast()\l+ useMulticast()\l+ send()\l+ send()\l+ send()\l+ send()\l+ multicast()\l# ~Node()\l# createNode()\l* LocalNode\l* _addMulticast()\l* _removeMulticast()\l* _connectMulticast()\l* _connectMulticast()\l* _setListening()\l* _setClosing()\l* _setClosed()\l* _connect()\l* _disconnect()\l* _setLastReceive()\l* operator==()\l* isReachable()\l* isConnected()\l* isClosed()\l* isClosing()\l* isListening()\l* isLocal()\l* addConnectionDescription()\l* removeConnectionDescription()\l* getConnectionDescriptions()\l* getConnection()\l* getMulticast()\l* useMulticast()\l* send()\l* send()\l* send()\l* send()\l* multicast()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node2 [label="{co::Dispatcher\n||+ Dispatcher()\l+ Dispatcher()\l+ ~Dispatcher()\l+ operator=()\l+ dispatchCommand()\l# registerCommand()\l# _cmdUnknown()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classco_1_1Dispatcher.html",tooltip="A helper class providing command packet dispatch functionality to networked objects."];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node3 [label="{co::LocalNode\n||+ LocalNode()\l+ ~LocalNode()\l+ ackRequest()\l+ ping()\l+ pingIdleNodes()\l+ setAffinity()\l+ initLocal()\l+ listen()\l+ listen()\l+ close()\l+ exitLocal()\l+ connect()\l+ connect()\l+ disconnect()\l+ disableInstanceCache()\l+ expireInstanceData()\l+ enableSendOnRegister()\l+ disableSendOnRegister()\l+ registerObject()\l+ deregisterObject()\l+ mapObject()\l+ mapObject()\l+ mapObjectNB()\l+ mapObjectNB()\land 7 more...\l+ getNode()\l+ getNodes()\l+ getCommandThreadQueue()\l+ inCommandThread()\l+ getTime64()\l+ addListener()\l+ addListener()\l+ removeListeners()\l+ flushCommands()\l+ cloneCommand()\l+ allocCommand()\l+ dispatchCommand()\l+ acquireSendToken()\l+ releaseSendToken()\l+ getZeroconf()\l# connect()\l# notifyDisconnect()\l* initLocal()\l* listen()\l* listen()\l* close()\l* exitLocal()\l* connect()\l* connect()\l* disconnect()\l* disableInstanceCache()\l* expireInstanceData()\l* enableSendOnRegister()\l* disableSendOnRegister()\l* registerObject()\l* deregisterObject()\l* mapObject()\l* mapObject()\l* mapObjectNB()\l* mapObjectNB()\land 7 more...\l* getNode()\l* getNodes()\l* getCommandThreadQueue()\l* inCommandThread()\l* getTime64()\l* addListener()\l* addListener()\l* removeListeners()\l* flushCommands()\l* cloneCommand()\l* allocCommand()\l* dispatchCommand()\l* acquireSendToken()\l* releaseSendToken()\l* getZeroconf()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classco_1_1LocalNode.html",tooltip="Specialization of a local node."];
}
