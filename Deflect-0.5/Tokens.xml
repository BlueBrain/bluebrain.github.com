<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>DEFLECT_VERSION_MAJOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>ae3eebd8e944254875015072f4cb7f37f</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFLECT_VERSION_MINOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>ab48339917d1b2a14e87e49a8057b726a</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFLECT_VERSION_PATCH</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>adb67443327ce82101d0b9b9bc14f4ff7</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFLECT_VERSION_REVISION</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a1ab1cd6de5387ddfac49de020e6ae99a</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFLECT_VERSION_ABI</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>aab0ced3f934c8c127ad7678102776039</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFLECT_VERSION_GT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a45d6a7b7b556de87f4bf82f87c2604cd</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFLECT_VERSION_GE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>aea712840105306381b2796df55f45e2a</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFLECT_VERSION_LT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a48a9242c7729eac8473e59e05b86ec4d</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEFLECT_VERSION_LE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>af6790bb5cc318de25c30bfa96558913b</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::AbstractCommandHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::AbstractCommandHandler</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_abstract_command_handler.html</Path>
    <Abstract>The base interface for Command handlers. </Abstract>
    <DeclaredIn>AbstractCommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~AbstractCommandHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::AbstractCommandHandler</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_abstract_command_handler.html</Path>
    <Anchor>a3c3ec9cddf6c56b68c5e26f02895e6ae</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>AbstractCommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::AbstractCommandHandler</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_abstract_command_handler.html</Path>
    <Anchor>af1069082a22e3ef896c6048fe2fa4744</Anchor>
    <Abstract>Get the type of commands handled by the implementation. </Abstract>
    <DeclaredIn>AbstractCommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::AbstractCommandHandler</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_abstract_command_handler.html</Path>
    <Anchor>a1a19f68a169f1a93c430ab1e64ab7988</Anchor>
    <Abstract>Handle a Command. </Abstract>
    <DeclaredIn>AbstractCommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::Command</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::Command</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_command.html</Path>
    <Abstract>String format, prefix-base network command. </Abstract>
    <DeclaredIn>Command.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Command</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Command</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_command.html</Path>
    <Anchor>a6cf56ff0019c33ee20e51e3df06d7b9f</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Command.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Command</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Command</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_command.html</Path>
    <Anchor>a879a36df1bc3962ef234ec8d8b85d715</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Command.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Command</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_command.html</Path>
    <Anchor>a331fa597af9557953cb3598a12569bda</Anchor>
    <Abstract>Get the command type. </Abstract>
    <DeclaredIn>Command.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getArguments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Command</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_command.html</Path>
    <Anchor>a759ff964232cf91ae16efe000ad0d522</Anchor>
    <Abstract>Get the command arguments. </Abstract>
    <DeclaredIn>Command.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCommand</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Command</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_command.html</Path>
    <Anchor>adc163f5bfd533ff42304e291524f510a</Anchor>
    <Abstract>Get the command in string format, typically for sending over the network. </Abstract>
    <DeclaredIn>Command.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Command</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_command.html</Path>
    <Anchor>ad36e96184ddb8498e7c09d5ec32c6458</Anchor>
    <Abstract>Check if the Command is valid (i.e. </Abstract>
    <DeclaredIn>Command.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::CommandHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::CommandHandler</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_command_handler.html</Path>
    <Abstract>A command handler for String formatted network commands. </Abstract>
    <DeclaredIn>CommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>deflect::CommandHandler</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_command_handler.html</Path>
    <Anchor>aece151c5e8ed286763695f40e466f471</Anchor>
    <Abstract>Process a command. </Abstract>
    <DeclaredIn>CommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommandHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::CommandHandler</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_command_handler.html</Path>
    <Anchor>a8ebfb74e49e082621c3e2e3020c14b7e</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>CommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~CommandHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::CommandHandler</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_command_handler.html</Path>
    <Anchor>a8cfed3088ae4586d490673b98df9e737</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>CommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerCommandHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::CommandHandler</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_command_handler.html</Path>
    <Anchor>a9657c3b633807cff76213cae01545cac</Anchor>
    <Abstract>Register a command handler. </Abstract>
    <DeclaredIn>CommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unregisterCommandHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::CommandHandler</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_command_handler.html</Path>
    <Anchor>a575eaaa1df8e59a88caf8a20701fd95a</Anchor>
    <Abstract>Unregister a command handler. </Abstract>
    <DeclaredIn>CommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::Event</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::Event</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_event.html</Path>
    <Abstract>A user event within a window. </Abstract>
    <DeclaredIn>Event.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Event</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>deflect::Event</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_event.html</Path>
    <Anchor>a8212fb4013179eff56a621ed7f5a40ca</Anchor>
    <Abstract>Construct a new event. </Abstract>
    <DeclaredIn>Event.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Event</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_event.html</Path>
    <Anchor>a53cf20f805ffc8b02eefc09630f2830c</Anchor>
    <Abstract>The type of event. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mouseX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Event</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_event.html</Path>
    <Anchor>a42c48f6ac9f5ce439938465304f83823</Anchor>
    <Abstract>Normalized X mouse/touch position relative to the window. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mouseY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Event</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_event.html</Path>
    <Anchor>a4e99317297b97c36acad4e095f49d1fe</Anchor>
    <Abstract>Normalized Y mouse/touch position relative to the window. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dx</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Event</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_event.html</Path>
    <Anchor>a16b046b14e8d6f66685cc3db5f669f7d</Anchor>
    <Abstract>Normalized horizontal delta for scroll events / delta in pixels for wheel events. ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Event</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_event.html</Path>
    <Anchor>a2a2dcc09ecccae9283d91290b2e33ced</Anchor>
    <Abstract>Normalized vertical delta for scroll events / delta in pixels for wheel events. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mouseLeft</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Event</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_event.html</Path>
    <Anchor>a68f0b1c510d0dac47e73764312e39578</Anchor>
    <Abstract>The state of the left mouse button (pressed=true) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mouseRight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Event</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_event.html</Path>
    <Anchor>a1348a405ee165fa57767eee687e4a1b7</Anchor>
    <Abstract>The state of the right mouse button (pressed=true) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mouseMiddle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Event</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_event.html</Path>
    <Anchor>ae20855655437dc0c2927ff3c122d20f5</Anchor>
    <Abstract>The state of the middle mouse button (pressed=true) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>key</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Event</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_event.html</Path>
    <Anchor>ad0a05174d31daebea94896a083d65ee8</Anchor>
    <Abstract>The key code, see QKeyEvent::key() </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modifiers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Event</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_event.html</Path>
    <Anchor>af9f96947fd3600458b99223389f5d293</Anchor>
    <Abstract>The keyboard modifiers, see QKeyEvent::modifiers() </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>text</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Event</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_event.html</Path>
    <Anchor>ade0b96971d9b67e03c492b745bba2685</Anchor>
    <Abstract>Carries unicode for key, see QKeyEvent::text() </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serializedSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Event</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_event.html</Path>
    <Anchor>a5938de50a58544e35146cd7746e9ddd9</Anchor>
    <Abstract>The size of the QDataStream serialized output. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::EventReceiver</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::EventReceiver</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_event_receiver.html</Path>
    <Abstract>Interface for classes to register as receivers for events. </Abstract>
    <DeclaredIn>EventReceiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::ImageWrapper</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_image_wrapper.html</Path>
    <Abstract>A simple wrapper around an image data buffer. </Abstract>
    <DeclaredIn>ImageWrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImageWrapper</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>deflect::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_image_wrapper.html</Path>
    <Anchor>a0da702eb682bc4f12f2ceb8bd0a22380</Anchor>
    <Abstract>ImageWrapper constructor. </Abstract>
    <DeclaredIn>ImageWrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBytesPerPixel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>deflect::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_image_wrapper.html</Path>
    <Anchor>a6e1357a7aa3628ddc8f272a6bc340df9</Anchor>
    <DeclaredIn>ImageWrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBufferSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>deflect::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_image_wrapper.html</Path>
    <Anchor>a1bbcaaa81b91344e9864a90c5b09fc6c</Anchor>
    <DeclaredIn>ImageWrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapYAxis</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>deflect::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_image_wrapper.html</Path>
    <Anchor>a0259fff8d07a883a02541da59e55de1a</Anchor>
    <Abstract>Swap an image along the Y axis. </Abstract>
    <DeclaredIn>ImageWrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_image_wrapper.html</Path>
    <Anchor>a36c9098b98a8086e903ed777ebee9a35</Anchor>
    <Abstract>Pointer to the image data of size getBufferSize(). </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pixelFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_image_wrapper.html</Path>
    <Anchor>ad2d409293b0c361bf47a76b9ac5f4330</Anchor>
    <Abstract>The pixel format describing the arrangement of the data buffer. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_image_wrapper.html</Path>
    <Anchor>a628b197165c3e428e4b895e3fbd18146</Anchor>
    <Abstract>The image width in pixels. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>height</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_image_wrapper.html</Path>
    <Anchor>ae94eda15c61b09f3874a23b2a93fe0f9</Anchor>
    <Abstract>The image height in pixels. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>x</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_image_wrapper.html</Path>
    <Anchor>a9390a77359e5104598c1d5a8afc51df5</Anchor>
    <Abstract>The X coordinate. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>y</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_image_wrapper.html</Path>
    <Anchor>aaaa2941b2a63cedd5592391bbcba6912</Anchor>
    <Abstract>The Y coordinate. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compressionPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_image_wrapper.html</Path>
    <Anchor>a117951a971e2db4500d2a01ba6ac1e58</Anchor>
    <Abstract>Is the image to be compressed (default: auto). </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compressionQuality</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_image_wrapper.html</Path>
    <Anchor>aea79767865a32c31889e30a4c8bd5e41</Anchor>
    <Abstract>Compression quality (0 worst, 100 best, default: 75). </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::NetworkListener</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::NetworkListener</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_network_listener.html</Path>
    <Abstract>Listen to incoming PixelStream connections from Stream clients. </Abstract>
    <DeclaredIn>NetworkListener.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NetworkListener</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::NetworkListener</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_network_listener.html</Path>
    <Anchor>a0cfd5570ffe28046507e6470e2856231</Anchor>
    <Abstract>Create a new server listening for Stream connections. </Abstract>
    <DeclaredIn>NetworkListener.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~NetworkListener</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::NetworkListener</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_network_listener.html</Path>
    <Anchor>ad37bc37b88290a35449cc64c611af4ec</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>NetworkListener.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCommandHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::NetworkListener</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_network_listener.html</Path>
    <Anchor>ac6e7c4239b6026ebdcfc3cd697190ffb</Anchor>
    <Abstract>Get the command handler. </Abstract>
    <DeclaredIn>NetworkListener.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelStreamDispatcher</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::NetworkListener</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_network_listener.html</Path>
    <Anchor>ad0092974f253ed7320c03af40bf05a08</Anchor>
    <Abstract>Get the PixelStreamDispatcher. </Abstract>
    <DeclaredIn>NetworkListener.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>defaultPortNumber_</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::NetworkListener</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_network_listener.html</Path>
    <Anchor>a12d57ba8649897b3619f86fab53e1bcb</Anchor>
    <Abstract>The default port number used for Stream connections. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::PixelStreamBuffer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::PixelStreamBuffer</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_pixel_stream_buffer.html</Path>
    <Abstract>Buffer PixelStreamSegments from (multiple) sources. </Abstract>
    <DeclaredIn>PixelStreamBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::PixelStreamBuffer</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_pixel_stream_buffer.html</Path>
    <Anchor>af6be8c1e9368d1b543131bea6f47df75</Anchor>
    <Abstract>Construct a Buffer. </Abstract>
    <DeclaredIn>PixelStreamBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::PixelStreamBuffer</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_pixel_stream_buffer.html</Path>
    <Anchor>a200f9b0034d1e41234294b99185cbefa</Anchor>
    <Abstract>Add a source of segments. </Abstract>
    <DeclaredIn>PixelStreamBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::PixelStreamBuffer</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_pixel_stream_buffer.html</Path>
    <Anchor>a2b60f9d58d4add08f7891d9607ef1bb6</Anchor>
    <Abstract>Remove a source of segments. </Abstract>
    <DeclaredIn>PixelStreamBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSourceCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::PixelStreamBuffer</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_pixel_stream_buffer.html</Path>
    <Anchor>ab73c1ba751ccaa84e26077a70714aec1</Anchor>
    <Abstract>Get the number of sources for this Stream. </Abstract>
    <DeclaredIn>PixelStreamBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insertSegment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::PixelStreamBuffer</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_pixel_stream_buffer.html</Path>
    <Anchor>a3859218fca7c860b903e51edb715b5fa</Anchor>
    <Abstract>Insert a segement for the current frame and source. </Abstract>
    <DeclaredIn>PixelStreamBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finishFrameForSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::PixelStreamBuffer</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_pixel_stream_buffer.html</Path>
    <Anchor>a78238cf6e83a8e095ed64b8c04a36c0d</Anchor>
    <Abstract>Notify that the given source has finished sending segment for the current frame. </Abstract>
    <DeclaredIn>PixelStreamBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasCompleteFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::PixelStreamBuffer</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_pixel_stream_buffer.html</Path>
    <Anchor>aab135b78d40823adb8943617a3b32e52</Anchor>
    <Abstract>Does the Buffer have a new complete frame (from all sources) </Abstract>
    <DeclaredIn>PixelStreamBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFirstCompleteFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::PixelStreamBuffer</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_pixel_stream_buffer.html</Path>
    <Anchor>a2952881caf8836d1f382960bfb568654</Anchor>
    <Abstract>Is this the first frame to be finished by all sources. </Abstract>
    <DeclaredIn>PixelStreamBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::PixelStreamBuffer</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_pixel_stream_buffer.html</Path>
    <Anchor>a43b5792813c55ffa182a7b9e91410d5f</Anchor>
    <Abstract>Get the size of the frame. </Abstract>
    <DeclaredIn>PixelStreamBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>popFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::PixelStreamBuffer</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_pixel_stream_buffer.html</Path>
    <Anchor>af6de8e76e3e8c761846491c8f31bddf8</Anchor>
    <Abstract>Get the finished frame. </Abstract>
    <DeclaredIn>PixelStreamBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAllowedToSend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::PixelStreamBuffer</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_pixel_stream_buffer.html</Path>
    <Anchor>ae8b8f37aa751db625e7a8bbd4bc63492</Anchor>
    <Abstract>Allow this buffer to be used by the next PixelStreamDispatcher::sendLatestFrame. </Abstract>
    <DeclaredIn>PixelStreamBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAllowedToSend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::PixelStreamBuffer</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_pixel_stream_buffer.html</Path>
    <Anchor>a466d6da4a65bfa74ae8425d290adcb9a</Anchor>
    <DeclaredIn>PixelStreamBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeFrameDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>deflect::PixelStreamBuffer</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_pixel_stream_buffer.html</Path>
    <Anchor>a3f0149e1bdb5108ef38cb2cd4ad6b89f</Anchor>
    <Abstract>Compute the overall dimensions of a frame. </Abstract>
    <DeclaredIn>PixelStreamBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::PixelStreamDispatcher</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::PixelStreamDispatcher</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_pixel_stream_dispatcher.html</Path>
    <Abstract>Gather PixelStream Segments from multiple sources and dispatch the resulting full frames...</Abstract>
    <DeclaredIn>PixelStreamDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>deflect::PixelStreamDispatcher</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_pixel_stream_dispatcher.html</Path>
    <Anchor>a50f18f83f285fd3ae12ec3291f808584</Anchor>
    <Abstract>Add a source of Segments for a Stream. </Abstract>
    <DeclaredIn>PixelStreamDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>deflect::PixelStreamDispatcher</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_pixel_stream_dispatcher.html</Path>
    <Anchor>a7b8ef3f9541a95c2d5120eff0fac02e7</Anchor>
    <Abstract>Add a source of Segments for a Stream. </Abstract>
    <DeclaredIn>PixelStreamDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processSegment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>deflect::PixelStreamDispatcher</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_pixel_stream_dispatcher.html</Path>
    <Anchor>ae6a511c1a7fad50edac9eb5130e8e4d5</Anchor>
    <Abstract>Process a new Segement. </Abstract>
    <DeclaredIn>PixelStreamDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processFrameFinished</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>deflect::PixelStreamDispatcher</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_pixel_stream_dispatcher.html</Path>
    <Anchor>a9bfb40c90938b94c4a7f5c325c2b9dee</Anchor>
    <Abstract>The given source has finished sending segments for the current frame. </Abstract>
    <DeclaredIn>PixelStreamDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>deflect::PixelStreamDispatcher</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_pixel_stream_dispatcher.html</Path>
    <Anchor>a2b9db2c623624ea9811e73d0b52292de</Anchor>
    <Abstract>Delete an entire stream. </Abstract>
    <DeclaredIn>PixelStreamDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>deflect::PixelStreamDispatcher</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_pixel_stream_dispatcher.html</Path>
    <Anchor>a9b46383b3a88418e7d39c789aebfbf2b</Anchor>
    <Abstract>Is called when the wall processes are ready to receive new frames. </Abstract>
    <DeclaredIn>PixelStreamDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openPixelStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>deflect::PixelStreamDispatcher</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_pixel_stream_dispatcher.html</Path>
    <Anchor>af1824a86403e44cbaad504d95538f70b</Anchor>
    <Abstract>Notify that a PixelStream has been opened. </Abstract>
    <DeclaredIn>PixelStreamDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deletePixelStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>deflect::PixelStreamDispatcher</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_pixel_stream_dispatcher.html</Path>
    <Anchor>ac5d28a20c58e07b686d4b0dd73aff870</Anchor>
    <Abstract>Notify that a pixel stream has been deleted. </Abstract>
    <DeclaredIn>PixelStreamDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>deflect::PixelStreamDispatcher</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_pixel_stream_dispatcher.html</Path>
    <Anchor>aa8e5cde70ec054519b40bff519061387</Anchor>
    <Abstract>Dispatch a full frame. </Abstract>
    <DeclaredIn>PixelStreamDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamDispatcher</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::PixelStreamDispatcher</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_pixel_stream_dispatcher.html</Path>
    <Anchor>a26a6bd0167c1dfe2041e79fe548664fe</Anchor>
    <Abstract>Construct a dispatcher. </Abstract>
    <DeclaredIn>PixelStreamDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::PixelStreamFrame</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::PixelStreamFrame</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_pixel_stream_frame.html</Path>
    <Abstract>A frame for a PixelStream. </Abstract>
    <DeclaredIn>PixelStreamFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>segments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::PixelStreamFrame</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_pixel_stream_frame.html</Path>
    <Anchor>a0b0ac6eb9a83b8fa83aa4f3a745b3729</Anchor>
    <Abstract>The full set of segments for this frame. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uri</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::PixelStreamFrame</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_pixel_stream_frame.html</Path>
    <Anchor>ac7d8bd5f190cfe711a81ddeb58a899f4</Anchor>
    <Abstract>The PixelStream uri to which this frame is associated. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::PixelStreamSegment</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::PixelStreamSegment</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_pixel_stream_segment.html</Path>
    <Abstract>Image data and parameters for a single segment of a PixelStream. </Abstract>
    <DeclaredIn>PixelStreamSegment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::PixelStreamSegment</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_pixel_stream_segment.html</Path>
    <Anchor>a0f87f6178560474578cf5874c333b153</Anchor>
    <Abstract>Parameters of the segment. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>imageData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::PixelStreamSegment</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_pixel_stream_segment.html</Path>
    <Anchor>a5ca92b5986f108aade02fad67318a513</Anchor>
    <Abstract>Image data of the segment. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::PixelStreamSegmentDecoder</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::PixelStreamSegmentDecoder</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_pixel_stream_segment_decoder.html</Path>
    <Abstract>Decode a PixelStreamSegment image data asynchronously. </Abstract>
    <DeclaredIn>PixelStreamSegmentDecoder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamSegmentDecoder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::PixelStreamSegmentDecoder</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_pixel_stream_segment_decoder.html</Path>
    <Anchor>a0fa851dc6e2984471749d661b454e634</Anchor>
    <Abstract>Construct a Decoder. </Abstract>
    <DeclaredIn>PixelStreamSegmentDecoder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PixelStreamSegmentDecoder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::PixelStreamSegmentDecoder</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_pixel_stream_segment_decoder.html</Path>
    <Anchor>a0abaf25aead72fc0cc15b5f2b42e269d</Anchor>
    <Abstract>Destruct a Decoder. </Abstract>
    <DeclaredIn>PixelStreamSegmentDecoder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startDecoding</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::PixelStreamSegmentDecoder</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_pixel_stream_segment_decoder.html</Path>
    <Anchor>afe98f1760b1cdd9c8d4c4ba1d33d79c0</Anchor>
    <Abstract>Start decoding a segment. </Abstract>
    <DeclaredIn>PixelStreamSegmentDecoder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRunning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::PixelStreamSegmentDecoder</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_pixel_stream_segment_decoder.html</Path>
    <Anchor>a1f51b2d4c25743a169b2d7e952e80cfe</Anchor>
    <Abstract>Check if the decoding thread is running. </Abstract>
    <DeclaredIn>PixelStreamSegmentDecoder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::PixelStreamSegmentParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::PixelStreamSegmentParameters</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_pixel_stream_segment_parameters.html</Path>
    <Abstract>Parameters for a PixelStream Segment. </Abstract>
    <DeclaredIn>PixelStreamSegmentParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamSegmentParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>deflect::PixelStreamSegmentParameters</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_pixel_stream_segment_parameters.html</Path>
    <Anchor>a963650d4fe0f5418e901af8f39ba246e</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>PixelStreamSegmentParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compressed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::PixelStreamSegmentParameters</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_pixel_stream_segment_parameters.html</Path>
    <Anchor>a6773850fb7d1b179c90212e8622373d1</Anchor>
    <Abstract>Is the image raw pixel data or compressed in jpeg format. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>x</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::PixelStreamSegmentParameters</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_pixel_stream_segment_parameters.html</Path>
    <Anchor>a9908dc98f334bfd516483f2e68487684</Anchor>
    <Abstract>The x position in pixels. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>y</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::PixelStreamSegmentParameters</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_pixel_stream_segment_parameters.html</Path>
    <Anchor>a1764f504d12b1d2714169a16e1e6cd5a</Anchor>
    <Abstract>The y position in pixels. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::PixelStreamSegmentParameters</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_pixel_stream_segment_parameters.html</Path>
    <Anchor>a7fdc103ba2618dd09321db36c2f01962</Anchor>
    <Abstract>The width in pixels. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>height</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::PixelStreamSegmentParameters</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_pixel_stream_segment_parameters.html</Path>
    <Anchor>a20eaf4c808955d9e1e7a6489e32d3e00</Anchor>
    <Abstract>The height in pixels. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::Socket</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::Socket</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_socket.html</Path>
    <Abstract>Represent a communication Socket for the Stream Library. </Abstract>
    <DeclaredIn>Socket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disconnected</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>deflect::Socket</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_socket.html</Path>
    <Anchor>ad51f7dad4334e501e4f22b46b943ae16</Anchor>
    <Abstract>Signal that the socket has been disconnected. </Abstract>
    <DeclaredIn>Socket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Socket</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Socket</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_socket.html</Path>
    <Anchor>ad394dba80c249d3d19b1bec640718287</Anchor>
    <Abstract>Construct a Socket and connect to host. </Abstract>
    <DeclaredIn>Socket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Socket</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Socket</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_socket.html</Path>
    <Anchor>ace57a2976b70ada822ec873aefe4cb71</Anchor>
    <Abstract>Destruct a Socket, disconnecting from host. </Abstract>
    <DeclaredIn>Socket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isConnected</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Socket</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_socket.html</Path>
    <Anchor>ad6a9d422d1a8f0bb5467919a50c0e04b</Anchor>
    <Abstract>Is the Socket connected. </Abstract>
    <DeclaredIn>Socket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasMessage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Socket</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_socket.html</Path>
    <Anchor>a2b53f1865a483b496abcee64a2159cd2</Anchor>
    <Abstract>Is there a pending message. </Abstract>
    <DeclaredIn>Socket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFileDescriptor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Socket</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_socket.html</Path>
    <Anchor>a60cb94a4f12631a9ce68a18db1a38933</Anchor>
    <Abstract>Get the FileDescriptor for the Socket (for use by poll()) </Abstract>
    <DeclaredIn>Socket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Socket</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_socket.html</Path>
    <Anchor>ab3d58049644d451219c8d0a92ad55dce</Anchor>
    <Abstract>Send a message. </Abstract>
    <DeclaredIn>Socket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Socket</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_socket.html</Path>
    <Anchor>a67f4b379d873ca2eb1872e16db1025e7</Anchor>
    <Abstract>Receive a message. </Abstract>
    <DeclaredIn>Socket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRemoteProtocolVersion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Socket</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_socket.html</Path>
    <Anchor>a6378f1a0be2ffd5d7041666daec845e9</Anchor>
    <Abstract>Get the protocol version of the remote host. </Abstract>
    <DeclaredIn>Socket.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>defaultPortNumber_</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Socket</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_socket.html</Path>
    <Anchor>abee778cfaea7d8736df3c49503985ec8</Anchor>
    <Abstract>The default communication port. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::SourceBuffer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::SourceBuffer</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_source_buffer.html</Path>
    <Abstract>Buffer for a single source of segements. </Abstract>
    <DeclaredIn>PixelStreamBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>deflect::SourceBuffer</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_source_buffer.html</Path>
    <Anchor>adcf21228135519ad4c9cb52cc308ce55</Anchor>
    <Abstract>Pop the first element of the buffer. </Abstract>
    <DeclaredIn>PixelStreamBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>deflect::SourceBuffer</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_source_buffer.html</Path>
    <Anchor>a3dc2f55335194773543653fc0df15ea8</Anchor>
    <Abstract>Push a new element to the back of the buffer. </Abstract>
    <DeclaredIn>PixelStreamBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frontFrameIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::SourceBuffer</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_source_buffer.html</Path>
    <Anchor>a37257faff0b0307e5f15bae0c6a1fd9b</Anchor>
    <Abstract>The current indexes of the frame for this source. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>segments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::SourceBuffer</Scope>
    </TokenIdentifier>
    <Path>structdeflect_1_1_source_buffer.html</Path>
    <Anchor>a95bd1f57a5053feb15be340ba188d7fd</Anchor>
    <Abstract>The collection of segments. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::Stream</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Abstract>Stream visual data to a DisplayCluster application. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Stream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>a6e6d41027017644c3cb8f7a7f6d728f3</Anchor>
    <Abstract>Open a new connection to the DisplayCluster application. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Stream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>a60d34179c413a2945f3f2b9d97a87a84</Anchor>
    <Abstract>Destruct the Stream, closing the connection. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isConnected</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>abe9bc7b540a7d560d67125dbe4e86aa2</Anchor>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerForEvents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>a0109d25366698737c1cbf8a15cd6974c</Anchor>
    <Abstract>Register to receive Events. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRegisteredForEvents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>a1463bdc227c783a9ca38b895fe19c840</Anchor>
    <Abstract>Is this stream registered to receive events. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDescriptor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>ac743480a024cde9c3db79324950e7993</Anchor>
    <Abstract>Get the native descriptor for the data stream. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>a634d0dd031131960fb11bbc2842c959d</Anchor>
    <Abstract>Check if a new Event is available. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>a4ee6b8499d11bd1fe19808df361970af</Anchor>
    <Abstract>Get the next Event. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>a3f29c291554881cf3e518fd7c431b208</Anchor>
    <Abstract>Send an image synchronously. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finishFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>ae69d1e42b07027d9488a449b861655c9</Anchor>
    <Abstract>Notify that all the images for this frame have been sent. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disconnected</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>a1021de00de42059139af3808905a54d9</Anchor>
    <Abstract>Emitted after the stream was disconnected. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Future</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>a4a9e3727dddb1c25d5f8cbaf77a35914</Anchor>
    <Abstract>Future signaling success of asyncSend(). </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asyncSend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>deflect::Stream</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_stream.html</Path>
    <Anchor>a6570d0b18acefed238ba629e02cc4b18</Anchor>
    <Abstract>Send an image and finish the frame asynchronously. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deflect::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>deflect::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_version.html</Path>
    <Abstract>Information about the current bbp version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>deflect::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_version.html</Path>
    <Anchor>ae5d71acc7fad06dbcb673e37c905e263</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>deflect::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_version.html</Path>
    <Anchor>aa634ce089d675e03f59580e703d2aaa6</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>deflect::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_version.html</Path>
    <Anchor>ab2bd448e81b1014087e824efacd8fe91</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>deflect::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_version.html</Path>
    <Anchor>ac87161d36ea0dd6d8cc648f3cd6408d6</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>deflect::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_version.html</Path>
    <Anchor>af3f12dad6076c78e85cba4c791ef0292</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>deflect::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_version.html</Path>
    <Anchor>af9af044c68918db0efb0ebc620198e14</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>deflect::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_version.html</Path>
    <Anchor>ad5609c825783681386c5cbb295c632d4</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>deflect::Version</Scope>
    </TokenIdentifier>
    <Path>classdeflect_1_1_version.html</Path>
    <Anchor>a324cd0b47c982f26f290c4a3939bfb68</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
</Tokens>
