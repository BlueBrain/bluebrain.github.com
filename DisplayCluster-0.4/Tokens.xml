<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>documentation</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>documentation.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReleaseNotes</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>_release_notes.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>todo</Name>
      <APILanguage>unknown</APILanguage>
    </TokenIdentifier>
    <Path>todo.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deprecated</Name>
      <APILanguage>unknown</APILanguage>
    </TokenIdentifier>
    <Path>deprecated.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AsciiToQtKeyCodeMapper</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>AsciiToQtKeyCodeMapper</Scope>
    </TokenIdentifier>
    <Path>class_ascii_to_qt_key_code_mapper.html</Path>
    <Abstract>Map Ascii key codes to Qt key codes. </Abstract>
    <DeclaredIn>AsciiToQtKeyCodeMapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AsciiToQtKeyCodeMapper</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>AsciiToQtKeyCodeMapper</Scope>
    </TokenIdentifier>
    <Path>class_ascii_to_qt_key_code_mapper.html</Path>
    <Anchor>a5cccca313512372853b6a3b96048f94b</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>AsciiToQtKeyCodeMapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getQtKeyCode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>AsciiToQtKeyCodeMapper</Scope>
    </TokenIdentifier>
    <Path>class_ascii_to_qt_key_code_mapper.html</Path>
    <Anchor>a3de6f7247f24f627ef44bd8ef22858fd</Anchor>
    <Abstract>Get the Qt key code for and ascii char. </Abstract>
    <DeclaredIn>AsciiToQtKeyCodeMapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AsyncImageLoader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>AsyncImageLoader</Scope>
    </TokenIdentifier>
    <Path>class_async_image_loader.html</Path>
    <Abstract>Load image thumbnails for supported content types. </Abstract>
    <DeclaredIn>AsyncImageLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>AsyncImageLoader</Scope>
    </TokenIdentifier>
    <Path>class_async_image_loader.html</Path>
    <Anchor>a0e0e2c941addecb5890aa3626db99ec7</Anchor>
    <Abstract>Load an image thumbnail. </Abstract>
    <DeclaredIn>AsyncImageLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>imageLoaded</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>AsyncImageLoader</Scope>
    </TokenIdentifier>
    <Path>class_async_image_loader.html</Path>
    <Anchor>aee70a4bafde61b7a897d12578b74e09f</Anchor>
    <Abstract>Emitted when an image could be successfully loaded by loadImage(). </Abstract>
    <DeclaredIn>AsyncImageLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>imageLoadingFinished</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>AsyncImageLoader</Scope>
    </TokenIdentifier>
    <Path>class_async_image_loader.html</Path>
    <Anchor>a4740438a2e9d95ae2e8a7c7bd1e729e0</Anchor>
    <Abstract>Emitted whenever loadImage() has finished (successful or not). </Abstract>
    <DeclaredIn>AsyncImageLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AsyncImageLoader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>AsyncImageLoader</Scope>
    </TokenIdentifier>
    <Path>class_async_image_loader.html</Path>
    <Anchor>a06eca9683f23016ba38225c2b7aae9b4</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>AsyncImageLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Command</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Command</Scope>
    </TokenIdentifier>
    <Path>class_command.html</Path>
    <Abstract>String format, prefix-base network command. </Abstract>
    <DeclaredIn>Command.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Command</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Command</Scope>
    </TokenIdentifier>
    <Path>class_command.html</Path>
    <Anchor>abf369176e8243b5d7ddb943edf66f484</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Command.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Command</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Command</Scope>
    </TokenIdentifier>
    <Path>class_command.html</Path>
    <Anchor>ae444efc7dbe86714b058440f083c49d8</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Command.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Command</Scope>
    </TokenIdentifier>
    <Path>class_command.html</Path>
    <Anchor>ab508cdcb6f492f92f9ebd05d505e2bba</Anchor>
    <Abstract>Get the command type. </Abstract>
    <DeclaredIn>Command.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getArguments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Command</Scope>
    </TokenIdentifier>
    <Path>class_command.html</Path>
    <Anchor>aa82c6b52dcaa4df8e49e65792d56f772</Anchor>
    <Abstract>Get the command arguments. </Abstract>
    <DeclaredIn>Command.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCommand</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Command</Scope>
    </TokenIdentifier>
    <Path>class_command.html</Path>
    <Anchor>a33be42aa99b3169b51d316e32b4ae448</Anchor>
    <Abstract>Get the command in string format, typically for sending over the network. </Abstract>
    <DeclaredIn>Command.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Command</Scope>
    </TokenIdentifier>
    <Path>class_command.html</Path>
    <Anchor>a442f1f2818d98eec09c94a4cf4275ff0</Anchor>
    <Abstract>Check if the Command is valid (i.e. </Abstract>
    <DeclaredIn>Command.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommandHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>CommandHandler</Scope>
    </TokenIdentifier>
    <Path>class_command_handler.html</Path>
    <Abstract>A command handler for String formatted network commands. </Abstract>
    <DeclaredIn>CommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>CommandHandler</Scope>
    </TokenIdentifier>
    <Path>class_command_handler.html</Path>
    <Anchor>a2ade4ae56d365f49a066d2489a0b59e0</Anchor>
    <Abstract>Process a command. </Abstract>
    <DeclaredIn>CommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommandHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandHandler</Scope>
    </TokenIdentifier>
    <Path>class_command_handler.html</Path>
    <Anchor>a9a98482665c0a42277473c2b489ea4cb</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>CommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~CommandHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandHandler</Scope>
    </TokenIdentifier>
    <Path>class_command_handler.html</Path>
    <Anchor>a774109b82ae7c2556d781f457f3974c7</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>CommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerCommandHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandHandler</Scope>
    </TokenIdentifier>
    <Path>class_command_handler.html</Path>
    <Anchor>a46106126a5d312ee541a22723d6189bc</Anchor>
    <Abstract>Register a command handler. </Abstract>
    <DeclaredIn>CommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unregisterCommandHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandHandler</Scope>
    </TokenIdentifier>
    <Path>class_command_handler.html</Path>
    <Anchor>a7e8e8c31327434c98bcf2b34784e7037</Anchor>
    <Abstract>Unregister a command handler. </Abstract>
    <DeclaredIn>CommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommandLineOptions</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>CommandLineOptions</Scope>
    </TokenIdentifier>
    <Path>class_command_line_options.html</Path>
    <Abstract>Command line options to pass startup parameters to a localstreamer application. </Abstract>
    <DeclaredIn>CommandLineOptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommandLineOptions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandLineOptions</Scope>
    </TokenIdentifier>
    <Path>class_command_line_options.html</Path>
    <Anchor>ad470c893b63d2f91ebf0b65824473727</Anchor>
    <Abstract>Construct an empty instance. </Abstract>
    <DeclaredIn>CommandLineOptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommandLineOptions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandLineOptions</Scope>
    </TokenIdentifier>
    <Path>class_command_line_options.html</Path>
    <Anchor>a2dde83b128fd9b439e8cd9f080e6db30</Anchor>
    <Abstract>Construct from command line parameters. </Abstract>
    <DeclaredIn>CommandLineOptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showSyntax</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandLineOptions</Scope>
    </TokenIdentifier>
    <Path>class_command_line_options.html</Path>
    <Anchor>a7afe005172796945c93d08dfe495eb92</Anchor>
    <Abstract>Print syntax to std::out. </Abstract>
    <DeclaredIn>CommandLineOptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCommandLineArguments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandLineOptions</Scope>
    </TokenIdentifier>
    <Path>class_command_line_options.html</Path>
    <Anchor>ab5f3af16b94d02c33fa42c6caefcb301</Anchor>
    <Abstract>Get the command line arguments corresponding to this object. </Abstract>
    <DeclaredIn>CommandLineOptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCommandLine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandLineOptions</Scope>
    </TokenIdentifier>
    <Path>class_command_line_options.html</Path>
    <Anchor>a3d8b4c329b6a3634e20a2d661a1e0453</Anchor>
    <Abstract>Get the command line arguments joined in a single line (convenience function) </Abstract>
    <DeclaredIn>CommandLineOptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Configuration</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Abstract>The Configuration class manages all the settings needed by a DisplayCluster application. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Configuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a4f41abbe40c7e1345a325369c86aaaca</Anchor>
    <Abstract>Create a new configuration from an xml file. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Configuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a1226f87dc3c27be16eb16e53301eb2f3</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalScreenCountX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aca560ac9d3b46ef39444287ab4ba800f</Anchor>
    <Abstract>getTotalScreenCountX Get the total number of screens along the x axis </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalScreenCountY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a0f61e23c663322c808a33b8deeab198e</Anchor>
    <Abstract>getTotalScreenCountY Get the total number of screens along the y axis </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScreenWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a957a6e17a77943ca1469a599c4116987</Anchor>
    <Abstract>getScreenWidth Get the width of a screen. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScreenHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>acac053b8e85c8e13dc1b24f829d70b25</Anchor>
    <Abstract>getScreenWidth Get the height of a screen. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMullionWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aa4f921578b584411cab548d015e9ceba</Anchor>
    <Abstract>getMullionWidth Get the padding nedded to compensate for the physical displays&amp;#39; bezel ...</Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMullionHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aebf3438c6130ea0a50ed85d0ed2bde93</Anchor>
    <Abstract>getMullionHeight Get the padding nedded to compensate for the physical displays&amp;#39; bezel ...</Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aa7b4b828ea7bc8afcf2bed3857007eaa</Anchor>
    <Abstract>getTotalWidth Get the total width of the DisplayWall, including the Mullion padding. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aba8af0457ab8769b5baab775ecebb8ba</Anchor>
    <Abstract>getTotalHeight Get the total height of the DisplayWall, including the Mullion padding. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a1031736dbddf1becee943184afb27dda</Anchor>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNormalizedScreenRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a1bd273cb0c1f333906015ab2490a5895</Anchor>
    <Abstract>Get the normalized coordinates and dimensions of a screen. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFullscreen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a3d38c54f965dce34f3839867a508779a</Anchor>
    <Abstract>getFullscreen Display the windows in fullscreen mode </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBackgroundUri</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a40a9ddefb4fc943fe5c57c77741af319</Anchor>
    <Abstract>getBackgroundUri Get the URI to the Content to be used as background </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBackgroundColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a26fbc602af0411414e371c4eb5558cbe</Anchor>
    <Abstract>getBackgroundColor Get the uniform color to use for Background </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBackgroundColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a51644ed6bfcc2f0e09557583e9682bc1</Anchor>
    <Abstract>setBackgroundColor Set the background color </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBackgroundUri</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a3e2f9576c5f221d7740bc315fc85bea4</Anchor>
    <Abstract>setBackgroundUri Set the URI to the Content to be used as background </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>save</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>af8fbe3f7ad79653dc6bf100bd7b77a6d</Anchor>
    <Abstract>save Save the configuration to the current xml file. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>save</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a73d1fdbf347319f3afbb7ef3245d6eaf</Anchor>
    <Abstract>save Save the configuration to the specified xml file. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>filename_</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a43ad513bddcdfe68ff36f6254a843c1b</Anchor>
    <Abstract>filename_ The path to the xml configuration file </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Content</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Abstract>An abstract Content displayed in a ContentWindow. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a44c022cb6fed6fb1b0dff45e39ececb9</Anchor>
    <Abstract>Emitted by any Content subclass when its state has been modified. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Content</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ae491288d2efce7fa63d3e777580630b4</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a887d2b952cd824d70f64106ae048a5f8</Anchor>
    <Abstract>Get the content URI. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a8db9a0784f6b8a9a55bfa9a3b319bb5d</Anchor>
    <Abstract>Get the content type. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMetadata</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a6822bf4cf94ae866c561b23e62506303</Anchor>
    <Abstract>Read content metadata from the data source. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>aa4681ca97acea99fbe88e20f0e664bc0</Anchor>
    <Abstract>Get the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a1b7a6f49f447c124b497b0a844fd6ea6</Anchor>
    <Abstract>Set the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>blockAdvance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af4cadaac5031fa05e4472bce153f3ea9</Anchor>
    <Abstract>Used to indicate that the window is being moved. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preRenderUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af01aa8e619f5f00a9e3bfb27338f8d2f</Anchor>
    <Abstract>Re-implement this method to update or synchronize before rendering. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postRenderUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ae97b82f88b6e079ec746a656d4e3cbef</Anchor>
    <Abstract>Re-implement this method to update or synchronize after rendering. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentFactory</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ContentFactory</Scope>
    </TokenIdentifier>
    <Path>class_content_factory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentFactory</Scope>
    </TokenIdentifier>
    <Path>class_content_factory.html</Path>
    <Anchor>afe819dd6acbe85688da779e3c538b72a</Anchor>
    <Abstract>Get a Content object of the appropriate derived type based on the URI given. </Abstract>
    <DeclaredIn>ContentFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelStreamContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentFactory</Scope>
    </TokenIdentifier>
    <Path>class_content_factory.html</Path>
    <Anchor>a543b86956c936cd618405ba7bda7f254</Anchor>
    <Abstract>Special case: PixelStreamContent type cannot be derived from its uri. </Abstract>
    <DeclaredIn>ContentFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getErrorContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentFactory</Scope>
    </TokenIdentifier>
    <Path>class_content_factory.html</Path>
    <Anchor>aad3eaa9c3888b86779172e381f3a6692</Anchor>
    <Abstract>Get a Content object representing a loading error. </Abstract>
    <DeclaredIn>ContentFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSupportedExtensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentFactory</Scope>
    </TokenIdentifier>
    <Path>class_content_factory.html</Path>
    <Anchor>a34aeae89b1319f4c53e2ec6a270fe436</Anchor>
    <Abstract>Get all the supported file extensions. </Abstract>
    <DeclaredIn>ContentFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSupportedFilesFilter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentFactory</Scope>
    </TokenIdentifier>
    <Path>class_content_factory.html</Path>
    <Anchor>aa50bde011337a7eedf6a36629eddcf30</Anchor>
    <Abstract>Get all the supported file extensions prefixed with &amp;#39;. </Abstract>
    <DeclaredIn>ContentFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSupportedFilesFilterAsString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentFactory</Scope>
    </TokenIdentifier>
    <Path>class_content_factory.html</Path>
    <Anchor>a86e8179fd94acab556d60f47eef1423e</Anchor>
    <Abstract>Get all the file extensions prefixed with &amp;#39;. </Abstract>
    <DeclaredIn>ContentFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentInteractionDelegate</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ContentInteractionDelegate</Scope>
    </TokenIdentifier>
    <Path>class_content_interaction_delegate.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentLoader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ContentLoader</Scope>
    </TokenIdentifier>
    <Path>class_content_loader.html</Path>
    <Abstract>Helper class to open Content on a DisplayGroup. </Abstract>
    <DeclaredIn>ContentLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentLoader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentLoader</Scope>
    </TokenIdentifier>
    <Path>class_content_loader.html</Path>
    <Anchor>a8849d8193ac2e3ffe2cb93ac68775608</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ContentLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentLoader</Scope>
    </TokenIdentifier>
    <Path>class_content_loader.html</Path>
    <Anchor>a3001ad42bf2610f9cd3bf727ba53b3f0</Anchor>
    <Abstract>Load a Content from a file and create a window for it. </Abstract>
    <DeclaredIn>ContentLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentWindow</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Abstract>A window for placing a Content on the Wall. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contentModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a4e489035e70456bcedc092b70b66b9f9</Anchor>
    <Abstract>Emitted when the Content signals that it has been modified. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>coordinatesAboutToChange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>ac72619a17694b5d7488d8b10050ae019</Anchor>
    <Abstract>Emitted just before the coordinates are going to change. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a32931ee8f5106d270e959e998b34d14c</Anchor>
    <Abstract>Emitted whenever this object is modified. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eventChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a5d55c816a307d22b58e080666a148a24</Anchor>
    <Abstract>Notify registered EventReceivers that an Event occured. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a3a6e3980a3a4590d2484070d4f4c9e50</Anchor>
    <Abstract>No-argument constructor required for serialization. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>af8f2f1ba64930d9e670f51c91cb691fa</Anchor>
    <Abstract>Create a new window. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ContentWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>adb90dffeb0b06dd48937e458ab56ff41</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a8b06006200dda25a6afbd03025e14d37</Anchor>
    <Abstract>Get the content. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>ad6d59fb6f13898f2f12bc027672cda0f</Anchor>
    <Abstract>Set the content, replacing the existing one. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a57e025ed7564316980c09ca48f8b78e4</Anchor>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCoordinates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a7eafc9b2b154bcbed91c13e24c47ba00</Anchor>
    <Abstract>Get the normalized window coordiates. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCoordinates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a45333f2fee9cf2a58ceb54c9dd46bd12</Anchor>
    <Abstract>Get the normalized window coordiates. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>aa2fc97e84d68dd36e020aea80f0d87ea</Anchor>
    <Abstract>Get the normalized position. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>ad6e792c8c38045e3ae8185975bea22d8</Anchor>
    <Abstract>Get the normalized size. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCenter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a33f72fc21f7e70c7bf6651afd24c38b8</Anchor>
    <Abstract>Get the normalized center position. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a9a9be6725a71d2a02dd75f23f308593d</Anchor>
    <Abstract>Get the zoom factor [1;inf]. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSizeState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a47eb9b863f48bf80ff78a7ceab3b98c4</Anchor>
    <Abstract>Get the current size state. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getControlState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a0001716d329887800d0d4f41dd5c7c55</Anchor>
    <Abstract>Get the control state. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setControlState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>aa5e897e6d629f2430ab2cca62d80f66b</Anchor>
    <Abstract>Set the control state. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toggleWindowState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>aa9e1d0614cdcf20650dc774ca544f117</Anchor>
    <Abstract>Toggle the window state. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toggleFullscreen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>ab2c605667978d1a1b4937e35c15ce71f</Anchor>
    <Abstract>Toggle between fullscreen and &amp;#39;normalized&amp;#39; by keeping the position and size after leaving fullscreen...</Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWindowState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>afd7baae835d6fca6269aa1c3f4e30c51</Anchor>
    <Abstract>Get the window state. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>selected</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>ae2b3f8b0a30e0d3a43d8a1cbb009a339</Anchor>
    <Abstract>Is the window selected. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerEventReceiver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>aa28da226d371e3a5cc27a9691bc704f9</Anchor>
    <Abstract>Register an object to receive this window&amp;#39;s Events. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasEventReceivers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>aa0c0f351c96cbb263369733014a7f2b3</Anchor>
    <Abstract>Does this window already have registered Event receiver(s) </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInteractionDelegate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a367039cc902b15a0a68cff8465027ade</Anchor>
    <Abstract>Get the interaction delegate. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createInteractionDelegate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>ae9ff8ab03363af9cd1b535574b223027</Anchor>
    <Abstract>Create a delegate to handle user interaction through dc::Events. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWindowCenterPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a50d531d6924d1e8b60338ca6e2dd6364</Anchor>
    <Abstract>Get the position of the window center. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>centerPositionAround</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a95945f6dc1fd8db39bee07d6738e4da1</Anchor>
    <Abstract>Move the window to a new position. </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dispatchEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindow</Scope>
    </TokenIdentifier>
    <Path>class_content_window.html</Path>
    <Anchor>a49b22c99eef1860c98794ace39fdf629</Anchor>
    <Abstract>Used by InteractionDelegate to emit eventChanged(). </Abstract>
    <DeclaredIn>ContentWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentWindowRenderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ContentWindowRenderer</Scope>
    </TokenIdentifier>
    <Path>class_content_window_renderer.html</Path>
    <Abstract>Render a ContentWindow and its Content using the associated FactoryObject. </Abstract>
    <DeclaredIn>ContentWindowRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentWindowRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindowRenderer</Scope>
    </TokenIdentifier>
    <Path>class_content_window_renderer.html</Path>
    <Anchor>a0e5a2a6e6c4e69f62904798a603bfdd0</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ContentWindowRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindowRenderer</Scope>
    </TokenIdentifier>
    <Path>class_content_window_renderer.html</Path>
    <Anchor>ae4d7db2fd186bdf4f0c2d0d7ba35e032</Anchor>
    <Abstract>Render the associated ContentWindow. </Abstract>
    <DeclaredIn>ContentWindowRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContentWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindowRenderer</Scope>
    </TokenIdentifier>
    <Path>class_content_window_renderer.html</Path>
    <Anchor>ad5f7582e289571e35348e0f44d104483</Anchor>
    <Abstract>Set the ContentWindow to be rendered. </Abstract>
    <DeclaredIn>ContentWindowRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setShowWindowBorders</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindowRenderer</Scope>
    </TokenIdentifier>
    <Path>class_content_window_renderer.html</Path>
    <Anchor>a8608cbd8571fd6e8f34304c5813e3b68</Anchor>
    <Abstract>Display the window borders. </Abstract>
    <DeclaredIn>ContentWindowRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setShowZoomContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindowRenderer</Scope>
    </TokenIdentifier>
    <Path>class_content_window_renderer.html</Path>
    <Anchor>a5b13f5f895df41072c90b48db5e2e8c5</Anchor>
    <Abstract>Display the zoom context. </Abstract>
    <DeclaredIn>ContentWindowRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPixelStreamOptions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentWindowRenderer</Scope>
    </TokenIdentifier>
    <Path>class_content_window_renderer.html</Path>
    <Anchor>a22ca0b877b6835b79fce33e7e2e1a28a</Anchor>
    <Abstract>Set PixelStream rendering options. </Abstract>
    <DeclaredIn>ContentWindowRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultThumbnailGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>DefaultThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_default_thumbnail_generator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DisplayGroup</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Abstract>A collection of ContentWindows. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a0c10092c41d5dee217dd49f52c7e2302</Anchor>
    <Abstract>Clear all ContentWindows. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBackgroundContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>aa7f8760a761a0051485c0c7e690ab35c</Anchor>
    <Abstract>Set the background content. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeContentWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a29eff017c9c16b6959a0991f13a3f5a5</Anchor>
    <Abstract>Remove a content window. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveContentWindowToFront</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a426a5219ee17a10f991dad5f2f35a21e</Anchor>
    <Abstract>Move a content window to the front. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a2d45f47c71869da3799d9e1c88274cbd</Anchor>
    <Abstract>Emitted whenever the DisplayGroup is modified. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contentWindowAdded</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a7d776c2d2ae02dcbd1a0011446a1c5de</Anchor>
    <Abstract>Emitted when a content window is added. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contentWindowRemoved</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a2901850c2b9893e2c3826cbdf6b1795a</Anchor>
    <Abstract>Emitted when a content window is removed. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contentWindowMovedToFront</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a018a418c963074c2fee79896c327e950</Anchor>
    <Abstract>Emitted when a content window is moved to the front. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DisplayGroup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>aa80c8e186cb872cb2fa73dcd48068d14</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~DisplayGroup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>ae621c03bd2408c8ece4a61237efca355</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addContentWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a979fd60adf1b87cecd02fe848d9d8add</Anchor>
    <Abstract>Add a content window. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBackgroundContentWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a58d15ca16b3fc4f2feae706368effaa3</Anchor>
    <Abstract>Get the background content window. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a2bd3c3a118c0a2be043c10bb6ca8c3dd</Anchor>
    <Abstract>Is the DisplayGroup empty. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getActiveWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>ac369a679a2abf36c39e3ea6bfd034cf0</Anchor>
    <Abstract>Get the active window. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getContentWindows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>aabe08d581ef0a610d8d7fcb1e59e73dc</Anchor>
    <Abstract>Get all windows. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getContentWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a1b578c1cd18a8b8c8fe637de45b4302b</Anchor>
    <Abstract>Get a single window by its id. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContentWindows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>aef0625b115fe22908ff5e9d1f1cc4d56</Anchor>
    <Abstract>Replace the content windows. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DisplayGroupAdapter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>DisplayGroupAdapter</Scope>
    </TokenIdentifier>
    <Path>class_display_group_adapter.html</Path>
    <Abstract>Adapter class for DisplayGroup with virtual methods for unit testing. </Abstract>
    <DeclaredIn>DisplayGroupAdapter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DisplayGroupAdapter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupAdapter</Scope>
    </TokenIdentifier>
    <Path>class_display_group_adapter.html</Path>
    <Anchor>af0572a3abf0c9bd2e6778f9cc6d670f3</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>DisplayGroupAdapter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~DisplayGroupAdapter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupAdapter</Scope>
    </TokenIdentifier>
    <Path>class_display_group_adapter.html</Path>
    <Anchor>a512a4830b15f93f8dc63c27e12e0441d</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>DisplayGroupAdapter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasWindows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupAdapter</Scope>
    </TokenIdentifier>
    <Path>class_display_group_adapter.html</Path>
    <Anchor>adfb107f68a813c4cdef0d07025fd6edd</Anchor>
    <Abstract>Does the DisplayGroup have any windows. </Abstract>
    <DeclaredIn>DisplayGroupAdapter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DisplayGroupRenderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>DisplayGroupRenderer</Scope>
    </TokenIdentifier>
    <Path>class_display_group_renderer.html</Path>
    <Abstract>Renders a DisplayGroup. </Abstract>
    <DeclaredIn>DisplayGroupRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDisplayGroup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>DisplayGroupRenderer</Scope>
    </TokenIdentifier>
    <Path>class_display_group_renderer.html</Path>
    <Anchor>ace9e977654ad391c3626e6aaf8815250</Anchor>
    <Abstract>Set the DisplayGroup to render, replacing the previous one. </Abstract>
    <DeclaredIn>DisplayGroupRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DisplayGroupRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupRenderer</Scope>
    </TokenIdentifier>
    <Path>class_display_group_renderer.html</Path>
    <Anchor>a267139f1dbf757883fb20bfa6a99c6cf</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>DisplayGroupRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupRenderer</Scope>
    </TokenIdentifier>
    <Path>class_display_group_renderer.html</Path>
    <Anchor>a4e203514352113f02c4a0f15e78ea126</Anchor>
    <Abstract>Render the associated DisplayGroup. </Abstract>
    <DeclaredIn>DisplayGroupRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWindowRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupRenderer</Scope>
    </TokenIdentifier>
    <Path>class_display_group_renderer.html</Path>
    <Anchor>acc1cb24019810020e2a4c3648400394b</Anchor>
    <Abstract>Get the window renderer. </Abstract>
    <DeclaredIn>DisplayGroupRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DockPixelStreamer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>DockPixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_dock_pixel_streamer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Anchor>ad4786757e739ab50e1dd959f39882ede</Anchor>
    <Abstract>Process an Event. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>imageUpdated</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Anchor>ae9f831bd8e004763f4e2fd05b17a21a1</Anchor>
    <Abstract>Emit this signal after a new image has been generated. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendCommand</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Anchor>ad3be94b21aba5fb409fa24bbff6454e5</Anchor>
    <Abstract>Emit this signal to send a command to the receiver. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DockPixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_dock_pixel_streamer.html</Path>
    <Anchor>a8bf76ee5cddb35c8f13e9d30352c12a1</Anchor>
    <Abstract>Get the size of the images generated by this streamer. </Abstract>
    <DeclaredIn>DockPixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Anchor>ad3d2288e104737dd9de180fdd9f27e74</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PixelStreamer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Anchor>ac9d996a5dadc05b54dcfa0824eb1a573</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DockToolbar</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>DockToolbar</Scope>
    </TokenIdentifier>
    <Path>class_dock_toolbar.html</Path>
    <Abstract>A Toolbar for the Dock. </Abstract>
    <DeclaredIn>DockToolbar.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DockToolbar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DockToolbar</Scope>
    </TokenIdentifier>
    <Path>class_dock_toolbar.html</Path>
    <Anchor>a155b7ec8ba3fc4e3dc2b2d2072ec6651</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>DockToolbar.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~DockToolbar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DockToolbar</Scope>
    </TokenIdentifier>
    <Path>class_dock_toolbar.html</Path>
    <Anchor>a3125d403fff234d97a60fcbc7d6cc152</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>DockToolbar.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addButton</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DockToolbar</Scope>
    </TokenIdentifier>
    <Path>class_dock_toolbar.html</Path>
    <Anchor>aeb4a7779ce269b5614a8f69a4cd8a148</Anchor>
    <Abstract>Add a button to the right of the Toolbar. </Abstract>
    <DeclaredIn>DockToolbar.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DockToolbar</Scope>
    </TokenIdentifier>
    <Path>class_dock_toolbar.html</Path>
    <Anchor>a189d0957cd88f5b12539f2fe7db56136</Anchor>
    <Abstract>Get the size in pixels. </Abstract>
    <DeclaredIn>DockToolbar.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DockToolbar</Scope>
    </TokenIdentifier>
    <Path>class_dock_toolbar.html</Path>
    <Anchor>ab2ca6a8613bdd6b1c8148c99967a826a</Anchor>
    <Abstract>Get the image, regenerating it if required. </Abstract>
    <DeclaredIn>DockToolbar.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getButtonAt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DockToolbar</Scope>
    </TokenIdentifier>
    <Path>class_dock_toolbar.html</Path>
    <Anchor>ac81f009b1dd0bc2a7c64ffb7a5b7f186</Anchor>
    <Abstract>Get the button at the given position. </Abstract>
    <DeclaredIn>DockToolbar.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DoubleTapGestureRecognizer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>DoubleTapGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_double_tap_gesture_recognizer.html</Path>
    <Abstract>Gesture recognizer for a doubletap gesture. </Abstract>
    <DeclaredIn>DoubleTapGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DoubleTapGestureRecognizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DoubleTapGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_double_tap_gesture_recognizer.html</Path>
    <Anchor>ab59b6ca10f6ac6a453550938a88c4194</Anchor>
    <Abstract>Construct a new doubletap gesture recognizer object. </Abstract>
    <DeclaredIn>DoubleTapGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DoubleTapGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_double_tap_gesture_recognizer.html</Path>
    <Anchor>a525ef12c050e52ebb08cac6bf6d86613</Anchor>
    <DeclaredIn>DoubleTapGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recognize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DoubleTapGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_double_tap_gesture_recognizer.html</Path>
    <Anchor>af5076763e4b8439a945d0fb0f2918011</Anchor>
    <DeclaredIn>DoubleTapGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DoubleTapGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_double_tap_gesture_recognizer.html</Path>
    <Anchor>ad2b438050ccb539b5be87fbed26a166c</Anchor>
    <DeclaredIn>DoubleTapGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>install</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>DoubleTapGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_double_tap_gesture_recognizer.html</Path>
    <Anchor>ad6d5a7109604f21fa5d554bc68140c01</Anchor>
    <Abstract>Installs the doubletap recognizer in the current QApplication. </Abstract>
    <DeclaredIn>DoubleTapGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uninstall</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>DoubleTapGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_double_tap_gesture_recognizer.html</Path>
    <Anchor>abb2caf1d13da4c473dbb1cb8f5f40673</Anchor>
    <Abstract>Uninstalls the doubletap recognizer from the current QApplication. </Abstract>
    <DeclaredIn>DoubleTapGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>DoubleTapGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_double_tap_gesture_recognizer.html</Path>
    <Anchor>aba02d05aa3df105fb642fb5d28be3989</Anchor>
    <DeclaredIn>DoubleTapGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DynamicTexture</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>DynamicTexture</Scope>
    </TokenIdentifier>
    <Path>class_dynamic_texture.html</Path>
    <Abstract>A dynamically loaded large scale image. </Abstract>
    <DeclaredIn>DynamicTexture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DynamicTexture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DynamicTexture</Scope>
    </TokenIdentifier>
    <Path>class_dynamic_texture.html</Path>
    <Anchor>a191421943158516c192366d066a5b2b1</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>DynamicTexture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~DynamicTexture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DynamicTexture</Scope>
    </TokenIdentifier>
    <Path>class_dynamic_texture.html</Path>
    <Anchor>af84c674998841fd53badf7679aaea3e4</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>DynamicTexture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DynamicTexture</Scope>
    </TokenIdentifier>
    <Path>class_dynamic_texture.html</Path>
    <Anchor>af754a89e1cb67241e7c51331edc6c3cb</Anchor>
    <Abstract>Get the dimensions of the full resolution texture. </Abstract>
    <DeclaredIn>DynamicTexture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DynamicTexture</Scope>
    </TokenIdentifier>
    <Path>class_dynamic_texture.html</Path>
    <Anchor>ab71e2029cf088f165179d6cc475ac6a1</Anchor>
    <Abstract>Render the dynamic texture. </Abstract>
    <DeclaredIn>DynamicTexture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preRenderUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DynamicTexture</Scope>
    </TokenIdentifier>
    <Path>class_dynamic_texture.html</Path>
    <Anchor>a90adcd00cd6ae26626d9c597cd3e9d0b</Anchor>
    <Abstract>Pre render step. </Abstract>
    <DeclaredIn>DynamicTexture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postRenderUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DynamicTexture</Scope>
    </TokenIdentifier>
    <Path>class_dynamic_texture.html</Path>
    <Anchor>a9678f5db1e6796c978ffeb1057a282b6</Anchor>
    <Abstract>Post render step. </Abstract>
    <DeclaredIn>DynamicTexture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateImagePyramid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DynamicTexture</Scope>
    </TokenIdentifier>
    <Path>class_dynamic_texture.html</Path>
    <Anchor>a186092d5c1f2a2c07fca68f4445d4d37</Anchor>
    <Abstract>Generate an image Pyramid from the current uri and save it to the disk. </Abstract>
    <DeclaredIn>DynamicTexture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DynamicTexture</Scope>
    </TokenIdentifier>
    <Path>class_dynamic_texture.html</Path>
    <Anchor>a6353ae75d0386fefe824ce8cfe38e94a</Anchor>
    <Abstract>Load the image for this part of the texture. </Abstract>
    <DeclaredIn>DynamicTexture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decrementGlobalThreadCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DynamicTexture</Scope>
    </TokenIdentifier>
    <Path>class_dynamic_texture.html</Path>
    <Anchor>ad1cc18b890629c2e154ccfa3e0e03217</Anchor>
    <Abstract>Decrement the global count of loading threads. </Abstract>
    <DeclaredIn>DynamicTexture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FactoryObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>a727abf1cee9211870d9b155925441ccb</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>FactoryObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FactoryObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>a49eaa1806635c84fdf9b0f80a1e0128b</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>FactoryObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRenderContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>acf3fd8f50c49b6c5cc5c5a9cc32fe508</Anchor>
    <Abstract>Set the render context. </Abstract>
    <DeclaredIn>FactoryObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRenderContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>ae50f2e3fe3b5a6458a2c8b413c0ff3a9</Anchor>
    <Abstract>Get the render context. </Abstract>
    <DeclaredIn>FactoryObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>a8d89f74806cc8483c5f231551f1a834c</Anchor>
    <Abstract>Get the current frame index for this Object. </Abstract>
    <DeclaredIn>FactoryObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>af33e624cd522c4940a6bd876a952102e</Anchor>
    <Abstract>Must be called everytime a derived object is rendered. </Abstract>
    <DeclaredIn>FactoryObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pyramidFileExtension</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>DynamicTexture</Scope>
    </TokenIdentifier>
    <Path>class_dynamic_texture.html</Path>
    <Anchor>af74abe9e07c976642bb60a60ca0c5cc4</Anchor>
    <Abstract>The exension of pyramid metadata files. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pyramidFolderSuffix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>DynamicTexture</Scope>
    </TokenIdentifier>
    <Path>class_dynamic_texture.html</Path>
    <Anchor>a15d1b98be5671aa2b56ea62f99b36d65</Anchor>
    <Abstract>The standard suffix for pyramid image folders. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderContext_</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>aece7dc20cd5d4989629d65fbf23edfa9</Anchor>
    <Abstract>A reference to the render context. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DynamicTextureContent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>DynamicTextureContent</Scope>
    </TokenIdentifier>
    <Path>class_dynamic_texture_content.html</Path>
    <Abstract>The Content object for a dynamically loaded large scale image. </Abstract>
    <DeclaredIn>DynamicTextureContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DynamicTextureContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DynamicTextureContent</Scope>
    </TokenIdentifier>
    <Path>class_dynamic_texture_content.html</Path>
    <Anchor>a1ce069ea636880f9785dbd3c74aec486</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>DynamicTextureContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DynamicTextureContent</Scope>
    </TokenIdentifier>
    <Path>class_dynamic_texture_content.html</Path>
    <Anchor>af2c2c0604425a68e15d8148ebb4eb691</Anchor>
    <Abstract>Get the content type. </Abstract>
    <DeclaredIn>DynamicTextureContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMetadata</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DynamicTextureContent</Scope>
    </TokenIdentifier>
    <Path>class_dynamic_texture_content.html</Path>
    <Anchor>ad98b51096a5a4b553b35d8c650909f99</Anchor>
    <Abstract>Read texture informations from the source URI. </Abstract>
    <DeclaredIn>DynamicTextureContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Content</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ae491288d2efce7fa63d3e777580630b4</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a887d2b952cd824d70f64106ae048a5f8</Anchor>
    <Abstract>Get the content URI. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>aa4681ca97acea99fbe88e20f0e664bc0</Anchor>
    <Abstract>Get the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a1b7a6f49f447c124b497b0a844fd6ea6</Anchor>
    <Abstract>Set the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>blockAdvance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af4cadaac5031fa05e4472bce153f3ea9</Anchor>
    <Abstract>Used to indicate that the window is being moved. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a44c022cb6fed6fb1b0dff45e39ececb9</Anchor>
    <Abstract>Emitted by any Content subclass when its state has been modified. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ElapsedTimer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ElapsedTimer</Scope>
    </TokenIdentifier>
    <Path>class_elapsed_timer.html</Path>
    <Abstract>Simple timer to mesures time differences. </Abstract>
    <DeclaredIn>ElapsedTimer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ElapsedTimer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ElapsedTimer</Scope>
    </TokenIdentifier>
    <Path>class_elapsed_timer.html</Path>
    <Anchor>a898261990fc2ab88f0ac3c35f0de83d0</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ElapsedTimer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCurrentTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ElapsedTimer</Scope>
    </TokenIdentifier>
    <Path>class_elapsed_timer.html</Path>
    <Anchor>adb326c5e59181f360b985b00768e91df</Anchor>
    <Abstract>Set the current time. </Abstract>
    <DeclaredIn>ElapsedTimer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getElapsedTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ElapsedTimer</Scope>
    </TokenIdentifier>
    <Path>class_elapsed_timer.html</Path>
    <Anchor>a7b19ebb48d1788a3e9d3e505705e21f2</Anchor>
    <Abstract>Get the elapsed time between the last two calls to setCurrentTime(). </Abstract>
    <DeclaredIn>ElapsedTimer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EventReceiver</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>EventReceiver</Scope>
    </TokenIdentifier>
    <Path>class_event_receiver.html</Path>
    <Abstract>Interface for classes to register as receivers for events. </Abstract>
    <DeclaredIn>EventReceiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Factories</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Factories</Scope>
    </TokenIdentifier>
    <Path>class_factories.html</Path>
    <Abstract>A set of Factory&amp;lt;T&amp;gt; for all valid ContentTypes. </Abstract>
    <DeclaredIn>Factories.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updatePixelStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>Factories</Scope>
    </TokenIdentifier>
    <Path>class_factories.html</Path>
    <Anchor>ab1f20400c355020ffd50fb599429e19c</Anchor>
    <Abstract>Update a PixelStream with the given frame. </Abstract>
    <DeclaredIn>Factories.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Factories</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Factories</Scope>
    </TokenIdentifier>
    <Path>class_factories.html</Path>
    <Anchor>a9aa8b67f53575a9cbe0498c654e67365</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Factories.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFactoryObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Factories</Scope>
    </TokenIdentifier>
    <Path>class_factories.html</Path>
    <Anchor>a79d566ae59ce5e84721f5e53a132b923</Anchor>
    <Abstract>Get the factory object associated to a given Content. </Abstract>
    <DeclaredIn>Factories.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Factories</Scope>
    </TokenIdentifier>
    <Path>class_factories.html</Path>
    <Anchor>ad53ad2aadee086b767ff98b082f2cdd4</Anchor>
    <Abstract>Clear all Factories (useful on shutdown). </Abstract>
    <DeclaredIn>Factories.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preRenderUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Factories</Scope>
    </TokenIdentifier>
    <Path>class_factories.html</Path>
    <Anchor>a2c686c9f83fa3bb50c808c84b0faf1b3</Anchor>
    <Abstract>Update the objects before rendering. </Abstract>
    <DeclaredIn>Factories.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postRenderUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Factories</Scope>
    </TokenIdentifier>
    <Path>class_factories.html</Path>
    <Anchor>a532b706229bbcf62431794cc1d48dd0a</Anchor>
    <Abstract>Update the objects after rendering and garbarge-collect unused ones. </Abstract>
    <DeclaredIn>Factories.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTextureFactory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Factories</Scope>
    </TokenIdentifier>
    <Path>class_factories.html</Path>
    <Anchor>a2e74bc4cb67f356725822c48a8203342</Anchor>
    <Abstract>Getters for specific Factory types. </Abstract>
    <DeclaredIn>Factories.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Factory</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>Factory</Scope>
    </TokenIdentifier>
    <Path>class_factory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FactoryObject</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Abstract>An interface for objects that store Content data on Wall processes. </Abstract>
    <DeclaredIn>FactoryObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FactoryObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>a727abf1cee9211870d9b155925441ccb</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>FactoryObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FactoryObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>a49eaa1806635c84fdf9b0f80a1e0128b</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>FactoryObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>a2de74e65df58f929411c34f13ee2f881</Anchor>
    <Abstract>Get the dimensions of the full resolution texture. </Abstract>
    <DeclaredIn>FactoryObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>a8695c8130dd9bcaaaf4a620c38f50fe8</Anchor>
    <Abstract>Render the FactoryObject. </Abstract>
    <DeclaredIn>FactoryObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRenderContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>acf3fd8f50c49b6c5cc5c5a9cc32fe508</Anchor>
    <Abstract>Set the render context. </Abstract>
    <DeclaredIn>FactoryObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRenderContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>ae50f2e3fe3b5a6458a2c8b413c0ff3a9</Anchor>
    <Abstract>Get the render context. </Abstract>
    <DeclaredIn>FactoryObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>a8d89f74806cc8483c5f231551f1a834c</Anchor>
    <Abstract>Get the current frame index for this Object. </Abstract>
    <DeclaredIn>FactoryObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>af33e624cd522c4940a6bd876a952102e</Anchor>
    <Abstract>Must be called everytime a derived object is rendered. </Abstract>
    <DeclaredIn>FactoryObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderContext_</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>aece7dc20cd5d4989629d65fbf23edfa9</Anchor>
    <Abstract>A reference to the render context. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFMPEGMovie</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Abstract>Read and play movies using the FFMPEG library. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFMPEGMovie</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>a9fcab46d4c344400975ade1f085fa098</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FFMPEGMovie</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>ada29015e30fd77182119418abe0356cd</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>a0e0248f752f4b4fc318d3fc3b22069b4</Anchor>
    <Abstract>Is the movie valid. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>a9a0ec22f9170bb513afdce6b2095eb85</Anchor>
    <Abstract>Get the frame width. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>af925db8310451b645f8645941e054837</Anchor>
    <Abstract>Get the frame height. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>ae483dd42c4a3551fe0df8ca2dd8326b4</Anchor>
    <Abstract>Get a pointer to the iamge data. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>a793dd5dbad15936961fe357867d7fd30</Anchor>
    <Abstract>Update the internal timestamp to play the movie. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNewFrameAvailable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>a601b5419406d9e3c1cb090c2cc848af2</Anchor>
    <Abstract>Is there a new frame available. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLoop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>a9d227510dc1803e8387062408ad8591d</Anchor>
    <Abstract>Set looping behaviour when reaching the end of the file. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>ac79b8e3e5c0774e96849ffd57809311c</Anchor>
    <Abstract>Get the movie duration in seconds. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimestamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>a55a94421b01c4162c05ed56821332bd7</Anchor>
    <Abstract>Get the current timestamp. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>jumpTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>a48fa86d7a01ee7375257926d18990edb</Anchor>
    <Abstract>Jump to a random position in the movie. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFMPEGVideoFrameConverter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FFMPEGVideoFrameConverter</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_frame_converter.html</Path>
    <Abstract>Converts FFMPEG&amp;#39;s AVFrame format to a data buffer of user-defined format. </Abstract>
    <DeclaredIn>FFMPEGVideoFrameConverter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFMPEGVideoFrameConverter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoFrameConverter</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_frame_converter.html</Path>
    <Anchor>a02be7f655b9fff8d214dde7f2929ea79</Anchor>
    <Abstract>Create a new converter. </Abstract>
    <DeclaredIn>FFMPEGVideoFrameConverter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FFMPEGVideoFrameConverter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoFrameConverter</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_frame_converter.html</Path>
    <Anchor>aeefb0051a145deb3d6b6fd58bb4906ac</Anchor>
    <Abstract>Desturctor. </Abstract>
    <DeclaredIn>FFMPEGVideoFrameConverter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convert</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoFrameConverter</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_frame_converter.html</Path>
    <Anchor>adc68950591682923e5d56a8aa30653f2</Anchor>
    <Abstract>Convert an AVFrame to the target data format. </Abstract>
    <DeclaredIn>FFMPEGVideoFrameConverter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoFrameConverter</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_frame_converter.html</Path>
    <Anchor>a2ac3d7f3d9c6be93d31fc4487ec72787</Anchor>
    <Abstract>Get the converted data in the target format. </Abstract>
    <DeclaredIn>FFMPEGVideoFrameConverter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FileCommandHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FileCommandHandler</Scope>
    </TokenIdentifier>
    <Path>class_file_command_handler.html</Path>
    <Abstract>Handle file Commands. </Abstract>
    <DeclaredIn>FileCommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FileCommandHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FileCommandHandler</Scope>
    </TokenIdentifier>
    <Path>class_file_command_handler.html</Path>
    <Anchor>ab124d2c13c024bdd5722ac02c228c26e</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>FileCommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FileCommandHandler</Scope>
    </TokenIdentifier>
    <Path>class_file_command_handler.html</Path>
    <Anchor>a65885a81e1b4b43eec3e2473dfd9c30e</Anchor>
    <Abstract>Get the type of commands handled by the implementation. </Abstract>
    <DeclaredIn>FileCommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FileCommandHandler</Scope>
    </TokenIdentifier>
    <Path>class_file_command_handler.html</Path>
    <Anchor>aa003525a38929861f2e4f53dca050ef4</Anchor>
    <Abstract>Handle a file Command. </Abstract>
    <DeclaredIn>FileCommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FolderThumbnailGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FolderThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_folder_thumbnail_generator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FpsCounter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FpsCounter</Scope>
    </TokenIdentifier>
    <Path>class_fps_counter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FpsRenderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FpsRenderer</Scope>
    </TokenIdentifier>
    <Path>class_fps_renderer.html</Path>
    <Abstract>Displays rendering performance using an FpsCounter. </Abstract>
    <DeclaredIn>FpsRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FpsRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FpsRenderer</Scope>
    </TokenIdentifier>
    <Path>class_fps_renderer.html</Path>
    <Anchor>a70040edec19f285c3f9919dd8358e9be</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>FpsRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FpsRenderer</Scope>
    </TokenIdentifier>
    <Path>class_fps_renderer.html</Path>
    <Anchor>a77aee83454cd3c11778e980d33879fe5</Anchor>
    <Abstract>Render the object. </Abstract>
    <DeclaredIn>FpsRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GLQuad</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>GLQuad</Scope>
    </TokenIdentifier>
    <Path>class_g_l_quad.html</Path>
    <Abstract>A simple OpenGL textured quad. </Abstract>
    <DeclaredIn>GLQuad.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GLQuad</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>GLQuad</Scope>
    </TokenIdentifier>
    <Path>class_g_l_quad.html</Path>
    <Anchor>a45da9f8e3dc33cd8e90c05160bfca7db</Anchor>
    <Abstract>Construct a unit quad. </Abstract>
    <DeclaredIn>GLQuad.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>GLQuad</Scope>
    </TokenIdentifier>
    <Path>class_g_l_quad.html</Path>
    <Anchor>afd60b9c85e032b0cb25030a91af4401a</Anchor>
    <Abstract>Draw the quad. </Abstract>
    <DeclaredIn>GLQuad.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTexCoords</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>GLQuad</Scope>
    </TokenIdentifier>
    <Path>class_g_l_quad.html</Path>
    <Anchor>a1b70e4df8b55aa21321af5ec70ae20c0</Anchor>
    <Abstract>Set the texture coordinates. </Abstract>
    <DeclaredIn>GLQuad.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnableTexture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>GLQuad</Scope>
    </TokenIdentifier>
    <Path>class_g_l_quad.html</Path>
    <Anchor>a3341ab124c741e749e804b4647a193f2</Anchor>
    <Abstract>Enable or disable texturing. </Abstract>
    <DeclaredIn>GLQuad.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRenderMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>GLQuad</Scope>
    </TokenIdentifier>
    <Path>class_g_l_quad.html</Path>
    <Anchor>a855528f288038c258ca2883a259d4ee7</Anchor>
    <Abstract>Set the render mode [GL_QUADS|GL_LINE_LOOP] (default: GL_QUADS) </Abstract>
    <DeclaredIn>GLQuad.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GLTexture2D</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>GLTexture2D</Scope>
    </TokenIdentifier>
    <Path>class_g_l_texture2_d.html</Path>
    <Abstract>A 2D GLTexture object. </Abstract>
    <DeclaredIn>GLTexture2D.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GLTexture2D</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>GLTexture2D</Scope>
    </TokenIdentifier>
    <Path>class_g_l_texture2_d.html</Path>
    <Anchor>a372b5ecd3aee378901ba4ddccbeeee09</Anchor>
    <Abstract>Create an empty texture. </Abstract>
    <DeclaredIn>GLTexture2D.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~GLTexture2D</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>GLTexture2D</Scope>
    </TokenIdentifier>
    <Path>class_g_l_texture2_d.html</Path>
    <Anchor>a2a43517e4850ab7415c51c56680c2370</Anchor>
    <Abstract>Free the GLTexture. </Abstract>
    <DeclaredIn>GLTexture2D.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>GLTexture2D</Scope>
    </TokenIdentifier>
    <Path>class_g_l_texture2_d.html</Path>
    <Anchor>a5e21468d2163d7fa64d227e196a943c0</Anchor>
    <Abstract>Init the texture using the given image. </Abstract>
    <DeclaredIn>GLTexture2D.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>GLTexture2D</Scope>
    </TokenIdentifier>
    <Path>class_g_l_texture2_d.html</Path>
    <Anchor>a3eeb6b55ba57e347c684d2181593834a</Anchor>
    <Abstract>Update the texture using the given image. </Abstract>
    <DeclaredIn>GLTexture2D.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>GLTexture2D</Scope>
    </TokenIdentifier>
    <Path>class_g_l_texture2_d.html</Path>
    <Anchor>a786889586909ab70dc843a61fea9f563</Anchor>
    <Abstract>Update the texture using the given image. </Abstract>
    <DeclaredIn>GLTexture2D.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>GLTexture2D</Scope>
    </TokenIdentifier>
    <Path>class_g_l_texture2_d.html</Path>
    <Anchor>aa4b35f1ece4b0cdd3f1164b51f00c803</Anchor>
    <Abstract>Get the texture size. </Abstract>
    <DeclaredIn>GLTexture2D.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>GLTexture2D</Scope>
    </TokenIdentifier>
    <Path>class_g_l_texture2_d.html</Path>
    <Anchor>adf142642bb922e8a7d110c75579d2fe4</Anchor>
    <Abstract>Bind the texture. </Abstract>
    <DeclaredIn>GLTexture2D.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>GLTexture2D</Scope>
    </TokenIdentifier>
    <Path>class_g_l_texture2_d.html</Path>
    <Anchor>a4b64d7c28e2b962abcc34c7c89d69439</Anchor>
    <Abstract>Is the texture valid. </Abstract>
    <DeclaredIn>GLTexture2D.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>free</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>GLTexture2D</Scope>
    </TokenIdentifier>
    <Path>class_g_l_texture2_d.html</Path>
    <Anchor>a0c750220dba2b28737843b2ee40003ca</Anchor>
    <Abstract>Free the GLTexture. </Abstract>
    <DeclaredIn>GLTexture2D.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GLWindow</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>GLWindow</Scope>
    </TokenIdentifier>
    <Path>class_g_l_window.html</Path>
    <Abstract>An OpenGL window used by Wall applications to render contents. </Abstract>
    <DeclaredIn>GLWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GLWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>GLWindow</Scope>
    </TokenIdentifier>
    <Path>class_g_l_window.html</Path>
    <Anchor>a5b0d839a96359acd64d28fd4edb64a2a</Anchor>
    <Abstract>Create a new window. </Abstract>
    <DeclaredIn>GLWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~GLWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>GLWindow</Scope>
    </TokenIdentifier>
    <Path>class_g_l_window.html</Path>
    <Anchor>a2eeaea2148f4f72344edd6d1bac9759b</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>GLWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addRenderable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>GLWindow</Scope>
    </TokenIdentifier>
    <Path>class_g_l_window.html</Path>
    <Anchor>a06f036f9a43af37ae9fb595017e4ee81</Anchor>
    <Abstract>Add an object to be rendered. </Abstract>
    <DeclaredIn>GLWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBackgroundColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>GLWindow</Scope>
    </TokenIdentifier>
    <Path>class_g_l_window.html</Path>
    <Anchor>a54f056c7e77ced0bf1f5fd087a5ef75a</Anchor>
    <Abstract>Set the background color. </Abstract>
    <DeclaredIn>GLWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRegionVisible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>GLWindow</Scope>
    </TokenIdentifier>
    <Path>class_g_l_window.html</Path>
    <Anchor>a7a536f4ff4554f4e0b7f91c26611a064</Anchor>
    <Abstract>Is the given region visible in this window. </Abstract>
    <DeclaredIn>GLWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProjectedPixelRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>GLWindow</Scope>
    </TokenIdentifier>
    <Path>class_g_l_window.html</Path>
    <Anchor>a913776287ef61e400c5f89d74063237c</Anchor>
    <Abstract>Get the region spanned by a unit rectangle {(0;0),(1;1)} in the current GL view. </Abstract>
    <DeclaredIn>GLWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImageJpegDecompressor</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ImageJpegDecompressor</Scope>
    </TokenIdentifier>
    <Path>class_image_jpeg_decompressor.html</Path>
    <Abstract>Decompress Jpeg compressed data. </Abstract>
    <DeclaredIn>ImageJpegDecompressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decompress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ImageJpegDecompressor</Scope>
    </TokenIdentifier>
    <Path>class_image_jpeg_decompressor.html</Path>
    <Anchor>adcf14391842a37dc8fd9ab24d936ea31</Anchor>
    <Abstract>Decompress a Jpeg image. </Abstract>
    <DeclaredIn>ImageJpegDecompressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImageThumbnailGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ImageThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_image_thumbnail_generator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Marker</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Marker</Scope>
    </TokenIdentifier>
    <Path>class_marker.html</Path>
    <Abstract>A marker to represent touch points. </Abstract>
    <DeclaredIn>Marker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Marker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Marker</Scope>
    </TokenIdentifier>
    <Path>class_marker.html</Path>
    <Anchor>ad4e167fa334fbde49f073e4362c4d3db</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Marker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Marker</Scope>
    </TokenIdentifier>
    <Path>class_marker.html</Path>
    <Anchor>a5fac4de8b7305659fd1f29113564e291</Anchor>
    <Abstract>Set the position. </Abstract>
    <DeclaredIn>Marker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Marker</Scope>
    </TokenIdentifier>
    <Path>class_marker.html</Path>
    <Anchor>a5168316632777d9730e865db55fd7b37</Anchor>
    <Abstract>Get the position. </Abstract>
    <DeclaredIn>Marker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>touch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Marker</Scope>
    </TokenIdentifier>
    <Path>class_marker.html</Path>
    <Anchor>ae117b14a137fa5dfa80a53d3f5582412</Anchor>
    <Abstract>Update the internal timestamp without other modifications. </Abstract>
    <DeclaredIn>Marker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Marker</Scope>
    </TokenIdentifier>
    <Path>class_marker.html</Path>
    <Anchor>a4146232a49770f84278b49d7eb4baa72</Anchor>
    <Abstract>Check if the marker is active. </Abstract>
    <DeclaredIn>Marker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MarkerRenderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MarkerRenderer</Scope>
    </TokenIdentifier>
    <Path>class_marker_renderer.html</Path>
    <Abstract>Renderer for Marker objects. </Abstract>
    <DeclaredIn>MarkerRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMarkers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>MarkerRenderer</Scope>
    </TokenIdentifier>
    <Path>class_marker_renderer.html</Path>
    <Anchor>aa9f34fec31f659d6282298243e198296</Anchor>
    <Abstract>Set the Markers to render, replacing the previous ones. </Abstract>
    <DeclaredIn>MarkerRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MarkerRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MarkerRenderer</Scope>
    </TokenIdentifier>
    <Path>class_marker_renderer.html</Path>
    <Anchor>ad13f73916be06eb07f2824de8aa0f209</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>MarkerRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MarkerRenderer</Scope>
    </TokenIdentifier>
    <Path>class_marker_renderer.html</Path>
    <Anchor>a4261da0f8723115b12d5af4e63c8a140</Anchor>
    <Abstract>Render the markers. </Abstract>
    <DeclaredIn>MarkerRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Markers</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Markers</Scope>
    </TokenIdentifier>
    <Path>class_markers.html</Path>
    <Abstract>Store Markers to display user interaction. </Abstract>
    <DeclaredIn>Markers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Markers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Markers</Scope>
    </TokenIdentifier>
    <Path>class_markers.html</Path>
    <Anchor>ae2bd7902a4485536ee205e3c66813b2f</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Markers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMarkers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Markers</Scope>
    </TokenIdentifier>
    <Path>class_markers.html</Path>
    <Anchor>a6616fe4a0e78b282a077ae4153a9c1fa</Anchor>
    <Abstract>Get all the markers. </Abstract>
    <DeclaredIn>Markers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MasterConfiguration</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MasterConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_master_configuration.html</Path>
    <Abstract>The MasterConfiguration class manages all the parameters needed to setup the Master process...</Abstract>
    <DeclaredIn>MasterConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MasterConfiguration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_master_configuration.html</Path>
    <Anchor>a1e9671231ef79842a80c80009584987e</Anchor>
    <Abstract>MasterConfiguration constructor. </Abstract>
    <DeclaredIn>MasterConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDockStartDir</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_master_configuration.html</Path>
    <Anchor>acab89d4f31807d1eb7ba1b6b8b85162b</Anchor>
    <Abstract>getDockStartDir Get the Dock startup directory </Abstract>
    <DeclaredIn>MasterConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWebServicePort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_master_configuration.html</Path>
    <Anchor>a161728807fc81592ff865956942bc4c3</Anchor>
    <Abstract>getWebServicePort Get the port where the WebService server will be listening for incoming requests...</Abstract>
    <DeclaredIn>MasterConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWebBrowserDefaultURL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_master_configuration.html</Path>
    <Anchor>a7786132d2c47c7575b7cd682752d1b3c</Anchor>
    <Abstract>Get the URL used as start page when opening a Web Browser. </Abstract>
    <DeclaredIn>MasterConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Configuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a4f41abbe40c7e1345a325369c86aaaca</Anchor>
    <Abstract>Create a new configuration from an xml file. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Configuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a1226f87dc3c27be16eb16e53301eb2f3</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalScreenCountX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aca560ac9d3b46ef39444287ab4ba800f</Anchor>
    <Abstract>getTotalScreenCountX Get the total number of screens along the x axis </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalScreenCountY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a0f61e23c663322c808a33b8deeab198e</Anchor>
    <Abstract>getTotalScreenCountY Get the total number of screens along the y axis </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScreenWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a957a6e17a77943ca1469a599c4116987</Anchor>
    <Abstract>getScreenWidth Get the width of a screen. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScreenHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>acac053b8e85c8e13dc1b24f829d70b25</Anchor>
    <Abstract>getScreenWidth Get the height of a screen. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMullionWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aa4f921578b584411cab548d015e9ceba</Anchor>
    <Abstract>getMullionWidth Get the padding nedded to compensate for the physical displays&amp;#39; bezel ...</Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMullionHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aebf3438c6130ea0a50ed85d0ed2bde93</Anchor>
    <Abstract>getMullionHeight Get the padding nedded to compensate for the physical displays&amp;#39; bezel ...</Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aa7b4b828ea7bc8afcf2bed3857007eaa</Anchor>
    <Abstract>getTotalWidth Get the total width of the DisplayWall, including the Mullion padding. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aba8af0457ab8769b5baab775ecebb8ba</Anchor>
    <Abstract>getTotalHeight Get the total height of the DisplayWall, including the Mullion padding. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a1031736dbddf1becee943184afb27dda</Anchor>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNormalizedScreenRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a1bd273cb0c1f333906015ab2490a5895</Anchor>
    <Abstract>Get the normalized coordinates and dimensions of a screen. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFullscreen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a3d38c54f965dce34f3839867a508779a</Anchor>
    <Abstract>getFullscreen Display the windows in fullscreen mode </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBackgroundUri</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a40a9ddefb4fc943fe5c57c77741af319</Anchor>
    <Abstract>getBackgroundUri Get the URI to the Content to be used as background </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBackgroundColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a26fbc602af0411414e371c4eb5558cbe</Anchor>
    <Abstract>getBackgroundColor Get the uniform color to use for Background </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBackgroundColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a51644ed6bfcc2f0e09557583e9682bc1</Anchor>
    <Abstract>setBackgroundColor Set the background color </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBackgroundUri</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a3e2f9576c5f221d7740bc315fc85bea4</Anchor>
    <Abstract>setBackgroundUri Set the URI to the Content to be used as background </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>save</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>af8fbe3f7ad79653dc6bf100bd7b77a6d</Anchor>
    <Abstract>save Save the configuration to the current xml file. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>save</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a73d1fdbf347319f3afbb7ef3245d6eaf</Anchor>
    <Abstract>save Save the configuration to the specified xml file. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>filename_</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a43ad513bddcdfe68ff36f6254a843c1b</Anchor>
    <Abstract>filename_ The path to the xml configuration file </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MasterFromWallChannel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MasterFromWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_from_wall_channel.html</Path>
    <Abstract>Receiving channel from the wall processes to the master application. </Abstract>
    <DeclaredIn>MasterFromWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processMessages</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>MasterFromWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_from_wall_channel.html</Path>
    <Anchor>ac0e5d6e5be039476a7895461f22f4281</Anchor>
    <Abstract>Process messages until the QUIT message is received. </Abstract>
    <DeclaredIn>MasterFromWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receivedRequestFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MasterFromWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_from_wall_channel.html</Path>
    <Anchor>a264ae08cc29c535b111d1844b0fcffb4</Anchor>
    <Abstract>Emitted when the given pixel stream was requested to send the next frame. </Abstract>
    <DeclaredIn>MasterFromWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MasterFromWallChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterFromWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_from_wall_channel.html</Path>
    <Anchor>ae3a1dc5ffe6841e24a3df3bd78254d38</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>MasterFromWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MasterToWallChannel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MasterToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_to_wall_channel.html</Path>
    <Abstract>Sending channel from the master application to the wall processes. </Abstract>
    <DeclaredIn>MasterToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>MasterToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_to_wall_channel.html</Path>
    <Anchor>a49602cd1e7a69efd20ffbaebc2f84169</Anchor>
    <Abstract>Send the given DisplayGroup to the wall processes. </Abstract>
    <DeclaredIn>MasterToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>MasterToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_to_wall_channel.html</Path>
    <Anchor>ad3d53b56dce19e50269a0e8f17303aa6</Anchor>
    <Abstract>Send the given Options to the wall processes. </Abstract>
    <DeclaredIn>MasterToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>MasterToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_to_wall_channel.html</Path>
    <Anchor>a40551a5a29a90c81278ab358f8dd0776</Anchor>
    <Abstract>Send the given Markers to the wall processes. </Abstract>
    <DeclaredIn>MasterToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>MasterToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_to_wall_channel.html</Path>
    <Anchor>a308ed9827083ebb1092681342dacc891</Anchor>
    <Abstract>Send pixel stream frame to the wall processes. </Abstract>
    <DeclaredIn>MasterToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendQuit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>MasterToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_to_wall_channel.html</Path>
    <Anchor>ad0d468ff235b833e89f854b067e16117</Anchor>
    <Abstract>Send quit message to the wall processes, terminating the application. </Abstract>
    <DeclaredIn>MasterToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MasterToWallChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_to_wall_channel.html</Path>
    <Anchor>a8f671d612ef52095bf7290d791df4fc0</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>MasterToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MessageHeader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MessageHeader</Scope>
    </TokenIdentifier>
    <Path>struct_message_header.html</Path>
    <Abstract>Fixed-size message header. </Abstract>
    <DeclaredIn>MessageHeader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MessageHeader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MessageHeader</Scope>
    </TokenIdentifier>
    <Path>struct_message_header.html</Path>
    <Anchor>a7c771f0c214e9e26b59a299c79c0ad2f</Anchor>
    <Abstract>Construct a default message header. </Abstract>
    <DeclaredIn>MessageHeader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MessageHeader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MessageHeader</Scope>
    </TokenIdentifier>
    <Path>struct_message_header.html</Path>
    <Anchor>a53f520a845bfeb329232db3175c613c6</Anchor>
    <Abstract>Construct a message header with a uri. </Abstract>
    <DeclaredIn>MessageHeader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MessageHeader</Scope>
    </TokenIdentifier>
    <Path>struct_message_header.html</Path>
    <Anchor>a2a4adb8c6d8421cf2b3feed9527b2066</Anchor>
    <Abstract>Message type. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MessageHeader</Scope>
    </TokenIdentifier>
    <Path>struct_message_header.html</Path>
    <Anchor>a826a306145aca1822367fc9167599682</Anchor>
    <Abstract>Size of the message payload. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uri</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MessageHeader</Scope>
    </TokenIdentifier>
    <Path>struct_message_header.html</Path>
    <Anchor>aaa0245ecdd59d0dfd34cf90eca70fca5</Anchor>
    <Abstract>Optional URI related to message. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serializedSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MessageHeader</Scope>
    </TokenIdentifier>
    <Path>struct_message_header.html</Path>
    <Anchor>af18f89ad98e61703b0d5783bb324d002</Anchor>
    <Abstract>The size of the QDataStream serialized output. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Movie</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Movie</Scope>
    </TokenIdentifier>
    <Path>class_movie.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Movie</Scope>
    </TokenIdentifier>
    <Path>class_movie.html</Path>
    <Anchor>a8b4c0f2583b997f11c6d5aaf9cb05545</Anchor>
    <Abstract>Get the dimensions of the full resolution texture. </Abstract>
    <DeclaredIn>Movie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Movie</Scope>
    </TokenIdentifier>
    <Path>class_movie.html</Path>
    <Anchor>aeb5aae90f1e4c41d7c395b0890a9db81</Anchor>
    <Abstract>Render the FactoryObject. </Abstract>
    <DeclaredIn>Movie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FactoryObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>a727abf1cee9211870d9b155925441ccb</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>FactoryObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FactoryObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>a49eaa1806635c84fdf9b0f80a1e0128b</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>FactoryObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRenderContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>acf3fd8f50c49b6c5cc5c5a9cc32fe508</Anchor>
    <Abstract>Set the render context. </Abstract>
    <DeclaredIn>FactoryObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRenderContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>ae50f2e3fe3b5a6458a2c8b413c0ff3a9</Anchor>
    <Abstract>Get the render context. </Abstract>
    <DeclaredIn>FactoryObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>a8d89f74806cc8483c5f231551f1a834c</Anchor>
    <Abstract>Get the current frame index for this Object. </Abstract>
    <DeclaredIn>FactoryObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>af33e624cd522c4940a6bd876a952102e</Anchor>
    <Abstract>Must be called everytime a derived object is rendered. </Abstract>
    <DeclaredIn>FactoryObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderContext_</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>aece7dc20cd5d4989629d65fbf23edfa9</Anchor>
    <Abstract>A reference to the render context. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MovieContent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MovieContent</Scope>
    </TokenIdentifier>
    <Path>class_movie_content.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MovieContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieContent</Scope>
    </TokenIdentifier>
    <Path>class_movie_content.html</Path>
    <Anchor>a156808cda9a564dd70229ad2fe203e9c</Anchor>
    <Abstract>Create a MovieContent from the given uri. </Abstract>
    <DeclaredIn>MovieContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieContent</Scope>
    </TokenIdentifier>
    <Path>class_movie_content.html</Path>
    <Anchor>ae8f68fbd8ba0890b52ccf99a17de5276</Anchor>
    <Abstract>Get the content type. </Abstract>
    <DeclaredIn>MovieContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMetadata</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieContent</Scope>
    </TokenIdentifier>
    <Path>class_movie_content.html</Path>
    <Anchor>ab6181c8f94aa26324a6c3ae5f3384dd3</Anchor>
    <Abstract>Read movie informations from the source URI. </Abstract>
    <DeclaredIn>MovieContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preRenderUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieContent</Scope>
    </TokenIdentifier>
    <Path>class_movie_content.html</Path>
    <Anchor>a04a7dba0fce2a7b453f3d06402ab4bd3</Anchor>
    <Abstract>Re-implement this method to update or synchronize before rendering. </Abstract>
    <DeclaredIn>MovieContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postRenderUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieContent</Scope>
    </TokenIdentifier>
    <Path>class_movie_content.html</Path>
    <Anchor>ab89e253fa90a4630b7de1898ebaea793</Anchor>
    <Abstract>Re-implement this method to update or synchronize after rendering. </Abstract>
    <DeclaredIn>MovieContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Content</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ae491288d2efce7fa63d3e777580630b4</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a887d2b952cd824d70f64106ae048a5f8</Anchor>
    <Abstract>Get the content URI. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>aa4681ca97acea99fbe88e20f0e664bc0</Anchor>
    <Abstract>Get the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a1b7a6f49f447c124b497b0a844fd6ea6</Anchor>
    <Abstract>Set the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>blockAdvance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af4cadaac5031fa05e4472bce153f3ea9</Anchor>
    <Abstract>Used to indicate that the window is being moved. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a44c022cb6fed6fb1b0dff45e39ececb9</Anchor>
    <Abstract>Emitted by any Content subclass when its state has been modified. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MovieThumbnailGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MovieThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_movie_thumbnail_generator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MPIChannel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Abstract>Handle MPI communications between all DisplayCluster instances. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MPIChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>a3d6135b9ea469f6242b8396699ee74fd</Anchor>
    <Abstract>Create a new channel, initializing the MPI context. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MPIChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>a5c3bda8826b4a9406e6a81446a8440d4</Anchor>
    <Abstract>Create a new channel from splitting its parent channel. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MPIChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>a58250252d6b686e1d11d4144b40ca951</Anchor>
    <Abstract>Destructor, closes the MPI channel. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRank</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>ad9e9ffb350e0035706cb1e669ed6535d</Anchor>
    <Abstract>Get the rank of this process. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>a64a7a3cecb2a92ec2e24a0497ca4fa5a</Anchor>
    <Abstract>Get the number of processes in this channel. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isThreadSafe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>a900711d77dbf6314e3c81eab24aaf03f</Anchor>
    <Abstract>Is the channel thread-safe. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>globalBarrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>a4bfe098a8a43b145ade329569ea9ecb9</Anchor>
    <Abstract>Block execution until all participants have reached the barrier. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>globalSum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>a11f0e75f7cc5228d525e2abb431fea02</Anchor>
    <Abstract>Get the sum of the given local values across all processes. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>affcb2f941b2293bc591a443f2ecf0218</Anchor>
    <Abstract>Send data to a single process. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendAll</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>ae881eeeabb1b4a29fa2386af9a7fb407</Anchor>
    <Abstract>Send a signal to all processes. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>broadcast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>a78a50755b6e1f4264d84dab0f8ff9894</Anchor>
    <Abstract>Send a brodcast message to all other processes. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMessageAvailable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>ac2584270a0bbc486e27d357ffd48efd1</Anchor>
    <Abstract>Nonblocking probe for messages from a given source. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>probe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>ae2e0e01ed84b527c31a9258878108cff</Anchor>
    <Abstract>Perform a blocking probe operation that returns if a message is pending. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receiveHeader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>a9f53af4a59872a8ba7c9277e72e86d64</Anchor>
    <Abstract>Receive a header from a specific process. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>a2fc6093fc173c84da8c2cd08f97011c3</Anchor>
    <Abstract>Receive a message from a specific process. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receiveBroadcast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>aca342469d2005ae2b456fb14d2f11bff</Anchor>
    <Abstract>Recieve a broadcast. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gatherAll</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>a8295b45d744968aadf15d42bc57bde2a</Anchor>
    <Abstract>Gather the values accross all the processes. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MPIContext</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MPIContext</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_context.html</Path>
    <Abstract>A global MPI context. </Abstract>
    <DeclaredIn>MPIContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MPIContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIContext</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_context.html</Path>
    <Anchor>a1fc58d205deca92b9a9a307d49a124cb</Anchor>
    <Abstract>Constructor, initialize the MPI context. </Abstract>
    <DeclaredIn>MPIContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MPIContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIContext</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_context.html</Path>
    <Anchor>a3399b4521ba34fbe6977cc8c5358046b</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>MPIContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasMultithreadSupport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIContext</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_context.html</Path>
    <Anchor>a95db7bf4715f4f71db0954e382c81dd0</Anchor>
    <Abstract>Check if the context could be created with multithread support. </Abstract>
    <DeclaredIn>MPIContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MultiTouchListener</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MultiTouchListener</Scope>
    </TokenIdentifier>
    <Path>class_multi_touch_listener.html</Path>
    <Abstract>Listen to TUIO events and transmit the touch points to a target QGraphicsView. </Abstract>
    <DeclaredIn>MultiTouchListener.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NetworkListener</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>NetworkListener</Scope>
    </TokenIdentifier>
    <Path>class_network_listener.html</Path>
    <Abstract>Listen to incoming PixelStream connections from dc::Stream clients. </Abstract>
    <DeclaredIn>NetworkListener.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NetworkListener</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NetworkListener</Scope>
    </TokenIdentifier>
    <Path>class_network_listener.html</Path>
    <Anchor>a32053830dc410938bc7bef46162bbd40</Anchor>
    <Abstract>Create a new server listening for dc::Stream connections. </Abstract>
    <DeclaredIn>NetworkListener.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~NetworkListener</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NetworkListener</Scope>
    </TokenIdentifier>
    <Path>class_network_listener.html</Path>
    <Anchor>a18ad1d8973011f8bdceb5fc6d5cd81c1</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>NetworkListener.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCommandHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NetworkListener</Scope>
    </TokenIdentifier>
    <Path>class_network_listener.html</Path>
    <Anchor>a378abca29eee6c07d9baa07fa6011902</Anchor>
    <Abstract>Get the command handler. </Abstract>
    <DeclaredIn>NetworkListener.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelStreamDispatcher</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NetworkListener</Scope>
    </TokenIdentifier>
    <Path>class_network_listener.html</Path>
    <Anchor>aefcb4c8efafac75e57c505417691f2a8</Anchor>
    <Abstract>Get the PixelStreamDispatcher. </Abstract>
    <DeclaredIn>NetworkListener.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>defaultPortNumber_</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>NetworkListener</Scope>
    </TokenIdentifier>
    <Path>class_network_listener.html</Path>
    <Anchor>a2c32ce9f369e02028fd0e70b474dfc00</Anchor>
    <Abstract>The default port number used for dc::Stream connections. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>incomingConnection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NetworkListener</Scope>
    </TokenIdentifier>
    <Path>class_network_listener.html</Path>
    <Anchor>a6f4f3e0aedcde689ee0d451d0ad4180e</Anchor>
    <Abstract>Re-implemented handling of connections from QTCPSocket. </Abstract>
    <DeclaredIn>NetworkListener.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NetworkListenerThread</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>NetworkListenerThread</Scope>
    </TokenIdentifier>
    <Path>class_network_listener_thread.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Options</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Options</Scope>
    </TokenIdentifier>
    <Path>class_options.html</Path>
    <Abstract>Stores global display Options which can change during runtime. </Abstract>
    <DeclaredIn>Options.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updated</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Options</Scope>
    </TokenIdentifier>
    <Path>class_options.html</Path>
    <Anchor>a3fa6a7dee05582eb932f4fc068575216</Anchor>
    <Abstract>Emitted when a value is changed by one of the setters. </Abstract>
    <DeclaredIn>Options.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Options</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Options</Scope>
    </TokenIdentifier>
    <Path>class_options.html</Path>
    <Anchor>ab72fb640172a6109e34c8a5366563753</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Options.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PanGesture</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PanGesture</Scope>
    </TokenIdentifier>
    <Path>class_pan_gesture.html</Path>
    <Abstract>This class defines a pan gesture. </Abstract>
    <DeclaredIn>PanGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PanGesture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PanGesture</Scope>
    </TokenIdentifier>
    <Path>class_pan_gesture.html</Path>
    <Anchor>ac47c4ae14bcf9b100f85ca0c9c72d0a6</Anchor>
    <DeclaredIn>PanGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>position</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PanGesture</Scope>
    </TokenIdentifier>
    <Path>class_pan_gesture.html</Path>
    <Anchor>a8bbe53152fa764dcda05b006309d3d6f</Anchor>
    <DeclaredIn>PanGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lastOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PanGesture</Scope>
    </TokenIdentifier>
    <Path>class_pan_gesture.html</Path>
    <Anchor>a01b0240a122a2331fe35c0b534abef03</Anchor>
    <DeclaredIn>PanGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>offset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PanGesture</Scope>
    </TokenIdentifier>
    <Path>class_pan_gesture.html</Path>
    <Anchor>ae2c8e89bad11e61dcf732f1c6d357ab5</Anchor>
    <DeclaredIn>PanGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delta</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PanGesture</Scope>
    </TokenIdentifier>
    <Path>class_pan_gesture.html</Path>
    <Anchor>ae9823a48a175c0cc4e2052415794bb3d</Anchor>
    <DeclaredIn>PanGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>acceleration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PanGesture</Scope>
    </TokenIdentifier>
    <Path>class_pan_gesture.html</Path>
    <Anchor>ad5c4f4182669b302ba2d3fa78e69f54c</Anchor>
    <DeclaredIn>PanGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PanGesture</Scope>
    </TokenIdentifier>
    <Path>class_pan_gesture.html</Path>
    <Anchor>a6db44c273f321bba2a920da36d191892</Anchor>
    <Abstract>Set the normalized center position of the pan. </Abstract>
    <DeclaredIn>PanGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLastOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PanGesture</Scope>
    </TokenIdentifier>
    <Path>class_pan_gesture.html</Path>
    <Anchor>ad8cd604a7030964ad044b9585be15017</Anchor>
    <DeclaredIn>PanGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PanGesture</Scope>
    </TokenIdentifier>
    <Path>class_pan_gesture.html</Path>
    <Anchor>ac4844b9428b03cec321b2e3da9d5e4bd</Anchor>
    <DeclaredIn>PanGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAcceleration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PanGesture</Scope>
    </TokenIdentifier>
    <Path>class_pan_gesture.html</Path>
    <Anchor>a6bc3c90bf5ebc8956d43f36b08193d33</Anchor>
    <DeclaredIn>PanGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PanGestureRecognizer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PanGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_pan_gesture_recognizer.html</Path>
    <Abstract>Gesture recognizer for a pan gesture. </Abstract>
    <DeclaredIn>PanGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PanGestureRecognizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PanGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_pan_gesture_recognizer.html</Path>
    <Anchor>a9f5c85cbf1bcb54eef662b479d605bb8</Anchor>
    <Abstract>Construct a new pan gesture recognizer object. </Abstract>
    <DeclaredIn>PanGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PanGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_pan_gesture_recognizer.html</Path>
    <Anchor>a79cf2909bfb9b0ae7f4441cb18495dba</Anchor>
    <DeclaredIn>PanGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recognize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PanGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_pan_gesture_recognizer.html</Path>
    <Anchor>a03122f876823b64c5f0c0cc68d2b15f3</Anchor>
    <DeclaredIn>PanGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PanGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_pan_gesture_recognizer.html</Path>
    <Anchor>a7bc25bc37d9232d0c4b399e39130332a</Anchor>
    <DeclaredIn>PanGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>install</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>PanGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_pan_gesture_recognizer.html</Path>
    <Anchor>a25b88d804e351f8c50223efc0264859a</Anchor>
    <Abstract>Installs the pan recognizer in the current QApplication. </Abstract>
    <DeclaredIn>PanGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uninstall</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>PanGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_pan_gesture_recognizer.html</Path>
    <Anchor>a30d8aa2845f397de1e6ab1f091c2c354</Anchor>
    <Abstract>Uninstalls the pan recognizer from the current QApplication. </Abstract>
    <DeclaredIn>PanGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>PanGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_pan_gesture_recognizer.html</Path>
    <Anchor>aa629a141671ca444f137b485e2784b6c</Anchor>
    <DeclaredIn>PanGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PDFContent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PDFContent</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_content.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pageChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PDFContent</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_content.html</Path>
    <Anchor>a817129d408c9907e2081ab588659d8a4</Anchor>
    <Abstract>Emitted when the page number is changed. </Abstract>
    <DeclaredIn>PDFContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a44c022cb6fed6fb1b0dff45e39ececb9</Anchor>
    <Abstract>Emitted by any Content subclass when its state has been modified. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PDFContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFContent</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_content.html</Path>
    <Anchor>a4ae008684cb13c9a6bd52ed35f827781</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>PDFContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFContent</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_content.html</Path>
    <Anchor>a33f14510d89137d0ba6e1f6c8b09eaa5</Anchor>
    <Abstract>Get the content type. </Abstract>
    <DeclaredIn>PDFContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMetadata</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFContent</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_content.html</Path>
    <Anchor>af7cf516a0351264f60c076b11c33a45d</Anchor>
    <Abstract>Reaad PDF informations from the source URI. </Abstract>
    <DeclaredIn>PDFContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextPage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFContent</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_content.html</Path>
    <Anchor>a1e83cbc2b1b7845c39e42fb9076803f1</Anchor>
    <Abstract>Rank0 : go to next page. </Abstract>
    <DeclaredIn>PDFContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>previousPage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFContent</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_content.html</Path>
    <Anchor>a0d52e1a8ee7954872bcad5a9d74c342b</Anchor>
    <Abstract>Rank0 : go to previous page. </Abstract>
    <DeclaredIn>PDFContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Content</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ae491288d2efce7fa63d3e777580630b4</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a887d2b952cd824d70f64106ae048a5f8</Anchor>
    <Abstract>Get the content URI. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>aa4681ca97acea99fbe88e20f0e664bc0</Anchor>
    <Abstract>Get the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a1b7a6f49f447c124b497b0a844fd6ea6</Anchor>
    <Abstract>Set the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>blockAdvance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af4cadaac5031fa05e4472bce153f3ea9</Anchor>
    <Abstract>Used to indicate that the window is being moved. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preRenderUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af01aa8e619f5f00a9e3bfb27338f8d2f</Anchor>
    <Abstract>Re-implement this method to update or synchronize before rendering. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PictureFlow</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSlide</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>a0c6a7233f5be8fdf76ca035c1ba31a01</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSlide</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>a5141d9830c68e66d67a5bc937361a749</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSlide</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>a17a30900cd399b81c8d79655502c9f52</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSlide</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>a29ede7c37a4440b743cca7bcea72b7d6</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCenterIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>a98d84480e78870b57eacdb478a3b0269</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>a4bba5b7b8b7cabd07a127f59bbacf8cb</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showPrevious</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>af5d296599b5db9287c596d7f302e0d25</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showNext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>acd98400bd8b13b51205b0955ce16df6d</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showSlide</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>a50049abdff8fee16e9eff049febeac3b</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>a32e28d7ec618c7cdb13e44d1f916e295</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>triggerRender</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>a15aaa65b4d8c06ff2b2e201043ebe3f7</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PictureFlow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>a2920588c6150bb3dc41e3dfe5620a94a</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PictureFlow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>aca38a1fca5804c95f789015b96c40224</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>backgroundColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>acd42a21bd92d7cefeba457cb18568a49</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBackgroundColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>aa5088a035a047e43f103c676ca42841c</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>slideSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>a6d2fb8537a98b91fb9f19bb8cb567d1e</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSlideSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>ab543d9b36efd4b2b9b19d7c7723c07e4</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>slideCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>a8e7ef5ada87e36e269589402bfa1830f</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>slide</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>a28d4cf8ca4b8153f4ceee15709bd4af0</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>centerIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>ab9aae9f93aac2f5428250ca44ffc3264</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reflectionEffect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>a8845f94ef8645cf92bd71072cb8b9a24</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setReflectionEffect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PictureFlow</Scope>
    </TokenIdentifier>
    <Path>class_picture_flow.html</Path>
    <Anchor>a0f4cac044656c8f6f8e08b71db4ccda8</Anchor>
    <DeclaredIn>Pictureflow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PinchGesture</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Abstract>This class defines a pinch gesture. </Abstract>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PinchGesture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>a795e869c2e7fdc8fe9ece07ae044730a</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>totalChangeFlags</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>aad1e3793d6997071706dd4deb9bd045c</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTotalChangeFlags</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>af7cfce43d2db73910ee9caf9c2e49ea6</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changeFlags</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>a67cd92d1bca096cd3558f7c93654fa72</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setChangeFlags</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>a9e90e6a5a02f2cd4330b1c0ab66dddfc</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startCenterPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>ac3fdc8a6a8fb4bfc741858ae163f9593</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lastCenterPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>a6bdff634b3a511a14dbb0f8a8eecf1fa</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>centerPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>ab3b08b7f5ae27c487b5585e0d8467482</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>normalizedCenterPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>a0e09c3078895a85ff8f3800500a67671</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStartCenterPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>abbbb99a15db652da216a508c9949dcb7</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLastCenterPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>a6eb43ffcd4ea2407c2a61ee15395122e</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCenterPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>aab9030373265d2135577ff2c53ea5319</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNormalizedCenterPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>a15638fd35da739465748e4f316fb0060</Anchor>
    <Abstract>Set the normalized center position of the pinch. </Abstract>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>totalScaleFactor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>a45a796d90c26cdfa5d61afd754ce8f18</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lastScaleFactor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>a96bc83e8739afebff1874e349c0b1ab3</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scaleFactor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>ac1f1723df554056f1eaf11c313248f6a</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTotalScaleFactor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>a62fa0390aecfffe739d230eef23f44a6</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLastScaleFactor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>aad753faedd32aec34a9e3d34f4fcd7d2</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScaleFactor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>ad4bc129c86f16548a7070ff8dbddf8ef</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>totalRotationAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>ac9a4a77f99de16a5776140701dd07537</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lastRotationAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>ac48162b62e321b4fcaa8325249a87f9d</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotationAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>a56325ae380827885f33a3cdec6aa084a</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTotalRotationAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>a166de24a33c5c32f3a34a3540972f226</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLastRotationAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>a58f4ad110f4b198c1bab2981a2e598a8</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRotationAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGesture</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture.html</Path>
    <Anchor>a56e3e9cd08831875e02c0f096a63e0bb</Anchor>
    <DeclaredIn>PinchGesture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PinchGestureRecognizer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PinchGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture_recognizer.html</Path>
    <Abstract>Gesture recognizer for a pinch gesture. </Abstract>
    <DeclaredIn>PinchGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PinchGestureRecognizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture_recognizer.html</Path>
    <Anchor>abd33c28de7edc1a5e2712838a4aa8b8c</Anchor>
    <Abstract>Construct a new pan gesture recognizer object. </Abstract>
    <DeclaredIn>PinchGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture_recognizer.html</Path>
    <Anchor>a40424c41c68bc01153b6ca476ac10754</Anchor>
    <DeclaredIn>PinchGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recognize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture_recognizer.html</Path>
    <Anchor>ab4865f74221fd2038ecb01695651fb60</Anchor>
    <DeclaredIn>PinchGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PinchGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture_recognizer.html</Path>
    <Anchor>af38e0116d7a73988e5a5e784532dc472</Anchor>
    <DeclaredIn>PinchGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>install</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>PinchGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture_recognizer.html</Path>
    <Anchor>adf7237c7f2dcc4592b7da88ea79bd9c9</Anchor>
    <Abstract>Installs the pinch recognizer in the current QApplication. </Abstract>
    <DeclaredIn>PinchGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uninstall</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>PinchGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture_recognizer.html</Path>
    <Anchor>a85d653e970d50ebd7b99cf1cc690f373</Anchor>
    <Abstract>Uninstalls the pinch recognizer from the current QApplication. </Abstract>
    <DeclaredIn>PinchGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>PinchGestureRecognizer</Scope>
    </TokenIdentifier>
    <Path>class_pinch_gesture_recognizer.html</Path>
    <Anchor>a59bcf8c72037aa2c856008214e26dea1</Anchor>
    <DeclaredIn>PinchGestureRecognizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStream</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PixelStream</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStream</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream.html</Path>
    <Anchor>a72248d4c73f78e46bc40c69f3b129d72</Anchor>
    <Abstract>Get the dimensions of the full resolution texture. </Abstract>
    <DeclaredIn>PixelStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStream</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream.html</Path>
    <Anchor>ab31715fa5591ef68653b524582054a46</Anchor>
    <Abstract>Render the FactoryObject. </Abstract>
    <DeclaredIn>PixelStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FactoryObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>a727abf1cee9211870d9b155925441ccb</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>FactoryObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FactoryObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>a49eaa1806635c84fdf9b0f80a1e0128b</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>FactoryObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRenderContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>acf3fd8f50c49b6c5cc5c5a9cc32fe508</Anchor>
    <Abstract>Set the render context. </Abstract>
    <DeclaredIn>FactoryObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRenderContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>ae50f2e3fe3b5a6458a2c8b413c0ff3a9</Anchor>
    <Abstract>Get the render context. </Abstract>
    <DeclaredIn>FactoryObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>a8d89f74806cc8483c5f231551f1a834c</Anchor>
    <Abstract>Get the current frame index for this Object. </Abstract>
    <DeclaredIn>FactoryObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>af33e624cd522c4940a6bd876a952102e</Anchor>
    <Abstract>Must be called everytime a derived object is rendered. </Abstract>
    <DeclaredIn>FactoryObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderContext_</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>aece7dc20cd5d4989629d65fbf23edfa9</Anchor>
    <Abstract>A reference to the render context. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamBuffer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PixelStreamBuffer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_buffer.html</Path>
    <Abstract>Buffer PixelStreamSegments from (multiple) sources. </Abstract>
    <DeclaredIn>PixelStreamBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamBuffer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_buffer.html</Path>
    <Anchor>a6b370d63642ff5727d272bcb6895063a</Anchor>
    <Abstract>Construct a Buffer. </Abstract>
    <DeclaredIn>PixelStreamBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamBuffer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_buffer.html</Path>
    <Anchor>a8cf2673126b2c6022cd75df6160525f3</Anchor>
    <Abstract>Add a source of segments. </Abstract>
    <DeclaredIn>PixelStreamBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamBuffer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_buffer.html</Path>
    <Anchor>a53d2099225acd41763d1407655550e9a</Anchor>
    <Abstract>Remove a source of segments. </Abstract>
    <DeclaredIn>PixelStreamBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSourceCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamBuffer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_buffer.html</Path>
    <Anchor>a46673fe0a3ceeec2dbc35db34d361d8b</Anchor>
    <Abstract>Get the number of sources for this Stream. </Abstract>
    <DeclaredIn>PixelStreamBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insertSegment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamBuffer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_buffer.html</Path>
    <Anchor>a39919ab72169225098b90fa7415659d0</Anchor>
    <Abstract>Insert a segement for the current frame and source. </Abstract>
    <DeclaredIn>PixelStreamBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finishFrameForSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamBuffer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_buffer.html</Path>
    <Anchor>ac426aec5f32539f644d279c460acac2e</Anchor>
    <Abstract>Notify that the given source has finished sending segment for the current frame. </Abstract>
    <DeclaredIn>PixelStreamBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasCompleteFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamBuffer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_buffer.html</Path>
    <Anchor>a401b3039b0ea4ccc0a42daeb9f6893c9</Anchor>
    <Abstract>Does the Buffer have a new complete frame (from all sources) </Abstract>
    <DeclaredIn>PixelStreamBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFirstCompleteFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamBuffer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_buffer.html</Path>
    <Anchor>a239e35356406ba0e9aecc2072a726a0a</Anchor>
    <Abstract>Is this the first frame to be finished by all sources. </Abstract>
    <DeclaredIn>PixelStreamBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamBuffer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_buffer.html</Path>
    <Anchor>a8cdf397f057b080d7d525b9cbb061043</Anchor>
    <Abstract>Get the size of the frame. </Abstract>
    <DeclaredIn>PixelStreamBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>popFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamBuffer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_buffer.html</Path>
    <Anchor>a9b68c7c38413deeeb58946e5fd5b0a1f</Anchor>
    <Abstract>Get the finished frame. </Abstract>
    <DeclaredIn>PixelStreamBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAllowedToSend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamBuffer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_buffer.html</Path>
    <Anchor>a4a46cdaf8b41f6815013b4cb415b6e2a</Anchor>
    <Abstract>Allow this buffer to be used by the next PixelStreamDispatcher::sendLatestFrame. </Abstract>
    <DeclaredIn>PixelStreamBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAllowedToSend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamBuffer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_buffer.html</Path>
    <Anchor>a86b4c6b9d905023856409b824eba4107</Anchor>
    <DeclaredIn>PixelStreamBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeFrameDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>PixelStreamBuffer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_buffer.html</Path>
    <Anchor>a3127ad73177c6ce02e61292e3a3ee38a</Anchor>
    <Abstract>Compute the overall dimensions of a frame. </Abstract>
    <DeclaredIn>PixelStreamBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamContent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PixelStreamContent</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_content.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamContent</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_content.html</Path>
    <Anchor>a2a0d5fbde3ac80753ad2e3e42a07327e</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>PixelStreamContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamContent</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_content.html</Path>
    <Anchor>aa8253a1597b30f1c71be60afaf45d656</Anchor>
    <Abstract>Get the content type. </Abstract>
    <DeclaredIn>PixelStreamContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMetadata</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamContent</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_content.html</Path>
    <Anchor>af1fde82b270db2ed217ec6542924c3e4</Anchor>
    <Abstract>Content method overload, not used for PixelStreams. </Abstract>
    <DeclaredIn>PixelStreamContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preRenderUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamContent</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_content.html</Path>
    <Anchor>abe012d94a83af09de2b668f81ce5e902</Anchor>
    <Abstract>Re-implement this method to update or synchronize before rendering. </Abstract>
    <DeclaredIn>PixelStreamContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Content</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ae491288d2efce7fa63d3e777580630b4</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a887d2b952cd824d70f64106ae048a5f8</Anchor>
    <Abstract>Get the content URI. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>aa4681ca97acea99fbe88e20f0e664bc0</Anchor>
    <Abstract>Get the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a1b7a6f49f447c124b497b0a844fd6ea6</Anchor>
    <Abstract>Set the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>blockAdvance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af4cadaac5031fa05e4472bce153f3ea9</Anchor>
    <Abstract>Used to indicate that the window is being moved. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postRenderUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ae97b82f88b6e079ec746a656d4e3cbef</Anchor>
    <Abstract>Re-implement this method to update or synchronize after rendering. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a44c022cb6fed6fb1b0dff45e39ececb9</Anchor>
    <Abstract>Emitted by any Content subclass when its state has been modified. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamDispatcher</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PixelStreamDispatcher</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_dispatcher.html</Path>
    <Abstract>Gather PixelStream Segments from multiple sources and dispatch the resulting full frames...</Abstract>
    <DeclaredIn>PixelStreamDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamDispatcher</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_dispatcher.html</Path>
    <Anchor>a3cde482eca6dede5cb7bb58d7303c385</Anchor>
    <Abstract>Add a source of Segments for a Stream. </Abstract>
    <DeclaredIn>PixelStreamDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamDispatcher</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_dispatcher.html</Path>
    <Anchor>aa99c4ac008a3e77e76e360729f18f55f</Anchor>
    <Abstract>Add a source of Segments for a Stream. </Abstract>
    <DeclaredIn>PixelStreamDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processSegment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamDispatcher</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_dispatcher.html</Path>
    <Anchor>a64b7ed9b55aed715a2e40e8ca3125f4d</Anchor>
    <Abstract>Process a new Segement. </Abstract>
    <DeclaredIn>PixelStreamDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processFrameFinished</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamDispatcher</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_dispatcher.html</Path>
    <Anchor>a06d7c59001bc9773f116a5e48412dd35</Anchor>
    <Abstract>The given source has finished sending segments for the current frame. </Abstract>
    <DeclaredIn>PixelStreamDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamDispatcher</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_dispatcher.html</Path>
    <Anchor>adb4a0f9458a36b689be384295b6fe15e</Anchor>
    <Abstract>Delete an entire stream. </Abstract>
    <DeclaredIn>PixelStreamDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamDispatcher</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_dispatcher.html</Path>
    <Anchor>a2ffa2afb4f8c1167d8e4b7e63ebc298c</Anchor>
    <Abstract>Is called when the wall processes are ready to receive new frames. </Abstract>
    <DeclaredIn>PixelStreamDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openPixelStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PixelStreamDispatcher</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_dispatcher.html</Path>
    <Anchor>aa78c14c4951efa3ff3fa8c64a094698a</Anchor>
    <Abstract>Notify that a PixelStream has been opened. </Abstract>
    <DeclaredIn>PixelStreamDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deletePixelStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PixelStreamDispatcher</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_dispatcher.html</Path>
    <Anchor>a199875b12193163b0a711453c8c5dad0</Anchor>
    <Abstract>Notify that a pixel stream has been deleted. </Abstract>
    <DeclaredIn>PixelStreamDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PixelStreamDispatcher</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_dispatcher.html</Path>
    <Anchor>ae0f3f4489a46472973d68ecae21e6c44</Anchor>
    <Abstract>Dispatch a full frame. </Abstract>
    <DeclaredIn>PixelStreamDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamDispatcher</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamDispatcher</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_dispatcher.html</Path>
    <Anchor>a0a4078440529faaa99921fdb0e22c89d</Anchor>
    <Abstract>Construct a dispatcher. </Abstract>
    <DeclaredIn>PixelStreamDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Abstract>Interface for Pixel Streamers. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Anchor>ad4786757e739ab50e1dd959f39882ede</Anchor>
    <Abstract>Process an Event. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>imageUpdated</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Anchor>ae9f831bd8e004763f4e2fd05b17a21a1</Anchor>
    <Abstract>Emit this signal after a new image has been generated. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendCommand</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Anchor>ad3be94b21aba5fb409fa24bbff6454e5</Anchor>
    <Abstract>Emit this signal to send a command to the receiver. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Anchor>ad3d2288e104737dd9de180fdd9f27e74</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PixelStreamer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Anchor>ac9d996a5dadc05b54dcfa0824eb1a573</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Anchor>a413ae104f919f14a0974b357e5e7d9e7</Anchor>
    <Abstract>Get the size of the images generated by this streamer. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamerFactory</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PixelStreamerFactory</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer_factory.html</Path>
    <Abstract>Factory for PixelStreamers. </Abstract>
    <DeclaredIn>PixelStreamerFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>PixelStreamerFactory</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer_factory.html</Path>
    <Anchor>a901701ac6afa91292aad59749d3782ad</Anchor>
    <Abstract>Create a PixelStreamer of the given type. </Abstract>
    <DeclaredIn>PixelStreamerFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamerLauncher</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PixelStreamerLauncher</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer_launcher.html</Path>
    <Abstract>Launch Pixel Streamers as separate processes. </Abstract>
    <DeclaredIn>PixelStreamerLauncher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openWebBrowser</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamerLauncher</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer_launcher.html</Path>
    <Anchor>ac89db35bc068060155ebcf33ff6aafeb</Anchor>
    <Abstract>Open a WebBrowser. </Abstract>
    <DeclaredIn>PixelStreamerLauncher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openDock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamerLauncher</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer_launcher.html</Path>
    <Anchor>a80473544a0be8dfa6d96132ac60506eb</Anchor>
    <Abstract>Open the Dock using default parameters. </Abstract>
    <DeclaredIn>PixelStreamerLauncher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openDock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamerLauncher</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer_launcher.html</Path>
    <Anchor>ac6ce3ccc999663d56592abcbc90c1daa</Anchor>
    <Abstract>Open the Dock. </Abstract>
    <DeclaredIn>PixelStreamerLauncher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hideDock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamerLauncher</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer_launcher.html</Path>
    <Anchor>a2a1d9a2366ec0af46464c9f5ae9c894d</Anchor>
    <Abstract>Hide the Dock. </Abstract>
    <DeclaredIn>PixelStreamerLauncher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamerLauncher</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamerLauncher</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer_launcher.html</Path>
    <Anchor>aa6afe5831da8128c53d47b7527c0f332</Anchor>
    <Abstract>Create a new PixelStreamerLauncher. </Abstract>
    <DeclaredIn>PixelStreamerLauncher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamInteractionDelegate</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PixelStreamInteractionDelegate</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_interaction_delegate.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamSegmentDecoder</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PixelStreamSegmentDecoder</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_segment_decoder.html</Path>
    <Abstract>Decode a PixelStreamSegment image data asynchronously. </Abstract>
    <DeclaredIn>PixelStreamSegmentDecoder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamSegmentDecoder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamSegmentDecoder</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_segment_decoder.html</Path>
    <Anchor>a5b3047488b1e796195f5639ec0b8e68c</Anchor>
    <Abstract>Construct a Decoder. </Abstract>
    <DeclaredIn>PixelStreamSegmentDecoder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PixelStreamSegmentDecoder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamSegmentDecoder</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_segment_decoder.html</Path>
    <Anchor>a4ed2de87e7c89f736849402a32ca545f</Anchor>
    <Abstract>Destruct a Decoder. </Abstract>
    <DeclaredIn>PixelStreamSegmentDecoder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startDecoding</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamSegmentDecoder</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_segment_decoder.html</Path>
    <Anchor>aa098ebc91aecce8f4ee5db6f1a41792a</Anchor>
    <Abstract>Start decoding a segment. </Abstract>
    <DeclaredIn>PixelStreamSegmentDecoder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRunning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamSegmentDecoder</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_segment_decoder.html</Path>
    <Anchor>a1803b2ab568024d963203597d9627dd3</Anchor>
    <Abstract>Check if the decoding thread is running. </Abstract>
    <DeclaredIn>PixelStreamSegmentDecoder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamSegmentRenderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PixelStreamSegmentRenderer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_segment_renderer.html</Path>
    <Abstract>Render a single PixelStream Segment. </Abstract>
    <DeclaredIn>PixelStreamSegmentRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamSegmentRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamSegmentRenderer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_segment_renderer.html</Path>
    <Anchor>a6806de78074951d7db516d48c0137aef</Anchor>
    <Abstract>Construct a renderer. </Abstract>
    <DeclaredIn>PixelStreamSegmentRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PixelStreamSegmentRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamSegmentRenderer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_segment_renderer.html</Path>
    <Anchor>a8805d3868e1c117fcb614440e73044b6</Anchor>
    <Abstract>Destruct a renderer. </Abstract>
    <DeclaredIn>PixelStreamSegmentRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamSegmentRenderer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_segment_renderer.html</Path>
    <Anchor>a5b90cd10a881b208f5d784339e35b99a</Anchor>
    <Abstract>Get the position and dimensions of this segment. </Abstract>
    <DeclaredIn>PixelStreamSegmentRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateTexture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamSegmentRenderer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_segment_renderer.html</Path>
    <Anchor>abb7998c4717817218978c84bdd931e55</Anchor>
    <Abstract>Update the texture. </Abstract>
    <DeclaredIn>PixelStreamSegmentRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textureNeedsUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamSegmentRenderer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_segment_renderer.html</Path>
    <Anchor>a380043d34d055eafb1e19d27720e75a8</Anchor>
    <Abstract>Has the texture been marked as oudated with setTextureOutdated() </Abstract>
    <DeclaredIn>PixelStreamSegmentRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTextureNeedsUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamSegmentRenderer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_segment_renderer.html</Path>
    <Anchor>a099a3b9847a021c2596e8d845eb6d47c</Anchor>
    <Abstract>Mark the texture as being outdated. </Abstract>
    <DeclaredIn>PixelStreamSegmentRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamSegmentRenderer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_segment_renderer.html</Path>
    <Anchor>a258bffcd100c20e80996e856e54fa275</Anchor>
    <Abstract>Set the paramters for this segment. </Abstract>
    <DeclaredIn>PixelStreamSegmentRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamSegmentRenderer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_segment_renderer.html</Path>
    <Anchor>a1a545a153baf6837f4091ec81554524b</Anchor>
    <Abstract>Render the current texture. </Abstract>
    <DeclaredIn>PixelStreamSegmentRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamWindowManager</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Abstract>Handles window creation, association and updates for pixel streamers, both local and external...</Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openPixelStreamWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>ad4dfa35d41a0bc001419b22045396399</Anchor>
    <Abstract>Is called once a new streamer was created. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>closePixelStreamWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>aa379f03ccdef1ae61c6b600e8c885cfa</Anchor>
    <Abstract>Is called when streamer is closed. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerEventReceiver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>a2f4df9479c80e2cf175dadaa0a71a1b2</Anchor>
    <Abstract>Is called when the streamer wants to enable event handling. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pixelStreamWindowClosed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>a84442417ad4ed329a06ac08051e7266a</Anchor>
    <Abstract>Is emitted when the associated content window of the streamer is closed. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eventRegistrationReply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>a1b3863d3e2718e80072d2db26004db08</Anchor>
    <Abstract>Is emitted after registerEventReceiver() was executed. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamWindowManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>a8d3cae6a2b05961dac58bf22810be44a</Anchor>
    <Abstract>Create a window manager that handles windows for streamers. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createContentWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>aaefb4c6acb41763c5b1265e0751c5d34</Anchor>
    <Abstract>Create a content window which will be associated to the pixel stream once the stream is ready...</Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeContentWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>a01cd005a6a821fcee43d69290c657d6b</Anchor>
    <Abstract>Remove the associated content window from the given stream. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getContentWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>a4465be2e1991152689dc4bb07b22c907</Anchor>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateDimension</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>a169ee5e7c7bd9110cff53f719a055f86</Anchor>
    <Abstract>Update the dimension of the content (and maybe the window) when the size of the streaming source chan...</Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hideWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>a74bb0eb12ff7357fef0fbbd1d9c92aff</Anchor>
    <Abstract>Hide the associated content window of the stream. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProbeResult</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ProbeResult</Scope>
    </TokenIdentifier>
    <Path>struct_probe_result.html</Path>
    <Abstract>The result of an MPIChannel::probe() operation. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ProbeResult</Scope>
    </TokenIdentifier>
    <Path>struct_probe_result.html</Path>
    <Anchor>a63373d9b2c6353ad460b391f00b8fde0</Anchor>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>src</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ProbeResult</Scope>
    </TokenIdentifier>
    <Path>struct_probe_result.html</Path>
    <Anchor>a1bf3e57be475361e7541e26f977aa0a6</Anchor>
    <Abstract>The source process that has sent a message. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ProbeResult</Scope>
    </TokenIdentifier>
    <Path>struct_probe_result.html</Path>
    <Anchor>a431ed1636026488911b1d35e0b97ac78</Anchor>
    <Abstract>The size of the message. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>message</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ProbeResult</Scope>
    </TokenIdentifier>
    <Path>struct_probe_result.html</Path>
    <Anchor>af15554a30e968ef7341d18a786899f95</Anchor>
    <Abstract>The type of the message. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PyramidThumbnailGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PyramidThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_pyramid_thumbnail_generator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RenderContext</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>RenderContext</Scope>
    </TokenIdentifier>
    <Path>class_render_context.html</Path>
    <Abstract>A render context composed of multiple GL windows. </Abstract>
    <DeclaredIn>RenderContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RenderContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RenderContext</Scope>
    </TokenIdentifier>
    <Path>class_render_context.html</Path>
    <Anchor>a562f2538db5a4765ff32348db038fb4d</Anchor>
    <Abstract>Create a new RenderContext and initialize the GLWindows. </Abstract>
    <DeclaredIn>RenderContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~RenderContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RenderContext</Scope>
    </TokenIdentifier>
    <Path>class_render_context.html</Path>
    <Anchor>af37b6cf5a4e99e9865a76fcfcbe12ef5</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>RenderContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBackgroundColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RenderContext</Scope>
    </TokenIdentifier>
    <Path>class_render_context.html</Path>
    <Anchor>a6e0022d6c6da8fc42040015474e9870f</Anchor>
    <Abstract>Set the background color of all windows. </Abstract>
    <DeclaredIn>RenderContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGLWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RenderContext</Scope>
    </TokenIdentifier>
    <Path>class_render_context.html</Path>
    <Anchor>a25b3bbdb0b334fcadbc719f9151433dc</Anchor>
    <Abstract>Get a specific GL window. </Abstract>
    <DeclaredIn>RenderContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGLWindowCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RenderContext</Scope>
    </TokenIdentifier>
    <Path>class_render_context.html</Path>
    <Anchor>aeae555d79fb724df1cdc93acb5664f09</Anchor>
    <Abstract>Get the count of GL windows. </Abstract>
    <DeclaredIn>RenderContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getActiveGLWindowIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RenderContext</Scope>
    </TokenIdentifier>
    <Path>class_render_context.html</Path>
    <Anchor>a54773d8a63437dd7dbc200c395920d0e</Anchor>
    <Abstract>Get the index of the active window during rendering. </Abstract>
    <DeclaredIn>RenderContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderText</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RenderContext</Scope>
    </TokenIdentifier>
    <Path>class_render_context.html</Path>
    <Anchor>ae09dc781e070c607b5aa90a8a44307fc</Anchor>
    <Abstract>Render text. </Abstract>
    <DeclaredIn>RenderContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderText</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RenderContext</Scope>
    </TokenIdentifier>
    <Path>class_render_context.html</Path>
    <Anchor>a9c05b62f740fe28b1e84280488025fea</Anchor>
    <Abstract>Render text. </Abstract>
    <DeclaredIn>RenderContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addRenderable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RenderContext</Scope>
    </TokenIdentifier>
    <Path>class_render_context.html</Path>
    <Anchor>af92355d97918396d2ede47726a5abaa9</Anchor>
    <Abstract>Add an object to be rendered. </Abstract>
    <DeclaredIn>RenderContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRegionVisible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RenderContext</Scope>
    </TokenIdentifier>
    <Path>class_render_context.html</Path>
    <Anchor>a39a6d244510f19e439e79a5d916661ff</Anchor>
    <Abstract>Check if a region is visible. </Abstract>
    <DeclaredIn>RenderContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateGLWindows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RenderContext</Scope>
    </TokenIdentifier>
    <Path>class_render_context.html</Path>
    <Anchor>a54c962a3326654a4522a0e9288a8fe9e</Anchor>
    <Abstract>Render GL objects on all windows. </Abstract>
    <DeclaredIn>RenderContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RenderContext</Scope>
    </TokenIdentifier>
    <Path>class_render_context.html</Path>
    <Anchor>a2d5f3964fb1805c30766151862b3db5c</Anchor>
    <Abstract>Swap GL buffers on all windows. </Abstract>
    <DeclaredIn>RenderContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RenderController</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>RenderController</Scope>
    </TokenIdentifier>
    <Path>class_render_controller.html</Path>
    <Abstract>Setup the scene and control the rendering options during runtime. </Abstract>
    <DeclaredIn>RenderController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RenderController</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RenderController</Scope>
    </TokenIdentifier>
    <Path>class_render_controller.html</Path>
    <Anchor>a55c13e789f63a5a75f3b9ebe0998c793</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>RenderController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setupTestPattern</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RenderController</Scope>
    </TokenIdentifier>
    <Path>class_render_controller.html</Path>
    <Anchor>aa51cec664f560c04ef4aa612550683a1</Anchor>
    <Abstract>Setup the test pattern. </Abstract>
    <DeclaredIn>RenderController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDisplayGroup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RenderController</Scope>
    </TokenIdentifier>
    <Path>class_render_controller.html</Path>
    <Anchor>a51dad7216110bac1db2b2cd6156eee0d</Anchor>
    <Abstract>Get the DisplayGroup. </Abstract>
    <DeclaredIn>RenderController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synchronizeObjects</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RenderController</Scope>
    </TokenIdentifier>
    <Path>class_render_controller.html</Path>
    <Anchor>a88a5f2029e56d97b9953e54fdf07cc7a</Anchor>
    <Abstract>Synchronize the objects. </Abstract>
    <DeclaredIn>RenderController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>quitRendering</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RenderController</Scope>
    </TokenIdentifier>
    <Path>class_render_controller.html</Path>
    <Anchor>a6d2a9aef3484b3cafdc8d4a1d5c63a45</Anchor>
    <Abstract>Do we need to stop rendering. </Abstract>
    <DeclaredIn>RenderController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SessionCommandHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SessionCommandHandler</Scope>
    </TokenIdentifier>
    <Path>class_session_command_handler.html</Path>
    <Abstract>Handle session Commands. </Abstract>
    <DeclaredIn>SessionCommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SessionCommandHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SessionCommandHandler</Scope>
    </TokenIdentifier>
    <Path>class_session_command_handler.html</Path>
    <Anchor>a3a304212563a1cd77545821c0fcc0306</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>SessionCommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SessionCommandHandler</Scope>
    </TokenIdentifier>
    <Path>class_session_command_handler.html</Path>
    <Anchor>ad8590bd17d2f9effcc02b37091cb7eba</Anchor>
    <Abstract>Get the type of commands handled by the implementation. </Abstract>
    <DeclaredIn>SessionCommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SessionCommandHandler</Scope>
    </TokenIdentifier>
    <Path>class_session_command_handler.html</Path>
    <Anchor>ac1278cd6fd90b92fcea4dbe603a379af</Anchor>
    <Abstract>Handle a session Command. </Abstract>
    <DeclaredIn>SessionCommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SourceBuffer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SourceBuffer</Scope>
    </TokenIdentifier>
    <Path>struct_source_buffer.html</Path>
    <Abstract>Buffer for a single source of segements. </Abstract>
    <DeclaredIn>PixelStreamBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>SourceBuffer</Scope>
    </TokenIdentifier>
    <Path>struct_source_buffer.html</Path>
    <Anchor>ab4f1dcd4f65cabdcedf91bb5682af683</Anchor>
    <Abstract>Pop the first element of the buffer. </Abstract>
    <DeclaredIn>PixelStreamBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>SourceBuffer</Scope>
    </TokenIdentifier>
    <Path>struct_source_buffer.html</Path>
    <Anchor>a17be05ffacf285b3333ab92de253c132</Anchor>
    <Abstract>Push a new element to the back of the buffer. </Abstract>
    <DeclaredIn>PixelStreamBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frontFrameIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>SourceBuffer</Scope>
    </TokenIdentifier>
    <Path>struct_source_buffer.html</Path>
    <Anchor>a0c3f166e3aa42d534d69e053458cebb1</Anchor>
    <Abstract>The current indexes of the frame for this source. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>segments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>SourceBuffer</Scope>
    </TokenIdentifier>
    <Path>struct_source_buffer.html</Path>
    <Anchor>ae40dc7fb547b83b4eaca2513de774dee</Anchor>
    <Abstract>The collection of segments. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>State</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>State</Scope>
    </TokenIdentifier>
    <Path>class_state.html</Path>
    <Abstract>A state is the collection of opened contents which can be saved and restored using this class...</Abstract>
    <DeclaredIn>State.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>State</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>State</Scope>
    </TokenIdentifier>
    <Path>class_state.html</Path>
    <Anchor>ab91bb1dd5aa6260ab2a456581daf9ec2</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>State.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>State</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>State</Scope>
    </TokenIdentifier>
    <Path>class_state.html</Path>
    <Anchor>a4d8e4e722804120d0b9472e96e08fcc2</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>State.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getContentWindows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>State</Scope>
    </TokenIdentifier>
    <Path>class_state.html</Path>
    <Anchor>ae0cd79c1f9b1472a6ed705a7d6f9661e</Anchor>
    <Abstract>Get the content windows. </Abstract>
    <DeclaredIn>State.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>legacyLoadXML</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>State</Scope>
    </TokenIdentifier>
    <Path>class_state.html</Path>
    <Anchor>a9d239d0be957febba6229da5a599124e</Anchor>
    <DeclaredIn>State.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StatePreview</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>StatePreview</Scope>
    </TokenIdentifier>
    <Path>class_state_preview.html</Path>
    <Abstract>A state preview is a thumbnail image saved alongside a state file. </Abstract>
    <DeclaredIn>StatePreview.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadFromFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StatePreview</Scope>
    </TokenIdentifier>
    <Path>class_state_preview.html</Path>
    <Anchor>adb7ad5d66ab2b54eb66e5912aa827c9a</Anchor>
    <Abstract>Load the thumbnail image from disk. </Abstract>
    <DeclaredIn>StatePreview.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StatePreview</Scope>
    </TokenIdentifier>
    <Path>class_state_preview.html</Path>
    <Anchor>aa855eb3b0bb12cc534458fe639336c04</Anchor>
    <Abstract>Retrieve the image loaded with loadFromFile() or generated with generateImage(). </Abstract>
    <DeclaredIn>StatePreview.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StatePreview</Scope>
    </TokenIdentifier>
    <Path>class_state_preview.html</Path>
    <Anchor>ad52539007cf3bcc2c37adf935a536e6a</Anchor>
    <Abstract>Generate the preview image from a list of ContentWindows. </Abstract>
    <DeclaredIn>StatePreview.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>saveToFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StatePreview</Scope>
    </TokenIdentifier>
    <Path>class_state_preview.html</Path>
    <Anchor>ab9451a422ef3233febfffae46eb82b91</Anchor>
    <Abstract>Save the thumbnail created by generateImage() to a file based on the state file name. </Abstract>
    <DeclaredIn>StatePreview.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StateSerializationHelper</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>StateSerializationHelper</Scope>
    </TokenIdentifier>
    <Path>class_state_serialization_helper.html</Path>
    <Abstract>Helper class to store the current session to a state file and restore it later. </Abstract>
    <DeclaredIn>StateSerializationHelper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StateSerializationHelper</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StateSerializationHelper</Scope>
    </TokenIdentifier>
    <Path>class_state_serialization_helper.html</Path>
    <Anchor>ae00036e947ae5d3f6ab7e2a60482fe47</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>StateSerializationHelper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>save</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StateSerializationHelper</Scope>
    </TokenIdentifier>
    <Path>class_state_serialization_helper.html</Path>
    <Anchor>a1632c8bfba6fbd4613b9cd48ee80ac7d</Anchor>
    <Abstract>Save the state of the application. </Abstract>
    <DeclaredIn>StateSerializationHelper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StateSerializationHelper</Scope>
    </TokenIdentifier>
    <Path>class_state_serialization_helper.html</Path>
    <Anchor>ac29de4128102d39e08eb54939aac5217</Anchor>
    <Abstract>Load the state from a given xml file. </Abstract>
    <DeclaredIn>StateSerializationHelper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StateThumbnailGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>StateThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_state_thumbnail_generator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SVG</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SVG</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVG</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g.html</Path>
    <Anchor>a8470f4682dc3884559ae2ecce47b5392</Anchor>
    <Abstract>Get the dimensions of the full resolution texture. </Abstract>
    <DeclaredIn>SVG.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVG</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g.html</Path>
    <Anchor>abb2831c2dc6cd4d7e53f5caaa077afba</Anchor>
    <Abstract>Render the FactoryObject. </Abstract>
    <DeclaredIn>SVG.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FactoryObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>a727abf1cee9211870d9b155925441ccb</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>FactoryObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FactoryObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>a49eaa1806635c84fdf9b0f80a1e0128b</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>FactoryObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRenderContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>acf3fd8f50c49b6c5cc5c5a9cc32fe508</Anchor>
    <Abstract>Set the render context. </Abstract>
    <DeclaredIn>FactoryObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRenderContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>ae50f2e3fe3b5a6458a2c8b413c0ff3a9</Anchor>
    <Abstract>Get the render context. </Abstract>
    <DeclaredIn>FactoryObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>a8d89f74806cc8483c5f231551f1a834c</Anchor>
    <Abstract>Get the current frame index for this Object. </Abstract>
    <DeclaredIn>FactoryObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>af33e624cd522c4940a6bd876a952102e</Anchor>
    <Abstract>Must be called everytime a derived object is rendered. </Abstract>
    <DeclaredIn>FactoryObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderContext_</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>aece7dc20cd5d4989629d65fbf23edfa9</Anchor>
    <Abstract>A reference to the render context. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SVGContent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SVGContent</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_content.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SVGContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGContent</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_content.html</Path>
    <Anchor>a9813e8e86203ad9d19507fbc0ef7b6fb</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>SVGContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGContent</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_content.html</Path>
    <Anchor>a0e7f2d29043563478a3ba972b591d360</Anchor>
    <Abstract>Get the content type. </Abstract>
    <DeclaredIn>SVGContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMetadata</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGContent</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_content.html</Path>
    <Anchor>ab1498c71f69ee1f0720fb5686bef3ecf</Anchor>
    <Abstract>Read SVG metadata. </Abstract>
    <DeclaredIn>SVGContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Content</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ae491288d2efce7fa63d3e777580630b4</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a887d2b952cd824d70f64106ae048a5f8</Anchor>
    <Abstract>Get the content URI. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>aa4681ca97acea99fbe88e20f0e664bc0</Anchor>
    <Abstract>Get the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a1b7a6f49f447c124b497b0a844fd6ea6</Anchor>
    <Abstract>Set the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>blockAdvance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af4cadaac5031fa05e4472bce153f3ea9</Anchor>
    <Abstract>Used to indicate that the window is being moved. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preRenderUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af01aa8e619f5f00a9e3bfb27338f8d2f</Anchor>
    <Abstract>Re-implement this method to update or synchronize before rendering. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postRenderUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ae97b82f88b6e079ec746a656d4e3cbef</Anchor>
    <Abstract>Re-implement this method to update or synchronize after rendering. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a44c022cb6fed6fb1b0dff45e39ececb9</Anchor>
    <Abstract>Emitted by any Content subclass when its state has been modified. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SVGTextureData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SVGTextureData</Scope>
    </TokenIdentifier>
    <Path>struct_s_v_g_texture_data.html</Path>
    <Abstract>Hold texture FBO and region rendered for one GLWindow. </Abstract>
    <DeclaredIn>SVG.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>SVGTextureData</Scope>
    </TokenIdentifier>
    <Path>struct_s_v_g_texture_data.html</Path>
    <Anchor>a600863bdc9da71aa0027ecb148ebe162</Anchor>
    <Abstract>Frame buffer Object. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>region</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>SVGTextureData</Scope>
    </TokenIdentifier>
    <Path>struct_s_v_g_texture_data.html</Path>
    <Anchor>ac1778675a9326aef5da2f397ff844377</Anchor>
    <Abstract>Texture region. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TestPattern</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>TestPattern</Scope>
    </TokenIdentifier>
    <Path>class_test_pattern.html</Path>
    <Abstract>Render a test pattern to help setup and debug the display configuration. </Abstract>
    <DeclaredIn>TestPattern.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TestPattern</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TestPattern</Scope>
    </TokenIdentifier>
    <Path>class_test_pattern.html</Path>
    <Anchor>ae656aef6eee4d22af5573886414cc10e</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>TestPattern.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TestPattern</Scope>
    </TokenIdentifier>
    <Path>class_test_pattern.html</Path>
    <Anchor>ab1c5d45995bf6a689a49331a076ae0f8</Anchor>
    <Abstract>Render the test pattern. </Abstract>
    <DeclaredIn>TestPattern.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TextInputDispatcher</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>TextInputDispatcher</Scope>
    </TokenIdentifier>
    <Path>class_text_input_dispatcher.html</Path>
    <Abstract>Dispatch text input from the WebServiceServer thread to the active ContentWindow. ...</Abstract>
    <DeclaredIn>TextInputDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendKeyEventToActiveWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>TextInputDispatcher</Scope>
    </TokenIdentifier>
    <Path>class_text_input_dispatcher.html</Path>
    <Anchor>acc2f567f5835e4269a9b7fb4a4139308</Anchor>
    <Abstract>Send the given key event to the active (frontmost) window. </Abstract>
    <DeclaredIn>TextInputDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TextInputDispatcher</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextInputDispatcher</Scope>
    </TokenIdentifier>
    <Path>class_text_input_dispatcher.html</Path>
    <Anchor>a7a4b7d6469254d0b33cf15b14d1d85b5</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>TextInputDispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TextInputHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>TextInputHandler</Scope>
    </TokenIdentifier>
    <Path>class_text_input_handler.html</Path>
    <Abstract>Handle &amp;quot;/textinput&amp;quot; requests for the WebService. </Abstract>
    <DeclaredIn>TextInputHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receivedKeyInput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>TextInputHandler</Scope>
    </TokenIdentifier>
    <Path>class_text_input_handler.html</Path>
    <Anchor>a964b2f1980b806cba699e3aff87ad799</Anchor>
    <Abstract>Emitted whenever a request is successfully handled. </Abstract>
    <DeclaredIn>TextInputHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TextInputHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextInputHandler</Scope>
    </TokenIdentifier>
    <Path>class_text_input_handler.html</Path>
    <Anchor>a421d85ec18def8266d1bb0f372a15810</Anchor>
    <Abstract>Handle TextInput requests. </Abstract>
    <DeclaredIn>TextInputHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~TextInputHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextInputHandler</Scope>
    </TokenIdentifier>
    <Path>class_text_input_handler.html</Path>
    <Anchor>a3dd9adbbef083b4c07c50d188ffcd99f</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>TextInputHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextInputHandler</Scope>
    </TokenIdentifier>
    <Path>class_text_input_handler.html</Path>
    <Anchor>ae6e0fcda886cff5d6504b26e9f4d1bcc</Anchor>
    <Abstract>Handle a request. </Abstract>
    <DeclaredIn>TextInputHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Handler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dcWebservice::Handler</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_handler.html</Path>
    <Anchor>aeb5756832851d7bef1db5feede4104f1</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>Handler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Texture</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Texture</Scope>
    </TokenIdentifier>
    <Path>class_texture.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Texture</Scope>
    </TokenIdentifier>
    <Path>class_texture.html</Path>
    <Anchor>a2c97dad0b2890fce843c4238a98d2833</Anchor>
    <Abstract>Get the dimensions of the full resolution texture. </Abstract>
    <DeclaredIn>Texture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Texture</Scope>
    </TokenIdentifier>
    <Path>class_texture.html</Path>
    <Anchor>adcdf55a53ae6af63676e5ef2302033b1</Anchor>
    <Abstract>Render the FactoryObject. </Abstract>
    <DeclaredIn>Texture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FactoryObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>a727abf1cee9211870d9b155925441ccb</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>FactoryObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FactoryObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>a49eaa1806635c84fdf9b0f80a1e0128b</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>FactoryObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRenderContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>acf3fd8f50c49b6c5cc5c5a9cc32fe508</Anchor>
    <Abstract>Set the render context. </Abstract>
    <DeclaredIn>FactoryObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRenderContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>ae50f2e3fe3b5a6458a2c8b413c0ff3a9</Anchor>
    <Abstract>Get the render context. </Abstract>
    <DeclaredIn>FactoryObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>a8d89f74806cc8483c5f231551f1a834c</Anchor>
    <Abstract>Get the current frame index for this Object. </Abstract>
    <DeclaredIn>FactoryObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>af33e624cd522c4940a6bd876a952102e</Anchor>
    <Abstract>Must be called everytime a derived object is rendered. </Abstract>
    <DeclaredIn>FactoryObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderContext_</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>FactoryObject</Scope>
    </TokenIdentifier>
    <Path>class_factory_object.html</Path>
    <Anchor>aece7dc20cd5d4989629d65fbf23edfa9</Anchor>
    <Abstract>A reference to the render context. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TextureContent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>TextureContent</Scope>
    </TokenIdentifier>
    <Path>class_texture_content.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TextureContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureContent</Scope>
    </TokenIdentifier>
    <Path>class_texture_content.html</Path>
    <Anchor>a34ede22c00496d1f2309d56c0bfcf70b</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>TextureContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureContent</Scope>
    </TokenIdentifier>
    <Path>class_texture_content.html</Path>
    <Anchor>a35aad95117808ad94be189f2a0a6621e</Anchor>
    <Abstract>Get the content type. </Abstract>
    <DeclaredIn>TextureContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMetadata</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureContent</Scope>
    </TokenIdentifier>
    <Path>class_texture_content.html</Path>
    <Anchor>aac9af25e443cae0cfef848825719f56f</Anchor>
    <Abstract>Read texture metadata. </Abstract>
    <DeclaredIn>TextureContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Content</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ae491288d2efce7fa63d3e777580630b4</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a887d2b952cd824d70f64106ae048a5f8</Anchor>
    <Abstract>Get the content URI. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>aa4681ca97acea99fbe88e20f0e664bc0</Anchor>
    <Abstract>Get the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a1b7a6f49f447c124b497b0a844fd6ea6</Anchor>
    <Abstract>Set the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>blockAdvance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af4cadaac5031fa05e4472bce153f3ea9</Anchor>
    <Abstract>Used to indicate that the window is being moved. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preRenderUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af01aa8e619f5f00a9e3bfb27338f8d2f</Anchor>
    <Abstract>Re-implement this method to update or synchronize before rendering. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postRenderUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ae97b82f88b6e079ec746a656d4e3cbef</Anchor>
    <Abstract>Re-implement this method to update or synchronize after rendering. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a44c022cb6fed6fb1b0dff45e39ececb9</Anchor>
    <Abstract>Emitted by any Content subclass when its state has been modified. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThumbnailGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThumbnailGeneratorFactory</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ThumbnailGeneratorFactory</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator_factory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ToolbarButton</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ToolbarButton</Scope>
    </TokenIdentifier>
    <Path>struct_toolbar_button.html</Path>
    <Abstract>A simple button for the DockToolbar. </Abstract>
    <DeclaredIn>DockToolbar.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ToolbarButton</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ToolbarButton</Scope>
    </TokenIdentifier>
    <Path>struct_toolbar_button.html</Path>
    <Anchor>a1f5f720526f8e5d55b679e4b7a6e4113</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>DockToolbar.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>caption</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ToolbarButton</Scope>
    </TokenIdentifier>
    <Path>struct_toolbar_button.html</Path>
    <Anchor>acd43eb85db6b0477a42c3a26cfa5bfee</Anchor>
    <Abstract>Text caption. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>icon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ToolbarButton</Scope>
    </TokenIdentifier>
    <Path>struct_toolbar_button.html</Path>
    <Anchor>a5bc2b91b85d4cdbf8a194ab340aa4ef1</Anchor>
    <Abstract>Icon image, should be square and have at least the same height as the Toolbar to avoid upscaling...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>command</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ToolbarButton</Scope>
    </TokenIdentifier>
    <Path>struct_toolbar_button.html</Path>
    <Anchor>a11a93fc3eafe3bf475e2f320a8734f4f</Anchor>
    <Abstract>User-defined command associated with this button. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallConfiguration</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WallConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_wall_configuration.html</Path>
    <Abstract>The WallConfiguration class manages all the parameters needed to setup a Wall process. </Abstract>
    <DeclaredIn>WallConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallConfiguration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_wall_configuration.html</Path>
    <Anchor>aea5753620ffbbc4459200e408c83b48e</Anchor>
    <Abstract>WallConfiguration. </Abstract>
    <DeclaredIn>WallConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHost</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_wall_configuration.html</Path>
    <Anchor>ad0378a8d4da77e3f8b6f8c5c3c9e9090</Anchor>
    <Abstract>getHost </Abstract>
    <DeclaredIn>WallConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDisplay</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_wall_configuration.html</Path>
    <Anchor>a876b1979b3e3ad41c10df2e6edddcf55</Anchor>
    <Abstract>getDisplay </Abstract>
    <DeclaredIn>WallConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScreenCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_wall_configuration.html</Path>
    <Anchor>aa6468d2eb50a4ae860593283c4420e90</Anchor>
    <Abstract>getScreenCount Get the number of screens/GLWindows this process has to manage </Abstract>
    <DeclaredIn>WallConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScreenPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_wall_configuration.html</Path>
    <Anchor>a10c0b9e58056aa5860c85905735180bd</Anchor>
    <Abstract>getScreenPosition Get the position of the specified screen </Abstract>
    <DeclaredIn>WallConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGlobalScreenIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallConfiguration</Scope>
    </TokenIdentifier>
    <Path>class_wall_configuration.html</Path>
    <Anchor>a6ef9df6c529cc3685ee8ba8ca13d2166</Anchor>
    <Abstract>getScreenGlobalIndex Get the global index for the screen </Abstract>
    <DeclaredIn>WallConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Configuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a4f41abbe40c7e1345a325369c86aaaca</Anchor>
    <Abstract>Create a new configuration from an xml file. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Configuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a1226f87dc3c27be16eb16e53301eb2f3</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalScreenCountX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aca560ac9d3b46ef39444287ab4ba800f</Anchor>
    <Abstract>getTotalScreenCountX Get the total number of screens along the x axis </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalScreenCountY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a0f61e23c663322c808a33b8deeab198e</Anchor>
    <Abstract>getTotalScreenCountY Get the total number of screens along the y axis </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScreenWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a957a6e17a77943ca1469a599c4116987</Anchor>
    <Abstract>getScreenWidth Get the width of a screen. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScreenHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>acac053b8e85c8e13dc1b24f829d70b25</Anchor>
    <Abstract>getScreenWidth Get the height of a screen. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMullionWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aa4f921578b584411cab548d015e9ceba</Anchor>
    <Abstract>getMullionWidth Get the padding nedded to compensate for the physical displays&amp;#39; bezel ...</Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMullionHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aebf3438c6130ea0a50ed85d0ed2bde93</Anchor>
    <Abstract>getMullionHeight Get the padding nedded to compensate for the physical displays&amp;#39; bezel ...</Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aa7b4b828ea7bc8afcf2bed3857007eaa</Anchor>
    <Abstract>getTotalWidth Get the total width of the DisplayWall, including the Mullion padding. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>aba8af0457ab8769b5baab775ecebb8ba</Anchor>
    <Abstract>getTotalHeight Get the total height of the DisplayWall, including the Mullion padding. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a1031736dbddf1becee943184afb27dda</Anchor>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNormalizedScreenRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a1bd273cb0c1f333906015ab2490a5895</Anchor>
    <Abstract>Get the normalized coordinates and dimensions of a screen. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFullscreen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a3d38c54f965dce34f3839867a508779a</Anchor>
    <Abstract>getFullscreen Display the windows in fullscreen mode </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBackgroundUri</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a40a9ddefb4fc943fe5c57c77741af319</Anchor>
    <Abstract>getBackgroundUri Get the URI to the Content to be used as background </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBackgroundColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a26fbc602af0411414e371c4eb5558cbe</Anchor>
    <Abstract>getBackgroundColor Get the uniform color to use for Background </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBackgroundColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a51644ed6bfcc2f0e09557583e9682bc1</Anchor>
    <Abstract>setBackgroundColor Set the background color </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBackgroundUri</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a3e2f9576c5f221d7740bc315fc85bea4</Anchor>
    <Abstract>setBackgroundUri Set the URI to the Content to be used as background </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>save</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>af8fbe3f7ad79653dc6bf100bd7b77a6d</Anchor>
    <Abstract>save Save the configuration to the current xml file. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>save</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a73d1fdbf347319f3afbb7ef3245d6eaf</Anchor>
    <Abstract>save Save the configuration to the specified xml file. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>filename_</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a43ad513bddcdfe68ff36f6254a843c1b</Anchor>
    <Abstract>filename_ The path to the xml configuration file </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallFromMasterChannel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WallFromMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_from_master_channel.html</Path>
    <Abstract>Receiving channel from the master application to the wall processes. </Abstract>
    <DeclaredIn>WallFromMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processMessages</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>WallFromMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_from_master_channel.html</Path>
    <Anchor>ac31fbc2ac8f416a651cd24b736af42f9</Anchor>
    <Abstract>Process messages until the QUIT message is received. </Abstract>
    <DeclaredIn>WallFromMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>received</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>WallFromMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_from_master_channel.html</Path>
    <Anchor>ab57f20a60ab6c83820e4344915a4f109</Anchor>
    <Abstract>Emitted when a displayGroup was recieved. </Abstract>
    <DeclaredIn>WallFromMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>received</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>WallFromMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_from_master_channel.html</Path>
    <Anchor>afb6a2af77cb53d4daff226e765de3338</Anchor>
    <Abstract>Emitted when new Options were recieved. </Abstract>
    <DeclaredIn>WallFromMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>received</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>WallFromMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_from_master_channel.html</Path>
    <Anchor>a32ac04eade034a8cd78c198a1b6decfd</Anchor>
    <Abstract>Emitted when new Markers were recieved. </Abstract>
    <DeclaredIn>WallFromMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>received</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>WallFromMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_from_master_channel.html</Path>
    <Anchor>ac4ee7cd44949b341776faab87835b542</Anchor>
    <Abstract>Emitted when a new PixelStream frame was recieved. </Abstract>
    <DeclaredIn>WallFromMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receivedQuit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>WallFromMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_from_master_channel.html</Path>
    <Anchor>af64048387bb958cc6678929489337ebc</Anchor>
    <Abstract>Emitted when the quit message was recieved. </Abstract>
    <DeclaredIn>WallFromMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallFromMasterChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallFromMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_from_master_channel.html</Path>
    <Anchor>a8f799726df2923051e9615728de8ed36</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WallFromMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMessageAvailable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallFromMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_from_master_channel.html</Path>
    <Anchor>a34a7629d9a71d873394d4bc51e687d04</Anchor>
    <Abstract>Check if a message is available from the Master process. </Abstract>
    <DeclaredIn>WallFromMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receiveMessage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallFromMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_from_master_channel.html</Path>
    <Anchor>a8ee7bd69b551972aa732743a116c7c04</Anchor>
    <Abstract>Receive a message. </Abstract>
    <DeclaredIn>WallFromMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallToMasterChannel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WallToMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_master_channel.html</Path>
    <Abstract>Sending channel from a wall process to the master application. </Abstract>
    <DeclaredIn>WallToMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendRequestFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>WallToMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_master_channel.html</Path>
    <Anchor>a76a9b4eef6cd44c4866743a09948b31e</Anchor>
    <Abstract>Send a request frame message for the given pixel stream. </Abstract>
    <DeclaredIn>WallToMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendQuit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>WallToMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_master_channel.html</Path>
    <Anchor>a41e1681f9d52ad4debdcf1b41ade7fc5</Anchor>
    <Abstract>Send quit message to the master application to stop the receiver. </Abstract>
    <DeclaredIn>WallToMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallToMasterChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_master_channel.html</Path>
    <Anchor>a566e3c97ead7e0578a81e11d2d24adcd</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WallToMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallToWallChannel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Abstract>Communication channel between the Wall processes. </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallToWallChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>aba4b1dba030d03dde3e677ded75a688f</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRank</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>a3a7e61b7880b49c94d48b9d196104d3d</Anchor>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>globalSum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>ab96d864cd7c74f3e0fb8ab58e35cce15</Anchor>
    <Abstract>Get the sum of the given local values across all processes. </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>a5ed49d881339e80bf2e90f749fe157aa</Anchor>
    <Abstract>Check if all processes are ready to perform a common action. </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>a933c06ef0a4c24468d2884fe14259d60</Anchor>
    <Abstract>Get the current timestamp, synchronized accross processes. </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synchronizeClock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>a10fc64c27e001a7399fba31effaba473</Anchor>
    <Abstract>Synchronize clock time across all processes. </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>globalBarrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>acc9fd1d36ca77ac667cde210b63b3354</Anchor>
    <Abstract>Block execution until all programs have reached the barrier. </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkVersion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>ac46cfa16faf2fb46ea35b04bd78f5d7d</Anchor>
    <Abstract>Check that all processes have the same version of an object. </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>electLeader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>a1aea3e92d4e4716b0c51f0ee7bf5491e</Anchor>
    <Abstract>Elect a leader amongst wall processes. </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>broadcast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>a1849ff8865aea47796d4d121020668de</Anchor>
    <Abstract>Broadcast a timestamp. </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receiveTimestampBroadcast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>a5342f3f32cc484974416d2707e43d6fe</Anchor>
    <Abstract>Receive a timestamp broadcasted by broadcast(timestamp). </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebbrowserCommandHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WebbrowserCommandHandler</Scope>
    </TokenIdentifier>
    <Path>class_webbrowser_command_handler.html</Path>
    <Abstract>Handle webbrowser Commands. </Abstract>
    <DeclaredIn>WebbrowserCommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openWebBrowser</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>WebbrowserCommandHandler</Scope>
    </TokenIdentifier>
    <Path>class_webbrowser_command_handler.html</Path>
    <Anchor>a383d08c8134c8d541098894435a1cad7</Anchor>
    <Abstract>Signal the PixelStreamLauncher to open a Webbrowser. </Abstract>
    <DeclaredIn>WebbrowserCommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebbrowserCommandHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebbrowserCommandHandler</Scope>
    </TokenIdentifier>
    <Path>class_webbrowser_command_handler.html</Path>
    <Anchor>a32cbd80dbc9e6d42c8fa3201c3c3fac1</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WebbrowserCommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebbrowserCommandHandler</Scope>
    </TokenIdentifier>
    <Path>class_webbrowser_command_handler.html</Path>
    <Anchor>a48d6ae0e6fcbbcfffd4fb7d650196c55</Anchor>
    <Abstract>Get the type of commands handled by the implementation. </Abstract>
    <DeclaredIn>WebbrowserCommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebbrowserCommandHandler</Scope>
    </TokenIdentifier>
    <Path>class_webbrowser_command_handler.html</Path>
    <Anchor>a5939e5c5b5fff5607f8627f2f318ff1d</Anchor>
    <Abstract>Handles an open web browser Command. </Abstract>
    <DeclaredIn>WebbrowserCommandHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebkitAuthenticationHelper</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WebkitAuthenticationHelper</Scope>
    </TokenIdentifier>
    <Path>class_webkit_authentication_helper.html</Path>
    <Abstract>Handle HTTP authentication requests for a QWebView. </Abstract>
    <DeclaredIn>WebkitAuthenticationHelper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebkitAuthenticationHelper</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebkitAuthenticationHelper</Scope>
    </TokenIdentifier>
    <Path>class_webkit_authentication_helper.html</Path>
    <Anchor>a4566e282a6780eeb97b84b4d6f88930d</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WebkitAuthenticationHelper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebkitHtmlSelectReplacer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WebkitHtmlSelectReplacer</Scope>
    </TokenIdentifier>
    <Path>class_webkit_html_select_replacer.html</Path>
    <Abstract>Substitutes all &amp;lt;select&amp;gt; elements on a webpage by equivalent HTML lists. </Abstract>
    <DeclaredIn>WebkitHtmlSelectReplacer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebkitHtmlSelectReplacer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebkitHtmlSelectReplacer</Scope>
    </TokenIdentifier>
    <Path>class_webkit_html_select_replacer.html</Path>
    <Anchor>aeee70417fc142e48bb07331a33963d00</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WebkitHtmlSelectReplacer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replaceAllSelectElements</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebkitHtmlSelectReplacer</Scope>
    </TokenIdentifier>
    <Path>class_webkit_html_select_replacer.html</Path>
    <Anchor>a6a8236e75946bb10abca9b8683a9b117</Anchor>
    <Abstract>Replace all &amp;lt;select&amp;gt; elements by Html equivalents. </Abstract>
    <DeclaredIn>WebkitHtmlSelectReplacer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebkitPixelStreamer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WebkitPixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_webkit_pixel_streamer.html</Path>
    <Abstract>Stream webpages with user interaction support. </Abstract>
    <DeclaredIn>WebkitPixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>WebkitPixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_webkit_pixel_streamer.html</Path>
    <Anchor>aa5e2048b51a37d82989f475f033f5c67</Anchor>
    <Abstract>Process an Event. </Abstract>
    <DeclaredIn>WebkitPixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Anchor>ad4786757e739ab50e1dd959f39882ede</Anchor>
    <Abstract>Process an Event. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebkitPixelStreamer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebkitPixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_webkit_pixel_streamer.html</Path>
    <Anchor>a45817a0fa98dfa974a04f60105c3e9ba</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WebkitPixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~WebkitPixelStreamer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebkitPixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_webkit_pixel_streamer.html</Path>
    <Anchor>aa0a741712313a0963f69bc28cae292e3</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>WebkitPixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebkitPixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_webkit_pixel_streamer.html</Path>
    <Anchor>a314e66c210f8d1ae19b9b36e26d4f59c</Anchor>
    <Abstract>Get the size of the webpage images. </Abstract>
    <DeclaredIn>WebkitPixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUrl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebkitPixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_webkit_pixel_streamer.html</Path>
    <Anchor>ad69dd3aadf96096e1b81360584af65b7</Anchor>
    <Abstract>Open a webpage. </Abstract>
    <DeclaredIn>WebkitPixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebkitPixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_webkit_pixel_streamer.html</Path>
    <Anchor>a24fa22352cd4b4e297889357ad3e0b6d</Anchor>
    <Abstract>Get the QWebView used internally by the streamer. </Abstract>
    <DeclaredIn>WebkitPixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Anchor>ad3d2288e104737dd9de180fdd9f27e74</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PixelStreamer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Anchor>ac9d996a5dadc05b54dcfa0824eb1a573</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>imageUpdated</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Anchor>ae9f831bd8e004763f4e2fd05b17a21a1</Anchor>
    <Abstract>Emit this signal after a new image has been generated. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendCommand</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PixelStreamer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer.html</Path>
    <Anchor>ad3be94b21aba5fb409fa24bbff6454e5</Anchor>
    <Abstract>Emit this signal to send a command to the receiver. </Abstract>
    <DeclaredIn>PixelStreamer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebServiceServer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WebServiceServer</Scope>
    </TokenIdentifier>
    <Path>class_web_service_server.html</Path>
    <Abstract>A Qt wrapper to run the dcWebservice::Server in a QThread. </Abstract>
    <DeclaredIn>WebServiceServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WebServiceServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebServiceServer</Scope>
    </TokenIdentifier>
    <Path>class_web_service_server.html</Path>
    <Anchor>a292894e9cff3a818ea72b1708ea7ed3f</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WebServiceServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~WebServiceServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebServiceServer</Scope>
    </TokenIdentifier>
    <Path>class_web_service_server.html</Path>
    <Anchor>acac912dd6e1a709456f92175ef89a00c</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>WebServiceServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebServiceServer</Scope>
    </TokenIdentifier>
    <Path>class_web_service_server.html</Path>
    <Anchor>add4f995e1c87224bb4bef372f7eea186</Anchor>
    <Abstract>Registers a request handler with a particular regular expression. </Abstract>
    <DeclaredIn>WebServiceServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebServiceServer</Scope>
    </TokenIdentifier>
    <Path>class_web_service_server.html</Path>
    <Anchor>af466375134b674204ba153a44e59fb5f</Anchor>
    <Abstract>Stop the server. </Abstract>
    <DeclaredIn>WebServiceServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WebServiceServer</Scope>
    </TokenIdentifier>
    <Path>class_web_service_server.html</Path>
    <Anchor>a4d9f2941a764fc4c5115e5fdf063ab8c</Anchor>
    <DeclaredIn>WebServiceServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ZoomInteractionDelegate</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ZoomInteractionDelegate</Scope>
    </TokenIdentifier>
    <Path>class_zoom_interaction_delegate.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dc::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>dc::Version</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_version.html</Path>
    <Abstract>Information about the current DisplayCluster version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>dc::Version</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_version.html</Path>
    <Anchor>a35f0bda50d18db7282c89ecd7b166a82</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>dc::Version</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_version.html</Path>
    <Anchor>aa0389ef659d2e0e02286632a63875825</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>dc::Version</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_version.html</Path>
    <Anchor>a6a434a3bbf33ec0af081e8dba81d5dc4</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>dc::Version</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_version.html</Path>
    <Anchor>a1eab6b4d3c7f5c6b71f669ae18bd9629</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>dc::Version</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_version.html</Path>
    <Anchor>af61db3067745313eb5f2f0d1053a3166</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>dc::Version</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_version.html</Path>
    <Anchor>a883d79a22baa27bf9dfd8f18a0b581f4</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>dc::Version</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_version.html</Path>
    <Anchor>a13f13bc2e3a1c9a1e0437b13241f2b95</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>dc::Version</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_version.html</Path>
    <Anchor>ad59c2979ce6452bb8a0c0d725d1f278a</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dc::Event</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>dc::Event</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_event.html</Path>
    <Abstract>A user event within a window. </Abstract>
    <DeclaredIn>Event.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Event</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dc::Event</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_event.html</Path>
    <Anchor>a5532a2a1296147bfe17b51f3d6c7759d</Anchor>
    <Abstract>Construct a new event. </Abstract>
    <DeclaredIn>Event.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::Event</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_event.html</Path>
    <Anchor>aff9f3fba4273df98e24bc4501e462052</Anchor>
    <Abstract>The type of event. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mouseX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::Event</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_event.html</Path>
    <Anchor>a7190bb053d1ab320931292ef9e6d7494</Anchor>
    <Abstract>Normalized X mouse/touch position relative to the window. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mouseY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::Event</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_event.html</Path>
    <Anchor>a0321ea9df556ac4df167cee47bbc4c6d</Anchor>
    <Abstract>Normalized Y mouse/touch position relative to the window. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dx</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::Event</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_event.html</Path>
    <Anchor>aa0f30907813296bcbc85b08df1f69866</Anchor>
    <Abstract>Normalized horizontal delta for scroll events / delta in pixels for wheel events. ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::Event</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_event.html</Path>
    <Anchor>a59ac888e981252414fcf1d059a17c694</Anchor>
    <Abstract>Normalized vertical delta for scroll events / delta in pixels for wheel events. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mouseLeft</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::Event</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_event.html</Path>
    <Anchor>a1088502f97256df771d144d0957eb715</Anchor>
    <Abstract>The state of the left mouse button (pressed=true) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mouseRight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::Event</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_event.html</Path>
    <Anchor>a48762f39624f9fa50bec4de5a665024a</Anchor>
    <Abstract>The state of the right mouse button (pressed=true) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mouseMiddle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::Event</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_event.html</Path>
    <Anchor>ada35a5b9ac5066384f5c80b7993b2f44</Anchor>
    <Abstract>The state of the middle mouse button (pressed=true) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>key</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::Event</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_event.html</Path>
    <Anchor>a7d6deb3e2ca180dd5875381b615d90bb</Anchor>
    <Abstract>The key code, see QKeyEvent::key() </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modifiers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::Event</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_event.html</Path>
    <Anchor>aae053ae284c862424d8b517486fdfe1a</Anchor>
    <Abstract>The keyboard modifiers, see QKeyEvent::modifiers() </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>text</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::Event</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_event.html</Path>
    <Anchor>a98f31080fbc430b2cca2f8f54243f2a3</Anchor>
    <Abstract>Carries unicode for key, see QKeyEvent::text() </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serializedSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::Event</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_event.html</Path>
    <Anchor>a298cbd73dabcb546b07b9f94510280f3</Anchor>
    <Abstract>The size of the QDataStream serialized output. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dc::ImageWrapper</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>dc::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_image_wrapper.html</Path>
    <Abstract>A simple wrapper around an image data buffer. </Abstract>
    <DeclaredIn>ImageWrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImageWrapper</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dc::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_image_wrapper.html</Path>
    <Anchor>a4e74a4eb33b52ed4e6341519d369b497</Anchor>
    <Abstract>ImageWrapper constructor. </Abstract>
    <DeclaredIn>ImageWrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBytesPerPixel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dc::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_image_wrapper.html</Path>
    <Anchor>a79ea492c2ba7342bfb850feb7de6f55f</Anchor>
    <DeclaredIn>ImageWrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBufferSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dc::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_image_wrapper.html</Path>
    <Anchor>a677b3f30d4b910e07d212836d25b66a9</Anchor>
    <DeclaredIn>ImageWrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapYAxis</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dc::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_image_wrapper.html</Path>
    <Anchor>acfada442a3f3d12d69776297d41895e7</Anchor>
    <Abstract>Swap an image along the Y axis. </Abstract>
    <DeclaredIn>ImageWrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_image_wrapper.html</Path>
    <Anchor>adfdc4737d4db9589c33c6f0cfdb38f37</Anchor>
    <Abstract>Pointer to the image data of size getBufferSize(). </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pixelFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_image_wrapper.html</Path>
    <Anchor>a27de8777a0c9d9295bc0a3251f0d870e</Anchor>
    <Abstract>The pixel format describing the arrangement of the data buffer. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_image_wrapper.html</Path>
    <Anchor>af24fe50f9dd524e4a51e5af98bec4fbb</Anchor>
    <Abstract>The image width in pixels. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>height</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_image_wrapper.html</Path>
    <Anchor>a57fc5c3e7deb83c2ec4f90223450d31d</Anchor>
    <Abstract>The image height in pixels. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>x</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_image_wrapper.html</Path>
    <Anchor>ae8db438f08b048740c1672339f890e33</Anchor>
    <Abstract>The X coordinate. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>y</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_image_wrapper.html</Path>
    <Anchor>a69de07322f099d52ec3834f32e503d44</Anchor>
    <Abstract>The Y coordinate. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compressionPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_image_wrapper.html</Path>
    <Anchor>a9d5596679536f8964e1eece05af5b45e</Anchor>
    <Abstract>Is the image to be compressed (default: auto). </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compressionQuality</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::ImageWrapper</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_image_wrapper.html</Path>
    <Anchor>a4ec4d39657ac412a488abd235cf838e2</Anchor>
    <Abstract>Compression quality (0 worst, 100 best, default: 75). </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dc::PixelStreamSegment</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>dc::PixelStreamSegment</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_pixel_stream_segment.html</Path>
    <Abstract>Image data and parameters for a single segment of a PixelStream. </Abstract>
    <DeclaredIn>PixelStreamSegment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::PixelStreamSegment</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_pixel_stream_segment.html</Path>
    <Anchor>a77427c61b39505300d351e8f6ff87c6e</Anchor>
    <Abstract>Parameters of the segment. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>imageData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::PixelStreamSegment</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_pixel_stream_segment.html</Path>
    <Anchor>a6049531f4a4fb8e563c2e8d3e19e98dd</Anchor>
    <Abstract>Image data of the segment. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dc::PixelStreamSegmentParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>dc::PixelStreamSegmentParameters</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_pixel_stream_segment_parameters.html</Path>
    <Abstract>Parameters for a PixelStream Segment. </Abstract>
    <DeclaredIn>PixelStreamSegmentParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamSegmentParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dc::PixelStreamSegmentParameters</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_pixel_stream_segment_parameters.html</Path>
    <Anchor>ad532f73d44b8f33741b3443773a55d52</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>PixelStreamSegmentParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compressed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::PixelStreamSegmentParameters</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_pixel_stream_segment_parameters.html</Path>
    <Anchor>a61bd35f3386266d498791a97de54b1fe</Anchor>
    <Abstract>Is the image raw pixel data or compressed in jpeg format. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>x</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::PixelStreamSegmentParameters</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_pixel_stream_segment_parameters.html</Path>
    <Anchor>a92d7bb1d7bc45be2554c68e09433ab26</Anchor>
    <Abstract>The x position in pixels. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>y</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::PixelStreamSegmentParameters</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_pixel_stream_segment_parameters.html</Path>
    <Anchor>a357370477dfcd6ca991bf0fe8716474c</Anchor>
    <Abstract>The y position in pixels. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::PixelStreamSegmentParameters</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_pixel_stream_segment_parameters.html</Path>
    <Anchor>a2110bcaecbb84582b0f54ab041aa9465</Anchor>
    <Abstract>The width in pixels. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>height</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dc::PixelStreamSegmentParameters</Scope>
    </TokenIdentifier>
    <Path>structdc_1_1_pixel_stream_segment_parameters.html</Path>
    <Anchor>a5df77782e48dfb1a6475c70f6ba1edb1</Anchor>
    <Abstract>The height in pixels. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dc::Stream</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>dc::Stream</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_stream.html</Path>
    <Abstract>Stream visual data to a DisplayCluster application. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Stream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dc::Stream</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_stream.html</Path>
    <Anchor>aeb1cf8a318b10c6d403214c4b035609a</Anchor>
    <Abstract>Open a new connection to the DisplayCluster application. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Stream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dc::Stream</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_stream.html</Path>
    <Anchor>a9a177844b5eef327a7f8f89b1d755478</Anchor>
    <Abstract>Destruct the Stream, closing the connection. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isConnected</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dc::Stream</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_stream.html</Path>
    <Anchor>a59ac6a56e3eae93dac523c4603546dc3</Anchor>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerForEvents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dc::Stream</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_stream.html</Path>
    <Anchor>a8dd0396bfea54ea4c3edc552bc4d80b1</Anchor>
    <Abstract>Register to receive Events. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRegisteredForEvents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dc::Stream</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_stream.html</Path>
    <Anchor>a8779aff7933472c3641410d5f77f644c</Anchor>
    <Abstract>Is this stream registered to receive events. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDescriptor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dc::Stream</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_stream.html</Path>
    <Anchor>acc308d7ba3dd55502262f7c9d619dbb0</Anchor>
    <Abstract>Get the native descriptor for the data stream. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dc::Stream</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_stream.html</Path>
    <Anchor>a6de23ff5b08d761493c60dab72d3a176</Anchor>
    <Abstract>Check if a new Event is available. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dc::Stream</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_stream.html</Path>
    <Anchor>a8777d8ae17b6c3f1aa8f3387ddee1edd</Anchor>
    <Abstract>Get the next Event. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dc::Stream</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_stream.html</Path>
    <Anchor>ad6cb75f591cf3b29c9c94f97ea86363b</Anchor>
    <Abstract>Send an image synchronously. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finishFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dc::Stream</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_stream.html</Path>
    <Anchor>a377abac35a6617efe83a2636b1a11d55</Anchor>
    <Abstract>Notify that all the images for this frame have been sent. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Future</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>dc::Stream</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_stream.html</Path>
    <Anchor>a2b3a75dc1e978132bc170aab5a95d597</Anchor>
    <Abstract>Future signaling success of asyncSend(). </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asyncSend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dc::Stream</Scope>
    </TokenIdentifier>
    <Path>classdc_1_1_stream.html</Path>
    <Anchor>a6728a0c5810ac1b70025b431e5c21906</Anchor>
    <Abstract>Send an image and finish the frame asynchronously. </Abstract>
    <DeclaredIn>Stream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dcWebservice::DefaultHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>dcWebservice::DefaultHandler</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_default_handler.html</Path>
    <Abstract>Default handler that always returns a 404 Not Found response. </Abstract>
    <DeclaredIn>DefaultHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dcWebservice::DefaultHandler</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_default_handler.html</Path>
    <Anchor>ac91bf93123012ba0a97da969312c8d67</Anchor>
    <Abstract>Through this method the handling functionality is exposed. </Abstract>
    <DeclaredIn>DefaultHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Handler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dcWebservice::Handler</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_handler.html</Path>
    <Anchor>aeb5756832851d7bef1db5feede4104f1</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>Handler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dcWebservice::FastCGIWrapper</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>dcWebservice::FastCGIWrapper</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_fast_c_g_i_wrapper.html</Path>
    <Abstract>Wrapper for the FastCGI library. </Abstract>
    <DeclaredIn>FastCGIWrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FastCGIWrapper</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dcWebservice::FastCGIWrapper</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_fast_c_g_i_wrapper.html</Path>
    <Anchor>a51e61cb88be32c1e01e4a7d97c31e25e</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>FastCGIWrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FastCGIWrapper</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dcWebservice::FastCGIWrapper</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_fast_c_g_i_wrapper.html</Path>
    <Anchor>add0e383f7cea3b95eae2e717356b494d</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>FastCGIWrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dcWebservice::FastCGIWrapper</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_fast_c_g_i_wrapper.html</Path>
    <Anchor>a450323b3e85d57f55536cf4b44bdb214</Anchor>
    <Abstract>Initialize the FCGI library. </Abstract>
    <DeclaredIn>FastCGIWrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dcWebservice::FastCGIWrapper</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_fast_c_g_i_wrapper.html</Path>
    <Anchor>a308261ca6f2246c7ee08b776a29ffcc4</Anchor>
    <Abstract>Blocks until a request arrives. </Abstract>
    <DeclaredIn>FastCGIWrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dcWebservice::FastCGIWrapper</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_fast_c_g_i_wrapper.html</Path>
    <Anchor>af68920ca66e17493d1cbcf1dc2f708a6</Anchor>
    <Abstract>Get the actual FCGX_Request object associated with this wrapper. </Abstract>
    <DeclaredIn>FastCGIWrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dcWebservice::FastCGIWrapper</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_fast_c_g_i_wrapper.html</Path>
    <Anchor>ab1a6d6bfc37bd67a580d12c93f81e0ca</Anchor>
    <Abstract>Sends the message back to the requester and finalizes the request. </Abstract>
    <DeclaredIn>FastCGIWrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dcWebservice::FastCGIWrapper</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_fast_c_g_i_wrapper.html</Path>
    <Anchor>a5cbf48c656db33c226bbdb544499a8cd</Anchor>
    <Abstract>Calling this method will force the interruption of the accept blocking call. </Abstract>
    <DeclaredIn>FastCGIWrapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dcWebservice::Handler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>dcWebservice::Handler</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_handler.html</Path>
    <Abstract>A request handler encapuslates the &amp;quot;service&amp;quot; code entry point of a web service. </Abstract>
    <DeclaredIn>Handler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Handler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dcWebservice::Handler</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_handler.html</Path>
    <Anchor>aeb5756832851d7bef1db5feede4104f1</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>Handler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dcWebservice::Handler</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_handler.html</Path>
    <Anchor>ab4caa2c6721a3bc902c08b20055d895a</Anchor>
    <Abstract>Through this method the handling functionality is exposed. </Abstract>
    <DeclaredIn>Handler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dcWebservice::Mapper</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>dcWebservice::Mapper</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_mapper.html</Path>
    <Abstract>Maps regular expressions to Request Handlers. </Abstract>
    <DeclaredIn>Mapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Mapper</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dcWebservice::Mapper</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_mapper.html</Path>
    <Anchor>a371d0eb38eaaba120adfdf8502265b23</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Mapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dcWebservice::Mapper</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_mapper.html</Path>
    <Anchor>aea1db2e397fcda132839427bed9bab50</Anchor>
    <Abstract>Register a handler with a regex defined by the pattern string passed as parameter. </Abstract>
    <DeclaredIn>Mapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dcWebservice::Mapper</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_mapper.html</Path>
    <Anchor>a874b852748b24cb065dce9c55207e98c</Anchor>
    <Abstract>Given a string, it returns the first handler for which positive regex match is found. </Abstract>
    <DeclaredIn>Mapper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dcWebservice::Request</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>dcWebservice::Request</Scope>
    </TokenIdentifier>
    <Path>structdc_webservice_1_1_request.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>httpHeaders</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dcWebservice::Request</Scope>
    </TokenIdentifier>
    <Path>structdc_webservice_1_1_request.html</Path>
    <Anchor>a5c6e9589e11813e45ff1cc88dcae07a1</Anchor>
    <Abstract>HTTP headers table. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>url</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dcWebservice::Request</Scope>
    </TokenIdentifier>
    <Path>structdc_webservice_1_1_request.html</Path>
    <Anchor>a3c7077e06a56744b1a13473f250e30bb</Anchor>
    <Abstract>Originally requested URL. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>method</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dcWebservice::Request</Scope>
    </TokenIdentifier>
    <Path>structdc_webservice_1_1_request.html</Path>
    <Anchor>a5eefd24ec9b2890aadba110c5076348f</Anchor>
    <Abstract>HTTP request method (GET, POST, PUT, DELETE, ...) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queryString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dcWebservice::Request</Scope>
    </TokenIdentifier>
    <Path>structdc_webservice_1_1_request.html</Path>
    <Anchor>a3e427c159b034e6c50ab1ed3a8db830b</Anchor>
    <Abstract>The query string, if one is present in the url. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dcWebservice::Request</Scope>
    </TokenIdentifier>
    <Path>structdc_webservice_1_1_request.html</Path>
    <Anchor>ab3ef5e42d6a2e37cdd4397ab4ccbbe20</Anchor>
    <Abstract>The path to the resource indicated in the url. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dcWebservice::Request</Scope>
    </TokenIdentifier>
    <Path>structdc_webservice_1_1_request.html</Path>
    <Anchor>a39752457fad2b574e37d167ae161b9ef</Anchor>
    <Abstract>If a query string is present this map contains the pairs name, value for each of the parameters in th...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dcWebservice::Request</Scope>
    </TokenIdentifier>
    <Path>structdc_webservice_1_1_request.html</Path>
    <Anchor>ac96e772c2cad706e1f218dd7a2175643</Anchor>
    <Abstract>If the request contains data in its body the data is stored here. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dcWebservice::RequestBuilder</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>dcWebservice::RequestBuilder</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_request_builder.html</Path>
    <Abstract>This class encapsulates the logic necessary to extract information from a FastCGI request (FCGX_Reque...</Abstract>
    <DeclaredIn>RequestBuilder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~RequestBuilder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dcWebservice::RequestBuilder</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_request_builder.html</Path>
    <Anchor>adf72aa68366f5f3d78af43064ca6e156</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>RequestBuilder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dcWebservice::RequestBuilder</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_request_builder.html</Path>
    <Anchor>a258db08ca4c483596dd982e3903804df</Anchor>
    <Abstract>Creates a new dcWebservice::Request object using the information contained in the FastCGI request...</Abstract>
    <DeclaredIn>RequestBuilder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dcWebservice::Response</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>dcWebservice::Response</Scope>
    </TokenIdentifier>
    <Path>structdc_webservice_1_1_response.html</Path>
    <Abstract>Structure representing a HTTP reponse message as specified in http://tools.ietf.org/search/rfc2616. </Abstract>
    <DeclaredIn>Response.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Response</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dcWebservice::Response</Scope>
    </TokenIdentifier>
    <Path>structdc_webservice_1_1_response.html</Path>
    <Anchor>a08c0464034072e28357f0e4c88942cd0</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Response.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>dcWebservice::Response</Scope>
    </TokenIdentifier>
    <Path>structdc_webservice_1_1_response.html</Path>
    <Anchor>aeb636ae8e66a663e0658a1747d2ce3fc</Anchor>
    <Abstract>Serialize the object into a String contaning a RFC 2616 compliant HTTP response message. </Abstract>
    <DeclaredIn>Response.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>statusCode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dcWebservice::Response</Scope>
    </TokenIdentifier>
    <Path>structdc_webservice_1_1_response.html</Path>
    <Anchor>aeb5384a678a0df6cba63db08610a4c53</Anchor>
    <Abstract>HTTP status code as defined in RFC 2616. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>statusMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dcWebservice::Response</Scope>
    </TokenIdentifier>
    <Path>structdc_webservice_1_1_response.html</Path>
    <Anchor>ab557b182a8187621cd3ba1da8c1d94db</Anchor>
    <Abstract>HTTP status message as defined in RFC 2616. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>body</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dcWebservice::Response</Scope>
    </TokenIdentifier>
    <Path>structdc_webservice_1_1_response.html</Path>
    <Anchor>ab03e67a3f0f3b95c9f961b74326d9148</Anchor>
    <Abstract>HTTP response body, as defined in RFC 2616. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>httpHeaders</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>dcWebservice::Response</Scope>
    </TokenIdentifier>
    <Path>structdc_webservice_1_1_response.html</Path>
    <Anchor>aeb12400a810f0573d67f28f3bbbc9064</Anchor>
    <Abstract>HTTP response headers as defined in RFC 2616. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dcWebservice::Server</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>dcWebservice::Server</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_server.html</Path>
    <Abstract>FastCGI application server. </Abstract>
    <DeclaredIn>Server.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Server</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dcWebservice::Server</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_server.html</Path>
    <Anchor>a8d640fb0748d812d4622f09cf8ddd33a</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Server.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dcWebservice::Server</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_server.html</Path>
    <Anchor>aa6c8b914130b22705b39b35a6a072a6d</Anchor>
    <Abstract>Registers a request handler with a particular regular expression. </Abstract>
    <DeclaredIn>Server.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dcWebservice::Server</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_server.html</Path>
    <Anchor>a6174c348fe83ede5f8cb3f995968a1cf</Anchor>
    <Abstract>Binds a TCP socket in the port specified and starts listening for incoming requests. </Abstract>
    <DeclaredIn>Server.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>dcWebservice::Server</Scope>
    </TokenIdentifier>
    <Path>classdc_webservice_1_1_server.html</Path>
    <Anchor>a806f8226d20b2a222cdbcd48d0af410f</Anchor>
    <Abstract>Stops the Server request processing loop. </Abstract>
    <DeclaredIn>Server.h</DeclaredIn>
  </Token>
</Tokens>
