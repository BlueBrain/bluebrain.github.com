<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_MAJOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>aa5be9a4351e20d44fa19574e589b2fb3</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_MINOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>aa5a2357f391cbb650d1d8894ee1b526f</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_PATCH</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>ab7df48db132552459d856511d31fec71</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_REVISION</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a6044ab3ac01614da058254ed01b5b206</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_ABI</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a7920884b61851f5f7492f448ee8bc30a</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_GT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>abee87c6b068f71dfee25e4b4d4fdb895</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_GE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a6495e508830bd2e12d505b21434ef9f2</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_LT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a33790ddcc603c8ba7cbcfef89e90db81</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_LE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>afb3327bd79d35ba861a0be60539a4264</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changelog</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>changelog.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deprecated</Name>
      <APILanguage>unknown</APILanguage>
    </TokenIdentifier>
    <Path>deprecated.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::BlueConfig</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Abstract>Read access to a BlueConfig or CircuitConfig file. </Abstract>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~BlueConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>a9f4f9b12ba5193f3cbbd16b91e26fdd8</Anchor>
    <Abstract>Close BlueConfig or CircuitConfig file. </Abstract>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BlueConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>afbac59429e4019abf307e9f415efdace</Anchor>
    <Abstract>Open given filepath to a BlueConfig or CircuitConfig for reading. </Abstract>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSectionNames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>a5a98e5c0ba84ee166cc28dc73a14d447</Anchor>
    <Abstract>Get names of given section type. </Abstract>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>a30a249fc4948e6fa7c269c34fe5155b8</Anchor>
    <Abstract>Get value as string for key in given section. </Abstract>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>aa58d9cf3d2a4462939a5a0586bbf7008</Anchor>
    <Abstract>Get value as type T for key in given section. </Abstract>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>aaf062876e0c67fbb50609662f4edcb6e</Anchor>
    <Abstract>Stream out content of BlueConfig or CircuitConfig file. </Abstract>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::Circuit</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_circuit.html</Path>
    <Abstract>Read access to a Circuit file. </Abstract>
    <DeclaredIn>circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Circuit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_circuit.html</Path>
    <Anchor>a3dbdbcb1eb256932b68b2471e36374d0</Anchor>
    <Abstract>Close circuit file. </Abstract>
    <DeclaredIn>circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Circuit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_circuit.html</Path>
    <Anchor>af64a9ed2225c8fc2a8f34a946892c3db</Anchor>
    <Abstract>Open given filepath to a circuit file for reading. </Abstract>
    <DeclaredIn>circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_circuit.html</Path>
    <Anchor>a7a188cd1a46b554e9a7220f876ad8b9c</Anchor>
    <Abstract>Retrieve neuron attributes for set of neurons. </Abstract>
    <DeclaredIn>circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumNeurons</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_circuit.html</Path>
    <Anchor>af7ed47392549f914b7ab7625f493176e</Anchor>
    <DeclaredIn>circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_circuit.html</Path>
    <Anchor>aeed587930d6b50536bc915e62c7c2fbd</Anchor>
    <Abstract>Get type information for the neurons in the circuit. </Abstract>
    <DeclaredIn>circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::CompartmentReport</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Abstract>Read &amp; write access to a CompartmentReport. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~CompartmentReport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>aa062e1099c64f3dcde183766f07524f2</Anchor>
    <Abstract>Close compartment report. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompartmentReport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>ae96d8a5137f610eedac6803e0d6ce114</Anchor>
    <Abstract>Open given URI to a compartment report for reading and/or writing. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompartmentReport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a23f39247dce97c7ec0bf715ee321b470</Anchor>
    <Abstract>Open given source to a compartment report for reading. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateMapping</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a6ee6420e43db4ac5319a86b074d94ba4</Anchor>
    <Abstract>Update compartment mapping wrt the given GIDs. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a3589cf28e6cdd2f4879f6bf7cbd264e3</Anchor>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOffsets</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a91a580dd34e4eb7c9a34c3b96d003781</Anchor>
    <Abstract>Get the current mapping of each section of each neuron in each simulation frame buffer. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCompartmentCounts</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a1457c2180362fb3ac924edd9b7114b1d</Anchor>
    <Abstract>Get the number of compartments for each section of each neuron provided by the GID set via updateMapp...</Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumCompartments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a6ac0b82e37f6ac3851704b48868f4a9a</Anchor>
    <Abstract>Get the number of compartments for the given neuron. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStartTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>add9d4f7e6d2bacdb68d64f3f70ee96af</Anchor>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEndTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a2b2e504eb004361a5172c6709d457c85</Anchor>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimestep</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a9eb569f6bf02eb22139f56c364a58436</Anchor>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDataUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>afd2cadc160af1e98ccf30b3489a2bd84</Anchor>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimeUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>aa52854139ec3214ba63da0a0cf568b1f</Anchor>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a75a2757c72b283f1e723e4302ec0d10d</Anchor>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a6510af0acb912ec4149b391c43b1e441</Anchor>
    <Abstract>Load report values at the given time stamp. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBufferSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a8721d04fa5ef8d8b1c69b8865fcb0917</Anchor>
    <Abstract>Set the size of the stream buffer for loaded frames. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBufferSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a646267af418b901b2b618e27cf0079ef</Anchor>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a30882f15ba7f42ebe56e044d4a956082</Anchor>
    <Abstract>Clears all buffered frames to free memory. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompartmentReport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>ad4159c878cfe6b04d5941439e35bde20</Anchor>
    <Abstract>Open given source to a compartment report for writing. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeHeader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a938807f67dcdae5807a6027fea99ffc7</Anchor>
    <Abstract>Write the header information of this report. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeCompartments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a2d384f09e1c84e1ba5f024c4e4b1d4fc</Anchor>
    <Abstract>Write the compartment counts for each section for one cell. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>af09abc90891b747622411c2f8322deac</Anchor>
    <Abstract>Write the voltages for one cell at a point in time. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>aada18371df36d46de253b2df4495ecb5</Anchor>
    <Abstract>Flush data to output. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::CompartmentReportInitData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::CompartmentReportInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_init_data.html</Path>
    <Abstract>Basic plugin init data for CompartmentReportPlugin. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompartmentReportInitData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_init_data.html</Path>
    <Anchor>a7b704f74430159dfb39effb4a83b5c20</Anchor>
    <Abstract>Create a CompartmentReportInitData object given a URI, access mode and GIDs. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGids</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_init_data.html</Path>
    <Anchor>a62cbdfafa3bd2a3bdcf7f4ad5c503285</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PluginInitData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>a1650dcd4a119693bed903422e4a9cac6</Anchor>
    <Abstract>Create a PluginInitData object given a URI and access mode. </Abstract>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>a3d0fb1d5cec4f9f119c10776be47f183</Anchor>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAccessMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>ac110912b104b28967b171f2065fbb93f</Anchor>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::CompartmentReportPlugin</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Abstract>Base interface for compartment report readers and writers. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStartTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a77d7425864f7419f4773f88a16aa26da</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEndTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a1985f5b329183f6b04526ba76c97e0af</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimestep</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>ae71ced93bc847ec7d69040e5d9451bd7</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDataUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a6a191f3993f311a3624992ff88d3c571</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimeUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a61db21fb8152284cce8600261d01e617</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a38eaf9923df3ffdf99947211a6a381cb</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOffsets</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a6d3877f26cc06de3a3831515970a35e0</Anchor>
    <Abstract>Get the current mapping of each section of each neuron in each simulation frame buffer. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumCompartments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a3c42fd88d4f88d351010025a9e41116b</Anchor>
    <Abstract>Get the number of compartments for the given neuron. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCompartmentCounts</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>af6ffd4a9f8050e38b7562f0cc431dda1</Anchor>
    <Abstract>Get the number of compartments for each section of each neuron provided by the GID set via updateMapp...</Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a70319410ff7c5db96705f61be80b0a1c</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a1ff1151aeaa2ff23b617a90fd73aab72</Anchor>
    <Abstract>Load report values at the given time stamp. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateMapping</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a979a0f56cfe3fc560eadc776dd865910</Anchor>
    <Abstract>Update compartment mapping wrt the given GIDs. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBufferSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a0ec00376da3b89b1215e687dfe9a65f9</Anchor>
    <Abstract>Set the size of the stream buffer for loaded frames. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a7fe02b55cdecf384aa1ec33aff7a3620</Anchor>
    <Abstract>Clears all buffered frames to free memory. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBufferSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>ab8a1a38a2cc4ecbd0b8a55285a61545d</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeHeader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a4592a0896163764c694fc3e707b07bad</Anchor>
    <Abstract>Write the header information of this report. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeCompartments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a878884cf31cac32660141d9ae2d2cd9b</Anchor>
    <Abstract>Write the compartment counts for each section for one cell. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a51b4099cab5b14d04b0f21be7642e17f</Anchor>
    <Abstract>Write the voltages for one cell at a point in time. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a29f488ea011b60d69788eb5f28d39de8</Anchor>
    <Abstract>Flush data to output. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::Mesh</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Abstract>Read &amp; write access to a Mesh file. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Mesh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a55332d0f5514bc5f2da06a7c7683a7d2</Anchor>
    <Abstract>Close mesh file. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Mesh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>ae37cce9604ced319d85b6a5a0c14fe90</Anchor>
    <Abstract>Open the given source to a mesh file for reading. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVersion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a4d91f35bc6ddc7e0d6d381db1c2ca44b</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumVertices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a147b439bf0614b838289edeb2405024e</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readVertices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>ad26774b45b0182cffe3398622a8be1e6</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readVertexSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a8030c1ee2238659ae3dfe7a9749011e4</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readVertexDistances</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>ae55ff5c5a296ee5594b7c463ac28a1bf</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumTriangles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>ae381bb48056d2dc2bc804fd7a34db12b</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readTriangles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>af195ee3aaffc21d69443969c89a7169a</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readTriangleSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>ac4ff32aa44c10d0913c74edc94214c27</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readTriangleDistances</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a814a9196b7fa9ce5953585c42dfd5b48</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTriStripLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a636ec40aaad18512e451d7ec89c6cdfd</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readTriStrip</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a93a549722a2c9ac3fcf9383556bebc54</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumNormals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a0e2ebd5da50e066a96afe7c971825da7</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readNormals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a9369029be5c50db3851b02159f9da018</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumStructures</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a45cb7c6ce28e4dbc8e2226ef7ed54ec0</Anchor>
    <Abstract>Get the number of structural meshes of the given type. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readStructureVertices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>ab6aebfd1e8292954bd30d5aaf2adff7a</Anchor>
    <Abstract>Get the vertices of the given structure. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readStructureTriangles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>aa01e4dbacb40041d06fbb66a5fb721dd</Anchor>
    <Abstract>Get the triangles of the given structure. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readStructureTriStrip</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>af0f4a2006f79e3b7e7c59b60a40068c7</Anchor>
    <Abstract>Get the triangle strip of the given structure. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Mesh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a6ca51c19032b498d3a5465f3accebd1e</Anchor>
    <Abstract>Open the given mesh file for write access. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeVertices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>aa812af0661e5f85c24956581776d0535</Anchor>
    <Abstract>Write vertices describing the surface/membrane mesh of a neuron. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeVertexSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a6e151efb6675540e580e66ce9747b2a3</Anchor>
    <Abstract>Write section indices for each vertex of the surface/membrane mesh. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeVertexDistances</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a323d2eece34198b700a7e8417446defe</Anchor>
    <Abstract>Write relative distances in the section for each vertex of the surface/membrane mesh. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTriangles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>aaabe742fe4f8fb784928e1b178f02d80</Anchor>
    <Abstract>Write triangles describing the surface/membrane mesh of a neuron. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTriangleSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a1176166ce871e285faf9703f440f4952</Anchor>
    <Abstract>Write section indices for each triangle of the surface/membrane mesh. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTriangleDistances</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>af1987188c851cdb5dadd8429eea631ae</Anchor>
    <Abstract>Write relative distances in the section for each triangle of the surface/membrane mesh...</Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTriStrip</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a460e23ea6d110b000459c7dad874880a</Anchor>
    <Abstract>Write triangle strip describing the surface/membrane mesh of a neuron. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeNormals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a5aca35c6cf7190594b9241c38d1265d0</Anchor>
    <Abstract>Write per-vertex normals for the surface/membrane mesh of a neuron. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeStructureVertices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a29a60e739a0567bac2d4a5ae979c7c89</Anchor>
    <Abstract>Write vertices for one type of structural mesh. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeStructureTriangles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a4e0c210c873cd931792d2b01d0916ce0</Anchor>
    <Abstract>Write triangles for one type of structural mesh. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeStructureTriStrip</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a997ca89769cd0fd0e3acb20e3ec32696</Anchor>
    <Abstract>Write the triangle strip for one type of structural mesh. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a268f1c164a98bb286b5ae71e1e84ab7f</Anchor>
    <Abstract>Flush data to output. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::Morphology</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Abstract>Read &amp; write access to a Morphology file. </Abstract>
    <DeclaredIn>morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Morphology</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>acfb9f9d4db5bd0818bc3aad2f348a74a</Anchor>
    <Abstract>Close morphology file. </Abstract>
    <DeclaredIn>morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Morphology</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>a235efab2eac5b23ee3fed5fb34681b97</Anchor>
    <Abstract>Open the given source to a morphology file for reading. </Abstract>
    <DeclaredIn>morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readPoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>a004462fefc681b2aaf058924af06fce4</Anchor>
    <Abstract>Read points of morphology, representing x,y,z coordinates + diameter. </Abstract>
    <DeclaredIn>morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>a97a59f5683e39fae264a01f93237cd7e</Anchor>
    <Abstract>Read sections of morphology, representing section start index and index of the parent section...</Abstract>
    <DeclaredIn>morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readSectionTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>a403f9c4ae379feeae3610f973c213995</Anchor>
    <Abstract>Read section types of morphology. </Abstract>
    <DeclaredIn>morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readApicals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>a8bc8172057581f9e03b72ab1da560eb7</Anchor>
    <Abstract>Read apical points of morphology, representing section and point index. </Abstract>
    <DeclaredIn>morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Morphology</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>a305303bd90a69a5f8e0f810aa56acfac</Anchor>
    <Abstract>Open the given morphology file for write access. </Abstract>
    <DeclaredIn>morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writePoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>aeba6a61f74ff5424bf4f202b7478d50b</Anchor>
    <Abstract>Write points of morphology, representing x,y,z coordinates + diameter. </Abstract>
    <DeclaredIn>morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>ab864455d86ab87c6b35131dbc5f5de32</Anchor>
    <Abstract>Write sections of morphology, representing section start index and index of parent the section...</Abstract>
    <DeclaredIn>morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeSectionTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>a4e10777e7caed13c668b1a4428735780</Anchor>
    <Abstract>Write section types of morphology. </Abstract>
    <DeclaredIn>morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeApicals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>a27999dfcdbc884321edf3374a085a531</Anchor>
    <Abstract>Write apical points of morphology, representing section and point index. </Abstract>
    <DeclaredIn>morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>a875995889e7e94dbe0959475aec03924</Anchor>
    <Abstract>Flush data to output. </Abstract>
    <DeclaredIn>morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::MorphologyInitData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::MorphologyInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_init_data.html</Path>
    <Abstract>Basic plugin init data for MorphologyPlugin. </Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PluginInitData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>a1650dcd4a119693bed903422e4a9cac6</Anchor>
    <Abstract>Create a PluginInitData object given a URI and access mode. </Abstract>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>a3d0fb1d5cec4f9f119c10776be47f183</Anchor>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAccessMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>ac110912b104b28967b171f2065fbb93f</Anchor>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::MorphologyPlugin</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Abstract>Base interface for morphology readers plugins. </Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readPoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>a981eb1b3077076874e4fe276dccbc064</Anchor>
    <Abstract>Read points of morphology, representing x,y,z coordinates + diameter. </Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>a5820e211cda2689b7e83b13d2d32c00d</Anchor>
    <Abstract>Read sections of morphology, representing section start index and index of the parent section...</Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readSectionTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>aa463ab7bb4ac29fe22fcaf095913dc4b</Anchor>
    <Abstract>Read section types of morphology. </Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readApicals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>ad33e4fa8fc3e5b55613a958b82327d6f</Anchor>
    <Abstract>Read apical points of morphology, representing section and point index. </Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writePoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>a2511c339c7922ea9527d8e04f079fa39</Anchor>
    <Abstract>Write points of morphology, representing x,y,z coordinates + diameter. </Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>a8be362093ebb14814507dbfa743f6d6f</Anchor>
    <Abstract>Write sections of morphology, representing section start index and index of parent the section...</Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeSectionTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>ab83fc61f7379ea0ffc5b7c2c26db49df</Anchor>
    <Abstract>Write section types of morphology. </Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeApicals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>af21f35f221ca068d5cca1a418ac0359a</Anchor>
    <Abstract>Write apical points of morphology, representing section and point index. </Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>a7e46021d144fc5dad9faa3e23ea0b20d</Anchor>
    <Abstract>Flush data to output. </Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::PluginInitData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Abstract>Basic plugin init data for Brion plugin classes. </Abstract>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PluginInitData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>a1650dcd4a119693bed903422e4a9cac6</Anchor>
    <Abstract>Create a PluginInitData object given a URI and access mode. </Abstract>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>a3d0fb1d5cec4f9f119c10776be47f183</Anchor>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAccessMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>ac110912b104b28967b171f2065fbb93f</Anchor>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::SpikeReport</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Abstract>Read access to a SpikeReport. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpikeReport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a51ae7286154ca0d7caf1a1bd8cfc094d</Anchor>
    <Abstract>Create a SpikeReport object given a URI. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SpikeReport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a50beeeb2c939998028f2e5e32d121364</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getReadMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a6fa614522cbaa72578637baf4f60bfee</Anchor>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStartTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a35dc196f6a69b39e0bc69c0ec3be75fc</Anchor>
    <Abstract>Get the time of the first spike. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEndTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a5f90cebedf6f79bd3c8e15de3c2861aa</Anchor>
    <Abstract>Get the time of the last spike. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSpikes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>af1f75302f6cd63780f10d6cedda3b01f</Anchor>
    <Abstract>Get the spike times and cell GIDs. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeSpikes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a399159966dde8dd7e8568d452ee0eaae</Anchor>
    <Abstract>Writes the spike times and cell GIDs. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitUntil</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a9000f0d5acebebfcd07a99172eb7dc67</Anchor>
    <Abstract>Lock the caller until the first spike past the given time stamp arrives or the network stream is clos...</Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNextSpikeTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a5e366cdface09f9de23b0ef369f7d7fc</Anchor>
    <Abstract>Return the time of the next spike available in the internal cache. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLatestSpikeTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>ab5bbe0c626970b0bde9939a2a495747a</Anchor>
    <Abstract>Return the time of the latest spike that has been received. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a025c64d02116e0b86e0e07cb4cc975f9</Anchor>
    <Abstract>Remove all spikes contained in the given time interval. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a5610cfd2b4f663e5c9e6393af63a472c</Anchor>
    <Abstract>Closes the report. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::SpikeReportPlugin</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Abstract>Base interface for spike report readers plugins. </Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStartTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>a1b6399cd2a6908a7d03702f8cccd4960</Anchor>
    <Abstract>Get the time of the first spike. </Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEndTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>a7c9a9c757ca45b8403ab4fab1ea4bf39</Anchor>
    <Abstract>Get the time of the last spike. </Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSpikes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>a3c4a4b6a329d48dc31a73e5dd67fb654</Anchor>
    <Abstract>Get the spike times and cell GIDs. </Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeSpikes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>a9ed9e0c1033d5bd8461d120455617772</Anchor>
    <Abstract>Writes the spike times and cell GIDs. </Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getReadMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>af685b14b98ad2d97e7da5e38e68253fe</Anchor>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitUntil</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>a1d2cc5654162e27e0de67ef6b1c8806b</Anchor>
    <Abstract>Lock the caller until the first spike past the given time stamp arrives or the network stream is clos...</Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNextSpikeTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>ab0c9e3bab16d3d4c3c5ef7e321b09102</Anchor>
    <Abstract>Return the time of the next spike available in the internal cache. </Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLatestSpikeTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>a16aa3b104dea9a4ce36bc75345c7bbbf</Anchor>
    <Abstract>Return the time of the next spike available in the internal cache. </Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>a8da9693509c7ad057f28c7bb7c4780e2</Anchor>
    <Abstract>Remove all spikes contained in the given time interval. </Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>a972c34269c7b114a27f01d13363bddad</Anchor>
    <Abstract>Closes the report. </Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::Synapse</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse.html</Path>
    <Abstract>Read access to a Synapse file. </Abstract>
    <DeclaredIn>synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Synapse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse.html</Path>
    <Anchor>a967b1d9adb7f49fbff371130291c0b7d</Anchor>
    <Abstract>Close synapse file. </Abstract>
    <DeclaredIn>synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Synapse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse.html</Path>
    <Anchor>afa0d5cf421b259daf8820890efe248c6</Anchor>
    <Abstract>Open the given source to a synapse file for reading. </Abstract>
    <DeclaredIn>synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse.html</Path>
    <Anchor>a62371ecb873ea2ff7be426306fb5d6db</Anchor>
    <Abstract>Read requested synapse attributes for a given neuron. </Abstract>
    <DeclaredIn>synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumSynapses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse.html</Path>
    <Anchor>a7c29b99d2f20edc860860d6b286d0f90</Anchor>
    <Abstract>Get the number of synapses for a set of neurons. </Abstract>
    <DeclaredIn>synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::SynapseSummary</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::SynapseSummary</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse_summary.html</Path>
    <Abstract>Read access to a Synapse summary file. </Abstract>
    <DeclaredIn>synapseSummary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SynapseSummary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SynapseSummary</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse_summary.html</Path>
    <Anchor>a6c88b279a52cb43f3b21f958bbd4ddb7</Anchor>
    <Abstract>Close synapse summary file. </Abstract>
    <DeclaredIn>synapseSummary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SynapseSummary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SynapseSummary</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse_summary.html</Path>
    <Anchor>af20d4491231e172d332a2850fb957842</Anchor>
    <Abstract>Open the given source to a synapse summary file for reading. </Abstract>
    <DeclaredIn>synapseSummary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SynapseSummary</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse_summary.html</Path>
    <Anchor>a1761a2a8a94c76762ce5312076568c90</Anchor>
    <Abstract>Read afferent and efferent information for a given neuron. </Abstract>
    <DeclaredIn>synapseSummary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::Target</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Abstract>Read access to a Target file. </Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Target</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Anchor>ab8d2a8b976e2b52b4b8617edfc8e6a2f</Anchor>
    <Abstract>Close target file. </Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Target</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Anchor>a2c1de15976a2e1f569b0083bb56d0480</Anchor>
    <Abstract>Open the given source to a target file for reading. </Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTargetNames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Anchor>a92130c8c0608723dcb538a9e4d4c317c</Anchor>
    <Abstract>Get list of targets for the desired type. </Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Anchor>a413c895cc24f25e7c85ed00818395d90</Anchor>
    <Abstract>Get targets and/or GIDSet grouped by the given target. </Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Anchor>aea9917cbbc18242f7738a1e57ff70274</Anchor>
    <Abstract>Stream out content of target file. </Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Abstract>Information about the current Brion version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>a7724662e5f6b8e067440ac22acec9657</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>abfeb86012f499e974116645aa4682830</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>abb649c2122bcb69b00e2485d6695fdee</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>a100387ecec439ad9a41c6125d4584288</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>a6f481c7090688eeb4742a22a53982c14</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>a08a68ae8561176060e77710c79cad778</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>a0529b8442a3578b60213b46007be4624</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>a899ec6e0102c68a690e8b9143c7908c4</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
</Tokens>
