<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_MAJOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>core_2version_8h.html</Path>
    <Anchor>ac33465e1e7f363b93a6a1f2e116ce51b</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_MINOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>core_2version_8h.html</Path>
    <Anchor>a7bd6df5f9b090e20ac173861ad71b1ee</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_PATCH</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>core_2version_8h.html</Path>
    <Anchor>a49ed920229918ae2f9a98cd4c00b2d90</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_REVISION</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>core_2version_8h.html</Path>
    <Anchor>ac22eed025af348044c8fa3b9451b9013</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_ABI</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>core_2version_8h.html</Path>
    <Anchor>a0aa86ffa7ddbdcb743246a33af017df4</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_STRING</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>core_2version_8h.html</Path>
    <Anchor>afe58d5cf1d92b6b06219cae41907324f</Anchor>
    <Abstract>The current major.minor.version as a string. </Abstract>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_REV_STRING</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>core_2version_8h.html</Path>
    <Anchor>ac8d205697b93a39c2cb022f38f55b572</Anchor>
    <Abstract>The current major.minor.version.revision as a string. </Abstract>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_GT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>core_2version_8h.html</Path>
    <Anchor>a6e0913ee24e9036631c3d1d7134a1fa6</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_GE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>core_2version_8h.html</Path>
    <Anchor>ae9f7bf3ccacd4853c6a907683c00780f</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_LT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>core_2version_8h.html</Path>
    <Anchor>ab2ced583af07f1d1854a22ceca2fd165</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_LE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>core_2version_8h.html</Path>
    <Anchor>afdc0fe66d4a7d5a28850c77aace3860e</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_MAJOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>master_2version_8h.html</Path>
    <Anchor>ac33465e1e7f363b93a6a1f2e116ce51b</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>master/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_MINOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>master_2version_8h.html</Path>
    <Anchor>a7bd6df5f9b090e20ac173861ad71b1ee</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>master/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_PATCH</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>master_2version_8h.html</Path>
    <Anchor>a49ed920229918ae2f9a98cd4c00b2d90</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>master/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_REVISION</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>master_2version_8h.html</Path>
    <Anchor>ac22eed025af348044c8fa3b9451b9013</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>master/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_ABI</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>master_2version_8h.html</Path>
    <Anchor>a0aa86ffa7ddbdcb743246a33af017df4</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>master/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_STRING</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>master_2version_8h.html</Path>
    <Anchor>afe58d5cf1d92b6b06219cae41907324f</Anchor>
    <Abstract>The current major.minor.version as a string. </Abstract>
    <DeclaredIn>master/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_REV_STRING</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>master_2version_8h.html</Path>
    <Anchor>ac8d205697b93a39c2cb022f38f55b572</Anchor>
    <Abstract>The current major.minor.version.revision as a string. </Abstract>
    <DeclaredIn>master/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_GT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>master_2version_8h.html</Path>
    <Anchor>a6e0913ee24e9036631c3d1d7134a1fa6</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>master/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_GE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>master_2version_8h.html</Path>
    <Anchor>ae9f7bf3ccacd4853c6a907683c00780f</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>master/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_LT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>master_2version_8h.html</Path>
    <Anchor>ab2ced583af07f1d1854a22ceca2fd165</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>master/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_LE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>master_2version_8h.html</Path>
    <Anchor>afdc0fe66d4a7d5a28850c77aace3860e</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>master/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_MAJOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>wall_2version_8h.html</Path>
    <Anchor>ac33465e1e7f363b93a6a1f2e116ce51b</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>wall/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_MINOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>wall_2version_8h.html</Path>
    <Anchor>a7bd6df5f9b090e20ac173861ad71b1ee</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>wall/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_PATCH</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>wall_2version_8h.html</Path>
    <Anchor>a49ed920229918ae2f9a98cd4c00b2d90</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>wall/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_REVISION</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>wall_2version_8h.html</Path>
    <Anchor>ac22eed025af348044c8fa3b9451b9013</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>wall/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_ABI</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>wall_2version_8h.html</Path>
    <Anchor>a0aa86ffa7ddbdcb743246a33af017df4</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>wall/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_STRING</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>wall_2version_8h.html</Path>
    <Anchor>afe58d5cf1d92b6b06219cae41907324f</Anchor>
    <Abstract>The current major.minor.version as a string. </Abstract>
    <DeclaredIn>wall/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_REV_STRING</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>wall_2version_8h.html</Path>
    <Anchor>ac8d205697b93a39c2cb022f38f55b572</Anchor>
    <Abstract>The current major.minor.version.revision as a string. </Abstract>
    <DeclaredIn>wall/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_GT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>wall_2version_8h.html</Path>
    <Anchor>a6e0913ee24e9036631c3d1d7134a1fa6</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>wall/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_GE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>wall_2version_8h.html</Path>
    <Anchor>ae9f7bf3ccacd4853c6a907683c00780f</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>wall/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_LT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>wall_2version_8h.html</Path>
    <Anchor>ab2ced583af07f1d1854a22ceca2fd165</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>wall/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TIDE_VERSION_LE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>wall_2version_8h.html</Path>
    <Anchor>afdc0fe66d4a7d5a28850c77aace3860e</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>wall/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>building</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>building.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changelog</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>changelog.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>developer_guide</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>developer_guide.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>user_guide</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>user_guide.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apps</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>apps.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pyramidify</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>pyramidify.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pyramidmaker</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>pyramidmaker.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tide</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>tide.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tideConverter</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>tideConverter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ActivityLogger</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ActivityLogger</Scope>
    </TokenIdentifier>
    <Path>class_activity_logger.html</Path>
    <Abstract>Gathers information/statistics on application usage. </Abstract>
    <DeclaredIn>ActivityLogger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logWindowAdded</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>ActivityLogger</Scope>
    </TokenIdentifier>
    <Path>class_activity_logger.html</Path>
    <Anchor>aae57ea1db2a0993113bd6dc537e3a5d7</Anchor>
    <Abstract>Log the event, update the counters and update the timestamp of last interaction. </Abstract>
    <DeclaredIn>ActivityLogger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logWindowMovedToFront</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>ActivityLogger</Scope>
    </TokenIdentifier>
    <Path>class_activity_logger.html</Path>
    <Anchor>a18f8cbc9c6063fd04ad8c534e9bd51f8</Anchor>
    <Abstract>Log the event, update the counters and update the timestamp of last interaction. </Abstract>
    <DeclaredIn>ActivityLogger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logWindowRemoved</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>ActivityLogger</Scope>
    </TokenIdentifier>
    <Path>class_activity_logger.html</Path>
    <Anchor>a88e51e750d949f6229c883464aaa0026</Anchor>
    <Abstract>Log the event, update the counters and update the timestamp of last interaction. </Abstract>
    <DeclaredIn>ActivityLogger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logScreenStateChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>ActivityLogger</Scope>
    </TokenIdentifier>
    <Path>class_activity_logger.html</Path>
    <Anchor>ad94a9b8a77353f7e855ff86a158e67d1</Anchor>
    <Abstract>Log the event and update the timestamp of last power action. </Abstract>
    <DeclaredIn>ActivityLogger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>monitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ActivityLogger</Scope>
    </TokenIdentifier>
    <Path>class_activity_logger.html</Path>
    <Anchor>ab039ba405396e980ca2f40a43a17d32a</Anchor>
    <Abstract>Monitor changes to the Scene. </Abstract>
    <DeclaredIn>ActivityLogger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWindowCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ActivityLogger</Scope>
    </TokenIdentifier>
    <Path>class_activity_logger.html</Path>
    <Anchor>a556f6b8ffb1aeeca4013715d2759ca80</Anchor>
    <DeclaredIn>ActivityLogger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAccumulatedWindowCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ActivityLogger</Scope>
    </TokenIdentifier>
    <Path>class_activity_logger.html</Path>
    <Anchor>a1bbc7287a260712fe991b04d1733cf90</Anchor>
    <DeclaredIn>ActivityLogger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWindowCountModificationTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ActivityLogger</Scope>
    </TokenIdentifier>
    <Path>class_activity_logger.html</Path>
    <Anchor>a48a4b774865799ac147b1cb323f87d11</Anchor>
    <DeclaredIn>ActivityLogger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInteractionCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ActivityLogger</Scope>
    </TokenIdentifier>
    <Path>class_activity_logger.html</Path>
    <Anchor>aa825695479c5f887b1c5d334bb55bcb7</Anchor>
    <DeclaredIn>ActivityLogger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLastInteractionName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ActivityLogger</Scope>
    </TokenIdentifier>
    <Path>class_activity_logger.html</Path>
    <Anchor>a548d4cceec0eb81999afadb9e5d8bfc2</Anchor>
    <DeclaredIn>ActivityLogger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLastInteractionTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ActivityLogger</Scope>
    </TokenIdentifier>
    <Path>class_activity_logger.html</Path>
    <Anchor>a8773a00086a32b04192b57d531d5f55c</Anchor>
    <DeclaredIn>ActivityLogger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScreenState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ActivityLogger</Scope>
    </TokenIdentifier>
    <Path>class_activity_logger.html</Path>
    <Anchor>afda9870576dfd43fa02906915970f8ee</Anchor>
    <DeclaredIn>ActivityLogger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScreenStateModificationTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ActivityLogger</Scope>
    </TokenIdentifier>
    <Path>class_activity_logger.html</Path>
    <Anchor>a6962998910125f182b0e8aa78ee8a258</Anchor>
    <DeclaredIn>ActivityLogger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AppRemoteController</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>AppRemoteController</Scope>
    </TokenIdentifier>
    <Path>class_app_remote_controller.html</Path>
    <Abstract>Remote controller for the application using JSON-RPC. </Abstract>
    <DeclaredIn>AppRemoteController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>AppRemoteController</Scope>
    </TokenIdentifier>
    <Path>class_app_remote_controller.html</Path>
    <Anchor>a0c0509c879b1add3adeb4a1d7316e9f6</Anchor>
    <Abstract>Open a content. </Abstract>
    <DeclaredIn>AppRemoteController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>AppRemoteController</Scope>
    </TokenIdentifier>
    <Path>class_app_remote_controller.html</Path>
    <Anchor>a7f703ba6d6d7a77a431370c692732ee2</Anchor>
    <Abstract>Load a session. </Abstract>
    <DeclaredIn>AppRemoteController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>save</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>AppRemoteController</Scope>
    </TokenIdentifier>
    <Path>class_app_remote_controller.html</Path>
    <Anchor>a2d825499b64fccac70fec5ac2f0449ba</Anchor>
    <Abstract>Save a session to the given file. </Abstract>
    <DeclaredIn>AppRemoteController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>browse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>AppRemoteController</Scope>
    </TokenIdentifier>
    <Path>class_app_remote_controller.html</Path>
    <Anchor>a9a28b845abf9f77c5fc65fa994efda26</Anchor>
    <Abstract>Browse a website. </Abstract>
    <DeclaredIn>AppRemoteController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openWhiteboard</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>AppRemoteController</Scope>
    </TokenIdentifier>
    <Path>class_app_remote_controller.html</Path>
    <Anchor>a5301bee74276dcbca1525587f8c1fc22</Anchor>
    <Abstract>Open a whiteboard. </Abstract>
    <DeclaredIn>AppRemoteController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>takeScreenshot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>AppRemoteController</Scope>
    </TokenIdentifier>
    <Path>class_app_remote_controller.html</Path>
    <Anchor>a5eaf77e43de754ce7bee11734e2c6795</Anchor>
    <Abstract>Take a screenshot. </Abstract>
    <DeclaredIn>AppRemoteController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>powerOff</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>AppRemoteController</Scope>
    </TokenIdentifier>
    <Path>class_app_remote_controller.html</Path>
    <Anchor>a626d6ee47d619bf49a8cbc0da26a7651</Anchor>
    <Abstract>Power off the screens. </Abstract>
    <DeclaredIn>AppRemoteController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>AppRemoteController</Scope>
    </TokenIdentifier>
    <Path>class_app_remote_controller.html</Path>
    <Anchor>af80600d8c07c7a728f08791d9b41a949</Anchor>
    <Abstract>Exit the application. </Abstract>
    <DeclaredIn>AppRemoteController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AppRemoteController</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>AppRemoteController</Scope>
    </TokenIdentifier>
    <Path>class_app_remote_controller.html</Path>
    <Anchor>ad4ceca65aa34b12930e8f7d32299d4d3</Anchor>
    <Abstract>Construct an application controller. </Abstract>
    <DeclaredIn>AppRemoteController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AutomaticLayout</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>AutomaticLayout</Scope>
    </TokenIdentifier>
    <Path>class_automatic_layout.html</Path>
    <Abstract>This class takes care of laying out of the windows in focused mode, using binary trees and heuristics...</Abstract>
    <DeclaredIn>AutomaticLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFocusedCoord</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>AutomaticLayout</Scope>
    </TokenIdentifier>
    <Path>class_automatic_layout.html</Path>
    <Anchor>a2ad923799a0935a35f8c2c05398bee1a</Anchor>
    <DeclaredIn>AutomaticLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateFocusedCoord</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>AutomaticLayout</Scope>
    </TokenIdentifier>
    <Path>class_automatic_layout.html</Path>
    <Anchor>ae4752167cee2c7495442a568b25d0310</Anchor>
    <Abstract>Update the focused coordinates for the set of windows. </Abstract>
    <DeclaredIn>AutomaticLayout.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_getAvailableSpace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LayoutPolicy</Scope>
    </TokenIdentifier>
    <Path>class_layout_policy.html</Path>
    <Anchor>a2aba386ff80e8be5847fd11b0dc3baca</Anchor>
    <Abstract>returns the rect of available space on the display group </Abstract>
    <DeclaredIn>LayoutPolicy.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Background</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Background</Scope>
    </TokenIdentifier>
    <Path>class_background.html</Path>
    <Abstract>Background color and content. </Abstract>
    <DeclaredIn>Background.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updated</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Background</Scope>
    </TokenIdentifier>
    <Path>class_background.html</Path>
    <Anchor>a7cd0255a1b69f4b0d26d55bfb6f53f67</Anchor>
    <Abstract>Emitted when any value is changed by one of the setters. </Abstract>
    <DeclaredIn>Background.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Background</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Background</Scope>
    </TokenIdentifier>
    <Path>class_background.html</Path>
    <Anchor>a36754df1deb720393217ade59da41557</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>Background.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Background</Scope>
    </TokenIdentifier>
    <Path>class_background.html</Path>
    <Anchor>aae873701f63ccddefa14039bfc218c9d</Anchor>
    <Abstract>Get the color of the background. </Abstract>
    <DeclaredIn>Background.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUri</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Background</Scope>
    </TokenIdentifier>
    <Path>class_background.html</Path>
    <Anchor>a44b29b1cbcaa3f7e5fb88d2097c0d581</Anchor>
    <Abstract>Get the uri of the background content. </Abstract>
    <DeclaredIn>Background.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Background</Scope>
    </TokenIdentifier>
    <Path>class_background.html</Path>
    <Anchor>a3dfc32a5421e8b0494940822c06fdba2</Anchor>
    <Abstract>Set the color of the background. </Abstract>
    <DeclaredIn>Background.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUri</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Background</Scope>
    </TokenIdentifier>
    <Path>class_background.html</Path>
    <Anchor>a4fe1ff243b7624d5988ce4deffa9e68a</Anchor>
    <Abstract>Set the background content from a uri. </Abstract>
    <DeclaredIn>Background.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Background</Scope>
    </TokenIdentifier>
    <Path>class_background.html</Path>
    <Anchor>adf9b6df7a6d5d39c2830841463a6afa0</Anchor>
    <Abstract>Create a shared Options object. </Abstract>
    <DeclaredIn>Background.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BackgroundRenderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>BackgroundRenderer</Scope>
    </TokenIdentifier>
    <Path>class_background_renderer.html</Path>
    <Abstract>Renders background content on the Wall. </Abstract>
    <DeclaredIn>BackgroundRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BackgroundWidget</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>BackgroundWidget</Scope>
    </TokenIdentifier>
    <Path>class_background_widget.html</Path>
    <Abstract>Simple widget to edit and save background settings. </Abstract>
    <DeclaredIn>BackgroundWidget.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accept</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>BackgroundWidget</Scope>
    </TokenIdentifier>
    <Path>class_background_widget.html</Path>
    <Anchor>af58dd01c6fb4b8599d1ab06417b92ec4</Anchor>
    <Abstract>Store the new settings and close the widget. </Abstract>
    <DeclaredIn>BackgroundWidget.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>BackgroundWidget</Scope>
    </TokenIdentifier>
    <Path>class_background_widget.html</Path>
    <Anchor>a46290d2cbf08a44b84533b6aacc631c5</Anchor>
    <Abstract>Revert to the previous settings and close the widget. </Abstract>
    <DeclaredIn>BackgroundWidget.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setActiveSurface</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>BackgroundWidget</Scope>
    </TokenIdentifier>
    <Path>class_background_widget.html</Path>
    <Anchor>afa0a0e85eeb9974c41d3a0db03dde0f6</Anchor>
    <Abstract>Set the active surface to edit. </Abstract>
    <DeclaredIn>BackgroundWidget.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BackgroundWidget</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BackgroundWidget</Scope>
    </TokenIdentifier>
    <Path>class_background_widget.html</Path>
    <Anchor>a40ae856ce7aa50c3d458e51633600e61</Anchor>
    <Abstract>Create a BackgroundWidget. </Abstract>
    <DeclaredIn>BackgroundWidget.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BasicSynchronizer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>BasicSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_basic_synchronizer.html</Path>
    <Abstract>A basic synchronizer used for static content types. </Abstract>
    <DeclaredIn>BasicSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BasicSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BasicSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_basic_synchronizer.html</Path>
    <Anchor>a343ca5d5f6872766b0cd019111cd5427</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>BasicSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BasicSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_basic_synchronizer.html</Path>
    <Anchor>a684e3d0deb6988520f82eab79c3345c9</Anchor>
    <Abstract>Update the Content. </Abstract>
    <DeclaredIn>BasicSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BasicSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_basic_synchronizer.html</Path>
    <Anchor>ad96bfa9fbffc0ccfff474affb6d40d62</Anchor>
    <Abstract>Update the tiles. </Abstract>
    <DeclaredIn>BasicSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canSwapTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BasicSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_basic_synchronizer.html</Path>
    <Anchor>a5176a9efe3c6b214f4a7de5c360d4693</Anchor>
    <DeclaredIn>BasicSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BasicSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_basic_synchronizer.html</Path>
    <Anchor>ac32980f2fbbfe5acc52cf22430927c09</Anchor>
    <Abstract>Swap the image before rendering (useful only for synchronized contents). </Abstract>
    <DeclaredIn>BasicSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTilesArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BasicSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_basic_synchronizer.html</Path>
    <Anchor>a14fadea5476d8730c894507a0f5da688</Anchor>
    <DeclaredIn>BasicSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BasicSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_basic_synchronizer.html</Path>
    <Anchor>abdfd78b504b7741b8ad06e75d9ccb3fe</Anchor>
    <Abstract>Get statistics about this Content. </Abstract>
    <DeclaredIn>BasicSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onSwapReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BasicSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_basic_synchronizer.html</Path>
    <Anchor>abd26eebc223e5d5dc5f0442f51fce2fd</Anchor>
    <Abstract>Called when a tile is ready to swap. </Abstract>
    <DeclaredIn>BasicSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createZoomContextTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>BasicSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_basic_synchronizer.html</Path>
    <Anchor>a15dcd739415c558f6e039866f20905c6</Anchor>
    <DeclaredIn>BasicSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aa9b57c8a735fbfb9b35e3e79d9ac9682</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ContentSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aac4d27f2dcb82846eb5e94a8f281aa5f</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoomContextVisible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a8abee6251a6c2f9a3640bf3a23d4332a</Anchor>
    <Abstract>Check if the zoom context tile is visible in Qml. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a83072124703f035d6dfa466cc1cf73d5</Anchor>
    <Abstract>Get the view for this synchronizer. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onRequestNextFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a134db7d6cbe00b6886e5d8c30c7ceac6</Anchor>
    <Abstract>Called when a tile has to be updated, re-emits requestTileUpdate. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZoomContextVisible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a38b82b0163d7871040fa78bf8145a7b7</Anchor>
    <Abstract>Set by the Qml ZoomContext element. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tilesAreaChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aac807a9cb073a52d88a80ceca93b34a3</Anchor>
    <Abstract>Notifier for the tiles area property. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>statisticsChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a8b2131d6b3874d8d932a101ec3dcde05</Anchor>
    <Abstract>Notifier for the statistics property. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zoomContextVisibleChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a7223c8186607dd080abc644b359167a0</Anchor>
    <Abstract>Notifier for the zoomContextVisible property. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a07a22964fedee87ec47fddc4b02a40f0</Anchor>
    <Abstract>Notify the window to add a tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a755db8af943fc6bd0aab4220320d3a89</Anchor>
    <Abstract>Notify the window to remove a tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aba03b3c5af16950946e91c893d20eeaf</Anchor>
    <Abstract>Notify to update a tile&amp;#39;s coordinates. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestTileUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>ada17c27d8584a4909d023802ded6b6fa</Anchor>
    <Abstract>Request an update of a specific tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zoomContextTileChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>addacc933144498d3686f4f2fc54d828a</Anchor>
    <Abstract>Notify that the zoom context tile has changed and must be recreated. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CachedDataSource</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>CachedDataSource</Scope>
    </TokenIdentifier>
    <Path>class_cached_data_source.html</Path>
    <Abstract>A data source which maintains a cache of the requested tiles. </Abstract>
    <DeclaredIn>CachedDataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CachedDataSource</Scope>
    </TokenIdentifier>
    <Path>class_cached_data_source.html</Path>
    <Anchor>aa7cb65c68e8d39bb682947fe4672a29c</Anchor>
    <Abstract>Get a tile image by its id for a given view. threadsafe </Abstract>
    <DeclaredIn>CachedDataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CachedDataSource</Scope>
    </TokenIdentifier>
    <Path>class_cached_data_source.html</Path>
    <Anchor>a02e027db47c9407a6235d391a015704b</Anchor>
    <Abstract>Check if the cache contains an image for a tile. </Abstract>
    <DeclaredIn>CachedDataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDynamic</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DataSource</Scope>
    </TokenIdentifier>
    <Path>class_data_source.html</Path>
    <Anchor>a54629350c073612b09217a9084b27951</Anchor>
    <DeclaredIn>DataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DataSource</Scope>
    </TokenIdentifier>
    <Path>class_data_source.html</Path>
    <Anchor>ae90b6ac012313220258d79a06d24b0cf</Anchor>
    <Abstract>Get the coordinates of a tile. </Abstract>
    <DeclaredIn>DataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTilesArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DataSource</Scope>
    </TokenIdentifier>
    <Path>class_data_source.html</Path>
    <Anchor>ad5f46f736ac7222416f59bd2406e566e</Anchor>
    <DeclaredIn>DataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeVisibleSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DataSource</Scope>
    </TokenIdentifier>
    <Path>class_data_source.html</Path>
    <Anchor>a3e64c02838caf9cf2e12835519226c49</Anchor>
    <Abstract>Compute the indices of the tiles which are visible in the given area. </Abstract>
    <DeclaredIn>DataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxLod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DataSource</Scope>
    </TokenIdentifier>
    <Path>class_data_source.html</Path>
    <Anchor>a2431b476c507172fbbef0d5c69f9c03a</Anchor>
    <DeclaredIn>DataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCachableTileImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CachedDataSource</Scope>
    </TokenIdentifier>
    <Path>class_cached_data_source.html</Path>
    <Anchor>a7572411a37e9936abcb1c757bd886293</Anchor>
    <Abstract>Get a tile image which will be cached. </Abstract>
    <DeclaredIn>CachedDataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synchronizers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>DataSource</Scope>
    </TokenIdentifier>
    <Path>class_data_source.html</Path>
    <Anchor>a43d2d50fc4971aa75f19e8c0130bc721</Anchor>
    <Abstract>The synchronizers linked to this shared data source. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CairoDeleter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>CairoDeleter</Scope>
    </TokenIdentifier>
    <Path>struct_cairo_deleter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CairoSurfaceDeleter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>CairoSurfaceDeleter</Scope>
    </TokenIdentifier>
    <Path>struct_cairo_surface_deleter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CanvasNode</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>CanvasNode</Scope>
    </TokenIdentifier>
    <Path>class_canvas_node.html</Path>
    <Abstract>Represent a node or a leaf in the binary tree structure used by AutomaticLayout. </Abstract>
    <DeclaredIn>CanvasNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFree</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CanvasNode</Scope>
    </TokenIdentifier>
    <Path>class_canvas_node.html</Path>
    <Anchor>a22d5f4b5651aa8c6543ebf407ba54b6f</Anchor>
    <Abstract>return true if there is an empty leaf </Abstract>
    <DeclaredIn>CanvasNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preview</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CanvasNode</Scope>
    </TokenIdentifier>
    <Path>class_canvas_node.html</Path>
    <Anchor>a3654caeae68da20a92a2c29555d4126c</Anchor>
    <Abstract>resize the tree, insertion should not be used after call to preview </Abstract>
    <DeclaredIn>CanvasNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CanvasTree</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>CanvasTree</Scope>
    </TokenIdentifier>
    <Path>class_canvas_tree.html</Path>
    <Abstract>Represent the binary tree used by the AutomaticLayout class, is on top of CanvasNode. </Abstract>
    <DeclaredIn>CanvasTree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateFocusCoordinates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CanvasTree</Scope>
    </TokenIdentifier>
    <Path>class_canvas_tree.html</Path>
    <Anchor>a5e1e2ccb9babe80895774ebf857a560c</Anchor>
    <Abstract>Resize the tree, updating the coordinates of the windows. </Abstract>
    <DeclaredIn>CanvasTree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOccupiedSpace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CanvasTree</Scope>
    </TokenIdentifier>
    <Path>class_canvas_tree.html</Path>
    <Anchor>a123522022d426569633e6c27b2d0f59d</Anchor>
    <DeclaredIn>CanvasTree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommandLineOptions</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>CommandLineOptions</Scope>
    </TokenIdentifier>
    <Path>class_command_line_options.html</Path>
    <Abstract>Command line options to pass startup parameters to a local application. </Abstract>
    <DeclaredIn>CommandLineOptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommandLineOptions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandLineOptions</Scope>
    </TokenIdentifier>
    <Path>class_command_line_options.html</Path>
    <Anchor>ad470c893b63d2f91ebf0b65824473727</Anchor>
    <Abstract>Construct an empty instance. </Abstract>
    <DeclaredIn>CommandLineOptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommandLineOptions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandLineOptions</Scope>
    </TokenIdentifier>
    <Path>class_command_line_options.html</Path>
    <Anchor>a84c6e39f06d06092317684fb5cc42d64</Anchor>
    <Abstract>Construct from command line parameters. </Abstract>
    <DeclaredIn>CommandLineOptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandLineOptions</Scope>
    </TokenIdentifier>
    <Path>class_command_line_options.html</Path>
    <Anchor>a5d1040e4ba091f5d7c28f61e9dd68d94</Anchor>
    <Abstract>Try to parse the command line arguments. </Abstract>
    <DeclaredIn>CommandLineOptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showSyntax</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandLineOptions</Scope>
    </TokenIdentifier>
    <Path>class_command_line_options.html</Path>
    <Anchor>a68181e21059723b97e097ae95c1b9085</Anchor>
    <Abstract>Print syntax to std::out. </Abstract>
    <DeclaredIn>CommandLineOptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCommandLine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandLineOptions</Scope>
    </TokenIdentifier>
    <Path>class_command_line_options.html</Path>
    <Anchor>a3d8b4c329b6a3634e20a2d661a1e0453</Anchor>
    <Abstract>Get the arguments joined in command line format. </Abstract>
    <DeclaredIn>CommandLineOptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCommandLineArguments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandLineOptions</Scope>
    </TokenIdentifier>
    <Path>class_command_line_options.html</Path>
    <Anchor>ab5f3af16b94d02c33fa42c6caefcb301</Anchor>
    <Abstract>Get the command line arguments in list format. </Abstract>
    <DeclaredIn>CommandLineOptions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommandLineParser</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandLineParser</Scope>
    </TokenIdentifier>
    <Path>class_command_line_parser.html</Path>
    <Anchor>a9bbf0d70950652b7944f12f0564014ac</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>CommandLineParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~CommandLineParser</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandLineParser</Scope>
    </TokenIdentifier>
    <Path>class_command_line_parser.html</Path>
    <Anchor>a77dce9e183275e2b11466e4f0398cfce</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>CommandLineParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHelp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandLineParser</Scope>
    </TokenIdentifier>
    <Path>class_command_line_parser.html</Path>
    <Anchor>a72e09cbf8222c686ff78335f79588b2a</Anchor>
    <Abstract>Was the –help flag given. </Abstract>
    <DeclaredIn>CommandLineParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>desc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CommandLineParser</Scope>
    </TokenIdentifier>
    <Path>class_command_line_parser.html</Path>
    <Anchor>a3d555fab2fc4cf169d4c3ca91af062a2</Anchor>
    <Abstract>The list of options which already includes &quot;--help&quot;. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pos_desc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CommandLineParser</Scope>
    </TokenIdentifier>
    <Path>class_command_line_parser.html</Path>
    <Anchor>a670b2fb53d37943a4d3f891299498c91</Anchor>
    <Abstract>The list of positional options. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vm</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CommandLineParser</Scope>
    </TokenIdentifier>
    <Path>class_command_line_parser.html</Path>
    <Anchor>ad00d7149ac4b3c176a81767426a7a36e</Anchor>
    <Abstract>Contains the results of the parse() operation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommandLineParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>CommandLineParameters</Scope>
    </TokenIdentifier>
    <Path>class_command_line_parameters.html</Path>
    <Abstract>Parse command line parameters for tide a master application. </Abstract>
    <DeclaredIn>CommandLineParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommandLineParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandLineParameters</Scope>
    </TokenIdentifier>
    <Path>class_command_line_parameters.html</Path>
    <Anchor>a6feba967b7930dbe2f3091177edb31e2</Anchor>
    <Abstract>Construct a command line parser. </Abstract>
    <DeclaredIn>CommandLineParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showSyntax</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandLineParameters</Scope>
    </TokenIdentifier>
    <Path>class_command_line_parameters.html</Path>
    <Anchor>a8b209f802607262f8e92395bcf014a23</Anchor>
    <Abstract>Print syntax to std::out. </Abstract>
    <DeclaredIn>CommandLineParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfigFilename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandLineParameters</Scope>
    </TokenIdentifier>
    <Path>class_command_line_parameters.html</Path>
    <Anchor>afe491331fa336946aa6f921bd411018c</Anchor>
    <Abstract>Get the config filename. </Abstract>
    <DeclaredIn>CommandLineParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSessionFilename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandLineParameters</Scope>
    </TokenIdentifier>
    <Path>class_command_line_parameters.html</Path>
    <Anchor>aaf8ee9e9f62eee70a5fa7a748a35e90c</Anchor>
    <Abstract>Get the config filename. </Abstract>
    <DeclaredIn>CommandLineParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommandLineParser</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandLineParser</Scope>
    </TokenIdentifier>
    <Path>class_command_line_parser.html</Path>
    <Anchor>a9bbf0d70950652b7944f12f0564014ac</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>CommandLineParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~CommandLineParser</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandLineParser</Scope>
    </TokenIdentifier>
    <Path>class_command_line_parser.html</Path>
    <Anchor>a77dce9e183275e2b11466e4f0398cfce</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>CommandLineParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandLineParser</Scope>
    </TokenIdentifier>
    <Path>class_command_line_parser.html</Path>
    <Anchor>acbc5ec7953ff31f839ca40570e3052e7</Anchor>
    <Abstract>Try to parse the command line arguments. </Abstract>
    <DeclaredIn>CommandLineParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHelp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandLineParser</Scope>
    </TokenIdentifier>
    <Path>class_command_line_parser.html</Path>
    <Anchor>a72e09cbf8222c686ff78335f79588b2a</Anchor>
    <Abstract>Was the –help flag given. </Abstract>
    <DeclaredIn>CommandLineParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>desc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CommandLineParser</Scope>
    </TokenIdentifier>
    <Path>class_command_line_parser.html</Path>
    <Anchor>a3d555fab2fc4cf169d4c3ca91af062a2</Anchor>
    <Abstract>The list of options which already includes &quot;--help&quot;. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pos_desc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CommandLineParser</Scope>
    </TokenIdentifier>
    <Path>class_command_line_parser.html</Path>
    <Anchor>a670b2fb53d37943a4d3f891299498c91</Anchor>
    <Abstract>The list of positional options. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vm</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CommandLineParser</Scope>
    </TokenIdentifier>
    <Path>class_command_line_parser.html</Path>
    <Anchor>ad00d7149ac4b3c176a81767426a7a36e</Anchor>
    <Abstract>Contains the results of the parse() operation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommandLineParser</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>CommandLineParser</Scope>
    </TokenIdentifier>
    <Path>class_command_line_parser.html</Path>
    <Abstract>Basic command line arguments parser with [-h;–help] handling. </Abstract>
    <DeclaredIn>CommandLineParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CommandLineParser</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandLineParser</Scope>
    </TokenIdentifier>
    <Path>class_command_line_parser.html</Path>
    <Anchor>a9bbf0d70950652b7944f12f0564014ac</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>CommandLineParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~CommandLineParser</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandLineParser</Scope>
    </TokenIdentifier>
    <Path>class_command_line_parser.html</Path>
    <Anchor>a77dce9e183275e2b11466e4f0398cfce</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>CommandLineParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandLineParser</Scope>
    </TokenIdentifier>
    <Path>class_command_line_parser.html</Path>
    <Anchor>acbc5ec7953ff31f839ca40570e3052e7</Anchor>
    <Abstract>Try to parse the command line arguments. </Abstract>
    <DeclaredIn>CommandLineParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHelp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandLineParser</Scope>
    </TokenIdentifier>
    <Path>class_command_line_parser.html</Path>
    <Anchor>a72e09cbf8222c686ff78335f79588b2a</Anchor>
    <Abstract>Was the –help flag given. </Abstract>
    <DeclaredIn>CommandLineParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showSyntax</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CommandLineParser</Scope>
    </TokenIdentifier>
    <Path>class_command_line_parser.html</Path>
    <Anchor>a2b87eb86ff854feef5a6b26958bbb37c</Anchor>
    <Abstract>Print syntax to std::out. </Abstract>
    <DeclaredIn>CommandLineParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>desc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CommandLineParser</Scope>
    </TokenIdentifier>
    <Path>class_command_line_parser.html</Path>
    <Anchor>a3d555fab2fc4cf169d4c3ca91af062a2</Anchor>
    <Abstract>The list of options which already includes &quot;--help&quot;. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pos_desc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CommandLineParser</Scope>
    </TokenIdentifier>
    <Path>class_command_line_parser.html</Path>
    <Anchor>a670b2fb53d37943a4d3f891299498c91</Anchor>
    <Abstract>The list of positional options. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vm</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CommandLineParser</Scope>
    </TokenIdentifier>
    <Path>class_command_line_parser.html</Path>
    <Anchor>ad00d7149ac4b3c176a81767426a7a36e</Anchor>
    <Abstract>Contains the results of the parse() operation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Configuration</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Abstract>The Configuration manages all the parameters needed to setup the processes. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Configuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a71e212bc15ff2fc41055cb41a4884442</Anchor>
    <Abstract>Default constructor used for deserialization. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Configuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a4f41abbe40c7e1345a325369c86aaaca</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>saveBackgroundChanges</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a7d5d7858b5b5432e184b5f32ab3e988e</Anchor>
    <Abstract>Save background changes to the current file. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>saveBackgroundChanges</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a436e6cd803e747ba4126dd24bd656fa0</Anchor>
    <Abstract>Save background changes to the specified file. </Abstract>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>defaults</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>acc80a3c2505ba2c4d7b901dc2dcff505</Anchor>
    <DeclaredIn>Configuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>surfaces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>a19fed63d5297ee2fd0f60a7db192e7c7</Anchor>
    <Abstract>The list of display surfaces. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Configuration</Scope>
    </TokenIdentifier>
    <Path>class_configuration.html</Path>
    <Anchor>acd51870e02af599ca8908829f63a232c</Anchor>
    <Abstract>The list of render processes. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Configuration::Folders</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Configuration::Folders</Scope>
    </TokenIdentifier>
    <Path>struct_configuration_1_1_folders.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Configuration::Folders</Scope>
    </TokenIdentifier>
    <Path>struct_configuration_1_1_folders.html</Path>
    <Anchor>a18ecc9507d149d87f69d91ec9ffdf2b8</Anchor>
    <Abstract>Root directory for opening contents. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sessions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Configuration::Folders</Scope>
    </TokenIdentifier>
    <Path>struct_configuration_1_1_folders.html</Path>
    <Anchor>a56a420f24374e8a89301819b51bec5c9</Anchor>
    <Abstract>Sessions directory. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tmp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Configuration::Folders</Scope>
    </TokenIdentifier>
    <Path>struct_configuration_1_1_folders.html</Path>
    <Anchor>ab3671a3e8a351ddc058af058406511e0</Anchor>
    <Abstract>Directory for uploading temporay contents via web interface. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>upload</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Configuration::Folders</Scope>
    </TokenIdentifier>
    <Path>struct_configuration_1_1_folders.html</Path>
    <Anchor>ac0affd9c1656b1721a6fd1534671c284</Anchor>
    <Abstract>Directory for saving session contents uploaded via web interface. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Configuration::Global</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Configuration::Global</Scope>
    </TokenIdentifier>
    <Path>struct_configuration_1_1_global.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Configuration::Launcher</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Configuration::Launcher</Scope>
    </TokenIdentifier>
    <Path>struct_configuration_1_1_launcher.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>display</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Configuration::Launcher</Scope>
    </TokenIdentifier>
    <Path>struct_configuration_1_1_launcher.html</Path>
    <Anchor>a955876f2943805f50ff1647b5c507486</Anchor>
    <Abstract>DISPLAY identifier in string format for the Launcher. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>demoServiceUrl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Configuration::Launcher</Scope>
    </TokenIdentifier>
    <Path>struct_configuration_1_1_launcher.html</Path>
    <Anchor>af6822fd1c1cd9aeff673457c68e5bc3e</Anchor>
    <Abstract>URL of Rendering Resources Manager&amp;#39;s API for the demo service. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Configuration::Master</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Configuration::Master</Scope>
    </TokenIdentifier>
    <Path>struct_configuration_1_1_master.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hostname</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Configuration::Master</Scope>
    </TokenIdentifier>
    <Path>struct_configuration_1_1_master.html</Path>
    <Anchor>a9fcbf1adc112765e834d9ca54a18c332</Anchor>
    <Abstract>Hostname where the application is running. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>display</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Configuration::Master</Scope>
    </TokenIdentifier>
    <Path>struct_configuration_1_1_master.html</Path>
    <Anchor>a096ab48958d60377d6661ea828932934</Anchor>
    <Abstract>Display identifier in string format matching DISPLAY env_var. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>headless</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Configuration::Master</Scope>
    </TokenIdentifier>
    <Path>struct_configuration_1_1_master.html</Path>
    <Anchor>aa06184ddfe5fd6b2b75bd502392efa5a</Anchor>
    <Abstract>Master application is headless (no visible window) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>planarSerialPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Configuration::Master</Scope>
    </TokenIdentifier>
    <Path>struct_configuration_1_1_master.html</Path>
    <Anchor>a68b9e488dac6cd002cb58d7580d3508f</Anchor>
    <Abstract>Serial port used to control Planar equipment. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>webservicePort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Configuration::Master</Scope>
    </TokenIdentifier>
    <Path>struct_configuration_1_1_master.html</Path>
    <Anchor>a935d08841b7cf26f81cd52f52cdfa0ba</Anchor>
    <Abstract>Port for the WebService server to listen for incoming requests. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Configuration::Settings</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Configuration::Settings</Scope>
    </TokenIdentifier>
    <Path>struct_configuration_1_1_settings.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>infoName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Configuration::Settings</Scope>
    </TokenIdentifier>
    <Path>struct_configuration_1_1_settings.html</Path>
    <Anchor>adf47774c0ab4bddfbcc56313f932b5f0</Anchor>
    <Abstract>Informative name of the installation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inactivityTimeout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Configuration::Settings</Scope>
    </TokenIdentifier>
    <Path>struct_configuration_1_1_settings.html</Path>
    <Anchor>ae5925ecfde04a733dd24b2d73b66ddf3</Anchor>
    <Abstract>Timeout in minutes after which the screens should be turned off. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>touchpointsToWakeup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Configuration::Settings</Scope>
    </TokenIdentifier>
    <Path>struct_configuration_1_1_settings.html</Path>
    <Anchor>ac5842b54ed7fbab6ba081b19add7eefa</Anchor>
    <Abstract>Number of touch points required to power on screens. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contentMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Configuration::Settings</Scope>
    </TokenIdentifier>
    <Path>struct_configuration_1_1_settings.html</Path>
    <Anchor>afc187df8562e6194901313b413215e89</Anchor>
    <Abstract>Maximum scaling factor for bitmap contents. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contentMaxScaleVectorial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Configuration::Settings</Scope>
    </TokenIdentifier>
    <Path>struct_configuration_1_1_settings.html</Path>
    <Anchor>a8a58bc44777196d696834e882930d40a</Anchor>
    <Abstract>Maximum scaling factor for vectorial contents. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Configuration::Webbrowser</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Configuration::Webbrowser</Scope>
    </TokenIdentifier>
    <Path>struct_configuration_1_1_webbrowser.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>defaultUrl</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Configuration::Webbrowser</Scope>
    </TokenIdentifier>
    <Path>struct_configuration_1_1_webbrowser.html</Path>
    <Anchor>a5baa3668beb5855cc3662d2d9673c553</Anchor>
    <Abstract>URL used as start page when opening a Web Browser. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>defaultSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Configuration::Webbrowser</Scope>
    </TokenIdentifier>
    <Path>struct_configuration_1_1_webbrowser.html</Path>
    <Anchor>a446875698b0f57202d712ecc1a179aca</Anchor>
    <Abstract>Default size to use when opening a Web Browser. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Configuration::Whiteboard</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Configuration::Whiteboard</Scope>
    </TokenIdentifier>
    <Path>struct_configuration_1_1_whiteboard.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>saveDir</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Configuration::Whiteboard</Scope>
    </TokenIdentifier>
    <Path>struct_configuration_1_1_whiteboard.html</Path>
    <Anchor>aecf3e89979811970bb9d63e8dcb18545</Anchor>
    <Abstract>Directory used for saving whiteboard images. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>defaultSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Configuration::Whiteboard</Scope>
    </TokenIdentifier>
    <Path>struct_configuration_1_1_whiteboard.html</Path>
    <Anchor>aa859ea1dfcfa5b444bdb126b167e6cfd</Anchor>
    <Abstract>Default size to use when opening a Web Browser. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConfigurationWriter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ConfigurationWriter</Scope>
    </TokenIdentifier>
    <Path>class_configuration_writer.html</Path>
    <Abstract>Write Configuration to file. </Abstract>
    <DeclaredIn>ConfigurationWriter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ConfigurationWriter</Scope>
    </TokenIdentifier>
    <Path>class_configuration_writer.html</Path>
    <Anchor>a780b77cafacb0474ddc8c44f9e284b56</Anchor>
    <Abstract>Save the configuration to the specified file. </Abstract>
    <DeclaredIn>ConfigurationWriter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Content</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Abstract>An abstract Content displayed in a Window. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a44c022cb6fed6fb1b0dff45e39ececb9</Anchor>
    <Abstract>Emitted by any Content subclass when its state has been modified. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Content</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ae491288d2efce7fa63d3e777580630b4</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a31ac405053a2cb5e157e5054b1012350</Anchor>
    <Abstract>Make a clone of this Content using binary serialization. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUri</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0ca4482bc84b9be50eb4bbc4a2c4ecac</Anchor>
    <Abstract>Get the content URI. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a919b1b95df11fd1ad0cf01d065de577d</Anchor>
    <Abstract>Get the content type. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFilePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a234f77ec77f331f409d65e348a86fb73</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTitle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a57345c59f1ca4a395cfa230bafdc7812</Anchor>
    <Abstract>Get the title of the content. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMetadata</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a6822bf4cf94ae866c561b23e62506303</Anchor>
    <Abstract>Read content metadata from the data source. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>aa4681ca97acea99fbe88e20f0e664bc0</Anchor>
    <Abstract>Get the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>add67cf2f0ec836aabd24a088473f9e9d</Anchor>
    <Abstract>Get the width. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>height</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0ac15e1ba630bc6c6f98d47529f4c48c</Anchor>
    <Abstract>Get the height. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a8cf06fbd623453fd2aa349d91ebbca3b</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPreferredDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a508b7f5c09ffa4f5a1a7f3e89cbec489</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a70fbc6b9c9dfd95c426819a1c14464f9</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a1b7a6f49f447c124b497b0a844fd6ea6</Anchor>
    <Abstract>Set the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a113bd8ba35685e77bcf8a8650fab636a</Anchor>
    <Abstract>Get the aspect ratio. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFixedAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>adceac372a702843a1e0bd207f670680a</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKeyboardState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a41cdb80d25bbb1f3f9e1b36bfb6b2515</Anchor>
    <Abstract>Get the keyboard state from QML. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canBeZoomed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af666fa7482f5c6a12c1e5b18f7076f4e</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a461bb62d3989d0eb5b4d1f824e7a66c0</Anchor>
    <Abstract>Get the zoom rectangle in normalized coordinates, [0,0,1,1] default. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0f3e5f9203b97450e3856d39a12807e3</Anchor>
    <Abstract>Set the zoom rectangle in normalized coordinates. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isZoomed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af9177091ab70e17f93b736d77e07bbee</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ad7e55aa12c354279dbe776de66a5635f</Anchor>
    <Abstract>Resets the zoom to [0,0,1,1]. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSizeHints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a70292d652fb37ee21640801fce53c186</Anchor>
    <Abstract>Set optional size hints to constrain resize/scale and 1:1 size. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCaptureInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a7e7c36edf987322675eea81f27e8017d</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCaptureInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a18477814caa57d8f9aa0330fd19487ab</Anchor>
    <Abstract>Tell the content to capture interaction (only for Policy::AUTO). </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a87465efbfaf4e2e5b0a5e7e8af0985f2</Anchor>
    <Abstract>Set the maximum factor for zoom and resize; value times content size. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a04642ff3171681aa5fd2c8c8291a7949</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentController</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ContentController</Scope>
    </TokenIdentifier>
    <Path>class_content_controller.html</Path>
    <Abstract>Handle user interaction with the Content of a Window. </Abstract>
    <DeclaredIn>ContentController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentController</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentController</Scope>
    </TokenIdentifier>
    <Path>class_content_controller.html</Path>
    <Anchor>ad47bedf89f88c7fc2d9b732732943901</Anchor>
    <Abstract>Construct a default content controller that does nothing. </Abstract>
    <DeclaredIn>ContentController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ContentController</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentController</Scope>
    </TokenIdentifier>
    <Path>class_content_controller.html</Path>
    <Anchor>ae4414680c4cb122ddebf84df4bed777c</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>ContentController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentController</Scope>
    </TokenIdentifier>
    <Path>class_content_controller.html</Path>
    <Anchor>a8955b4735b19c373bdbaf77ca09dccae</Anchor>
    <Abstract>Construct a content controller for the given window. </Abstract>
    <DeclaredIn>ContentController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentFactory</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ContentFactory</Scope>
    </TokenIdentifier>
    <Path>class_content_factory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentFactory</Scope>
    </TokenIdentifier>
    <Path>class_content_factory.html</Path>
    <Anchor>afe819dd6acbe85688da779e3c538b72a</Anchor>
    <Abstract>Get a Content of the appropriate type based on the given URI. </Abstract>
    <DeclaredIn>ContentFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelStreamContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentFactory</Scope>
    </TokenIdentifier>
    <Path>class_content_factory.html</Path>
    <Anchor>acf8b873f6c472c555a79f9bff1e6ff33</Anchor>
    <Abstract>Special case: PixelStreamContent type cannot be derived from its uri. </Abstract>
    <DeclaredIn>ContentFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getErrorContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentFactory</Scope>
    </TokenIdentifier>
    <Path>class_content_factory.html</Path>
    <Anchor>a84850ef5ede866487425e6858c50cf58</Anchor>
    <Abstract>Get a Content object representing a loading error. </Abstract>
    <DeclaredIn>ContentFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getErrorContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentFactory</Scope>
    </TokenIdentifier>
    <Path>class_content_factory.html</Path>
    <Anchor>a81dab14c8b3ae8da6d380a655e728d7d</Anchor>
    <Abstract>For legacy sessions; deprecated. </Abstract>
    <DeclaredIn>ContentFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSupportedExtensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentFactory</Scope>
    </TokenIdentifier>
    <Path>class_content_factory.html</Path>
    <Anchor>a34aeae89b1319f4c53e2ec6a270fe436</Anchor>
    <Abstract>Get all the supported file extensions. </Abstract>
    <DeclaredIn>ContentFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSupportedFilesFilter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentFactory</Scope>
    </TokenIdentifier>
    <Path>class_content_factory.html</Path>
    <Anchor>aa50bde011337a7eedf6a36629eddcf30</Anchor>
    <Abstract>Get all the supported file extensions prefixed with &amp;#39;. </Abstract>
    <DeclaredIn>ContentFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSupportedFilesFilterAsString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentFactory</Scope>
    </TokenIdentifier>
    <Path>class_content_factory.html</Path>
    <Anchor>a86e8179fd94acab556d60f47eef1423e</Anchor>
    <Abstract>Get all the file extensions prefixed with &amp;#39;. </Abstract>
    <DeclaredIn>ContentFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getContentTypeForFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentFactory</Scope>
    </TokenIdentifier>
    <Path>class_content_factory.html</Path>
    <Anchor>a5d5772ab4f0bead04b5644f841fed92f</Anchor>
    <Abstract>Get the content type for a given uri. </Abstract>
    <DeclaredIn>ContentFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentLoader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ContentLoader</Scope>
    </TokenIdentifier>
    <Path>class_content_loader.html</Path>
    <Abstract>Helper class to open Content on a DisplayGroup. </Abstract>
    <DeclaredIn>ContentLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentLoader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentLoader</Scope>
    </TokenIdentifier>
    <Path>class_content_loader.html</Path>
    <Anchor>aa0c01069db0ab311876995e8ef076bbd</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ContentLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadOrMoveToFront</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentLoader</Scope>
    </TokenIdentifier>
    <Path>class_content_loader.html</Path>
    <Anchor>a25f373214f607473cd3c222d93c113e7</Anchor>
    <Abstract>Try to load a uri (filename or directory). </Abstract>
    <DeclaredIn>ContentLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentLoader</Scope>
    </TokenIdentifier>
    <Path>class_content_loader.html</Path>
    <Anchor>a3001ad42bf2610f9cd3bf727ba53b3f0</Anchor>
    <Abstract>Load a Content from a file and create a window for it. </Abstract>
    <DeclaredIn>ContentLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadDir</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentLoader</Scope>
    </TokenIdentifier>
    <Path>class_content_loader.html</Path>
    <Anchor>a60e748762534700b8a3cc018a9df1684</Anchor>
    <Abstract>Load all the supported files from a directory. </Abstract>
    <DeclaredIn>ContentLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAlreadyOpen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentLoader</Scope>
    </TokenIdentifier>
    <Path>class_content_loader.html</Path>
    <Anchor>a4435cade83c73bb3701e4b82d9f2fc38</Anchor>
    <Abstract>Check if a content is already open. </Abstract>
    <DeclaredIn>ContentLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentSynchronizer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Abstract>Interface for synchronizing QML content rendering. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onSwapReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a6388e244907ebe33a267b47cf123b64c</Anchor>
    <Abstract>Called when a tile is ready to swap. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onRequestNextFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a134db7d6cbe00b6886e5d8c30c7ceac6</Anchor>
    <Abstract>Called when a tile has to be updated, re-emits requestTileUpdate. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZoomContextVisible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a38b82b0163d7871040fa78bf8145a7b7</Anchor>
    <Abstract>Set by the Qml ZoomContext element. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tilesAreaChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aac807a9cb073a52d88a80ceca93b34a3</Anchor>
    <Abstract>Notifier for the tiles area property. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>statisticsChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a8b2131d6b3874d8d932a101ec3dcde05</Anchor>
    <Abstract>Notifier for the statistics property. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zoomContextVisibleChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a7223c8186607dd080abc644b359167a0</Anchor>
    <Abstract>Notifier for the zoomContextVisible property. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a07a22964fedee87ec47fddc4b02a40f0</Anchor>
    <Abstract>Notify the window to add a tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a755db8af943fc6bd0aab4220320d3a89</Anchor>
    <Abstract>Notify the window to remove a tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aba03b3c5af16950946e91c893d20eeaf</Anchor>
    <Abstract>Notify to update a tile&amp;#39;s coordinates. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestTileUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>ada17c27d8584a4909d023802ded6b6fa</Anchor>
    <Abstract>Request an update of a specific tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zoomContextTileChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>addacc933144498d3686f4f2fc54d828a</Anchor>
    <Abstract>Notify that the zoom context tile has changed and must be recreated. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aa9b57c8a735fbfb9b35e3e79d9ac9682</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ContentSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aac4d27f2dcb82846eb5e94a8f281aa5f</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>ae4600555d7d806973b3d3106e5f778c7</Anchor>
    <Abstract>Update the Content. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a77e159f1e0ba5a7fdbb1f1ae39454984</Anchor>
    <Abstract>Update the tiles. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a14b80f86cc9fdc0274dfda29ea5374c2</Anchor>
    <Abstract>Swap the image before rendering (useful only for synchronized contents). </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canSwapTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aa2bde05b6398c386c44914dfbf1e2a16</Anchor>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTilesArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a7494f7f7b89c9d981001b08c80379071</Anchor>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a0933ca4f13b67c2d2aa0f3e165076bb3</Anchor>
    <Abstract>Get statistics about this Content. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoomContextVisible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a8abee6251a6c2f9a3640bf3a23d4332a</Anchor>
    <Abstract>Check if the zoom context tile is visible in Qml. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDataSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aa95495c05b817c1e4dc739ee588c3cc4</Anchor>
    <Abstract>Get the data source. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createZoomContextTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a41e88f5e830d43f281b3a938ee664f39</Anchor>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a83072124703f035d6dfa466cc1cf73d5</Anchor>
    <Abstract>Get the view for this synchronizer. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContextMenu</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ContextMenu</Scope>
    </TokenIdentifier>
    <Path>class_context_menu.html</Path>
    <Abstract>A menu for displaying a set of contextual actions on the wall. </Abstract>
    <DeclaredIn>ContextMenu.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContextMenu</Scope>
    </TokenIdentifier>
    <Path>class_context_menu.html</Path>
    <Anchor>ad6b1560612c521ca9c23dd13d88bf783</Anchor>
    <Abstract>Emitted whenever the menu has changed. </Abstract>
    <DeclaredIn>ContextMenu.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContextMenu</Scope>
    </TokenIdentifier>
    <Path>class_context_menu.html</Path>
    <Anchor>a259454160813625f0bfbb5bd1d527138</Anchor>
    <DeclaredIn>ContextMenu.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isVisible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContextMenu</Scope>
    </TokenIdentifier>
    <Path>class_context_menu.html</Path>
    <Anchor>a9cd09a6bc018a48ff132b865da171dc7</Anchor>
    <DeclaredIn>ContextMenu.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCopiedUris</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContextMenu</Scope>
    </TokenIdentifier>
    <Path>class_context_menu.html</Path>
    <Anchor>af081a0706cb3d2009850f481daec79da</Anchor>
    <DeclaredIn>ContextMenu.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContextMenu</Scope>
    </TokenIdentifier>
    <Path>class_context_menu.html</Path>
    <Anchor>a861f0c3b07451b642345c1a3b7e5b203</Anchor>
    <Abstract>Create a shared ContextMenu. </Abstract>
    <DeclaredIn>ContextMenu.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContextMenuController</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ContextMenuController</Scope>
    </TokenIdentifier>
    <Path>class_context_menu_controller.html</Path>
    <Abstract>Controller for the ContextMenu. </Abstract>
    <DeclaredIn>ContextMenuController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContextMenuController</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContextMenuController</Scope>
    </TokenIdentifier>
    <Path>class_context_menu_controller.html</Path>
    <Anchor>a80b05eba64fca27da0007ae21cd5afdf</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ContextMenuController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CountdownStatus</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>CountdownStatus</Scope>
    </TokenIdentifier>
    <Path>class_countdown_status.html</Path>
    <Abstract>The status of the inactivity countdown, to be displayed on the wall. </Abstract>
    <DeclaredIn>CountdownStatus.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CountdownStatus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CountdownStatus</Scope>
    </TokenIdentifier>
    <Path>class_countdown_status.html</Path>
    <Anchor>a5b9cd85d3a8c0f0cc7be4b5d16d817f9</Anchor>
    <Abstract>Default constructor for use on wall processes. </Abstract>
    <DeclaredIn>CountdownStatus.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CountdownStatus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CountdownStatus</Scope>
    </TokenIdentifier>
    <Path>class_countdown_status.html</Path>
    <Anchor>ab8f7bcfdcef4afe35619d6dee920d82f</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>CountdownStatus.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CountdownStatus</Scope>
    </TokenIdentifier>
    <Path>class_countdown_status.html</Path>
    <Anchor>a54ffebbef4ac66a59f092a765ce35b56</Anchor>
    <Abstract>Check if countdown timer is active. </Abstract>
    <DeclaredIn>CountdownStatus.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CountdownStatus</Scope>
    </TokenIdentifier>
    <Path>class_countdown_status.html</Path>
    <Anchor>a39ec1ae217699fdbeeb1d99dcbff5a25</Anchor>
    <Abstract>Get the duration of the countdown for transition in qml. </Abstract>
    <DeclaredIn>CountdownStatus.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DataProvider</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>DataProvider</Scope>
    </TokenIdentifier>
    <Path>class_data_provider.html</Path>
    <Abstract>Load image data in parallel. </Abstract>
    <DeclaredIn>DataProvider.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadAsync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>DataProvider</Scope>
    </TokenIdentifier>
    <Path>class_data_provider.html</Path>
    <Anchor>a74db2af62db228531edbca38546af325</Anchor>
    <Abstract>Load an image asynchronously. </Abstract>
    <DeclaredIn>DataProvider.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNewFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>DataProvider</Scope>
    </TokenIdentifier>
    <Path>class_data_provider.html</Path>
    <Anchor>a8a9a823d69c1ae7d0e0fcbb93c364bc9</Anchor>
    <Abstract>Add a new frame. </Abstract>
    <DeclaredIn>DataProvider.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>DataProvider</Scope>
    </TokenIdentifier>
    <Path>class_data_provider.html</Path>
    <Anchor>ad877b8b8c6430f423e4b4d1970ca0ffd</Anchor>
    <Abstract>Emitted to request a new frame after a successful swap. </Abstract>
    <DeclaredIn>DataProvider.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>closePixelStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>DataProvider</Scope>
    </TokenIdentifier>
    <Path>class_data_provider.html</Path>
    <Anchor>ad1938b2ea69988bc6527337d498deb20</Anchor>
    <Abstract>Emitted to request the pixel stream to close if an error occured. </Abstract>
    <DeclaredIn>DataProvider.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>imageLoaded</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>DataProvider</Scope>
    </TokenIdentifier>
    <Path>class_data_provider.html</Path>
    <Anchor>aa9a946e0bc4a9b3198be15b159d3bc5b</Anchor>
    <Abstract>Emitted to request a new rendering after a tile image was loaded. </Abstract>
    <DeclaredIn>DataProvider.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DataProvider</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DataProvider</Scope>
    </TokenIdentifier>
    <Path>class_data_provider.html</Path>
    <Anchor>af8698e90d3307ecfb5bdbb08b4fc3cec</Anchor>
    <Abstract>Construct a data provider. </Abstract>
    <DeclaredIn>DataProvider.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~DataProvider</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DataProvider</Scope>
    </TokenIdentifier>
    <Path>class_data_provider.html</Path>
    <Anchor>a1c76c2428e3e3f2c96401a3693366e2a</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>DataProvider.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DataProvider</Scope>
    </TokenIdentifier>
    <Path>class_data_provider.html</Path>
    <Anchor>aee9ac24b63450423023bf75b5997c4b5</Anchor>
    <DeclaredIn>DataProvider.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateDataSources</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DataProvider</Scope>
    </TokenIdentifier>
    <Path>class_data_provider.html</Path>
    <Anchor>a3ac1900ae9d4e6ffeab6bdd553cff78a</Anchor>
    <Abstract>Update the data sources with information from a new scene. </Abstract>
    <DeclaredIn>DataProvider.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synchronizeTilesSwap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DataProvider</Scope>
    </TokenIdentifier>
    <Path>class_data_provider.html</Path>
    <Anchor>ad297b0d00dcaf94dfb9d03de05139091</Anchor>
    <Abstract>Synchronize the swap of Tiles just before rendering for movies/streams. </Abstract>
    <DeclaredIn>DataProvider.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DataSource</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>DataSource</Scope>
    </TokenIdentifier>
    <Path>class_data_source.html</Path>
    <Abstract>Base interface for shared data sources. </Abstract>
    <DeclaredIn>DataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDynamic</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DataSource</Scope>
    </TokenIdentifier>
    <Path>class_data_source.html</Path>
    <Anchor>a54629350c073612b09217a9084b27951</Anchor>
    <DeclaredIn>DataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DataSource</Scope>
    </TokenIdentifier>
    <Path>class_data_source.html</Path>
    <Anchor>a60b8f9f5fa35e406afad9eb320a6f484</Anchor>
    <Abstract>Get a tile image by its id for a given view. </Abstract>
    <DeclaredIn>DataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DataSource</Scope>
    </TokenIdentifier>
    <Path>class_data_source.html</Path>
    <Anchor>ae90b6ac012313220258d79a06d24b0cf</Anchor>
    <Abstract>Get the coordinates of a tile. </Abstract>
    <DeclaredIn>DataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTilesArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DataSource</Scope>
    </TokenIdentifier>
    <Path>class_data_source.html</Path>
    <Anchor>ad5f46f736ac7222416f59bd2406e566e</Anchor>
    <DeclaredIn>DataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeVisibleSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DataSource</Scope>
    </TokenIdentifier>
    <Path>class_data_source.html</Path>
    <Anchor>a3e64c02838caf9cf2e12835519226c49</Anchor>
    <Abstract>Compute the indices of the tiles which are visible in the given area. </Abstract>
    <DeclaredIn>DataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxLod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DataSource</Scope>
    </TokenIdentifier>
    <Path>class_data_source.html</Path>
    <Anchor>a2431b476c507172fbbef0d5c69f9c03a</Anchor>
    <DeclaredIn>DataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synchronizers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>DataSource</Scope>
    </TokenIdentifier>
    <Path>class_data_source.html</Path>
    <Anchor>a43d2d50fc4971aa75f19e8c0130bc721</Anchor>
    <Abstract>The synchronizers linked to this shared data source. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultThumbnailGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>DefaultThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_default_thumbnail_generator.html</Path>
    <Abstract>Generate thumbnails for unsupported file types. </Abstract>
    <DeclaredIn>DefaultThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DefaultThumbnailGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DefaultThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_default_thumbnail_generator.html</Path>
    <Anchor>a14ab9ac15f6aafe5af81118753797c88</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>DefaultThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DefaultThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_default_thumbnail_generator.html</Path>
    <Anchor>a55781a35bda7b946b4ee36ae11850d8b</Anchor>
    <Abstract>Generate a thumbnail for an unsupported file type. </Abstract>
    <DeclaredIn>DefaultThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThumbnailGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>a8e1445189917a48c75ddaf992d4e166f</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ThumbnailGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>aa726f0f40d9c5d1e43026260f89d923a</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>ThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createErrorImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>a9fba0be45fafb6dca5ceba86725ae398</Anchor>
    <Abstract>Create a generic placeholder image indicating that an error occured. </Abstract>
    <DeclaredIn>ThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createGradientImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>af950dcda932b1ddc5dc0f6cff98da787</Anchor>
    <Abstract>Create a gradient image, can be used as background for a placeholder. </Abstract>
    <DeclaredIn>ThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>paintText</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>a830215bb774dfa30b8b2d6e812465bd4</Anchor>
    <Abstract>Paint text over an image, for example on top of a placeholder image. </Abstract>
    <DeclaredIn>ThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>a5efbb9ef797b1597b012c0f8f8ebdb31</Anchor>
    <Abstract>Target size for the thumbnails. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_aspectRatioMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>aa5d65a800fb8ae29b3c00ffdb4156786</Anchor>
    <Abstract>Aspect ratio policy for the thumbnails. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dimensions_mismatch</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>dimensions_mismatch</Scope>
    </TokenIdentifier>
    <Path>classdimensions__mismatch.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DisplayGroup</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Abstract>A collection of Windows. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a2d45f47c71869da3799d9e1c88274cbd</Anchor>
    <Abstract>Emitted whenever the DisplayGroup is modified. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>windowAdded</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a2bfb7cd3f4d59271d0611c8a23ac2acd</Anchor>
    <Abstract>Emitted when a content window is added. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>windowRemoved</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a9f6df462f2f2b66d19e9c3a74b59943f</Anchor>
    <Abstract>Emitted when a content window is removed. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>windowMovedToFront</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a2030d8c3a652c717fe8bb4073f79331f</Anchor>
    <Abstract>Emitted when a content window is moved to the front. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~DisplayGroup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>ae621c03bd2408c8ece4a61237efca355</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a159b27f545c4eac2ca9c726364a2b25f</Anchor>
    <Abstract>Add a window. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>ae16ff8b525ad5ffe3cab8de32b0a8252</Anchor>
    <Abstract>Remove a window. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveToFront</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>aafe7bf48272e14c2fb95710f300a26da</Anchor>
    <Abstract>Move a window to the front. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a2bd3c3a118c0a2be043c10bb6ca8c3dd</Anchor>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWindows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a2324da5900256a12a8a840be7c1a1fca</Anchor>
    <Abstract>Get all windows. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a6aebf6accc9eea258507a013129165f5</Anchor>
    <Abstract>Get a single window by its id. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a63912f13ebfc2679af667b05c3744b8e</Anchor>
    <Abstract>Find a single window based on its filename. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replaceWindows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>ab3cf777a6e746c65f7d454fd3b410b3c</Anchor>
    <Abstract>Replace the windows by a new list. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a0c10092c41d5dee217dd49f52c7e2302</Anchor>
    <Abstract>Remove all windows. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZindex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>aca21a6904993b9de33da9d939e470c69</Anchor>
    <Abstract>Get the z index of a window. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFocusedWindows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a24a30aa05f0ca717c9b559aed1b6c50d</Anchor>
    <Abstract>Are there focused windows. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFullscreenWindows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a4e9e08eed111cfe5e704ca5b68310ade</Anchor>
    <Abstract>Is there a fullscreen window. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasVisiblePanels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>aa2857a09fb72669d48021f0cb30efeb5</Anchor>
    <Abstract>Is there any visible panel window(s). </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFullscreenWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a8823aace508dfd2e4cbc440348bfafc9</Anchor>
    <Abstract>Get the fullscreen window (if any). </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFullscreenWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a3ab9e0780161295a48bb080ab9edc487</Anchor>
    <Abstract>Set the fullscreen window. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFocusedWindows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a262fa548b09e7896e892bbf1d96a972c</Anchor>
    <Abstract>Get the set of focused windows. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addFocusedWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>aec4cbf74b144c1a54eeebff01907b2cf</Anchor>
    <Abstract>Add a window to the set of focused windows. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeFocusedWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a29234475a215f0c30b9f56eeb71fa62b</Anchor>
    <Abstract>Remove a window from the set of focused windows. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPanels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a868d9b5f98b360041979883bb306d5a8</Anchor>
    <Abstract>Get the set of panels. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSelectedWindows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a02ce60c47e994697e3103d63d6e288a0</Anchor>
    <Abstract>Get the set of selected windows. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSelectedUris</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a8c9b25a2886bf12bbe843b7422243276</Anchor>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveToThread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroup</Scope>
    </TokenIdentifier>
    <Path>class_display_group.html</Path>
    <Anchor>a8273099bf01b9991adb9c454ba576836</Anchor>
    <Abstract>Move this object and its member QObjects to the given QThread. </Abstract>
    <DeclaredIn>DisplayGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DisplayGroupController</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>DisplayGroupController</Scope>
    </TokenIdentifier>
    <Path>class_display_group_controller.html</Path>
    <Abstract>Controller for rescaling and adjusting DisplayGroup. </Abstract>
    <DeclaredIn>DisplayGroupController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DisplayGroupController</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupController</Scope>
    </TokenIdentifier>
    <Path>class_display_group_controller.html</Path>
    <Anchor>ac3bd75cfaf3d6374085e2cc117beae82</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>DisplayGroupController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupController</Scope>
    </TokenIdentifier>
    <Path>class_display_group_controller.html</Path>
    <Anchor>ae4cd656537e86cc3fd15eee21a93f942</Anchor>
    <Abstract>Remove a content window. </Abstract>
    <DeclaredIn>DisplayGroupController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeLater</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupController</Scope>
    </TokenIdentifier>
    <Path>class_display_group_controller.html</Path>
    <Anchor>aa97055c62e1b8636da794d2f3e21c9e1</Anchor>
    <Abstract>Remove a content window later (using a Qt::QueuedConnection). </Abstract>
    <DeclaredIn>DisplayGroupController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showFullscreen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupController</Scope>
    </TokenIdentifier>
    <Path>class_display_group_controller.html</Path>
    <Anchor>a67e2da319613dcd3eba10fcde6feac45</Anchor>
    <Abstract>Show a window in fullscreen. </Abstract>
    <DeclaredIn>DisplayGroupController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exitFullscreen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupController</Scope>
    </TokenIdentifier>
    <Path>class_display_group_controller.html</Path>
    <Anchor>a5cdced79d2dd58ecfdd076eab5ef0af9</Anchor>
    <Abstract>Leave fullscreen mode, restoring the window to its previous state. </Abstract>
    <DeclaredIn>DisplayGroupController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toggleFullscreen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupController</Scope>
    </TokenIdentifier>
    <Path>class_display_group_controller.html</Path>
    <Anchor>a28e19f6b21ab0fff5c167943b7230169</Anchor>
    <Abstract>Toggle the fullscreen state of a window. </Abstract>
    <DeclaredIn>DisplayGroupController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>adjustSizeOneToOne</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupController</Scope>
    </TokenIdentifier>
    <Path>class_display_group_controller.html</Path>
    <Anchor>a3a7c54ae20b837513d4e928aa242924f</Anchor>
    <Abstract>Adjust a window&amp;#39;s coordinates to match the Content dimensions. </Abstract>
    <DeclaredIn>DisplayGroupController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>focus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupController</Scope>
    </TokenIdentifier>
    <Path>class_display_group_controller.html</Path>
    <Anchor>a85c8e1106ea48930859f03006559fbd3</Anchor>
    <Abstract>Focus a window. </Abstract>
    <DeclaredIn>DisplayGroupController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unfocus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupController</Scope>
    </TokenIdentifier>
    <Path>class_display_group_controller.html</Path>
    <Anchor>a66179766220096d28bf782480a8898f6</Anchor>
    <Abstract>Unfocus a window. </Abstract>
    <DeclaredIn>DisplayGroupController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>focusSelected</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupController</Scope>
    </TokenIdentifier>
    <Path>class_display_group_controller.html</Path>
    <Anchor>a0786c06785a566b126edb19ab1666f8c</Anchor>
    <Abstract>Focus all selected windows. </Abstract>
    <DeclaredIn>DisplayGroupController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>focusAll</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupController</Scope>
    </TokenIdentifier>
    <Path>class_display_group_controller.html</Path>
    <Anchor>a36177f28e442785c0ba065ee4e951954</Anchor>
    <Abstract>Focus all windows. </Abstract>
    <DeclaredIn>DisplayGroupController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unfocusAll</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupController</Scope>
    </TokenIdentifier>
    <Path>class_display_group_controller.html</Path>
    <Anchor>a38aca5b532634251660e254c6f945157</Anchor>
    <Abstract>Unfocus all focused windows. </Abstract>
    <DeclaredIn>DisplayGroupController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toggleFocusAll</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupController</Scope>
    </TokenIdentifier>
    <Path>class_display_group_controller.html</Path>
    <Anchor>afd1e7bf3d73ebf8b8df4e92e68c3b4f4</Anchor>
    <Abstract>Toggle focus of all windows. </Abstract>
    <DeclaredIn>DisplayGroupController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deselectAll</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupController</Scope>
    </TokenIdentifier>
    <Path>class_display_group_controller.html</Path>
    <Anchor>a11b799e1af6c674f6b433a332798f556</Anchor>
    <Abstract>Deselect all selected windows. </Abstract>
    <DeclaredIn>DisplayGroupController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hidePanels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupController</Scope>
    </TokenIdentifier>
    <Path>class_display_group_controller.html</Path>
    <Anchor>a30c12fa5deb6859f9304b47ab7bc7722</Anchor>
    <Abstract>Hide all panels. </Abstract>
    <DeclaredIn>DisplayGroupController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveWindowToFront</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupController</Scope>
    </TokenIdentifier>
    <Path>class_display_group_controller.html</Path>
    <Anchor>ab4d84074045fb7d20a06c12ea80edab9</Anchor>
    <Abstract>Move a content window to the front. </Abstract>
    <DeclaredIn>DisplayGroupController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupController</Scope>
    </TokenIdentifier>
    <Path>class_display_group_controller.html</Path>
    <Anchor>aa76ed17f5cb0257daff3d77719edfd06</Anchor>
    <Abstract>Scale the DisplayGroup and its windows by the given x and y factors. </Abstract>
    <DeclaredIn>DisplayGroupController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>adjust</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupController</Scope>
    </TokenIdentifier>
    <Path>class_display_group_controller.html</Path>
    <Anchor>aca22819db57854ca08f7b91b4ed12929</Anchor>
    <Abstract>Rescale to fit inside the given size, preserving aspect ratio. </Abstract>
    <DeclaredIn>DisplayGroupController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reshape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupController</Scope>
    </TokenIdentifier>
    <Path>class_display_group_controller.html</Path>
    <Anchor>a7a1d92a21f52d11526f4f145e865fc9d</Anchor>
    <Abstract>Reshape to fit inside the given size, scaling and centering windows. </Abstract>
    <DeclaredIn>DisplayGroupController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>denormalize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupController</Scope>
    </TokenIdentifier>
    <Path>class_display_group_controller.html</Path>
    <Anchor>a6d1a39818b26bcd4d47537bcbcbff9a4</Anchor>
    <Abstract>Transform from normalized coordinates to pixel coordinates. </Abstract>
    <DeclaredIn>DisplayGroupController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>adjustWindowsAspectRatioToContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupController</Scope>
    </TokenIdentifier>
    <Path>class_display_group_controller.html</Path>
    <Anchor>a9505e0a188ddbd55d0fc145e45c2690f</Anchor>
    <Abstract>Resize windows in place so that their aspect ratio matches content&amp;#39;s. </Abstract>
    <DeclaredIn>DisplayGroupController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>estimateSurface</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupController</Scope>
    </TokenIdentifier>
    <Path>class_display_group_controller.html</Path>
    <Anchor>aa811e20657983c85b39c4ec682159862</Anchor>
    <Abstract>Estimate the surface covered by the windows in the group. </Abstract>
    <DeclaredIn>DisplayGroupController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateFocusedWindowsCoordinates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupController</Scope>
    </TokenIdentifier>
    <Path>class_display_group_controller.html</Path>
    <Anchor>a01fbbc2c1cec1793d84de3aae1c45926</Anchor>
    <Abstract>Update the coordinates of the focused windows to fit the group. </Abstract>
    <DeclaredIn>DisplayGroupController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DisplayGroupListWidget</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>DisplayGroupListWidget</Scope>
    </TokenIdentifier>
    <Path>class_display_group_list_widget.html</Path>
    <Abstract>A list view of a DisplayGroup&amp;#39;s Windows. </Abstract>
    <DeclaredIn>DisplayGroupListWidget.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DisplayGroupListWidget</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupListWidget</Scope>
    </TokenIdentifier>
    <Path>class_display_group_list_widget.html</Path>
    <Anchor>a4e7f56488a6238d1577d539c7913dafb</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>DisplayGroupListWidget.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDataModel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupListWidget</Scope>
    </TokenIdentifier>
    <Path>class_display_group_list_widget.html</Path>
    <Anchor>a0424e0f76d98a4514b4417122ecf05e3</Anchor>
    <Abstract>Set the DisplayGroup model that this view should present. </Abstract>
    <DeclaredIn>DisplayGroupListWidget.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DisplayGroupRenderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>DisplayGroupRenderer</Scope>
    </TokenIdentifier>
    <Path>class_display_group_renderer.html</Path>
    <Abstract>Renders a DisplayGroup. </Abstract>
    <DeclaredIn>DisplayGroupRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DisplayGroupRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupRenderer</Scope>
    </TokenIdentifier>
    <Path>class_display_group_renderer.html</Path>
    <Anchor>a28f826f808620ecb70233a5d1efb4ba4</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>DisplayGroupRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDisplayGroup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DisplayGroupRenderer</Scope>
    </TokenIdentifier>
    <Path>class_display_group_renderer.html</Path>
    <Anchor>ace9e977654ad391c3626e6aaf8815250</Anchor>
    <Abstract>Set the DisplayGroup to render, replacing the previous one. </Abstract>
    <DeclaredIn>DisplayGroupRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DoubleTapDetector</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>DoubleTapDetector</Scope>
    </TokenIdentifier>
    <Path>class_double_tap_detector.html</Path>
    <Abstract>Detect double-tap gestures. </Abstract>
    <DeclaredIn>DoubleTapDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doubleTap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>DoubleTapDetector</Scope>
    </TokenIdentifier>
    <Path>class_double_tap_detector.html</Path>
    <Anchor>ad473d07379d7616f498d719dfbdee187</Anchor>
    <Abstract>Emitted when two taps occur in a fast sequence. </Abstract>
    <DeclaredIn>DoubleTapDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DynamicTextureContent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>DynamicTextureContent</Scope>
    </TokenIdentifier>
    <Path>class_dynamic_texture_content.html</Path>
    <Abstract>Legacy image pyramid format, no longer supported. </Abstract>
    <DeclaredIn>DynamicTextureContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DynamicTextureContent</Scope>
    </TokenIdentifier>
    <Path>class_dynamic_texture_content.html</Path>
    <Anchor>a4a429d57d3fcce59a595325301bddd00</Anchor>
    <Abstract>Get the content type. </Abstract>
    <DeclaredIn>DynamicTextureContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMetadata</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DynamicTextureContent</Scope>
    </TokenIdentifier>
    <Path>class_dynamic_texture_content.html</Path>
    <Anchor>ab74f1fd46ec931ccf9aabc767e33aa5d</Anchor>
    <DeclaredIn>DynamicTextureContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Content</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ae491288d2efce7fa63d3e777580630b4</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a31ac405053a2cb5e157e5054b1012350</Anchor>
    <Abstract>Make a clone of this Content using binary serialization. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUri</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0ca4482bc84b9be50eb4bbc4a2c4ecac</Anchor>
    <Abstract>Get the content URI. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFilePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a234f77ec77f331f409d65e348a86fb73</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTitle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a57345c59f1ca4a395cfa230bafdc7812</Anchor>
    <Abstract>Get the title of the content. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>aa4681ca97acea99fbe88e20f0e664bc0</Anchor>
    <Abstract>Get the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>add67cf2f0ec836aabd24a088473f9e9d</Anchor>
    <Abstract>Get the width. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>height</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0ac15e1ba630bc6c6f98d47529f4c48c</Anchor>
    <Abstract>Get the height. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a8cf06fbd623453fd2aa349d91ebbca3b</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPreferredDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a508b7f5c09ffa4f5a1a7f3e89cbec489</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a70fbc6b9c9dfd95c426819a1c14464f9</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a1b7a6f49f447c124b497b0a844fd6ea6</Anchor>
    <Abstract>Set the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a113bd8ba35685e77bcf8a8650fab636a</Anchor>
    <Abstract>Get the aspect ratio. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFixedAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>adceac372a702843a1e0bd207f670680a</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKeyboardState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a41cdb80d25bbb1f3f9e1b36bfb6b2515</Anchor>
    <Abstract>Get the keyboard state from QML. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canBeZoomed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af666fa7482f5c6a12c1e5b18f7076f4e</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a461bb62d3989d0eb5b4d1f824e7a66c0</Anchor>
    <Abstract>Get the zoom rectangle in normalized coordinates, [0,0,1,1] default. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0f3e5f9203b97450e3856d39a12807e3</Anchor>
    <Abstract>Set the zoom rectangle in normalized coordinates. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isZoomed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af9177091ab70e17f93b736d77e07bbee</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ad7e55aa12c354279dbe776de66a5635f</Anchor>
    <Abstract>Resets the zoom to [0,0,1,1]. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSizeHints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a70292d652fb37ee21640801fce53c186</Anchor>
    <Abstract>Set optional size hints to constrain resize/scale and 1:1 size. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCaptureInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a7e7c36edf987322675eea81f27e8017d</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCaptureInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a18477814caa57d8f9aa0330fd19487ab</Anchor>
    <Abstract>Tell the content to capture interaction (only for Policy::AUTO). </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a44c022cb6fed6fb1b0dff45e39ececb9</Anchor>
    <Abstract>Emitted by any Content subclass when its state has been modified. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a87465efbfaf4e2e5b0a5e7e8af0985f2</Anchor>
    <Abstract>Set the maximum factor for zoom and resize; value times content size. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a04642ff3171681aa5fd2c8c8291a7949</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ElapsedTimer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ElapsedTimer</Scope>
    </TokenIdentifier>
    <Path>class_elapsed_timer.html</Path>
    <Abstract>Simple timer to mesures time differences. </Abstract>
    <DeclaredIn>ElapsedTimer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ElapsedTimer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ElapsedTimer</Scope>
    </TokenIdentifier>
    <Path>class_elapsed_timer.html</Path>
    <Anchor>a898261990fc2ab88f0ac3c35f0de83d0</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ElapsedTimer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ElapsedTimer</Scope>
    </TokenIdentifier>
    <Path>class_elapsed_timer.html</Path>
    <Anchor>a713b1fff3de6d489f55342d4765be8b0</Anchor>
    <Abstract>Get the current time. </Abstract>
    <DeclaredIn>ElapsedTimer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCurrentTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ElapsedTimer</Scope>
    </TokenIdentifier>
    <Path>class_elapsed_timer.html</Path>
    <Anchor>a6025f2aeea4e3a12a4197621f58ef053</Anchor>
    <Abstract>Set the current time. </Abstract>
    <DeclaredIn>ElapsedTimer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ElapsedTimer</Scope>
    </TokenIdentifier>
    <Path>class_elapsed_timer.html</Path>
    <Anchor>a3dd7ad8a34c58a3651887db99a74d553</Anchor>
    <Abstract>Reset any elapsed time. </Abstract>
    <DeclaredIn>ElapsedTimer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getElapsedTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ElapsedTimer</Scope>
    </TokenIdentifier>
    <Path>class_elapsed_timer.html</Path>
    <Anchor>a70049c66c5e335968e85f4750ef0c27e</Anchor>
    <Abstract>Get the elapsed time between the last two calls to setCurrentTime(). </Abstract>
    <DeclaredIn>ElapsedTimer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getElapsedTimeInSeconds</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ElapsedTimer</Scope>
    </TokenIdentifier>
    <Path>class_elapsed_timer.html</Path>
    <Anchor>a2aa629d0e011eaf778695a6b7e44500b</Anchor>
    <Abstract>Get the elapsed time in seconds (convenience function). </Abstract>
    <DeclaredIn>ElapsedTimer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ErrorContent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ErrorContent</Scope>
    </TokenIdentifier>
    <Path>class_error_content.html</Path>
    <Abstract>A placeholder to replace a Content that can no longer be restored from file. </Abstract>
    <DeclaredIn>ErrorContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ErrorContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ErrorContent</Scope>
    </TokenIdentifier>
    <Path>class_error_content.html</Path>
    <Anchor>a2a40a4bc2071d4a3cbec1095b1de2025</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ErrorContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFilePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ErrorContent</Scope>
    </TokenIdentifier>
    <Path>class_error_content.html</Path>
    <Anchor>a5fe411475380381cc3ab0131f28e6ef2</Anchor>
    <DeclaredIn>ErrorContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TextureContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureContent</Scope>
    </TokenIdentifier>
    <Path>class_texture_content.html</Path>
    <Anchor>a34ede22c00496d1f2309d56c0bfcf70b</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>TextureContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureContent</Scope>
    </TokenIdentifier>
    <Path>class_texture_content.html</Path>
    <Anchor>a8e3a9e17a40f585ab74e37cd15b800fc</Anchor>
    <Abstract>Get the content type. </Abstract>
    <DeclaredIn>TextureContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMetadata</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureContent</Scope>
    </TokenIdentifier>
    <Path>class_texture_content.html</Path>
    <Anchor>aac9af25e443cae0cfef848825719f56f</Anchor>
    <Abstract>Read texture metadata. </Abstract>
    <DeclaredIn>TextureContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canBeZoomed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureContent</Scope>
    </TokenIdentifier>
    <Path>class_texture_content.html</Path>
    <Anchor>aa115d7589db49b1d719c5746f839b8b6</Anchor>
    <DeclaredIn>TextureContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Content</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ae491288d2efce7fa63d3e777580630b4</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a31ac405053a2cb5e157e5054b1012350</Anchor>
    <Abstract>Make a clone of this Content using binary serialization. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUri</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0ca4482bc84b9be50eb4bbc4a2c4ecac</Anchor>
    <Abstract>Get the content URI. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTitle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a57345c59f1ca4a395cfa230bafdc7812</Anchor>
    <Abstract>Get the title of the content. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>aa4681ca97acea99fbe88e20f0e664bc0</Anchor>
    <Abstract>Get the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>add67cf2f0ec836aabd24a088473f9e9d</Anchor>
    <Abstract>Get the width. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>height</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0ac15e1ba630bc6c6f98d47529f4c48c</Anchor>
    <Abstract>Get the height. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a8cf06fbd623453fd2aa349d91ebbca3b</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPreferredDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a508b7f5c09ffa4f5a1a7f3e89cbec489</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a70fbc6b9c9dfd95c426819a1c14464f9</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a1b7a6f49f447c124b497b0a844fd6ea6</Anchor>
    <Abstract>Set the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a113bd8ba35685e77bcf8a8650fab636a</Anchor>
    <Abstract>Get the aspect ratio. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFixedAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>adceac372a702843a1e0bd207f670680a</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKeyboardState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a41cdb80d25bbb1f3f9e1b36bfb6b2515</Anchor>
    <Abstract>Get the keyboard state from QML. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a461bb62d3989d0eb5b4d1f824e7a66c0</Anchor>
    <Abstract>Get the zoom rectangle in normalized coordinates, [0,0,1,1] default. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0f3e5f9203b97450e3856d39a12807e3</Anchor>
    <Abstract>Set the zoom rectangle in normalized coordinates. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isZoomed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af9177091ab70e17f93b736d77e07bbee</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ad7e55aa12c354279dbe776de66a5635f</Anchor>
    <Abstract>Resets the zoom to [0,0,1,1]. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSizeHints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a70292d652fb37ee21640801fce53c186</Anchor>
    <Abstract>Set optional size hints to constrain resize/scale and 1:1 size. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCaptureInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a7e7c36edf987322675eea81f27e8017d</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCaptureInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a18477814caa57d8f9aa0330fd19487ab</Anchor>
    <Abstract>Tell the content to capture interaction (only for Policy::AUTO). </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a44c022cb6fed6fb1b0dff45e39ececb9</Anchor>
    <Abstract>Emitted by any Content subclass when its state has been modified. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a87465efbfaf4e2e5b0a5e7e8af0985f2</Anchor>
    <Abstract>Set the maximum factor for zoom and resize; value times content size. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a04642ff3171681aa5fd2c8c8291a7949</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFMPEGFrame</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FFMPEGFrame</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_frame.html</Path>
    <Abstract>A frame of an FFMPEG movie. </Abstract>
    <DeclaredIn>FFMPEGFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFMPEGFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGFrame</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_frame.html</Path>
    <Anchor>a3c21a094e496afc9c64efe76e74fb609</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>FFMPEGFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FFMPEGFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGFrame</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_frame.html</Path>
    <Anchor>ad233e8ca905bf16f4361665ba24a7661</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>FFMPEGFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGFrame</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_frame.html</Path>
    <Anchor>ac555d0991aaaec01c6f908c7a9b187d4</Anchor>
    <DeclaredIn>FFMPEGFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGFrame</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_frame.html</Path>
    <Anchor>a42dd7c39a2e2f0c3d0f84778052841e1</Anchor>
    <DeclaredIn>FFMPEGFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimestamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGFrame</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_frame.html</Path>
    <Anchor>aacf90ac6c1bcbc0d2226a81ac9c5b484</Anchor>
    <DeclaredIn>FFMPEGFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAVFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGFrame</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_frame.html</Path>
    <Anchor>a8e7dbdeeb04ac81ce77da9100d3e0e9f</Anchor>
    <Abstract>Get the FFMPEG frame. </Abstract>
    <DeclaredIn>FFMPEGFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAVPixelFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGFrame</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_frame.html</Path>
    <Anchor>aeadbd5b500de1d4471da75ec45c8dadf</Anchor>
    <DeclaredIn>FFMPEGFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFMPEGMovie</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Abstract>Read and play movies using the FFMPEG library. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFMPEGMovie</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>a9fcab46d4c344400975ade1f085fa098</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FFMPEGMovie</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>ada29015e30fd77182119418abe0356cd</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>a0e0248f752f4b4fc318d3fc3b22069b4</Anchor>
    <Abstract>Is the movie valid. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>a9a0ec22f9170bb513afdce6b2095eb85</Anchor>
    <Abstract>Get the frame width. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>af925db8310451b645f8645941e054837</Anchor>
    <Abstract>Get the frame height. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isStereo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>abf604197f855e57cfe19cc3c86fdba19</Anchor>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>a1a4fccc1a7b190fd7ad462b0c568709a</Anchor>
    <Abstract>Get the current time position in seconds. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>ac79b8e3e5c0774e96849ffd57809311c</Anchor>
    <Abstract>Get the movie duration in seconds. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>ab8b72d1dd991fbdd0b527648314b7001</Anchor>
    <Abstract>Get the duration of a frame in seconds. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>a44cdca1f0b9be0dcf66c639709c05682</Anchor>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>a204b39e3439a84cfa0309d82e5c8a9da</Anchor>
    <Abstract>Set the format of the decoded movie frames, overwriting the default. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGMovie</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_movie.html</Path>
    <Anchor>a7d0104e8b62e7d75118c372fd1aa143d</Anchor>
    <Abstract>Get a frame at the given position in seconds. </Abstract>
    <DeclaredIn>FFMPEGMovie.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFMPEGPicture</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FFMPEGPicture</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_picture.html</Path>
    <Abstract>A decoded frame of the movie stream in RGBA or YUV format. </Abstract>
    <DeclaredIn>FFMPEGPicture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFMPEGPicture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGPicture</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_picture.html</Path>
    <Anchor>a9842bab3feecfe624ed350f62cb6c69f</Anchor>
    <Abstract>Allocate a new picture. </Abstract>
    <DeclaredIn>FFMPEGPicture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGPicture</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_picture.html</Path>
    <Anchor>ac50b018d0458e1a56b5bed9b5dfe2dd9</Anchor>
    <DeclaredIn>FFMPEGPicture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGPicture</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_picture.html</Path>
    <Anchor>a8a8f506152eb518b7c65382277f99166</Anchor>
    <DeclaredIn>FFMPEGPicture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGPicture</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_picture.html</Path>
    <Anchor>a254b6b8a5bf86e6a55c344240e6ffc83</Anchor>
    <DeclaredIn>FFMPEGPicture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGPicture</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_picture.html</Path>
    <Anchor>ae06f3dea2236b04f0ae37765ba0e7464</Anchor>
    <DeclaredIn>FFMPEGPicture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getColorSpace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGPicture</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_picture.html</Path>
    <Anchor>a0cdb082eb51aaf3e8acb869890168a16</Anchor>
    <DeclaredIn>FFMPEGPicture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGPicture</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_picture.html</Path>
    <Anchor>a6bc506a884aba0b74e48a1d0741cb619</Anchor>
    <DeclaredIn>FFMPEGPicture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDataSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGPicture</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_picture.html</Path>
    <Anchor>aa0913fe0c347bdb51e015e341812e8b8</Anchor>
    <DeclaredIn>FFMPEGPicture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toQImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGPicture</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_picture.html</Path>
    <Anchor>aa25b7b1aa75fe4651ff575f8b8457a5b</Anchor>
    <DeclaredIn>FFMPEGPicture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTextureSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>YUVImage</Scope>
    </TokenIdentifier>
    <Path>class_y_u_v_image.html</Path>
    <Anchor>aff12eaaf9ea107ef010845e1c8df1c27</Anchor>
    <DeclaredIn>YUVImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGLPixelFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>YUVImage</Scope>
    </TokenIdentifier>
    <Path>class_y_u_v_image.html</Path>
    <Anchor>ab6f9b4a259ed32b804b97ebbcf7e8d66</Anchor>
    <DeclaredIn>YUVImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRowOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>af75d8761f387cf813b0d0c3a3c7f481c</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGpuImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>ac3e10f35fb8dd895bda5627f43d96907</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateGpuImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>a8284c68a45d845a6ffd8eb81a4544092</Anchor>
    <Abstract>Generate the GPU image. </Abstract>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFMPEGVideoFrameConverter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FFMPEGVideoFrameConverter</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_frame_converter.html</Path>
    <Abstract>Convert FFMPEG AVFrames to pictures in a user-defined format. </Abstract>
    <DeclaredIn>FFMPEGVideoFrameConverter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFMPEGVideoFrameConverter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoFrameConverter</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_frame_converter.html</Path>
    <Anchor>a7ad12de433d054c8d931e817b03fb7b3</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>FFMPEGVideoFrameConverter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FFMPEGVideoFrameConverter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoFrameConverter</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_frame_converter.html</Path>
    <Anchor>aeefb0051a145deb3d6b6fd58bb4906ac</Anchor>
    <Abstract>Destroy the converter, freeing up resources. </Abstract>
    <DeclaredIn>FFMPEGVideoFrameConverter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convert</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoFrameConverter</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_frame_converter.html</Path>
    <Anchor>abf876c969bbaa25c82ca67118d0bb550</Anchor>
    <Abstract>Convert an AVFrame to the target format. </Abstract>
    <DeclaredIn>FFMPEGVideoFrameConverter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFMPEGVideoStream</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Abstract>A video stream from an FFMPEG file. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FFMPEGVideoStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>a3462dbb6d35dbca8ae9692320765ea70</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~FFMPEGVideoStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>ac156456c4ed8b05d38a475d562de746e</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>a401eb81c2b7086288db2a0a11e1c8492</Anchor>
    <Abstract>Decode a video packet. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decodeTimestamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>a59a72231402aae3c00200f20129329b3</Anchor>
    <Abstract>Partially decode a video packet to determine its timestamp. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decodePictureForLastPacket</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>a2e9c261871fbc6f0ec10555a5b065ef4</Anchor>
    <Abstract>Call after a successful decodeTimestamp to get the corresponding picture. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>a2a229012cd32b78f4fce8790b5621968</Anchor>
    <Abstract>Get the width of the video stream. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>a5bf7b63236263fae23dc4338c119ec74</Anchor>
    <Abstract>Get the height of the video stream. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isStereo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>a30b951ff4f3eaa8491c45e62f0748eda</Anchor>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>a6751a0e306c8f0c176681496d5448982</Anchor>
    <Abstract>Get the video stream duration in seconds. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>a6aa24924ff435f71adf39625d0a4f8a4</Anchor>
    <Abstract>Get the duration of a frame in seconds. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAVFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>a6f51c0db6880c85f285b193dd6372bab</Anchor>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>afd2dc7e4aca544cf9e63604be3640560</Anchor>
    <Abstract>Get the frameIndex corresponding to the given time in seconds. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimestamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>aeb13ff830c91d0644e28092fe71c3a96</Anchor>
    <Abstract>Get the timestamp corresponding to the given time in seconds. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimestamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>a7f8ddef524406c30c3973190428d9d6e</Anchor>
    <Abstract>Get the timestamp corresponding to the given frameIndex. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>abd1bbcc36fc1f0e6d38df4fae161ec8a</Anchor>
    <Abstract>Get the frameIndex corresponding to the given timestamp. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPositionInSec</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>a6e0f039858303528e97219efa68a087b</Anchor>
    <Abstract>Convert a timestamp to a time in seconds. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>seekToNearestFullframe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FFMPEGVideoStream</Scope>
    </TokenIdentifier>
    <Path>class_f_f_m_p_e_g_video_stream.html</Path>
    <Anchor>ab78b40e3d19ec1de95c31ea52163937c</Anchor>
    <Abstract>Seek to the nearest full frame in the video. </Abstract>
    <DeclaredIn>FFMPEGVideoStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FileBrowser</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FileBrowser</Scope>
    </TokenIdentifier>
    <Path>class_file_browser.html</Path>
    <Abstract>Expose file system contents in JSON format through HTTP. </Abstract>
    <DeclaredIn>FileBrowser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FileBrowser</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FileBrowser</Scope>
    </TokenIdentifier>
    <Path>class_file_browser.html</Path>
    <Anchor>a250e003ff50847569f031e11dab70050</Anchor>
    <Abstract>Create a file system browser. </Abstract>
    <DeclaredIn>FileBrowser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>list</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FileBrowser</Scope>
    </TokenIdentifier>
    <Path>class_file_browser.html</Path>
    <Anchor>ac579ed222b7b7b091513c5868645ba35</Anchor>
    <Abstract>List the contents of a directory. </Abstract>
    <DeclaredIn>FileBrowser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FileInfoHelper</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FileInfoHelper</Scope>
    </TokenIdentifier>
    <Path>class_file_info_helper.html</Path>
    <Abstract>Expose QFileInfo helper functions to Qml. </Abstract>
    <DeclaredIn>FileInfoHelper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FileReceiver</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FileReceiver</Scope>
    </TokenIdentifier>
    <Path>class_file_receiver.html</Path>
    <Abstract>Receive HTTP file uploads. </Abstract>
    <DeclaredIn>FileReceiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>FileReceiver</Scope>
    </TokenIdentifier>
    <Path>class_file_receiver.html</Path>
    <Anchor>ab92425d340f89e1a7e35405e717bcfa6</Anchor>
    <Abstract>Open the uploaded file at the given position. </Abstract>
    <DeclaredIn>FileReceiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareUpload</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FileReceiver</Scope>
    </TokenIdentifier>
    <Path>class_file_receiver.html</Path>
    <Anchor>a9c7f1cbb703d9b51f25a388387fc3f60</Anchor>
    <Abstract>Prepare the upload of a file via REST Interface. </Abstract>
    <DeclaredIn>FileReceiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleUpload</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FileReceiver</Scope>
    </TokenIdentifier>
    <Path>class_file_receiver.html</Path>
    <Anchor>a9a259a04ed09125eb77253a5b138a020</Anchor>
    <Abstract>Upload a file via REST Interface. </Abstract>
    <DeclaredIn>FileReceiver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FolderThumbnailGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FolderThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_folder_thumbnail_generator.html</Path>
    <Abstract>Generate thumbnails for folders. </Abstract>
    <DeclaredIn>FolderThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FolderThumbnailGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FolderThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_folder_thumbnail_generator.html</Path>
    <Anchor>ace3c4e536cc2bf77331cfd4f20bec2a9</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>FolderThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>FolderThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_folder_thumbnail_generator.html</Path>
    <Anchor>a9f5952e6bf2b2bd85633c5c8f8074c31</Anchor>
    <Abstract>Generate a thumbnail for a folder. </Abstract>
    <DeclaredIn>FolderThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThumbnailGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>a8e1445189917a48c75ddaf992d4e166f</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ThumbnailGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>aa726f0f40d9c5d1e43026260f89d923a</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>ThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createErrorImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>a9fba0be45fafb6dca5ceba86725ae398</Anchor>
    <Abstract>Create a generic placeholder image indicating that an error occured. </Abstract>
    <DeclaredIn>ThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createGradientImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>af950dcda932b1ddc5dc0f6cff98da787</Anchor>
    <Abstract>Create a gradient image, can be used as background for a placeholder. </Abstract>
    <DeclaredIn>ThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>paintText</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>a830215bb774dfa30b8b2d6e812465bd4</Anchor>
    <Abstract>Paint text over an image, for example on top of a placeholder image. </Abstract>
    <DeclaredIn>ThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>a5efbb9ef797b1597b012c0f8f8ebdb31</Anchor>
    <Abstract>Target size for the thumbnails. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_aspectRatioMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>aa5d65a800fb8ae29b3c00ffdb4156786</Anchor>
    <Abstract>Aspect ratio policy for the thumbnails. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FpsCounter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>FpsCounter</Scope>
    </TokenIdentifier>
    <Path>class_fps_counter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HardwareSwapGroup</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>HardwareSwapGroup</Scope>
    </TokenIdentifier>
    <Path>class_hardware_swap_group.html</Path>
    <Abstract>Hardware swap group using OpenGL extensions. </Abstract>
    <DeclaredIn>HardwareSwapGroup.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HtmlContent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>HtmlContent</Scope>
    </TokenIdentifier>
    <Path>class_html_content.html</Path>
    <Abstract>Expose html content through a REST API. </Abstract>
    <DeclaredIn>HtmlContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HtmlContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>HtmlContent</Scope>
    </TokenIdentifier>
    <Path>class_html_content.html</Path>
    <Anchor>a93b3d15ad820691f576ec7cccdef6dc3</Anchor>
    <Abstract>Construct and expose the html content. </Abstract>
    <DeclaredIn>HtmlContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HtmlSelectReplacer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>HtmlSelectReplacer</Scope>
    </TokenIdentifier>
    <Path>class_html_select_replacer.html</Path>
    <Abstract>This class provides the necessary scripts (based on jQuery and SelectBoxIt) to substitute all &lt;select...</Abstract>
    <DeclaredIn>HtmlSelectReplacer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Image</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Abstract>An interface to provide necessary image information for the texture upload. </Abstract>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>a0a9fde6eb7f6f19ffd670385ae142671</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>ac82f68c4a8ef0f5a3ea2a3d1048f5ab6</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTextureSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>a6334f11fb0d39f06565957b4bf07a94f</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>abcd77ea99f53831911ded4b8467be0b6</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDataSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>a2e1bcd0f0639bf89889daed28aad5213</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRowOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>af75d8761f387cf813b0d0c3a3c7f481c</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>a7444680c426d1e73fe370287bf45e2ad</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getColorSpace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>a49481fa1cc7c6b2ab9a1dec20209076b</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGLPixelFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>a3ee4e53772429091c02422e86345e7b7</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGpuImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>ac3e10f35fb8dd895bda5627f43d96907</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateGpuImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>a8284c68a45d845a6ffd8eb81a4544092</Anchor>
    <Abstract>Generate the GPU image. </Abstract>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImagePyramidContent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ImagePyramidContent</Scope>
    </TokenIdentifier>
    <Path>class_image_pyramid_content.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImagePyramidContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ImagePyramidContent</Scope>
    </TokenIdentifier>
    <Path>class_image_pyramid_content.html</Path>
    <Anchor>afc3b21948f6c00850d193980081aa11b</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ImagePyramidContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ImagePyramidContent</Scope>
    </TokenIdentifier>
    <Path>class_image_pyramid_content.html</Path>
    <Anchor>a432dfbef3dd524e97560e4838b227b44</Anchor>
    <Abstract>Get the content type. </Abstract>
    <DeclaredIn>ImagePyramidContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMetadata</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ImagePyramidContent</Scope>
    </TokenIdentifier>
    <Path>class_image_pyramid_content.html</Path>
    <Anchor>a306dc9f5ea9089c6d2c48b65abe905b4</Anchor>
    <Abstract>Read texture metadata. </Abstract>
    <DeclaredIn>ImagePyramidContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canBeZoomed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ImagePyramidContent</Scope>
    </TokenIdentifier>
    <Path>class_image_pyramid_content.html</Path>
    <Anchor>abc29f748ebe89db580582e0f07dfb790</Anchor>
    <DeclaredIn>ImagePyramidContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Content</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ae491288d2efce7fa63d3e777580630b4</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a31ac405053a2cb5e157e5054b1012350</Anchor>
    <Abstract>Make a clone of this Content using binary serialization. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUri</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0ca4482bc84b9be50eb4bbc4a2c4ecac</Anchor>
    <Abstract>Get the content URI. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFilePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a234f77ec77f331f409d65e348a86fb73</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTitle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a57345c59f1ca4a395cfa230bafdc7812</Anchor>
    <Abstract>Get the title of the content. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>aa4681ca97acea99fbe88e20f0e664bc0</Anchor>
    <Abstract>Get the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>add67cf2f0ec836aabd24a088473f9e9d</Anchor>
    <Abstract>Get the width. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>height</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0ac15e1ba630bc6c6f98d47529f4c48c</Anchor>
    <Abstract>Get the height. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a8cf06fbd623453fd2aa349d91ebbca3b</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPreferredDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a508b7f5c09ffa4f5a1a7f3e89cbec489</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a70fbc6b9c9dfd95c426819a1c14464f9</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a1b7a6f49f447c124b497b0a844fd6ea6</Anchor>
    <Abstract>Set the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a113bd8ba35685e77bcf8a8650fab636a</Anchor>
    <Abstract>Get the aspect ratio. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFixedAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>adceac372a702843a1e0bd207f670680a</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKeyboardState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a41cdb80d25bbb1f3f9e1b36bfb6b2515</Anchor>
    <Abstract>Get the keyboard state from QML. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a461bb62d3989d0eb5b4d1f824e7a66c0</Anchor>
    <Abstract>Get the zoom rectangle in normalized coordinates, [0,0,1,1] default. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0f3e5f9203b97450e3856d39a12807e3</Anchor>
    <Abstract>Set the zoom rectangle in normalized coordinates. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isZoomed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af9177091ab70e17f93b736d77e07bbee</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ad7e55aa12c354279dbe776de66a5635f</Anchor>
    <Abstract>Resets the zoom to [0,0,1,1]. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSizeHints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a70292d652fb37ee21640801fce53c186</Anchor>
    <Abstract>Set optional size hints to constrain resize/scale and 1:1 size. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCaptureInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a7e7c36edf987322675eea81f27e8017d</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCaptureInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a18477814caa57d8f9aa0330fd19487ab</Anchor>
    <Abstract>Tell the content to capture interaction (only for Policy::AUTO). </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a87465efbfaf4e2e5b0a5e7e8af0985f2</Anchor>
    <Abstract>Set the maximum factor for zoom and resize; value times content size. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a04642ff3171681aa5fd2c8c8291a7949</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a44c022cb6fed6fb1b0dff45e39ececb9</Anchor>
    <Abstract>Emitted by any Content subclass when its state has been modified. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImagePyramidDataSource</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ImagePyramidDataSource</Scope>
    </TokenIdentifier>
    <Path>class_image_pyramid_data_source.html</Path>
    <Abstract>A data source for tiled image pyramids. </Abstract>
    <DeclaredIn>ImagePyramidDataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImagePyramidDataSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ImagePyramidDataSource</Scope>
    </TokenIdentifier>
    <Path>class_image_pyramid_data_source.html</Path>
    <Anchor>ac397eafadab0288bc7df40c47631b40c</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ImagePyramidDataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ImagePyramidDataSource</Scope>
    </TokenIdentifier>
    <Path>class_image_pyramid_data_source.html</Path>
    <Anchor>aae6d6c5b2c305f52d7b2f55cbbe17ab2</Anchor>
    <Abstract>Get the coordinates of a tile. </Abstract>
    <DeclaredIn>ImagePyramidDataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>acc15604f255b48ce02dec5d72605e4ee</Anchor>
    <Abstract>Get the coordinates of a tile. </Abstract>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTilesArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>a0e4bab5a5f51e2a550282b7582a4def6</Anchor>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeVisibleSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>a72eb6e5f4f5eb3ba29480494edefe2ba</Anchor>
    <Abstract>Compute the indices of the tiles which are visible in the given area. </Abstract>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxLod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>a5e073ae83bc4589624bfdc0d12371609</Anchor>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNormalizedTileRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>a085c9b2df8260fb774572242b411fdd3</Anchor>
    <Abstract>Get the tile rectangle in normalized coordinates. </Abstract>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CachedDataSource</Scope>
    </TokenIdentifier>
    <Path>class_cached_data_source.html</Path>
    <Anchor>aa7cb65c68e8d39bb682947fe4672a29c</Anchor>
    <Abstract>Get a tile image by its id for a given view. threadsafe </Abstract>
    <DeclaredIn>CachedDataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CachedDataSource</Scope>
    </TokenIdentifier>
    <Path>class_cached_data_source.html</Path>
    <Anchor>a02e027db47c9407a6235d391a015704b</Anchor>
    <Abstract>Check if the cache contains an image for a tile. </Abstract>
    <DeclaredIn>CachedDataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDynamic</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DataSource</Scope>
    </TokenIdentifier>
    <Path>class_data_source.html</Path>
    <Anchor>a54629350c073612b09217a9084b27951</Anchor>
    <DeclaredIn>DataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synchronizers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>DataSource</Scope>
    </TokenIdentifier>
    <Path>class_data_source.html</Path>
    <Anchor>a43d2d50fc4971aa75f19e8c0130bc721</Anchor>
    <Abstract>The synchronizers linked to this shared data source. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LodTiler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>a6fb20a5bd71ee276d60d95f57a197517</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImagePyramidThumbnailGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ImagePyramidThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_image_pyramid_thumbnail_generator.html</Path>
    <Abstract>Generate thumbnails for image pyramids. </Abstract>
    <DeclaredIn>ImagePyramidThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImagePyramidThumbnailGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ImagePyramidThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_image_pyramid_thumbnail_generator.html</Path>
    <Anchor>ab2f43ff822d3913a527a752cf6126377</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ImagePyramidThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ImagePyramidThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_image_pyramid_thumbnail_generator.html</Path>
    <Anchor>a700ae29ebbafef6e958f1b2b63a2da0b</Anchor>
    <Abstract>Generate a thumbnail of a TIFF image pyramid. </Abstract>
    <DeclaredIn>ImagePyramidThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThumbnailGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>a8e1445189917a48c75ddaf992d4e166f</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ThumbnailGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>aa726f0f40d9c5d1e43026260f89d923a</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>ThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createErrorImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>a9fba0be45fafb6dca5ceba86725ae398</Anchor>
    <Abstract>Create a generic placeholder image indicating that an error occured. </Abstract>
    <DeclaredIn>ThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createGradientImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>af950dcda932b1ddc5dc0f6cff98da787</Anchor>
    <Abstract>Create a gradient image, can be used as background for a placeholder. </Abstract>
    <DeclaredIn>ThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>paintText</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>a830215bb774dfa30b8b2d6e812465bd4</Anchor>
    <Abstract>Paint text over an image, for example on top of a placeholder image. </Abstract>
    <DeclaredIn>ThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>a5efbb9ef797b1597b012c0f8f8ebdb31</Anchor>
    <Abstract>Target size for the thumbnails. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_aspectRatioMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>aa5d65a800fb8ae29b3c00ffdb4156786</Anchor>
    <Abstract>Aspect ratio policy for the thumbnails. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImageSource</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ImageSource</Scope>
    </TokenIdentifier>
    <Path>class_image_source.html</Path>
    <Abstract>Cached data source for regular images. </Abstract>
    <DeclaredIn>ImageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImageSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ImageSource</Scope>
    </TokenIdentifier>
    <Path>class_image_source.html</Path>
    <Anchor>acca0d3d0e1927f39881e365007f9d51c</Anchor>
    <Abstract>Construct an image source. </Abstract>
    <DeclaredIn>ImageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ImageSource</Scope>
    </TokenIdentifier>
    <Path>class_image_source.html</Path>
    <Anchor>a34e9b5457a1bb5314dc9b1c86bb27cee</Anchor>
    <Abstract>Get the coordinates of a tile. </Abstract>
    <DeclaredIn>ImageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTilesArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ImageSource</Scope>
    </TokenIdentifier>
    <Path>class_image_source.html</Path>
    <Anchor>a650145e496fdc3f5b85837b75fe60810</Anchor>
    <DeclaredIn>ImageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeVisibleSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ImageSource</Scope>
    </TokenIdentifier>
    <Path>class_image_source.html</Path>
    <Anchor>a0c3bb9a841842f67532152c9b9c51bb7</Anchor>
    <Abstract>Compute the indices of the tiles which are visible in the given area. </Abstract>
    <DeclaredIn>ImageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxLod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ImageSource</Scope>
    </TokenIdentifier>
    <Path>class_image_source.html</Path>
    <Anchor>a6e6621ac4d3c93399abb176174cea2ac</Anchor>
    <DeclaredIn>ImageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CachedDataSource</Scope>
    </TokenIdentifier>
    <Path>class_cached_data_source.html</Path>
    <Anchor>aa7cb65c68e8d39bb682947fe4672a29c</Anchor>
    <Abstract>Get a tile image by its id for a given view. threadsafe </Abstract>
    <DeclaredIn>CachedDataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CachedDataSource</Scope>
    </TokenIdentifier>
    <Path>class_cached_data_source.html</Path>
    <Anchor>a02e027db47c9407a6235d391a015704b</Anchor>
    <Abstract>Check if the cache contains an image for a tile. </Abstract>
    <DeclaredIn>CachedDataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDynamic</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DataSource</Scope>
    </TokenIdentifier>
    <Path>class_data_source.html</Path>
    <Anchor>a54629350c073612b09217a9084b27951</Anchor>
    <DeclaredIn>DataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synchronizers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>DataSource</Scope>
    </TokenIdentifier>
    <Path>class_data_source.html</Path>
    <Anchor>a43d2d50fc4971aa75f19e8c0130bc721</Anchor>
    <Abstract>The synchronizers linked to this shared data source. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImageThumbnailGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ImageThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_image_thumbnail_generator.html</Path>
    <Abstract>Generate thumbnails for regular image files. </Abstract>
    <DeclaredIn>ImageThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImageThumbnailGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ImageThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_image_thumbnail_generator.html</Path>
    <Anchor>a6791458d13dff3625fc2706de3b828b1</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ImageThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ImageThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_image_thumbnail_generator.html</Path>
    <Anchor>ac09221deff6342546cc5368174bfa9db</Anchor>
    <Abstract>Generate a thumbnail of an image. </Abstract>
    <DeclaredIn>ImageThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThumbnailGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>a8e1445189917a48c75ddaf992d4e166f</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ThumbnailGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>aa726f0f40d9c5d1e43026260f89d923a</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>ThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createErrorImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>a9fba0be45fafb6dca5ceba86725ae398</Anchor>
    <Abstract>Create a generic placeholder image indicating that an error occured. </Abstract>
    <DeclaredIn>ThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createGradientImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>af950dcda932b1ddc5dc0f6cff98da787</Anchor>
    <Abstract>Create a gradient image, can be used as background for a placeholder. </Abstract>
    <DeclaredIn>ThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>paintText</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>a830215bb774dfa30b8b2d6e812465bd4</Anchor>
    <Abstract>Paint text over an image, for example on top of a placeholder image. </Abstract>
    <DeclaredIn>ThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>a5efbb9ef797b1597b012c0f8f8ebdb31</Anchor>
    <Abstract>Target size for the thumbnails. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_aspectRatioMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>aa5d65a800fb8ae29b3c00ffdb4156786</Anchor>
    <Abstract>Aspect ratio policy for the thumbnails. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InactivityTimer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>InactivityTimer</Scope>
    </TokenIdentifier>
    <Path>class_inactivity_timer.html</Path>
    <Abstract>Detect user inactivity to power off screens after a configurable timeout. </Abstract>
    <DeclaredIn>InactivityTimer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>countdownUpdated</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>InactivityTimer</Scope>
    </TokenIdentifier>
    <Path>class_inactivity_timer.html</Path>
    <Anchor>a30d7725150bf377b8825570530d685b0</Anchor>
    <Abstract>Emitted when the state of the countdown is modified. </Abstract>
    <DeclaredIn>InactivityTimer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>poweroff</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>InactivityTimer</Scope>
    </TokenIdentifier>
    <Path>class_inactivity_timer.html</Path>
    <Anchor>a3e2636328fd2b726744449398164d0d3</Anchor>
    <Abstract>Emitted when the countdown timer times-out. </Abstract>
    <DeclaredIn>InactivityTimer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InactivityTimer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>InactivityTimer</Scope>
    </TokenIdentifier>
    <Path>class_inactivity_timer.html</Path>
    <Anchor>a669d4d99d121e1bb41d4d692606ac4d5</Anchor>
    <Abstract>Create a timer which can be used to turn off the displays. </Abstract>
    <DeclaredIn>InactivityTimer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>InactivityTimer</Scope>
    </TokenIdentifier>
    <Path>class_inactivity_timer.html</Path>
    <Anchor>a936109b125da6d67baccc2eda68a85b8</Anchor>
    <Abstract>Stop the timer. </Abstract>
    <DeclaredIn>InactivityTimer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>restart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>InactivityTimer</Scope>
    </TokenIdentifier>
    <Path>class_inactivity_timer.html</Path>
    <Anchor>a01e02d85e1598dd9cdb0fb39fa394c12</Anchor>
    <Abstract>Restart the inactivity timer and interrupt the countdown if active. </Abstract>
    <DeclaredIn>InactivityTimer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invalid_surface_index_error</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>invalid_surface_index_error</Scope>
    </TokenIdentifier>
    <Path>classinvalid__surface__index__error.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IterableSmartPtrCollection</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>IterableSmartPtrCollection</Scope>
    </TokenIdentifier>
    <Path>class_iterable_smart_ptr_collection.html</Path>
    <Abstract>Facade class that lets users safely iterate over a collection of smart_ptrs. </Abstract>
    <DeclaredIn>IterableSmartPtrCollection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IterableSmartPtrCollection::smart_ptr_iterator_wrapper</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>IterableSmartPtrCollection::smart_ptr_iterator_wrapper</Scope>
    </TokenIdentifier>
    <Path>struct_iterable_smart_ptr_collection_1_1smart__ptr__iterator__wrapper.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>KeyboardController</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>KeyboardController</Scope>
    </TokenIdentifier>
    <Path>class_keyboard_controller.html</Path>
    <Abstract>Control the on-screen keyboard UI state. </Abstract>
    <DeclaredIn>KeyboardController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>KeyboardState</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>KeyboardState</Scope>
    </TokenIdentifier>
    <Path>class_keyboard_state.html</Path>
    <Abstract>The state of the virtual keyboard, distributed by master to wall processes. </Abstract>
    <DeclaredIn>KeyboardState.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>KeyboardState</Scope>
    </TokenIdentifier>
    <Path>class_keyboard_state.html</Path>
    <Anchor>abff446f04460e5c3e5aa337591d33648</Anchor>
    <Abstract>Emitted whenever any field has been modified. </Abstract>
    <DeclaredIn>KeyboardState.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isVisible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>KeyboardState</Scope>
    </TokenIdentifier>
    <Path>class_keyboard_state.html</Path>
    <Anchor>a56d1826dcca6d6f0c46629db0f2432a0</Anchor>
    <DeclaredIn>KeyboardState.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getShiftActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>KeyboardState</Scope>
    </TokenIdentifier>
    <Path>class_keyboard_state.html</Path>
    <Anchor>a295d8a7049405a8a702faf8a4119abf9</Anchor>
    <DeclaredIn>KeyboardState.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSymbolsActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>KeyboardState</Scope>
    </TokenIdentifier>
    <Path>class_keyboard_state.html</Path>
    <Anchor>a635c9096e6455805614be41944bf7bd2</Anchor>
    <DeclaredIn>KeyboardState.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getActiveKeyId</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>KeyboardState</Scope>
    </TokenIdentifier>
    <Path>class_keyboard_state.html</Path>
    <Anchor>a1108a531e36d36d28f036c5f59ca0479</Anchor>
    <DeclaredIn>KeyboardState.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVisible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>KeyboardState</Scope>
    </TokenIdentifier>
    <Path>class_keyboard_state.html</Path>
    <Anchor>ad29cf00777bb60224403574120365250</Anchor>
    <Abstract>Set the visibility of the keyboard. </Abstract>
    <DeclaredIn>KeyboardState.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setShiftActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>KeyboardState</Scope>
    </TokenIdentifier>
    <Path>class_keyboard_state.html</Path>
    <Anchor>adbcd5243dfbf48c6fda05b09463633bd</Anchor>
    <Abstract>(De)Activate the shift key. </Abstract>
    <DeclaredIn>KeyboardState.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSymbolsActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>KeyboardState</Scope>
    </TokenIdentifier>
    <Path>class_keyboard_state.html</Path>
    <Anchor>a046f7ed57fb2df2279bb8aeb9ffe7c72</Anchor>
    <Abstract>(De)Activate the symbols key. </Abstract>
    <DeclaredIn>KeyboardState.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setActiveKeyId</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>KeyboardState</Scope>
    </TokenIdentifier>
    <Path>class_keyboard_state.html</Path>
    <Anchor>a9f090fa5c6ec36058d57463f678c5316</Anchor>
    <Abstract>Set the identifier of the active key. </Abstract>
    <DeclaredIn>KeyboardState.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LauncherPlacer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>LauncherPlacer</Scope>
    </TokenIdentifier>
    <Path>class_launcher_placer.html</Path>
    <Abstract>Determine the placement of the Launcher on a Surface. </Abstract>
    <DeclaredIn>LauncherPlacer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LauncherPlacer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LauncherPlacer</Scope>
    </TokenIdentifier>
    <Path>class_launcher_placer.html</Path>
    <Anchor>a28de7888d62f03fd88bc04b9afa2d281</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>LauncherPlacer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LayoutEngine</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>LayoutEngine</Scope>
    </TokenIdentifier>
    <Path>class_layout_engine.html</Path>
    <Abstract>Layout engine for positionning windows on the wall. </Abstract>
    <DeclaredIn>LayoutEngine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFocusedCoord</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LayoutEngine</Scope>
    </TokenIdentifier>
    <Path>class_layout_engine.html</Path>
    <Anchor>ac7d4c9df48851407c142f20499c84b52</Anchor>
    <DeclaredIn>LayoutEngine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateFocusedCoord</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LayoutEngine</Scope>
    </TokenIdentifier>
    <Path>class_layout_engine.html</Path>
    <Anchor>a48bcfe6a051b42439369b623bb590528</Anchor>
    <Abstract>Update the focused coordinates for the set of windows. </Abstract>
    <DeclaredIn>LayoutEngine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_getAvailableSpace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LayoutPolicy</Scope>
    </TokenIdentifier>
    <Path>class_layout_policy.html</Path>
    <Anchor>a2aba386ff80e8be5847fd11b0dc3baca</Anchor>
    <Abstract>returns the rect of available space on the display group </Abstract>
    <DeclaredIn>LayoutPolicy.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LayoutPolicy</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>LayoutPolicy</Scope>
    </TokenIdentifier>
    <Path>class_layout_policy.html</Path>
    <Abstract>Abstract class whose derived classes must deal with the layout in focus coordinates. </Abstract>
    <DeclaredIn>LayoutPolicy.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFocusedCoord</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LayoutPolicy</Scope>
    </TokenIdentifier>
    <Path>class_layout_policy.html</Path>
    <Anchor>a79b759db18510f0adb37973d9124ac7c</Anchor>
    <DeclaredIn>LayoutPolicy.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateFocusedCoord</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LayoutPolicy</Scope>
    </TokenIdentifier>
    <Path>class_layout_policy.html</Path>
    <Anchor>aa949f2cc86219aa3415fe4f80ccdfc2f</Anchor>
    <Abstract>Update the focused coordinates for the set of windows. </Abstract>
    <DeclaredIn>LayoutPolicy.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_getAvailableSpace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LayoutPolicy</Scope>
    </TokenIdentifier>
    <Path>class_layout_policy.html</Path>
    <Anchor>a2aba386ff80e8be5847fd11b0dc3baca</Anchor>
    <Abstract>returns the rect of available space on the display group </Abstract>
    <DeclaredIn>LayoutPolicy.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LocalBarrier</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>LocalBarrier</Scope>
    </TokenIdentifier>
    <Path>class_local_barrier.html</Path>
    <Abstract>Barrier for multiple local threads. </Abstract>
    <DeclaredIn>LocalBarrier.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitForAllThreadsThen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LocalBarrier</Scope>
    </TokenIdentifier>
    <Path>class_local_barrier.html</Path>
    <Anchor>ad795de5821fe18d1bb5bb2fc5b1bb3c4</Anchor>
    <Abstract>Wait for all threads to join then execute the action. </Abstract>
    <DeclaredIn>LocalBarrier.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LodSynchronizer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Abstract>Base synchronizer for tiled contents with multiple levels of detail. </Abstract>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LodSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Anchor>ae056d0d5f9312d67b95f6fb0d39cc8f8</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Anchor>a87f4bd1a5a28d60e19aaaa41908f875d</Anchor>
    <Abstract>Update the Content. </Abstract>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Anchor>a292d58ed84e619f1c77705650f9f90cd</Anchor>
    <Abstract>Update the tiles. </Abstract>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTilesArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Anchor>a71b8164252aa4844d0f9d3b5241c1850</Anchor>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Anchor>af3da3292f6724a75e51f42028370d295</Anchor>
    <Abstract>Get statistics about this Content. </Abstract>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createZoomContextTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Anchor>a1573080783047998fd073bf45d73e681</Anchor>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TiledSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a70ae3f4171110fc5308407e870044fcd</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a87ca86829ead6c83dbaba10fb67a2940</Anchor>
    <Abstract>Update the tiles. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onSwapReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a8ae5165f31bd9575d16a2849c46eb256</Anchor>
    <Abstract>Called when a tile is ready to swap. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canSwapTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a25d7a4e588651907f5de2a7d843590d9</Anchor>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a66b1596107ae5c900f74142247f830ea</Anchor>
    <Abstract>Call to swap tiles when TileSwapPolicy is SwapTilesSynchronously. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aa9b57c8a735fbfb9b35e3e79d9ac9682</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ContentSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aac4d27f2dcb82846eb5e94a8f281aa5f</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoomContextVisible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a8abee6251a6c2f9a3640bf3a23d4332a</Anchor>
    <Abstract>Check if the zoom context tile is visible in Qml. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a83072124703f035d6dfa466cc1cf73d5</Anchor>
    <Abstract>Get the view for this synchronizer. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Anchor>a8e99ccd066b855149d5a45b4fca70397</Anchor>
    <Abstract>Update the tiles. </Abstract>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDataSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Anchor>ade270bed0110dd8809be28c330ee5664</Anchor>
    <Abstract>Get the data source. </Abstract>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onRequestNextFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a134db7d6cbe00b6886e5d8c30c7ceac6</Anchor>
    <Abstract>Called when a tile has to be updated, re-emits requestTileUpdate. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZoomContextVisible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a38b82b0163d7871040fa78bf8145a7b7</Anchor>
    <Abstract>Set by the Qml ZoomContext element. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tilesAreaChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aac807a9cb073a52d88a80ceca93b34a3</Anchor>
    <Abstract>Notifier for the tiles area property. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>statisticsChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a8b2131d6b3874d8d932a101ec3dcde05</Anchor>
    <Abstract>Notifier for the statistics property. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zoomContextVisibleChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a7223c8186607dd080abc644b359167a0</Anchor>
    <Abstract>Notifier for the zoomContextVisible property. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a07a22964fedee87ec47fddc4b02a40f0</Anchor>
    <Abstract>Notify the window to add a tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a755db8af943fc6bd0aab4220320d3a89</Anchor>
    <Abstract>Notify the window to remove a tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aba03b3c5af16950946e91c893d20eeaf</Anchor>
    <Abstract>Notify to update a tile&amp;#39;s coordinates. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestTileUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>ada17c27d8584a4909d023802ded6b6fa</Anchor>
    <Abstract>Request an update of a specific tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zoomContextTileChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>addacc933144498d3686f4f2fc54d828a</Anchor>
    <Abstract>Notify that the zoom context tile has changed and must be recreated. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_lod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a6fbe44ca96d25a41cd1db23e6437c696</Anchor>
    <Abstract>LOD used to obtain the list of visible tiles from the data source. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_channel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a397b544b5f7a00e38512b1042719c663</Anchor>
    <Abstract>Channel used to obtain the list of visible tiles. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_visibleTilesArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a30b3e4b8fffc7a05ad02567caac47c0d</Anchor>
    <Abstract>Area used to obtain the list of visible tiles from the data source. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_ignoreSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a661e203de9c571ab12a1fb0a2bda0c69</Anchor>
    <Abstract>Tiles to be ignored; must be managed manually. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateExistingTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a6562348f5dfdb774990e49e1e817cc29</Anchor>
    <Abstract>Update texture and coordinates of tiles which are already visible. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LodTiler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Abstract>Base class to provide tiles for multi-LOD tiled data source. </Abstract>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>acc15604f255b48ce02dec5d72605e4ee</Anchor>
    <Abstract>Get the coordinates of a tile. </Abstract>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTilesArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>a0e4bab5a5f51e2a550282b7582a4def6</Anchor>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeVisibleSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>a72eb6e5f4f5eb3ba29480494edefe2ba</Anchor>
    <Abstract>Compute the indices of the tiles which are visible in the given area. </Abstract>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxLod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>a5e073ae83bc4589624bfdc0d12371609</Anchor>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNormalizedTileRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>a085c9b2df8260fb774572242b411fdd3</Anchor>
    <Abstract>Get the tile rectangle in normalized coordinates. </Abstract>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CachedDataSource</Scope>
    </TokenIdentifier>
    <Path>class_cached_data_source.html</Path>
    <Anchor>aa7cb65c68e8d39bb682947fe4672a29c</Anchor>
    <Abstract>Get a tile image by its id for a given view. threadsafe </Abstract>
    <DeclaredIn>CachedDataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CachedDataSource</Scope>
    </TokenIdentifier>
    <Path>class_cached_data_source.html</Path>
    <Anchor>a02e027db47c9407a6235d391a015704b</Anchor>
    <Abstract>Check if the cache contains an image for a tile. </Abstract>
    <DeclaredIn>CachedDataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDynamic</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DataSource</Scope>
    </TokenIdentifier>
    <Path>class_data_source.html</Path>
    <Anchor>a54629350c073612b09217a9084b27951</Anchor>
    <DeclaredIn>DataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LodTiler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>a6fb20a5bd71ee276d60d95f57a197517</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCachableTileImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CachedDataSource</Scope>
    </TokenIdentifier>
    <Path>class_cached_data_source.html</Path>
    <Anchor>a7572411a37e9936abcb1c757bd886293</Anchor>
    <Abstract>Get a tile image which will be cached. </Abstract>
    <DeclaredIn>CachedDataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synchronizers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>DataSource</Scope>
    </TokenIdentifier>
    <Path>class_data_source.html</Path>
    <Anchor>a43d2d50fc4971aa75f19e8c0130bc721</Anchor>
    <Abstract>The synchronizers linked to this shared data source. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LodTools</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>LodTools</Scope>
    </TokenIdentifier>
    <Path>class_lod_tools.html</Path>
    <Abstract>Tools to compute LOD pyramid data for a 2D tiled image. </Abstract>
    <DeclaredIn>LodTools.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LodTools</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTools</Scope>
    </TokenIdentifier>
    <Path>class_lod_tools.html</Path>
    <Anchor>a31ca10c2a26eca743f63827cdd7d7b15</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>LodTools.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxLod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTools</Scope>
    </TokenIdentifier>
    <Path>class_lod_tools.html</Path>
    <Anchor>a3fbb2bcb9a1d4a59d67c9b4d902fd112</Anchor>
    <DeclaredIn>LodTools.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTilesArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTools</Scope>
    </TokenIdentifier>
    <Path>class_lod_tools.html</Path>
    <Anchor>a1ccac890a674a08401c453ba1b5a0865</Anchor>
    <DeclaredIn>LodTools.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTilesCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTools</Scope>
    </TokenIdentifier>
    <Path>class_lod_tools.html</Path>
    <Anchor>a4b01b652ba5ed40843c2611353e6a06a</Anchor>
    <DeclaredIn>LodTools.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTilesCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTools</Scope>
    </TokenIdentifier>
    <Path>class_lod_tools.html</Path>
    <Anchor>a88dbc8c39df74577ea9e7c2f41e1dc21</Anchor>
    <DeclaredIn>LodTools.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFirstTileId</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTools</Scope>
    </TokenIdentifier>
    <Path>class_lod_tools.html</Path>
    <Anchor>a91b25c6820b837fd9694b9be1a249bc2</Anchor>
    <DeclaredIn>LodTools.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTools</Scope>
    </TokenIdentifier>
    <Path>class_lod_tools.html</Path>
    <Anchor>af9fd4d6d9d00d668b04cd6ca534d3d80</Anchor>
    <DeclaredIn>LodTools.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileCoord</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTools</Scope>
    </TokenIdentifier>
    <Path>class_lod_tools.html</Path>
    <Anchor>ab3cf204d5d8a346f1f5ba205f529087a</Anchor>
    <DeclaredIn>LodTools.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAllTileInfos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTools</Scope>
    </TokenIdentifier>
    <Path>class_lod_tools.html</Path>
    <Anchor>a9cf262dc1bfc5080ba96778f418c8b0d</Anchor>
    <DeclaredIn>LodTools.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVisibleTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTools</Scope>
    </TokenIdentifier>
    <Path>class_lod_tools.html</Path>
    <Anchor>ad02ae289d9cf778b922cb70e6e318fee</Anchor>
    <DeclaredIn>LodTools.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LodTools::TileIndex</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>LodTools::TileIndex</Scope>
    </TokenIdentifier>
    <Path>struct_lod_tools_1_1_tile_index.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LodTools::TileInfo</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>LodTools::TileInfo</Scope>
    </TokenIdentifier>
    <Path>struct_lod_tools_1_1_tile_info.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Markers</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Markers</Scope>
    </TokenIdentifier>
    <Path>class_markers.html</Path>
    <Abstract>Store Markers to display user interaction. </Abstract>
    <DeclaredIn>Markers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSurfaceIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Markers</Scope>
    </TokenIdentifier>
    <Path>class_markers.html</Path>
    <Anchor>aa9501a69a18478bd3a1743591c1e1fa1</Anchor>
    <Abstract>Get the surface index to which these markers belong. </Abstract>
    <DeclaredIn>Markers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Markers</Scope>
    </TokenIdentifier>
    <Path>class_markers.html</Path>
    <Anchor>ad2505d3dbf1da891e0ab650a93c915ce</Anchor>
    <Abstract>Create Markers for a surface. </Abstract>
    <DeclaredIn>Markers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MasterApplication</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MasterApplication</Scope>
    </TokenIdentifier>
    <Path>class_master_application.html</Path>
    <Abstract>The main application for the Master process. </Abstract>
    <DeclaredIn>MasterApplication.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MasterApplication</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterApplication</Scope>
    </TokenIdentifier>
    <Path>class_master_application.html</Path>
    <Anchor>a71858edcebd4cdccd6a4507afad9789a</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>MasterApplication.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MasterApplication</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterApplication</Scope>
    </TokenIdentifier>
    <Path>class_master_application.html</Path>
    <Anchor>a4d07f12d7b3075f2566d56bb430752de</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>MasterApplication.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterApplication</Scope>
    </TokenIdentifier>
    <Path>class_master_application.html</Path>
    <Anchor>a937bf094a4c3c49419f6dc9477e1cd84</Anchor>
    <Abstract>Load a session. </Abstract>
    <DeclaredIn>MasterApplication.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MasterDisplayGroupRenderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MasterDisplayGroupRenderer</Scope>
    </TokenIdentifier>
    <Path>class_master_display_group_renderer.html</Path>
    <Abstract>Render a display group in Qml in the master application. </Abstract>
    <DeclaredIn>MasterDisplayGroupRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MasterDisplayGroupRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterDisplayGroupRenderer</Scope>
    </TokenIdentifier>
    <Path>class_master_display_group_renderer.html</Path>
    <Anchor>a7bad3cfa3fbbdc7d0293b2266d22be43</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>MasterDisplayGroupRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MasterDisplayGroupRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterDisplayGroupRenderer</Scope>
    </TokenIdentifier>
    <Path>class_master_display_group_renderer.html</Path>
    <Anchor>ae60f9223cdf18e5c113bd6a8256682ab</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>MasterDisplayGroupRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MasterFromWallChannel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MasterFromWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_from_wall_channel.html</Path>
    <Abstract>Receiving channel from the wall processes to the master application. </Abstract>
    <DeclaredIn>MasterFromWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processMessages</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>MasterFromWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_from_wall_channel.html</Path>
    <Anchor>ac0e5d6e5be039476a7895461f22f4281</Anchor>
    <Abstract>Process messages until the QUIT message is received. </Abstract>
    <DeclaredIn>MasterFromWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receivedRequestFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MasterFromWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_from_wall_channel.html</Path>
    <Anchor>ab34184bf2068baeed81bc652149c994e</Anchor>
    <Abstract>Emitted when the given pixel stream was requested to send the next frame. </Abstract>
    <DeclaredIn>MasterFromWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receivedScreenshot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MasterFromWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_from_wall_channel.html</Path>
    <Anchor>ae5e3fab138528a7c89774d0be23e947d</Anchor>
    <Abstract>Emitted after each wall process has rendered a screenshot. </Abstract>
    <DeclaredIn>MasterFromWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pixelStreamClose</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MasterFromWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_from_wall_channel.html</Path>
    <Anchor>a15ab169ae1b8287bae27fea6ffbaefb0</Anchor>
    <Abstract>Emitted when the given pixel stream was requested to be closed, e.g. </Abstract>
    <DeclaredIn>MasterFromWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MasterFromWallChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterFromWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_from_wall_channel.html</Path>
    <Anchor>ae3a1dc5ffe6841e24a3df3bd78254d38</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>MasterFromWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MasterQuickView</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MasterQuickView</Scope>
    </TokenIdentifier>
    <Path>class_master_quick_view.html</Path>
    <Abstract>A scaled view of a full surface to be displayed inside the master window. </Abstract>
    <DeclaredIn>MasterQuickView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MasterQuickView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterQuickView</Scope>
    </TokenIdentifier>
    <Path>class_master_quick_view.html</Path>
    <Anchor>a08cb4b1c8d34b4441d00ea4b973e9858</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>MasterQuickView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MasterQuickView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterQuickView</Scope>
    </TokenIdentifier>
    <Path>class_master_quick_view.html</Path>
    <Anchor>af3408fed026b2fc8ee212c78ac8931c6</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>MasterQuickView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSurfaceItem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterQuickView</Scope>
    </TokenIdentifier>
    <Path>class_master_quick_view.html</Path>
    <Anchor>a1ef4e32e528ac480eade1bab8fb6aff6</Anchor>
    <DeclaredIn>MasterQuickView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MasterSurfaceRenderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MasterSurfaceRenderer</Scope>
    </TokenIdentifier>
    <Path>class_master_surface_renderer.html</Path>
    <Abstract>Render a surface in Qml in the master application. </Abstract>
    <DeclaredIn>MasterSurfaceRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openLauncher</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MasterSurfaceRenderer</Scope>
    </TokenIdentifier>
    <Path>class_master_surface_renderer.html</Path>
    <Anchor>a289e78440fcd155db6d72e929e4155ad</Anchor>
    <Abstract>Emitted when a user taps the launcher control to open it. </Abstract>
    <DeclaredIn>MasterSurfaceRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MasterSurfaceRenderer</Scope>
    </TokenIdentifier>
    <Path>class_master_surface_renderer.html</Path>
    <Anchor>ad13ab6f7dc9c3e81d218f0a5fff5920b</Anchor>
    <Abstract>Emitted when users paste multiple contents. </Abstract>
    <DeclaredIn>MasterSurfaceRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MasterSurfaceRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterSurfaceRenderer</Scope>
    </TokenIdentifier>
    <Path>class_master_surface_renderer.html</Path>
    <Anchor>ae135a7f64f2ce116ddc029f7f9f9c54f</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>MasterSurfaceRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MasterSurfaceRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterSurfaceRenderer</Scope>
    </TokenIdentifier>
    <Path>class_master_surface_renderer.html</Path>
    <Anchor>ad711ca0bd0e98e6b9dd3b590b8f50d72</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>MasterSurfaceRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MasterToForkerChannel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MasterToForkerChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_to_forker_channel.html</Path>
    <Abstract>Sending channel from the master application to the forker process. </Abstract>
    <DeclaredIn>MasterToForkerChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>MasterToForkerChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_to_forker_channel.html</Path>
    <Anchor>a547b10de3a77ceaa1cf7822bedba9949</Anchor>
    <Abstract>Send a request to execute a command as new process. </Abstract>
    <DeclaredIn>MasterToForkerChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendQuit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>MasterToForkerChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_to_forker_channel.html</Path>
    <Anchor>abc8491459ada37d18aa93762cd22e152</Anchor>
    <Abstract>Send quit message to the forker application. </Abstract>
    <DeclaredIn>MasterToForkerChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MasterToForkerChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterToForkerChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_to_forker_channel.html</Path>
    <Anchor>a4281cf932f32d2db274303e2e176e792</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>MasterToForkerChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MasterToWallChannel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MasterToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_to_wall_channel.html</Path>
    <Abstract>Sending channel from the master application to the wall processes. </Abstract>
    <DeclaredIn>MasterToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendAsync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>MasterToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_to_wall_channel.html</Path>
    <Anchor>a86f37ea730a79ee7221fe849cb659f45</Anchor>
    <Abstract>Send the given Scene to the wall processes. </Abstract>
    <DeclaredIn>MasterToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendAsync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>MasterToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_to_wall_channel.html</Path>
    <Anchor>ab363eb3caaeb7c843c1bc2d3eae219f1</Anchor>
    <Abstract>Send the given Options to the wall processes. </Abstract>
    <DeclaredIn>MasterToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendAsync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>MasterToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_to_wall_channel.html</Path>
    <Anchor>ae6decbc8adba8ad54d9a9f8412d98935</Anchor>
    <Abstract>Send the given CountdownStatus to the wall processes. </Abstract>
    <DeclaredIn>MasterToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendAsync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>MasterToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_to_wall_channel.html</Path>
    <Anchor>aaf9ac18a037e5eca708fbf3a10329deb</Anchor>
    <Abstract>Send the Lock to the wall processes. </Abstract>
    <DeclaredIn>MasterToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendAsync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>MasterToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_to_wall_channel.html</Path>
    <Anchor>a14f4b381b5a30ceb29d5bc24a977878f</Anchor>
    <Abstract>Send the given Markers to the wall processes. </Abstract>
    <DeclaredIn>MasterToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>MasterToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_to_wall_channel.html</Path>
    <Anchor>a4fa8da622c912ec631e64df914ec5842</Anchor>
    <Abstract>Send pixel stream frame to the wall processes. </Abstract>
    <DeclaredIn>MasterToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>MasterToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_to_wall_channel.html</Path>
    <Anchor>a0c568a19289def984f52c2f5956ecd1f</Anchor>
    <Abstract>Send the configuration to the wall processes. </Abstract>
    <DeclaredIn>MasterToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendRequestScreenshot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>MasterToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_to_wall_channel.html</Path>
    <Anchor>a942310b7cff493b7aecb2d9d25e5dc76</Anchor>
    <Abstract>Send a screenshot request to the wall processes. </Abstract>
    <DeclaredIn>MasterToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendQuit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>MasterToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_to_wall_channel.html</Path>
    <Anchor>ad0d468ff235b833e89f854b067e16117</Anchor>
    <Abstract>Send quit message to the wall processes, terminating the application. </Abstract>
    <DeclaredIn>MasterToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MasterToWallChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_master_to_wall_channel.html</Path>
    <Anchor>a8f671d612ef52095bf7290d791df4fc0</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>MasterToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MasterWindow</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MasterWindow</Scope>
    </TokenIdentifier>
    <Path>class_master_window.html</Path>
    <Abstract>The main UI window for Master applications. </Abstract>
    <DeclaredIn>MasterWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openWebBrowser</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MasterWindow</Scope>
    </TokenIdentifier>
    <Path>class_master_window.html</Path>
    <Anchor>a9607ceea62dcdd68727eed519c9860ae</Anchor>
    <Abstract>Emitted when users want to open a webbrowser. </Abstract>
    <DeclaredIn>MasterWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openWhiteboard</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MasterWindow</Scope>
    </TokenIdentifier>
    <Path>class_master_window.html</Path>
    <Anchor>ac0a920175719368d86fe0753b7a75e2f</Anchor>
    <Abstract>Emitted when users want to open a whiteboard. </Abstract>
    <DeclaredIn>MasterWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sessionLoaded</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MasterWindow</Scope>
    </TokenIdentifier>
    <Path>class_master_window.html</Path>
    <Anchor>a791ba8b8261b79ff04be3e6f17719c64</Anchor>
    <Abstract>Emitted when a session has been successfully loaded. </Abstract>
    <DeclaredIn>MasterWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MasterWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterWindow</Scope>
    </TokenIdentifier>
    <Path>class_master_window.html</Path>
    <Anchor>a5ffa0bb48f93db6cf40e3a99058567cb</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>MasterWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getQuickViews</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MasterWindow</Scope>
    </TokenIdentifier>
    <Path>class_master_window.html</Path>
    <Anchor>a421a5a7b5ebdb5447e09d42e3701a5e1</Anchor>
    <DeclaredIn>MasterWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MovieContent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MovieContent</Scope>
    </TokenIdentifier>
    <Path>class_movie_content.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a44c022cb6fed6fb1b0dff45e39ececb9</Anchor>
    <Abstract>Emitted by any Content subclass when its state has been modified. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MovieContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieContent</Scope>
    </TokenIdentifier>
    <Path>class_movie_content.html</Path>
    <Anchor>a156808cda9a564dd70229ad2fe203e9c</Anchor>
    <Abstract>Create a MovieContent from the given uri. </Abstract>
    <DeclaredIn>MovieContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieContent</Scope>
    </TokenIdentifier>
    <Path>class_movie_content.html</Path>
    <Anchor>a679f4771c41df4c317aaa7493dff0ecd</Anchor>
    <Abstract>Get the content type. </Abstract>
    <DeclaredIn>MovieContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMetadata</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieContent</Scope>
    </TokenIdentifier>
    <Path>class_movie_content.html</Path>
    <Anchor>a0e86020c0ed68ed8bb8e46c8c5997131</Anchor>
    <Abstract>Read movie informations from the source URI. </Abstract>
    <DeclaredIn>MovieContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_getInteractionPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieContent</Scope>
    </TokenIdentifier>
    <Path>class_movie_content.html</Path>
    <Anchor>a10211f89d6d29201a4c7ec139ea1e452</Anchor>
    <DeclaredIn>MovieContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Content</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ae491288d2efce7fa63d3e777580630b4</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a31ac405053a2cb5e157e5054b1012350</Anchor>
    <Abstract>Make a clone of this Content using binary serialization. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUri</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0ca4482bc84b9be50eb4bbc4a2c4ecac</Anchor>
    <Abstract>Get the content URI. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFilePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a234f77ec77f331f409d65e348a86fb73</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTitle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a57345c59f1ca4a395cfa230bafdc7812</Anchor>
    <Abstract>Get the title of the content. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>aa4681ca97acea99fbe88e20f0e664bc0</Anchor>
    <Abstract>Get the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>add67cf2f0ec836aabd24a088473f9e9d</Anchor>
    <Abstract>Get the width. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>height</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0ac15e1ba630bc6c6f98d47529f4c48c</Anchor>
    <Abstract>Get the height. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a8cf06fbd623453fd2aa349d91ebbca3b</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPreferredDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a508b7f5c09ffa4f5a1a7f3e89cbec489</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a70fbc6b9c9dfd95c426819a1c14464f9</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a1b7a6f49f447c124b497b0a844fd6ea6</Anchor>
    <Abstract>Set the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a113bd8ba35685e77bcf8a8650fab636a</Anchor>
    <Abstract>Get the aspect ratio. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFixedAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>adceac372a702843a1e0bd207f670680a</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKeyboardState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a41cdb80d25bbb1f3f9e1b36bfb6b2515</Anchor>
    <Abstract>Get the keyboard state from QML. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canBeZoomed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af666fa7482f5c6a12c1e5b18f7076f4e</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a461bb62d3989d0eb5b4d1f824e7a66c0</Anchor>
    <Abstract>Get the zoom rectangle in normalized coordinates, [0,0,1,1] default. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0f3e5f9203b97450e3856d39a12807e3</Anchor>
    <Abstract>Set the zoom rectangle in normalized coordinates. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isZoomed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af9177091ab70e17f93b736d77e07bbee</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ad7e55aa12c354279dbe776de66a5635f</Anchor>
    <Abstract>Resets the zoom to [0,0,1,1]. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSizeHints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a70292d652fb37ee21640801fce53c186</Anchor>
    <Abstract>Set optional size hints to constrain resize/scale and 1:1 size. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCaptureInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a7e7c36edf987322675eea81f27e8017d</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCaptureInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a18477814caa57d8f9aa0330fd19487ab</Anchor>
    <Abstract>Tell the content to capture interaction (only for Policy::AUTO). </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSupportedExtensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>MovieContent</Scope>
    </TokenIdentifier>
    <Path>class_movie_content.html</Path>
    <Anchor>a9768394f8669c363672ded77a93b19d9</Anchor>
    <DeclaredIn>MovieContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a87465efbfaf4e2e5b0a5e7e8af0985f2</Anchor>
    <Abstract>Set the maximum factor for zoom and resize; value times content size. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a04642ff3171681aa5fd2c8c8291a7949</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MovieController</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MovieController</Scope>
    </TokenIdentifier>
    <Path>class_movie_controller.html</Path>
    <Abstract>Handle user interaction with a movie. </Abstract>
    <DeclaredIn>MovieController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MovieController</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieController</Scope>
    </TokenIdentifier>
    <Path>class_movie_controller.html</Path>
    <Anchor>a7f4d47ac11ccdfec22939f597194f6d6</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>MovieController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentController</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentController</Scope>
    </TokenIdentifier>
    <Path>class_content_controller.html</Path>
    <Anchor>ad47bedf89f88c7fc2d9b732732943901</Anchor>
    <Abstract>Construct a default content controller that does nothing. </Abstract>
    <DeclaredIn>ContentController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ContentController</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentController</Scope>
    </TokenIdentifier>
    <Path>class_content_controller.html</Path>
    <Anchor>ae4414680c4cb122ddebf84df4bed777c</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>ContentController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentController</Scope>
    </TokenIdentifier>
    <Path>class_content_controller.html</Path>
    <Anchor>a8955b4735b19c373bdbaf77ca09dccae</Anchor>
    <Abstract>Construct a content controller for the given window. </Abstract>
    <DeclaredIn>ContentController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MovieSynchronizer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MovieSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_movie_synchronizer.html</Path>
    <Abstract>Synchronizes a Movie between different QML windows. </Abstract>
    <DeclaredIn>MovieSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tilesAreaChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aac807a9cb073a52d88a80ceca93b34a3</Anchor>
    <Abstract>Notifier for the tiles area property. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>statisticsChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a8b2131d6b3874d8d932a101ec3dcde05</Anchor>
    <Abstract>Notifier for the statistics property. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zoomContextVisibleChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a7223c8186607dd080abc644b359167a0</Anchor>
    <Abstract>Notifier for the zoomContextVisible property. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a07a22964fedee87ec47fddc4b02a40f0</Anchor>
    <Abstract>Notify the window to add a tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a755db8af943fc6bd0aab4220320d3a89</Anchor>
    <Abstract>Notify the window to remove a tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aba03b3c5af16950946e91c893d20eeaf</Anchor>
    <Abstract>Notify to update a tile&amp;#39;s coordinates. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestTileUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>ada17c27d8584a4909d023802ded6b6fa</Anchor>
    <Abstract>Request an update of a specific tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zoomContextTileChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>addacc933144498d3686f4f2fc54d828a</Anchor>
    <Abstract>Notify that the zoom context tile has changed and must be recreated. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MovieSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_movie_synchronizer.html</Path>
    <Anchor>a916cbc692ebe85fc5e917596ad11d0ee</Anchor>
    <Abstract>Construct a synchronizer for a movie, referencing it in the updater. </Abstract>
    <DeclaredIn>MovieSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_movie_synchronizer.html</Path>
    <Anchor>a607c2911b21f3f5aa3dcecfb7eab750b</Anchor>
    <Abstract>Update the Content. </Abstract>
    <DeclaredIn>MovieSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_movie_synchronizer.html</Path>
    <Anchor>ab94a196387bd25b0b157b969b71e5849</Anchor>
    <Abstract>Update the tiles. </Abstract>
    <DeclaredIn>MovieSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_movie_synchronizer.html</Path>
    <Anchor>ae3234c1d2ea0e660e57cc019559b63ba</Anchor>
    <Abstract>Swap the image before rendering (useful only for synchronized contents). </Abstract>
    <DeclaredIn>MovieSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTilesArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_movie_synchronizer.html</Path>
    <Anchor>a228b8a12cba78d7a77e3af79192a5c27</Anchor>
    <DeclaredIn>MovieSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_movie_synchronizer.html</Path>
    <Anchor>af222db1adfcfce06fc81ea433b85ebaa</Anchor>
    <Abstract>Get statistics about this Content. </Abstract>
    <DeclaredIn>MovieSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_movie_synchronizer.html</Path>
    <Anchor>a6d10e765a71f67c962837263d985b41b</Anchor>
    <Abstract>Get the view for this synchronizer. </Abstract>
    <DeclaredIn>MovieSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasVisibleTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_movie_synchronizer.html</Path>
    <Anchor>acb015c4c36cbdc0823ef4d48314d55d5</Anchor>
    <DeclaredIn>MovieSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSliderPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_movie_synchronizer.html</Path>
    <Anchor>a572cd81a07a0a8c3ee946f0eed766b2a</Anchor>
    <DeclaredIn>MovieSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TiledSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a70ae3f4171110fc5308407e870044fcd</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a87ca86829ead6c83dbaba10fb67a2940</Anchor>
    <Abstract>Update the tiles. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onSwapReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a8ae5165f31bd9575d16a2849c46eb256</Anchor>
    <Abstract>Called when a tile is ready to swap. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canSwapTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a25d7a4e588651907f5de2a7d843590d9</Anchor>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a66b1596107ae5c900f74142247f830ea</Anchor>
    <Abstract>Call to swap tiles when TileSwapPolicy is SwapTilesSynchronously. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aa9b57c8a735fbfb9b35e3e79d9ac9682</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ContentSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aac4d27f2dcb82846eb5e94a8f281aa5f</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoomContextVisible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a8abee6251a6c2f9a3640bf3a23d4332a</Anchor>
    <Abstract>Check if the zoom context tile is visible in Qml. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createZoomContextTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a41e88f5e830d43f281b3a938ee664f39</Anchor>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onRequestNextFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a134db7d6cbe00b6886e5d8c30c7ceac6</Anchor>
    <Abstract>Called when a tile has to be updated, re-emits requestTileUpdate. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZoomContextVisible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a38b82b0163d7871040fa78bf8145a7b7</Anchor>
    <Abstract>Set by the Qml ZoomContext element. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_lod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a6fbe44ca96d25a41cd1db23e6437c696</Anchor>
    <Abstract>LOD used to obtain the list of visible tiles from the data source. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_channel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a397b544b5f7a00e38512b1042719c663</Anchor>
    <Abstract>Channel used to obtain the list of visible tiles. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_visibleTilesArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a30b3e4b8fffc7a05ad02567caac47c0d</Anchor>
    <Abstract>Area used to obtain the list of visible tiles from the data source. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_ignoreSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a661e203de9c571ab12a1fb0a2bda0c69</Anchor>
    <Abstract>Tiles to be ignored; must be managed manually. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateExistingTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a6562348f5dfdb774990e49e1e817cc29</Anchor>
    <Abstract>Update texture and coordinates of tiles which are already visible. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MovieThumbnailGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MovieThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_movie_thumbnail_generator.html</Path>
    <Abstract>Generate thumbnails for movies. </Abstract>
    <DeclaredIn>MovieThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MovieThumbnailGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_movie_thumbnail_generator.html</Path>
    <Anchor>a600c5485ccb796ef25b8d8a160e2904f</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>MovieThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_movie_thumbnail_generator.html</Path>
    <Anchor>a579080b285782a5b9805eec65dc96cb0</Anchor>
    <Abstract>Generate a thumbnail of a movie. </Abstract>
    <DeclaredIn>MovieThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThumbnailGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>a8e1445189917a48c75ddaf992d4e166f</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ThumbnailGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>aa726f0f40d9c5d1e43026260f89d923a</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>ThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createErrorImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>a9fba0be45fafb6dca5ceba86725ae398</Anchor>
    <Abstract>Create a generic placeholder image indicating that an error occured. </Abstract>
    <DeclaredIn>ThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createGradientImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>af950dcda932b1ddc5dc0f6cff98da787</Anchor>
    <Abstract>Create a gradient image, can be used as background for a placeholder. </Abstract>
    <DeclaredIn>ThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>paintText</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>a830215bb774dfa30b8b2d6e812465bd4</Anchor>
    <Abstract>Paint text over an image, for example on top of a placeholder image. </Abstract>
    <DeclaredIn>ThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>a5efbb9ef797b1597b012c0f8f8ebdb31</Anchor>
    <Abstract>Target size for the thumbnails. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_aspectRatioMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>aa5d65a800fb8ae29b3c00ffdb4156786</Anchor>
    <Abstract>Aspect ratio policy for the thumbnails. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MovieUpdater</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MovieUpdater</Scope>
    </TokenIdentifier>
    <Path>class_movie_updater.html</Path>
    <Abstract>Updates Movies synchronously across different processes. </Abstract>
    <DeclaredIn>MovieUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pictureUpdated</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MovieUpdater</Scope>
    </TokenIdentifier>
    <Path>class_movie_updater.html</Path>
    <Anchor>a2090ed004956cee2d13de61d294802b2</Anchor>
    <Abstract>Emitted when a new picture has become available. </Abstract>
    <DeclaredIn>MovieUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDynamic</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieUpdater</Scope>
    </TokenIdentifier>
    <Path>class_movie_updater.html</Path>
    <Anchor>acb9214e61207fb88a7b02f2a3e6f0c4e</Anchor>
    <DeclaredIn>MovieUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieUpdater</Scope>
    </TokenIdentifier>
    <Path>class_movie_updater.html</Path>
    <Anchor>a0aa9322f1546c8f17434fa001c954beb</Anchor>
    <Abstract>Get a tile image by its id for a given view. </Abstract>
    <DeclaredIn>MovieUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieUpdater</Scope>
    </TokenIdentifier>
    <Path>class_movie_updater.html</Path>
    <Anchor>a2c2b493c9444d43315476f966a270d5e</Anchor>
    <Abstract>Get the coordinates of a tile. </Abstract>
    <DeclaredIn>MovieUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTilesArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieUpdater</Scope>
    </TokenIdentifier>
    <Path>class_movie_updater.html</Path>
    <Anchor>a74dafe530a139c21eb772a4e1ea24a61</Anchor>
    <DeclaredIn>MovieUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeVisibleSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieUpdater</Scope>
    </TokenIdentifier>
    <Path>class_movie_updater.html</Path>
    <Anchor>ad6a783445b7c2a70751dcf0f66e87bb5</Anchor>
    <Abstract>Compute the indices of the tiles which are visible in the given area. </Abstract>
    <DeclaredIn>MovieUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxLod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieUpdater</Scope>
    </TokenIdentifier>
    <Path>class_movie_updater.html</Path>
    <Anchor>ad0d0db9d5a58c91530f904feb395aeb2</Anchor>
    <DeclaredIn>MovieUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieUpdater</Scope>
    </TokenIdentifier>
    <Path>class_movie_updater.html</Path>
    <Anchor>a5768ca6597c4875dd3c622e0d0728738</Anchor>
    <Abstract>Update this datasource according to visibility and movie content. </Abstract>
    <DeclaredIn>MovieUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synchronizeFrameAdvance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieUpdater</Scope>
    </TokenIdentifier>
    <Path>class_movie_updater.html</Path>
    <Anchor>adf47c4225a2ffedb118d7ff72e8f1535</Anchor>
    <Abstract>Synchronize frame advance accross all processes. </Abstract>
    <DeclaredIn>MovieUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNextFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieUpdater</Scope>
    </TokenIdentifier>
    <Path>class_movie_updater.html</Path>
    <Anchor>a377ec03d92e080c04ad3126627d6da78</Anchor>
    <Abstract>Indicates that the last requested frame was consumed and we can advance to the next frame...</Abstract>
    <DeclaredIn>MovieUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieUpdater</Scope>
    </TokenIdentifier>
    <Path>class_movie_updater.html</Path>
    <Anchor>a673c2b8f1a1ad2b3fd707e7e8765bf74</Anchor>
    <DeclaredIn>MovieUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieUpdater</Scope>
    </TokenIdentifier>
    <Path>class_movie_updater.html</Path>
    <Anchor>a5c4bd1ea41b30f51960ce2e765f9e077</Anchor>
    <DeclaredIn>MovieUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSkipping</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieUpdater</Scope>
    </TokenIdentifier>
    <Path>class_movie_updater.html</Path>
    <Anchor>ae809aa76a298144ba0cf50e6de7ed566</Anchor>
    <DeclaredIn>MovieUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPaused</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieUpdater</Scope>
    </TokenIdentifier>
    <Path>class_movie_updater.html</Path>
    <Anchor>a74c9e0d5a4e306db1b8e66c811e5ed03</Anchor>
    <DeclaredIn>MovieUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSkipPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MovieUpdater</Scope>
    </TokenIdentifier>
    <Path>class_movie_updater.html</Path>
    <Anchor>a6d839c68bbe698546222d0bb27b02255</Anchor>
    <DeclaredIn>MovieUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synchronizers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>DataSource</Scope>
    </TokenIdentifier>
    <Path>class_data_source.html</Path>
    <Anchor>a43d2d50fc4971aa75f19e8c0130bc721</Anchor>
    <Abstract>The synchronizers linked to this shared data source. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MPIChannel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Abstract>Handle MPI communications between all Tide instances. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MPIChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>a3d6135b9ea469f6242b8396699ee74fd</Anchor>
    <Abstract>Create a new channel, initializing the MPI context. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MPIChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>a466aa85d1bc711eca37eb73eb0101126</Anchor>
    <Abstract>Create a new channel from splitting its parent channel. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MPIChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>a58250252d6b686e1d11d4144b40ca951</Anchor>
    <Abstract>Destructor, closes the MPI channel. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRank</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>ad9e9ffb350e0035706cb1e669ed6535d</Anchor>
    <Abstract>Get the rank of this process. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>a64a7a3cecb2a92ec2e24a0497ca4fa5a</Anchor>
    <Abstract>Get the number of processes in this channel. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>globalBarrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>a4bfe098a8a43b145ade329569ea9ecb9</Anchor>
    <Abstract>Block execution until all participants have reached the barrier. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>globalSum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>aba8510355b05801c5072c58d1b6644b0</Anchor>
    <Abstract>Get the sum of the given local values across all processes. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>ab33fc524ffb3ad2f205fd588df94ddad</Anchor>
    <Abstract>Send data to a single process. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendAll</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>a60416940b9302d92c904fabe6e03d9fc</Anchor>
    <Abstract>Send a signal to all processes. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>broadcast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>aedd7a83aa3c29703ec5c2fa878c277e9</Anchor>
    <Abstract>Send a brodcast message to all other processes. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMessageAvailable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>aa1e0f4381789f23123aff7c8b5fb1b0d</Anchor>
    <Abstract>Nonblocking probe for messages from a given source. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>probe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>ad3f062bbe7fc21c7bae3b5d668a2d125</Anchor>
    <Abstract>Perform a blocking probe operation that returns if a message is pending. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receiveHeader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>a9c2fa2fd32d788ddc632396580afd38f</Anchor>
    <Abstract>Receive a header from a specific process. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>acf6c03c4fb40017c5a6c5a7b84967116</Anchor>
    <Abstract>Receive a message from a specific process. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receiveBroadcast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>acfbacf7a49cc1ce09bac7d17f9de5bd7</Anchor>
    <Abstract>Recieve a broadcast. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gatherAll</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIChannel</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_channel.html</Path>
    <Anchor>a76a7f0709dcb3fc71dda271ca6a7df4a</Anchor>
    <Abstract>Gather the values accross all the processes. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MPIContext</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MPIContext</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_context.html</Path>
    <Abstract>A global MPI context. </Abstract>
    <DeclaredIn>MPIContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MPIContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIContext</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_context.html</Path>
    <Anchor>a1fc58d205deca92b9a9a307d49a124cb</Anchor>
    <Abstract>Constructor, initialize the MPI context. </Abstract>
    <DeclaredIn>MPIContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MPIContext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MPIContext</Scope>
    </TokenIdentifier>
    <Path>class_m_p_i_context.html</Path>
    <Anchor>a3399b4521ba34fbe6977cc8c5358046b</Anchor>
    <Abstract>Destructor, finalize the MPI context. </Abstract>
    <DeclaredIn>MPIContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MPIHeader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MPIHeader</Scope>
    </TokenIdentifier>
    <Path>struct_m_p_i_header.html</Path>
    <Abstract>Fixed-size message header. </Abstract>
    <DeclaredIn>MPIHeader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MPIHeader</Scope>
    </TokenIdentifier>
    <Path>struct_m_p_i_header.html</Path>
    <Anchor>a7ca055c78e7b26845b67f030e030136e</Anchor>
    <Abstract>Message type. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MPIHeader</Scope>
    </TokenIdentifier>
    <Path>struct_m_p_i_header.html</Path>
    <Anchor>a162b91515a21226e53d87fbcc73d1643</Anchor>
    <Abstract>Size of the message payload. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MultiChannelContent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MultiChannelContent</Scope>
    </TokenIdentifier>
    <Path>class_multi_channel_content.html</Path>
    <Abstract>Abstract class for multi-channel contents. </Abstract>
    <DeclaredIn>MultiChannelContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MultiChannelContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MultiChannelContent</Scope>
    </TokenIdentifier>
    <Path>class_multi_channel_content.html</Path>
    <Anchor>a324183e85e7cf08e6a021c034b4003a1</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>MultiChannelContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MultiChannelContent</Scope>
    </TokenIdentifier>
    <Path>class_multi_channel_content.html</Path>
    <Anchor>acd85db877918ca0ab0459e4846634659</Anchor>
    <DeclaredIn>MultiChannelContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MultiChannelContent</Scope>
    </TokenIdentifier>
    <Path>class_multi_channel_content.html</Path>
    <Anchor>a752ef7f2ed626d48783200167dac318d</Anchor>
    <Abstract>Select which channel of the derived content to render. </Abstract>
    <DeclaredIn>MultiChannelContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Content</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ae491288d2efce7fa63d3e777580630b4</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a31ac405053a2cb5e157e5054b1012350</Anchor>
    <Abstract>Make a clone of this Content using binary serialization. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUri</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0ca4482bc84b9be50eb4bbc4a2c4ecac</Anchor>
    <Abstract>Get the content URI. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a919b1b95df11fd1ad0cf01d065de577d</Anchor>
    <Abstract>Get the content type. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFilePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a234f77ec77f331f409d65e348a86fb73</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTitle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a57345c59f1ca4a395cfa230bafdc7812</Anchor>
    <Abstract>Get the title of the content. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMetadata</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a6822bf4cf94ae866c561b23e62506303</Anchor>
    <Abstract>Read content metadata from the data source. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>aa4681ca97acea99fbe88e20f0e664bc0</Anchor>
    <Abstract>Get the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>add67cf2f0ec836aabd24a088473f9e9d</Anchor>
    <Abstract>Get the width. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>height</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0ac15e1ba630bc6c6f98d47529f4c48c</Anchor>
    <Abstract>Get the height. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a8cf06fbd623453fd2aa349d91ebbca3b</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPreferredDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a508b7f5c09ffa4f5a1a7f3e89cbec489</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a70fbc6b9c9dfd95c426819a1c14464f9</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a1b7a6f49f447c124b497b0a844fd6ea6</Anchor>
    <Abstract>Set the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a113bd8ba35685e77bcf8a8650fab636a</Anchor>
    <Abstract>Get the aspect ratio. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFixedAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>adceac372a702843a1e0bd207f670680a</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKeyboardState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a41cdb80d25bbb1f3f9e1b36bfb6b2515</Anchor>
    <Abstract>Get the keyboard state from QML. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canBeZoomed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af666fa7482f5c6a12c1e5b18f7076f4e</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a461bb62d3989d0eb5b4d1f824e7a66c0</Anchor>
    <Abstract>Get the zoom rectangle in normalized coordinates, [0,0,1,1] default. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0f3e5f9203b97450e3856d39a12807e3</Anchor>
    <Abstract>Set the zoom rectangle in normalized coordinates. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isZoomed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af9177091ab70e17f93b736d77e07bbee</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ad7e55aa12c354279dbe776de66a5635f</Anchor>
    <Abstract>Resets the zoom to [0,0,1,1]. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSizeHints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a70292d652fb37ee21640801fce53c186</Anchor>
    <Abstract>Set optional size hints to constrain resize/scale and 1:1 size. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCaptureInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a7e7c36edf987322675eea81f27e8017d</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCaptureInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a18477814caa57d8f9aa0330fd19487ab</Anchor>
    <Abstract>Tell the content to capture interaction (only for Policy::AUTO). </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a44c022cb6fed6fb1b0dff45e39ececb9</Anchor>
    <Abstract>Emitted by any Content subclass when its state has been modified. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a87465efbfaf4e2e5b0a5e7e8af0985f2</Anchor>
    <Abstract>Set the maximum factor for zoom and resize; value times content size. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a04642ff3171681aa5fd2c8c8291a7949</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MultiChannelWindowController</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MultiChannelWindowController</Scope>
    </TokenIdentifier>
    <Path>class_multi_channel_window_controller.html</Path>
    <Abstract>Monitor the Scene to apply window operations such as fullscreen / exit fullscreen / close to windows ...</Abstract>
    <DeclaredIn>MultiChannelWindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MultiChannelWindowController</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MultiChannelWindowController</Scope>
    </TokenIdentifier>
    <Path>class_multi_channel_window_controller.html</Path>
    <Anchor>abb1766b901c6aa93d6bdb41545ae29fa</Anchor>
    <Abstract>Handle multi-channel content window operations on all surfaces. </Abstract>
    <DeclaredIn>MultiChannelWindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MultitouchArea</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MultitouchArea</Scope>
    </TokenIdentifier>
    <Path>class_multitouch_area.html</Path>
    <Abstract>A multipoint touch area to detect touch gestures on Qml objects. </Abstract>
    <DeclaredIn>MultitouchArea.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>touchStarted</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MultitouchArea</Scope>
    </TokenIdentifier>
    <Path>class_multitouch_area.html</Path>
    <Anchor>a9930406bdbbcb1a9ad99f10d691e2313</Anchor>
    <Abstract>Always emitted for the first finger that touches the area. </Abstract>
    <DeclaredIn>MultitouchArea.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>touchEnded</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MultitouchArea</Scope>
    </TokenIdentifier>
    <Path>class_multitouch_area.html</Path>
    <Anchor>a6e02038540cd46754d22afa699377624</Anchor>
    <Abstract>Always emitted for the last finger that is removed from the area. </Abstract>
    <DeclaredIn>MultitouchArea.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>touchPointAdded</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MultitouchArea</Scope>
    </TokenIdentifier>
    <Path>class_multitouch_area.html</Path>
    <Anchor>aa08e85999206eec2072eedaaba87d25e</Anchor>
    <Abstract>Emitted when a new touch point is added. </Abstract>
    <DeclaredIn>MultitouchArea.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>touchPointUpdated</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MultitouchArea</Scope>
    </TokenIdentifier>
    <Path>class_multitouch_area.html</Path>
    <Anchor>a59d40a182cea4744da1ce4be5ec75c31</Anchor>
    <Abstract>Emitted when an existing touch point is updated. </Abstract>
    <DeclaredIn>MultitouchArea.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>touchPointRemoved</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MultitouchArea</Scope>
    </TokenIdentifier>
    <Path>class_multitouch_area.html</Path>
    <Anchor>a67c43e38ec50bc56871ad09e3ce97d96</Anchor>
    <Abstract>Emitted when an existing touch point is removed. </Abstract>
    <DeclaredIn>MultitouchArea.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pinchStarted</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MultitouchArea</Scope>
    </TokenIdentifier>
    <Path>class_multitouch_area.html</Path>
    <Anchor>a9c989dba8fdecc040c302dcc76e53972</Anchor>
    <Abstract>Emitted when a pinch starts (i.e. </Abstract>
    <DeclaredIn>MultitouchArea.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pinch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MultitouchArea</Scope>
    </TokenIdentifier>
    <Path>class_multitouch_area.html</Path>
    <Anchor>aebe0754fc96dc5e04b66a398234ac497</Anchor>
    <Abstract>Emitted for each step of a two-fingers pinch gesture. </Abstract>
    <DeclaredIn>MultitouchArea.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pinchEnded</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MultitouchArea</Scope>
    </TokenIdentifier>
    <Path>class_multitouch_area.html</Path>
    <Anchor>abba7bbdd185bc021830935a4874b4bcc</Anchor>
    <Abstract>Emitted when a pinch ends (i.e. </Abstract>
    <DeclaredIn>MultitouchArea.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swipeLeft</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MultitouchArea</Scope>
    </TokenIdentifier>
    <Path>class_multitouch_area.html</Path>
    <Anchor>a9b6c5bb959a9635e601caa42f8cbeeab</Anchor>
    <Abstract>Two-fingers swipe to the left. </Abstract>
    <DeclaredIn>MultitouchArea.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swipeRight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MultitouchArea</Scope>
    </TokenIdentifier>
    <Path>class_multitouch_area.html</Path>
    <Anchor>ab7a38b99b679b3c669908dd75dea0b20</Anchor>
    <Abstract>Two-fingers swipe to the right. </Abstract>
    <DeclaredIn>MultitouchArea.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swipeUp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MultitouchArea</Scope>
    </TokenIdentifier>
    <Path>class_multitouch_area.html</Path>
    <Anchor>aca86b7d783c0f2db38665328608fada8</Anchor>
    <Abstract>Two-fingers swipe up. </Abstract>
    <DeclaredIn>MultitouchArea.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swipeDown</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MultitouchArea</Scope>
    </TokenIdentifier>
    <Path>class_multitouch_area.html</Path>
    <Anchor>a4e496a1d465f0dc8095266c8730196b9</Anchor>
    <Abstract>Two-fingers swipe down. </Abstract>
    <DeclaredIn>MultitouchArea.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MultitouchArea</Scope>
    </TokenIdentifier>
    <Path>class_multitouch_area.html</Path>
    <Anchor>ad10f067038cca27820ec0da46630b7ec</Anchor>
    <Abstract>Emitted for an n-finger touch and release in-place (i.e. </Abstract>
    <DeclaredIn>MultitouchArea.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doubleTap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MultitouchArea</Scope>
    </TokenIdentifier>
    <Path>class_multitouch_area.html</Path>
    <Anchor>ad5ec58d1a203366694155eb3066a5e04</Anchor>
    <Abstract>Emitted when two taps occur in a fast sequence. </Abstract>
    <DeclaredIn>MultitouchArea.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tapAndHold</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MultitouchArea</Scope>
    </TokenIdentifier>
    <Path>class_multitouch_area.html</Path>
    <Anchor>a968c008c352f09cb24486ed8257b0968</Anchor>
    <Abstract>Emitted after a prolonged non-moving touch with one or more fingers. </Abstract>
    <DeclaredIn>MultitouchArea.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>panStarted</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MultitouchArea</Scope>
    </TokenIdentifier>
    <Path>class_multitouch_area.html</Path>
    <Anchor>aa293ed637d9f6be952d767de2f24e6ca</Anchor>
    <Abstract>Emitted when a pan starts (i.e. </Abstract>
    <DeclaredIn>MultitouchArea.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MultitouchArea</Scope>
    </TokenIdentifier>
    <Path>class_multitouch_area.html</Path>
    <Anchor>aa8c67585684186f2c15c531699b80e3f</Anchor>
    <Abstract>Emitted for each finger movement between panStarted-panEnded. </Abstract>
    <DeclaredIn>MultitouchArea.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>panEnded</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>MultitouchArea</Scope>
    </TokenIdentifier>
    <Path>class_multitouch_area.html</Path>
    <Anchor>a84b90afb21f9a1a305db11bf5655df09</Anchor>
    <Abstract>Emitted when a pan ends (finger released or new finger detected). </Abstract>
    <DeclaredIn>MultitouchArea.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MultitouchArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MultitouchArea</Scope>
    </TokenIdentifier>
    <Path>class_multitouch_area.html</Path>
    <Anchor>a9dc4b134e58f75bcb697f0d3452f98de</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>MultitouchArea.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>referenceItem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>MultitouchArea</Scope>
    </TokenIdentifier>
    <Path>class_multitouch_area.html</Path>
    <Anchor>acf4c07d20413d2c86eb5bf08e0cc3e13</Anchor>
    <Abstract>Set a target item to enable the touch area to move it. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>panThreshold</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>MultitouchArea</Scope>
    </TokenIdentifier>
    <Path>class_multitouch_area.html</Path>
    <Anchor>a8c09c39e97a782bbedafd33d6563e8a5</Anchor>
    <Abstract>The minimum displacement until a gesture is considered as a pan. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NetworkBarrier</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>NetworkBarrier</Scope>
    </TokenIdentifier>
    <Path>class_network_barrier.html</Path>
    <Abstract>Network barrier to synchronize the execution of multiple processes. </Abstract>
    <DeclaredIn>NetworkBarrier.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>globalBarrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NetworkBarrier</Scope>
    </TokenIdentifier>
    <Path>class_network_barrier.html</Path>
    <Anchor>a2d843c03a751b678e2502ac053e0b6e6</Anchor>
    <Abstract>Block execution until all participants have reached the barrier. </Abstract>
    <DeclaredIn>NetworkBarrier.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Options</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Options</Scope>
    </TokenIdentifier>
    <Path>class_options.html</Path>
    <Abstract>Rendering options which can be changed during runtime. </Abstract>
    <DeclaredIn>Options.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updated</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Options</Scope>
    </TokenIdentifier>
    <Path>class_options.html</Path>
    <Anchor>a3fa6a7dee05582eb932f4fc068575216</Anchor>
    <Abstract>Emitted when any value is changed by one of the setters. </Abstract>
    <DeclaredIn>Options.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Options</Scope>
    </TokenIdentifier>
    <Path>class_options.html</Path>
    <Anchor>ad000511020c9ca0c35c00ef0be8920b8</Anchor>
    <Abstract>Create a shared Options object. </Abstract>
    <DeclaredIn>Options.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PanDetector</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PanDetector</Scope>
    </TokenIdentifier>
    <Path>class_pan_detector.html</Path>
    <Abstract>Detect multi-finger pan gestures. </Abstract>
    <DeclaredIn>PanDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>panStarted</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PanDetector</Scope>
    </TokenIdentifier>
    <Path>class_pan_detector.html</Path>
    <Anchor>a4da6121099455abfc6d57991fa082a5e</Anchor>
    <Abstract>Emitted when a pan starts (i.e. </Abstract>
    <DeclaredIn>PanDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PanDetector</Scope>
    </TokenIdentifier>
    <Path>class_pan_detector.html</Path>
    <Anchor>a459b1b402758a9fbf4ffa75a1a9d9787</Anchor>
    <Abstract>Emitted for each finger movement between panStarted-panEnded. </Abstract>
    <DeclaredIn>PanDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>panEnded</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PanDetector</Scope>
    </TokenIdentifier>
    <Path>class_pan_detector.html</Path>
    <Anchor>a3be4ed12df76f56d7f03016714d23e93</Anchor>
    <Abstract>Emitted when a pan ends (finger released or new finger detected). </Abstract>
    <DeclaredIn>PanDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PDFBackend</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PDFBackend</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_backend.html</Path>
    <Abstract>An abstract interface for PDF backends. </Abstract>
    <DeclaredIn>PDFBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PDFBackend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFBackend</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_backend.html</Path>
    <Anchor>ac7ea2ca132e1320bb58073f6ac8cfaf9</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>PDFBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFBackend</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_backend.html</Path>
    <Anchor>af2d99c99c0261d7057516e39f8ff4463</Anchor>
    <DeclaredIn>PDFBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPageCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFBackend</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_backend.html</Path>
    <Anchor>af4a14dab029a9f1e70f99e7852664965</Anchor>
    <DeclaredIn>PDFBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFBackend</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_backend.html</Path>
    <Anchor>a7b9125ff67c23db98c1c250ce332b252</Anchor>
    <Abstract>Go to a given page number. </Abstract>
    <DeclaredIn>PDFBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderToImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFBackend</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_backend.html</Path>
    <Anchor>aa7b2bdf170043124b8a61250878dd008</Anchor>
    <Abstract>Render the document to an image. </Abstract>
    <DeclaredIn>PDFBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PDFContent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PDFContent</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_content.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pageChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PDFContent</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_content.html</Path>
    <Anchor>a817129d408c9907e2081ab588659d8a4</Anchor>
    <Abstract>Emitted when the page number is changed. </Abstract>
    <DeclaredIn>PDFContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a44c022cb6fed6fb1b0dff45e39ececb9</Anchor>
    <Abstract>Emitted by any Content subclass when its state has been modified. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PDFContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFContent</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_content.html</Path>
    <Anchor>a4ae008684cb13c9a6bd52ed35f827781</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>PDFContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFContent</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_content.html</Path>
    <Anchor>ad97fc1187aa18d24678cb8e1d79ca031</Anchor>
    <Abstract>Get the content type. </Abstract>
    <DeclaredIn>PDFContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMetadata</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFContent</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_content.html</Path>
    <Anchor>af7cf516a0351264f60c076b11c33a45d</Anchor>
    <Abstract>Read PDF informations from the source URI. </Abstract>
    <DeclaredIn>PDFContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextPage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFContent</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_content.html</Path>
    <Anchor>a1e83cbc2b1b7845c39e42fb9076803f1</Anchor>
    <Abstract>Rank0 : go to next page. </Abstract>
    <DeclaredIn>PDFContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>previousPage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFContent</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_content.html</Path>
    <Anchor>a0d52e1a8ee7954872bcad5a9d74c342b</Anchor>
    <Abstract>Rank0 : go to previous page. </Abstract>
    <DeclaredIn>PDFContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFContent</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_content.html</Path>
    <Anchor>a7593da6369ce1925bcd1a98e96bf3f52</Anchor>
    <Abstract>Get the current page number. </Abstract>
    <DeclaredIn>PDFContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPageCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFContent</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_content.html</Path>
    <Anchor>ae10df3325d44dee3e4b0dfec6334bb09</Anchor>
    <Abstract>Get the total number of pages. </Abstract>
    <DeclaredIn>PDFContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VectorialContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>VectorialContent</Scope>
    </TokenIdentifier>
    <Path>class_vectorial_content.html</Path>
    <Anchor>aee9a53f4f5acc149fe99f83b3eb2766e</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>VectorialContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>VectorialContent</Scope>
    </TokenIdentifier>
    <Path>class_vectorial_content.html</Path>
    <Anchor>ab9b1688c1800e0b4e8ab0c12971fd459</Anchor>
    <DeclaredIn>VectorialContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canBeZoomed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>VectorialContent</Scope>
    </TokenIdentifier>
    <Path>class_vectorial_content.html</Path>
    <Anchor>ab37d163ac4b16051baeab22c5d47e2f1</Anchor>
    <DeclaredIn>VectorialContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Content</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ae491288d2efce7fa63d3e777580630b4</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a31ac405053a2cb5e157e5054b1012350</Anchor>
    <Abstract>Make a clone of this Content using binary serialization. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUri</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0ca4482bc84b9be50eb4bbc4a2c4ecac</Anchor>
    <Abstract>Get the content URI. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFilePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a234f77ec77f331f409d65e348a86fb73</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTitle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a57345c59f1ca4a395cfa230bafdc7812</Anchor>
    <Abstract>Get the title of the content. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>aa4681ca97acea99fbe88e20f0e664bc0</Anchor>
    <Abstract>Get the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>add67cf2f0ec836aabd24a088473f9e9d</Anchor>
    <Abstract>Get the width. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>height</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0ac15e1ba630bc6c6f98d47529f4c48c</Anchor>
    <Abstract>Get the height. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a8cf06fbd623453fd2aa349d91ebbca3b</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPreferredDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a508b7f5c09ffa4f5a1a7f3e89cbec489</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a1b7a6f49f447c124b497b0a844fd6ea6</Anchor>
    <Abstract>Set the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a113bd8ba35685e77bcf8a8650fab636a</Anchor>
    <Abstract>Get the aspect ratio. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFixedAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>adceac372a702843a1e0bd207f670680a</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKeyboardState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a41cdb80d25bbb1f3f9e1b36bfb6b2515</Anchor>
    <Abstract>Get the keyboard state from QML. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a461bb62d3989d0eb5b4d1f824e7a66c0</Anchor>
    <Abstract>Get the zoom rectangle in normalized coordinates, [0,0,1,1] default. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0f3e5f9203b97450e3856d39a12807e3</Anchor>
    <Abstract>Set the zoom rectangle in normalized coordinates. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isZoomed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af9177091ab70e17f93b736d77e07bbee</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ad7e55aa12c354279dbe776de66a5635f</Anchor>
    <Abstract>Resets the zoom to [0,0,1,1]. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSizeHints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a70292d652fb37ee21640801fce53c186</Anchor>
    <Abstract>Set optional size hints to constrain resize/scale and 1:1 size. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCaptureInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a7e7c36edf987322675eea81f27e8017d</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCaptureInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a18477814caa57d8f9aa0330fd19487ab</Anchor>
    <Abstract>Tell the content to capture interaction (only for Policy::AUTO). </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>VectorialContent</Scope>
    </TokenIdentifier>
    <Path>class_vectorial_content.html</Path>
    <Anchor>a02ed9ed4fd5cfea1f01912271d06ed95</Anchor>
    <Abstract>Set the maximum factor for zoom and resize; value times base size. </Abstract>
    <DeclaredIn>VectorialContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>VectorialContent</Scope>
    </TokenIdentifier>
    <Path>class_vectorial_content.html</Path>
    <Anchor>ac40105f009e9278f53d4843c75cee9a5</Anchor>
    <DeclaredIn>VectorialContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a87465efbfaf4e2e5b0a5e7e8af0985f2</Anchor>
    <Abstract>Set the maximum factor for zoom and resize; value times content size. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a04642ff3171681aa5fd2c8c8291a7949</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PDFController</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PDFController</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_controller.html</Path>
    <Abstract>Control user interaction with a PDF document. </Abstract>
    <DeclaredIn>PDFController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ZoomController</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ZoomController</Scope>
    </TokenIdentifier>
    <Path>class_zoom_controller.html</Path>
    <Anchor>a035c13220e40d213d5816f97f5ce0944</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ZoomController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>adjustZoomToContentAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ZoomController</Scope>
    </TokenIdentifier>
    <Path>class_zoom_controller.html</Path>
    <Anchor>a154a8cd5a99be532f438bcd864dd9a9b</Anchor>
    <Abstract>Adjust the zoom of the window to the aspect ratio of the content. </Abstract>
    <DeclaredIn>ZoomController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentController</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentController</Scope>
    </TokenIdentifier>
    <Path>class_content_controller.html</Path>
    <Anchor>ad47bedf89f88c7fc2d9b732732943901</Anchor>
    <Abstract>Construct a default content controller that does nothing. </Abstract>
    <DeclaredIn>ContentController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ContentController</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentController</Scope>
    </TokenIdentifier>
    <Path>class_content_controller.html</Path>
    <Anchor>ae4414680c4cb122ddebf84df4bed777c</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>ContentController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentController</Scope>
    </TokenIdentifier>
    <Path>class_content_controller.html</Path>
    <Anchor>a8955b4735b19c373bdbaf77ca09dccae</Anchor>
    <Abstract>Construct a content controller for the given window. </Abstract>
    <DeclaredIn>ContentController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PDFPopplerQtBackend</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PDFPopplerQtBackend</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_poppler_qt_backend.html</Path>
    <Abstract>A PDF backend based on the Poppler-Qt library. </Abstract>
    <DeclaredIn>PDFPopplerQtBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PDFPopplerQtBackend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFPopplerQtBackend</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_poppler_qt_backend.html</Path>
    <Anchor>af85d60a6df140b5852a319e591c07212</Anchor>
    <Abstract>Open a PDF document for rendering. </Abstract>
    <DeclaredIn>PDFPopplerQtBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PDFPopplerQtBackend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFPopplerQtBackend</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_poppler_qt_backend.html</Path>
    <Anchor>af21b0b8a9b2163bad7f9c68a2fca57eb</Anchor>
    <Abstract>Close the document. </Abstract>
    <DeclaredIn>PDFPopplerQtBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFPopplerQtBackend</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_poppler_qt_backend.html</Path>
    <Anchor>adc7db4c382606f57890fc7d50e6c9498</Anchor>
    <DeclaredIn>PDFPopplerQtBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPageCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFPopplerQtBackend</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_poppler_qt_backend.html</Path>
    <Anchor>a07edfc5c14f20bec17868e6b21f513b3</Anchor>
    <DeclaredIn>PDFPopplerQtBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFPopplerQtBackend</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_poppler_qt_backend.html</Path>
    <Anchor>ab31e13f95731115b36054c34dec64a05</Anchor>
    <Abstract>Go to a given page number. </Abstract>
    <DeclaredIn>PDFPopplerQtBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderToImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFPopplerQtBackend</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_poppler_qt_backend.html</Path>
    <Anchor>a11b9baeff08e897194215fdf3c6cacc3</Anchor>
    <Abstract>Render the document to an image. </Abstract>
    <DeclaredIn>PDFPopplerQtBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PDFBackend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFBackend</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_backend.html</Path>
    <Anchor>ac7ea2ca132e1320bb58073f6ac8cfaf9</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>PDFBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PDFSynchronizer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PDFSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_synchronizer.html</Path>
    <Abstract>Synchronize PDF content. </Abstract>
    <DeclaredIn>PDFSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PDFSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_synchronizer.html</Path>
    <Anchor>a753fe2891990baa14f6ec00765d5b642</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>PDFSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_synchronizer.html</Path>
    <Anchor>a9c60fd62872061b1513795cf25702fe2</Anchor>
    <Abstract>Update the Content. </Abstract>
    <DeclaredIn>PDFSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_synchronizer.html</Path>
    <Anchor>a50566fe7271dfe91dd6188f94509f0c6</Anchor>
    <Abstract>Get statistics about this Content. </Abstract>
    <DeclaredIn>PDFSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createZoomContextTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_synchronizer.html</Path>
    <Anchor>a841cecf334ef2673f768ab72e01275c3</Anchor>
    <DeclaredIn>PDFSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LodSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Anchor>ae056d0d5f9312d67b95f6fb0d39cc8f8</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Anchor>a292d58ed84e619f1c77705650f9f90cd</Anchor>
    <Abstract>Update the tiles. </Abstract>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTilesArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Anchor>a71b8164252aa4844d0f9d3b5241c1850</Anchor>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TiledSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a70ae3f4171110fc5308407e870044fcd</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a87ca86829ead6c83dbaba10fb67a2940</Anchor>
    <Abstract>Update the tiles. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onSwapReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a8ae5165f31bd9575d16a2849c46eb256</Anchor>
    <Abstract>Called when a tile is ready to swap. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canSwapTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a25d7a4e588651907f5de2a7d843590d9</Anchor>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a66b1596107ae5c900f74142247f830ea</Anchor>
    <Abstract>Call to swap tiles when TileSwapPolicy is SwapTilesSynchronously. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aa9b57c8a735fbfb9b35e3e79d9ac9682</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ContentSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aac4d27f2dcb82846eb5e94a8f281aa5f</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoomContextVisible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a8abee6251a6c2f9a3640bf3a23d4332a</Anchor>
    <Abstract>Check if the zoom context tile is visible in Qml. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a83072124703f035d6dfa466cc1cf73d5</Anchor>
    <Abstract>Get the view for this synchronizer. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onRequestNextFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a134db7d6cbe00b6886e5d8c30c7ceac6</Anchor>
    <Abstract>Called when a tile has to be updated, re-emits requestTileUpdate. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZoomContextVisible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a38b82b0163d7871040fa78bf8145a7b7</Anchor>
    <Abstract>Set by the Qml ZoomContext element. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tilesAreaChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aac807a9cb073a52d88a80ceca93b34a3</Anchor>
    <Abstract>Notifier for the tiles area property. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>statisticsChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a8b2131d6b3874d8d932a101ec3dcde05</Anchor>
    <Abstract>Notifier for the statistics property. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zoomContextVisibleChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a7223c8186607dd080abc644b359167a0</Anchor>
    <Abstract>Notifier for the zoomContextVisible property. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a07a22964fedee87ec47fddc4b02a40f0</Anchor>
    <Abstract>Notify the window to add a tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a755db8af943fc6bd0aab4220320d3a89</Anchor>
    <Abstract>Notify the window to remove a tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aba03b3c5af16950946e91c893d20eeaf</Anchor>
    <Abstract>Notify to update a tile&amp;#39;s coordinates. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestTileUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>ada17c27d8584a4909d023802ded6b6fa</Anchor>
    <Abstract>Request an update of a specific tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zoomContextTileChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>addacc933144498d3686f4f2fc54d828a</Anchor>
    <Abstract>Notify that the zoom context tile has changed and must be recreated. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Anchor>a8e99ccd066b855149d5a45b4fca70397</Anchor>
    <Abstract>Update the tiles. </Abstract>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDataSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_lod_synchronizer.html</Path>
    <Anchor>ade270bed0110dd8809be28c330ee5664</Anchor>
    <Abstract>Get the data source. </Abstract>
    <DeclaredIn>LodSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_lod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a6fbe44ca96d25a41cd1db23e6437c696</Anchor>
    <Abstract>LOD used to obtain the list of visible tiles from the data source. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_channel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a397b544b5f7a00e38512b1042719c663</Anchor>
    <Abstract>Channel used to obtain the list of visible tiles. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_visibleTilesArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a30b3e4b8fffc7a05ad02567caac47c0d</Anchor>
    <Abstract>Area used to obtain the list of visible tiles from the data source. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_ignoreSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a661e203de9c571ab12a1fb0a2bda0c69</Anchor>
    <Abstract>Tiles to be ignored; must be managed manually. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateExistingTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a6562348f5dfdb774990e49e1e817cc29</Anchor>
    <Abstract>Update texture and coordinates of tiles which are already visible. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PDFTiler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PDFTiler</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_tiler.html</Path>
    <Abstract>Represent a PDF document as a multi-LOD tiled data source. </Abstract>
    <DeclaredIn>PDFTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pageChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PDFTiler</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_tiler.html</Path>
    <Anchor>a190ee9c5278133140a9641a62c500d8f</Anchor>
    <Abstract>Emitted when the PDF page has changed. </Abstract>
    <DeclaredIn>PDFTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PDFTiler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFTiler</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_tiler.html</Path>
    <Anchor>abe57020edf9e07f8a8a190019a20cca7</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>PDFTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PDFTiler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFTiler</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_tiler.html</Path>
    <Anchor>a4678a34dae7108983a58264bd71bcb06</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>PDFTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFTiler</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_tiler.html</Path>
    <Anchor>a75eca81d26788876e0909a3409874ca4</Anchor>
    <Abstract>Get the coordinates of a tile. </Abstract>
    <DeclaredIn>PDFTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeVisibleSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFTiler</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_tiler.html</Path>
    <Anchor>aeb742dc11e39e4d8aa71112fd3dbf64d</Anchor>
    <Abstract>Compute the indices of the tiles which are visible in the given area. </Abstract>
    <DeclaredIn>PDFTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCachableTileImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFTiler</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_tiler.html</Path>
    <Anchor>a4a01450edbc7beb40e7f722d7a1f669d</Anchor>
    <Abstract>Get a tile image which will be cached. </Abstract>
    <DeclaredIn>PDFTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPreviewTileId</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFTiler</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_tiler.html</Path>
    <Anchor>a2c4a57d9ea33729ed2cdd16901d3480b</Anchor>
    <DeclaredIn>PDFTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFTiler</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_tiler.html</Path>
    <Anchor>ad8a953596eb620c70d0d14e761e3bba5</Anchor>
    <Abstract>Update this datasource according to pdf content (set page info). </Abstract>
    <DeclaredIn>PDFTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PDFTiler</Scope>
    </TokenIdentifier>
    <Path>class_p_d_f_tiler.html</Path>
    <Anchor>a851cf3c429be4d2ea81303deaade846d</Anchor>
    <DeclaredIn>PDFTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTilesArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>a0e4bab5a5f51e2a550282b7582a4def6</Anchor>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxLod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>a5e073ae83bc4589624bfdc0d12371609</Anchor>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNormalizedTileRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>a085c9b2df8260fb774572242b411fdd3</Anchor>
    <Abstract>Get the tile rectangle in normalized coordinates. </Abstract>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CachedDataSource</Scope>
    </TokenIdentifier>
    <Path>class_cached_data_source.html</Path>
    <Anchor>aa7cb65c68e8d39bb682947fe4672a29c</Anchor>
    <Abstract>Get a tile image by its id for a given view. threadsafe </Abstract>
    <DeclaredIn>CachedDataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CachedDataSource</Scope>
    </TokenIdentifier>
    <Path>class_cached_data_source.html</Path>
    <Anchor>a02e027db47c9407a6235d391a015704b</Anchor>
    <Abstract>Check if the cache contains an image for a tile. </Abstract>
    <DeclaredIn>CachedDataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDynamic</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DataSource</Scope>
    </TokenIdentifier>
    <Path>class_data_source.html</Path>
    <Anchor>a54629350c073612b09217a9084b27951</Anchor>
    <DeclaredIn>DataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synchronizers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>DataSource</Scope>
    </TokenIdentifier>
    <Path>class_data_source.html</Path>
    <Anchor>a43d2d50fc4971aa75f19e8c0130bc721</Anchor>
    <Abstract>The synchronizers linked to this shared data source. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LodTiler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>a6fb20a5bd71ee276d60d95f57a197517</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PinchDetector</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PinchDetector</Scope>
    </TokenIdentifier>
    <Path>class_pinch_detector.html</Path>
    <Abstract>Detect two-finger pinch gestures. </Abstract>
    <DeclaredIn>PinchDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pinchStarted</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PinchDetector</Scope>
    </TokenIdentifier>
    <Path>class_pinch_detector.html</Path>
    <Anchor>afc5779ca07f5afc4338625e1ac8b35d3</Anchor>
    <Abstract>Emitted when a pinch starts (i.e. </Abstract>
    <DeclaredIn>PinchDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pinch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PinchDetector</Scope>
    </TokenIdentifier>
    <Path>class_pinch_detector.html</Path>
    <Anchor>a766674038d1b18e44ee08cd9579fc27c</Anchor>
    <Abstract>Emitted for each step of a two-fingers pinch gesture. </Abstract>
    <DeclaredIn>PinchDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pinchEnded</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PinchDetector</Scope>
    </TokenIdentifier>
    <Path>class_pinch_detector.html</Path>
    <Anchor>abb6bb84b407c3531308968fd8bfab3f8</Anchor>
    <Abstract>Emitted when a pinch ends (i.e. </Abstract>
    <DeclaredIn>PinchDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamAssembler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PixelStreamAssembler</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_assembler.html</Path>
    <Abstract>Assemble small frame tiles (e.g. </Abstract>
    <DeclaredIn>PixelStreamAssembler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamAssembler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamAssembler</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_assembler.html</Path>
    <Anchor>aded3d7cff04926cffe5995914782f4ab</Anchor>
    <Abstract>Create an assembler for the frame. </Abstract>
    <DeclaredIn>PixelStreamAssembler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamAssembler</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_assembler.html</Path>
    <Anchor>af5708e2b1ca701f861313a18b3c2ef33</Anchor>
    <Abstract>Get the assembled image for a tile. </Abstract>
    <DeclaredIn>PixelStreamAssembler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamAssembler</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_assembler.html</Path>
    <Anchor>a92075e8507ea9437fffe03cd63d9be29</Anchor>
    <DeclaredIn>PixelStreamAssembler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeVisibleSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamAssembler</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_assembler.html</Path>
    <Anchor>a3ce68b09ca566931f6bfa47f4760325c</Anchor>
    <DeclaredIn>PixelStreamAssembler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PixelStreamProcessor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamProcessor</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_processor.html</Path>
    <Anchor>a5110a29743d25928aa6feb039cdb4072</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>PixelStreamProcessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamProcessor</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_processor.html</Path>
    <Anchor>ada6838869e35b3364858b2bf6440e76f</Anchor>
    <DeclaredIn>PixelStreamProcessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamChannelAssembler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PixelStreamChannelAssembler</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_channel_assembler.html</Path>
    <Abstract>Assemble small frame tiles (e.g. </Abstract>
    <DeclaredIn>PixelStreamChannelAssembler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamChannelAssembler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamChannelAssembler</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_channel_assembler.html</Path>
    <Anchor>a323d9bb77c4a73bc2032c31317c65ed1</Anchor>
    <Abstract>Create an assembler for one channel of the frame. </Abstract>
    <DeclaredIn>PixelStreamChannelAssembler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamChannelAssembler</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_channel_assembler.html</Path>
    <Anchor>a8c8efa24ebe6af0c5a6ade8020e4fe9b</Anchor>
    <Abstract>Get the assembled image for a tile. </Abstract>
    <DeclaredIn>PixelStreamChannelAssembler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamChannelAssembler</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_channel_assembler.html</Path>
    <Anchor>aa448ed133195e8b00ee9a3656cf20247</Anchor>
    <DeclaredIn>PixelStreamChannelAssembler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeVisibleSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamChannelAssembler</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_channel_assembler.html</Path>
    <Anchor>a0deb5b0fa6de885cc54d2218bede2b4f</Anchor>
    <DeclaredIn>PixelStreamChannelAssembler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTilesCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamChannelAssembler</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_channel_assembler.html</Path>
    <Anchor>a7d6fd3bfba8bb04e271ea1da7b7f31fd</Anchor>
    <DeclaredIn>PixelStreamChannelAssembler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PixelStreamProcessor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamProcessor</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_processor.html</Path>
    <Anchor>a5110a29743d25928aa6feb039cdb4072</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>PixelStreamProcessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamProcessor</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_processor.html</Path>
    <Anchor>ada6838869e35b3364858b2bf6440e76f</Anchor>
    <DeclaredIn>PixelStreamProcessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamContent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PixelStreamContent</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_content.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notify</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PixelStreamContent</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_content.html</Path>
    <Anchor>aabb9d7f23b5d94bff82a85f5d9f08ffa</Anchor>
    <Abstract>Emitted when an Event occured. </Abstract>
    <DeclaredIn>PixelStreamContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a44c022cb6fed6fb1b0dff45e39ececb9</Anchor>
    <Abstract>Emitted by any Content subclass when its state has been modified. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamContent</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_content.html</Path>
    <Anchor>a48c6b1f647a5ed3acaaec920046b3a3f</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>PixelStreamContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamContent</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_content.html</Path>
    <Anchor>a58dabce75d367d4abafed2b97e125e4c</Anchor>
    <Abstract>Get the content type. </Abstract>
    <DeclaredIn>PixelStreamContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMetadata</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamContent</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_content.html</Path>
    <Anchor>af1fde82b270db2ed217ec6542924c3e4</Anchor>
    <Abstract>Content method overload, not used for PixelStreams. </Abstract>
    <DeclaredIn>PixelStreamContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKeyboardState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamContent</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_content.html</Path>
    <Anchor>aa002bb21734a5e973d201609c16dcf3e</Anchor>
    <Abstract>Get the keyboard state from QML. </Abstract>
    <DeclaredIn>PixelStreamContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasEventReceivers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamContent</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_content.html</Path>
    <Anchor>a0e40610bb7d62536fcce4a31f268098e</Anchor>
    <Abstract>Does this content already have registered EventReceiver(s) </Abstract>
    <DeclaredIn>PixelStreamContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>incrementEventReceiverCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamContent</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_content.html</Path>
    <Anchor>a5109f320daef0181de2110d271cd545c</Anchor>
    <Abstract>Register to receive events on this content. </Abstract>
    <DeclaredIn>PixelStreamContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_getInteractionPolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamContent</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_content.html</Path>
    <Anchor>ab054c46c0d2090f714b3e88835d697b6</Anchor>
    <DeclaredIn>PixelStreamContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamContent</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_content.html</Path>
    <Anchor>aaeecac84283680ea0ead807c2006e1d7</Anchor>
    <Abstract>Parse data received from the deflect::Stream. </Abstract>
    <DeclaredIn>PixelStreamContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MultiChannelContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MultiChannelContent</Scope>
    </TokenIdentifier>
    <Path>class_multi_channel_content.html</Path>
    <Anchor>a324183e85e7cf08e6a021c034b4003a1</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>MultiChannelContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MultiChannelContent</Scope>
    </TokenIdentifier>
    <Path>class_multi_channel_content.html</Path>
    <Anchor>acd85db877918ca0ab0459e4846634659</Anchor>
    <DeclaredIn>MultiChannelContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MultiChannelContent</Scope>
    </TokenIdentifier>
    <Path>class_multi_channel_content.html</Path>
    <Anchor>a752ef7f2ed626d48783200167dac318d</Anchor>
    <Abstract>Select which channel of the derived content to render. </Abstract>
    <DeclaredIn>MultiChannelContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Content</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ae491288d2efce7fa63d3e777580630b4</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a31ac405053a2cb5e157e5054b1012350</Anchor>
    <Abstract>Make a clone of this Content using binary serialization. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUri</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0ca4482bc84b9be50eb4bbc4a2c4ecac</Anchor>
    <Abstract>Get the content URI. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFilePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a234f77ec77f331f409d65e348a86fb73</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTitle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a57345c59f1ca4a395cfa230bafdc7812</Anchor>
    <Abstract>Get the title of the content. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>aa4681ca97acea99fbe88e20f0e664bc0</Anchor>
    <Abstract>Get the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>add67cf2f0ec836aabd24a088473f9e9d</Anchor>
    <Abstract>Get the width. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>height</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0ac15e1ba630bc6c6f98d47529f4c48c</Anchor>
    <Abstract>Get the height. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a8cf06fbd623453fd2aa349d91ebbca3b</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPreferredDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a508b7f5c09ffa4f5a1a7f3e89cbec489</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a70fbc6b9c9dfd95c426819a1c14464f9</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a1b7a6f49f447c124b497b0a844fd6ea6</Anchor>
    <Abstract>Set the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a113bd8ba35685e77bcf8a8650fab636a</Anchor>
    <Abstract>Get the aspect ratio. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFixedAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>adceac372a702843a1e0bd207f670680a</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canBeZoomed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af666fa7482f5c6a12c1e5b18f7076f4e</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a461bb62d3989d0eb5b4d1f824e7a66c0</Anchor>
    <Abstract>Get the zoom rectangle in normalized coordinates, [0,0,1,1] default. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0f3e5f9203b97450e3856d39a12807e3</Anchor>
    <Abstract>Set the zoom rectangle in normalized coordinates. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isZoomed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af9177091ab70e17f93b736d77e07bbee</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ad7e55aa12c354279dbe776de66a5635f</Anchor>
    <Abstract>Resets the zoom to [0,0,1,1]. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSizeHints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a70292d652fb37ee21640801fce53c186</Anchor>
    <Abstract>Set optional size hints to constrain resize/scale and 1:1 size. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCaptureInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a7e7c36edf987322675eea81f27e8017d</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCaptureInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a18477814caa57d8f9aa0330fd19487ab</Anchor>
    <Abstract>Tell the content to capture interaction (only for Policy::AUTO). </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a87465efbfaf4e2e5b0a5e7e8af0985f2</Anchor>
    <Abstract>Set the maximum factor for zoom and resize; value times content size. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a04642ff3171681aa5fd2c8c8291a7949</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamController</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PixelStreamController</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_controller.html</Path>
    <Abstract>Forward user actions to a deflect::Stream using Deflect events. </Abstract>
    <DeclaredIn>PixelStreamController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notify</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PixelStreamController</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_controller.html</Path>
    <Anchor>a45096746ef886b792ac4e94d806037dd</Anchor>
    <Abstract>Emitted when an Event occured. </Abstract>
    <DeclaredIn>PixelStreamController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamController</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamController</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_controller.html</Path>
    <Anchor>a4f461ac34a4d6331abeae05c196333c7</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>PixelStreamController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentController</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentController</Scope>
    </TokenIdentifier>
    <Path>class_content_controller.html</Path>
    <Anchor>ad47bedf89f88c7fc2d9b732732943901</Anchor>
    <Abstract>Construct a default content controller that does nothing. </Abstract>
    <DeclaredIn>ContentController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ContentController</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentController</Scope>
    </TokenIdentifier>
    <Path>class_content_controller.html</Path>
    <Anchor>ae4414680c4cb122ddebf84df4bed777c</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>ContentController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentController</Scope>
    </TokenIdentifier>
    <Path>class_content_controller.html</Path>
    <Anchor>a8955b4735b19c373bdbaf77ca09dccae</Anchor>
    <Abstract>Construct a content controller for the given window. </Abstract>
    <DeclaredIn>ContentController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamerLauncher</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PixelStreamerLauncher</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer_launcher.html</Path>
    <Abstract>Launch Pixel Streamers as separate processes. </Abstract>
    <DeclaredIn>PixelStreamerLauncher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openWebbrowser</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamerLauncher</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer_launcher.html</Path>
    <Anchor>a8c1379998ca7b8e33f56d92591821882</Anchor>
    <Abstract>Open a Webbrowser. </Abstract>
    <DeclaredIn>PixelStreamerLauncher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>launch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamerLauncher</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer_launcher.html</Path>
    <Anchor>afc419a30fbbfad12deed8cba43427723</Anchor>
    <Abstract>Start a webbrowser for an existing window. </Abstract>
    <DeclaredIn>PixelStreamerLauncher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openLauncher</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamerLauncher</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer_launcher.html</Path>
    <Anchor>abec11d7adeb5d7afb60c5e08000f4b2b</Anchor>
    <Abstract>Open the Qml launcher. </Abstract>
    <DeclaredIn>PixelStreamerLauncher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openWhiteboard</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamerLauncher</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer_launcher.html</Path>
    <Anchor>aca79846378293231db934ecb4241be48</Anchor>
    <Abstract>Open the Qml whiteboard. </Abstract>
    <DeclaredIn>PixelStreamerLauncher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PixelStreamerLauncher</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer_launcher.html</Path>
    <Anchor>a8723160ae4f5cba40778e9e727c1f52c</Anchor>
    <Abstract>Request the launch of a command in a working directory and given ENV. </Abstract>
    <DeclaredIn>PixelStreamerLauncher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamerLauncher</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamerLauncher</Scope>
    </TokenIdentifier>
    <Path>class_pixel_streamer_launcher.html</Path>
    <Anchor>a911a09bff7c15873b6229cbddb0e3be7</Anchor>
    <Abstract>Create a new PixelStreamerLauncher. </Abstract>
    <DeclaredIn>PixelStreamerLauncher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamPassthrough</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PixelStreamPassthrough</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_passthrough.html</Path>
    <Abstract>Pass tiles without modification for rendering. </Abstract>
    <DeclaredIn>PixelStreamPassthrough.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamPassthrough</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamPassthrough</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_passthrough.html</Path>
    <Anchor>ac6a03322971e2a8b70bdeec4f2d2fe11</Anchor>
    <Abstract>Construct a processor that does not modify the pixel stream. </Abstract>
    <DeclaredIn>PixelStreamPassthrough.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamPassthrough</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_passthrough.html</Path>
    <Anchor>a4a75595a2bde02cd90fa436484546f0e</Anchor>
    <Abstract>Get the assembled image for a tile. </Abstract>
    <DeclaredIn>PixelStreamPassthrough.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamPassthrough</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_passthrough.html</Path>
    <Anchor>a74f0a61a20a1e104ee0be0ec6a597715</Anchor>
    <DeclaredIn>PixelStreamPassthrough.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeVisibleSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamPassthrough</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_passthrough.html</Path>
    <Anchor>acb3262505b08fc8ea8389ad4bd218605</Anchor>
    <DeclaredIn>PixelStreamPassthrough.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PixelStreamProcessor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamProcessor</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_processor.html</Path>
    <Anchor>a5110a29743d25928aa6feb039cdb4072</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>PixelStreamProcessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamProcessor</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_processor.html</Path>
    <Anchor>ada6838869e35b3364858b2bf6440e76f</Anchor>
    <DeclaredIn>PixelStreamProcessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamProcessor</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PixelStreamProcessor</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_processor.html</Path>
    <Abstract>Abstract class for processing pixel stream frames before rendering. </Abstract>
    <DeclaredIn>PixelStreamProcessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PixelStreamProcessor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamProcessor</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_processor.html</Path>
    <Anchor>a5110a29743d25928aa6feb039cdb4072</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>PixelStreamProcessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamProcessor</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_processor.html</Path>
    <Anchor>a7ede982ba08ea7123804498e1ec0e1b0</Anchor>
    <Abstract>Get the assembled image for a tile. </Abstract>
    <DeclaredIn>PixelStreamProcessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamProcessor</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_processor.html</Path>
    <Anchor>abb3a7f8ebb276908b9e98a35ba256f9a</Anchor>
    <DeclaredIn>PixelStreamProcessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeVisibleSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamProcessor</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_processor.html</Path>
    <Anchor>a1f7b7c5df0908def3248c848516d7174</Anchor>
    <DeclaredIn>PixelStreamProcessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamProcessor</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_processor.html</Path>
    <Anchor>ada6838869e35b3364858b2bf6440e76f</Anchor>
    <DeclaredIn>PixelStreamProcessor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamSynchronizer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PixelStreamSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_synchronizer.html</Path>
    <Abstract>Synchronizes a PixelStream between different QML windows. </Abstract>
    <DeclaredIn>PixelStreamSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_synchronizer.html</Path>
    <Anchor>a85e426d30f4726b4a9715da18affd34b</Anchor>
    <Abstract>Construct a synchronizer for a stream. </Abstract>
    <DeclaredIn>PixelStreamSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_synchronizer.html</Path>
    <Anchor>aa20746328bad9e0cc23d7c7778f7e2ad</Anchor>
    <Abstract>Update the Content. </Abstract>
    <DeclaredIn>PixelStreamSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_synchronizer.html</Path>
    <Anchor>a29ee133c55863a9657126fdf29489a80</Anchor>
    <Abstract>Update the tiles. </Abstract>
    <DeclaredIn>PixelStreamSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_synchronizer.html</Path>
    <Anchor>a569cb6650bdde963252360f2f668a6eb</Anchor>
    <Abstract>Swap the image before rendering (useful only for synchronized contents). </Abstract>
    <DeclaredIn>PixelStreamSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTilesArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_synchronizer.html</Path>
    <Anchor>aef5f2c1d82075573f156051fdf0b7028</Anchor>
    <DeclaredIn>PixelStreamSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_synchronizer.html</Path>
    <Anchor>a90598cd467baee61727896ff7254a636</Anchor>
    <Abstract>Get statistics about this Content. </Abstract>
    <DeclaredIn>PixelStreamSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_synchronizer.html</Path>
    <Anchor>a1726390659b465f580378430d6752420</Anchor>
    <Abstract>Get the view for this synchronizer. </Abstract>
    <DeclaredIn>PixelStreamSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDataSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_synchronizer.html</Path>
    <Anchor>a4dbc7952113a1402ecaf0dcaf1fcedec</Anchor>
    <Abstract>Get the data source. </Abstract>
    <DeclaredIn>PixelStreamSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TiledSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a70ae3f4171110fc5308407e870044fcd</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a87ca86829ead6c83dbaba10fb67a2940</Anchor>
    <Abstract>Update the tiles. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onSwapReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a8ae5165f31bd9575d16a2849c46eb256</Anchor>
    <Abstract>Called when a tile is ready to swap. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canSwapTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a25d7a4e588651907f5de2a7d843590d9</Anchor>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a66b1596107ae5c900f74142247f830ea</Anchor>
    <Abstract>Call to swap tiles when TileSwapPolicy is SwapTilesSynchronously. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aa9b57c8a735fbfb9b35e3e79d9ac9682</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ContentSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aac4d27f2dcb82846eb5e94a8f281aa5f</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoomContextVisible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a8abee6251a6c2f9a3640bf3a23d4332a</Anchor>
    <Abstract>Check if the zoom context tile is visible in Qml. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createZoomContextTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a41e88f5e830d43f281b3a938ee664f39</Anchor>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onRequestNextFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a134db7d6cbe00b6886e5d8c30c7ceac6</Anchor>
    <Abstract>Called when a tile has to be updated, re-emits requestTileUpdate. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZoomContextVisible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a38b82b0163d7871040fa78bf8145a7b7</Anchor>
    <Abstract>Set by the Qml ZoomContext element. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tilesAreaChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aac807a9cb073a52d88a80ceca93b34a3</Anchor>
    <Abstract>Notifier for the tiles area property. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>statisticsChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a8b2131d6b3874d8d932a101ec3dcde05</Anchor>
    <Abstract>Notifier for the statistics property. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zoomContextVisibleChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a7223c8186607dd080abc644b359167a0</Anchor>
    <Abstract>Notifier for the zoomContextVisible property. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a07a22964fedee87ec47fddc4b02a40f0</Anchor>
    <Abstract>Notify the window to add a tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a755db8af943fc6bd0aab4220320d3a89</Anchor>
    <Abstract>Notify the window to remove a tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aba03b3c5af16950946e91c893d20eeaf</Anchor>
    <Abstract>Notify to update a tile&amp;#39;s coordinates. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestTileUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>ada17c27d8584a4909d023802ded6b6fa</Anchor>
    <Abstract>Request an update of a specific tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zoomContextTileChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>addacc933144498d3686f4f2fc54d828a</Anchor>
    <Abstract>Notify that the zoom context tile has changed and must be recreated. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_lod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a6fbe44ca96d25a41cd1db23e6437c696</Anchor>
    <Abstract>LOD used to obtain the list of visible tiles from the data source. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_channel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a397b544b5f7a00e38512b1042719c663</Anchor>
    <Abstract>Channel used to obtain the list of visible tiles. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_visibleTilesArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a30b3e4b8fffc7a05ad02567caac47c0d</Anchor>
    <Abstract>Area used to obtain the list of visible tiles from the data source. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_ignoreSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a661e203de9c571ab12a1fb0a2bda0c69</Anchor>
    <Abstract>Tiles to be ignored; must be managed manually. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateExistingTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a6562348f5dfdb774990e49e1e817cc29</Anchor>
    <Abstract>Update texture and coordinates of tiles which are already visible. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamUpdater</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PixelStreamUpdater</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_updater.html</Path>
    <Abstract>Synchronize the update of PixelStreams and send new frame requests. </Abstract>
    <DeclaredIn>PixelStreamUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updatePixelStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>PixelStreamUpdater</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_updater.html</Path>
    <Anchor>ace9578f22b4f5bc874040b5ccd893f34</Anchor>
    <Abstract>Update the appropriate PixelStream with the given frame. </Abstract>
    <DeclaredIn>PixelStreamUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pictureUpdated</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PixelStreamUpdater</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_updater.html</Path>
    <Anchor>a3fb5e7ef6ef99b1edcc1671712501dc9</Anchor>
    <Abstract>Emitted when a new picture has become available. </Abstract>
    <DeclaredIn>PixelStreamUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PixelStreamUpdater</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_updater.html</Path>
    <Anchor>aa7a5c7435ad6f310bfc66096f9dea7ee</Anchor>
    <Abstract>Emitted to request a new frame after a successful swap. </Abstract>
    <DeclaredIn>PixelStreamUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamUpdater</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamUpdater</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_updater.html</Path>
    <Anchor>a6c2d85e507658b80c95666d6b5f7c44a</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>PixelStreamUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PixelStreamUpdater</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamUpdater</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_updater.html</Path>
    <Anchor>abec2decfa2660dc4c37523b31dd30892</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>PixelStreamUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDynamic</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamUpdater</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_updater.html</Path>
    <Anchor>a6b6f0f98115ff72c07749519e8c82974</Anchor>
    <DeclaredIn>PixelStreamUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamUpdater</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_updater.html</Path>
    <Anchor>adaae2a27994e9657acc9651915a8c933</Anchor>
    <Abstract>Get a tile image by its id for a given view. </Abstract>
    <DeclaredIn>PixelStreamUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamUpdater</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_updater.html</Path>
    <Anchor>aa0b73862b89356276beb0933913afe65</Anchor>
    <Abstract>Get the coordinates of a tile. </Abstract>
    <DeclaredIn>PixelStreamUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTilesArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamUpdater</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_updater.html</Path>
    <Anchor>af1275ebac9c1acad63a0fc66e761f5d8</Anchor>
    <DeclaredIn>PixelStreamUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeVisibleSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamUpdater</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_updater.html</Path>
    <Anchor>a2b3fc1be68a5ec2ceeebca18eb34d444</Anchor>
    <Abstract>Compute the indices of the tiles which are visible in the given area. </Abstract>
    <DeclaredIn>PixelStreamUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxLod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamUpdater</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_updater.html</Path>
    <Anchor>a40f19dc374572c96f4be8da497bb89d3</Anchor>
    <DeclaredIn>PixelStreamUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNextFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamUpdater</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_updater.html</Path>
    <Anchor>aadf125779b550179707ad6edf33f27c5</Anchor>
    <Abstract>Allow advancing to the next frame of the stream (flow control). </Abstract>
    <DeclaredIn>PixelStreamUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synchronizeFrameAdvance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamUpdater</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_updater.html</Path>
    <Anchor>a9cc592732bb9bbe26b161044ae1c308d</Anchor>
    <Abstract>Synchronize the advance to the next frame of the stream. </Abstract>
    <DeclaredIn>PixelStreamUpdater.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synchronizers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>DataSource</Scope>
    </TokenIdentifier>
    <Path>class_data_source.html</Path>
    <Anchor>a43d2d50fc4971aa75f19e8c0130bc721</Anchor>
    <Abstract>The synchronizers linked to this shared data source. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamWindowManager</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Abstract>Handles window creation, association and updates for pixel streamers, both local and external...</Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>externalStreamOpening</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>a1990873d8c39ec3cd1c72f9403330e7d</Anchor>
    <Abstract>Emitted when the associated content window of the EXTERNAL streamer is created. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>streamWindowClosed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>a7ddea42df9209eb399a2844bb36bd97e</Anchor>
    <Abstract>Emitted when the associated content window of the streamer is closed. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestFirstFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>a0766b8b0cde56e30de923b786009f612</Anchor>
    <Abstract>Emitted when handleStreamStart is called for a stream which already has a window, such as the Launche...</Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PixelStreamWindowManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>a835e4815253d8b8e51263f9d803a61e2</Anchor>
    <Abstract>Create a window manager that handles windows for streamers. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWindows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>a1b8b7f1d0c05b2661b7893f52778a1b3</Anchor>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hideWindows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>aaa0472063b87b5ad26e14e04afeba879</Anchor>
    <Abstract>Hide the associated content window of the stream. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showWindows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>a3048f8a2af3bf95cf1c916ba8f940762</Anchor>
    <Abstract>Show the associated content windows of the stream. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>a63ed623223d9406c5c71c0e13f929eac</Anchor>
    <Abstract>Open a window for a new PixelStream. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAutoFocusNewWindows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>a22fcff539e065134b0dce6d07bf3872f</Anchor>
    <Abstract>Check if new windows open in focus mode. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleStreamStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>afb4053fccb1b44819a93955de4eedd77</Anchor>
    <Abstract>Handle the begining of a stream, opening a window if needed. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handleStreamEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>a46b8f7dcd44849d8bd12102735f0fa5e</Anchor>
    <Abstract>Handle the end of a stream, closing its window. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerEventReceiver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>a9a82b6d065e00cbe90494c255c8433a1</Anchor>
    <Abstract>Is called when the streamer wants to enable event handling. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateStreamWindows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>a4dfd736daa84477bb82c29ef63dcac33</Anchor>
    <Abstract>Update the dimension of the content according to the stream&amp;#39;s dimension. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateSizeHints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>a8f0622d497aa3a47157912dc9f59fbfe</Anchor>
    <Abstract>Update the size hints for the content, sent by the streamer. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendDataToWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>ae7b8614c9a975ea862e93ebe52668ecd</Anchor>
    <Abstract>Send data to window. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutoFocusNewWindows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>PixelStreamWindowManager</Scope>
    </TokenIdentifier>
    <Path>class_pixel_stream_window_manager.html</Path>
    <Anchor>a84dc3f67f094ed3f01d9d2f558d2bcb3</Anchor>
    <Abstract>Open new windows in focus mode. </Abstract>
    <DeclaredIn>PixelStreamWindowManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProbeResult</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ProbeResult</Scope>
    </TokenIdentifier>
    <Path>struct_probe_result.html</Path>
    <Abstract>The result of an MPIChannel::probe() operation. </Abstract>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>ProbeResult</Scope>
    </TokenIdentifier>
    <Path>struct_probe_result.html</Path>
    <Anchor>a63373d9b2c6353ad460b391f00b8fde0</Anchor>
    <DeclaredIn>MPIChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>src</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ProbeResult</Scope>
    </TokenIdentifier>
    <Path>struct_probe_result.html</Path>
    <Anchor>a1bf3e57be475361e7541e26f977aa0a6</Anchor>
    <Abstract>The source process that has sent a message. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ProbeResult</Scope>
    </TokenIdentifier>
    <Path>struct_probe_result.html</Path>
    <Anchor>a431ed1636026488911b1d35e0b97ac78</Anchor>
    <Abstract>The size of the message. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>message</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ProbeResult</Scope>
    </TokenIdentifier>
    <Path>struct_probe_result.html</Path>
    <Anchor>af15554a30e968ef7341d18a786899f95</Anchor>
    <Abstract>The type of the message. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Process</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Process</Scope>
    </TokenIdentifier>
    <Path>struct_process.html</Path>
    <Abstract>Configuration parameters needed to setup a render process. </Abstract>
    <DeclaredIn>Process.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>host</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Process</Scope>
    </TokenIdentifier>
    <Path>struct_process.html</Path>
    <Anchor>ad66e481c67a2c46c0dba898558352794</Anchor>
    <Abstract>The name of the host on which this wall process is running. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>screens</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Process</Scope>
    </TokenIdentifier>
    <Path>struct_process.html</Path>
    <Anchor>a4ea5ce8770ae5d6324b6c0f414d0061e</Anchor>
    <Abstract>The screen configurations for this process. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProcessForker</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ProcessForker</Scope>
    </TokenIdentifier>
    <Path>class_process_forker.html</Path>
    <Abstract>Run as a separate MPI process, listening to commands to fork new executables. </Abstract>
    <DeclaredIn>ProcessForker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProcessForker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ProcessForker</Scope>
    </TokenIdentifier>
    <Path>class_process_forker.html</Path>
    <Anchor>a4c5e2a604695ca2a659692ad394b8dc0</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ProcessForker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ProcessForker</Scope>
    </TokenIdentifier>
    <Path>class_process_forker.html</Path>
    <Anchor>ad1528d488d2aa41dec482bbadb431cd3</Anchor>
    <Abstract>Process MPI commands until a quit message is received. </Abstract>
    <DeclaredIn>ProcessForker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>QmlKeyInjector</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>QmlKeyInjector</Scope>
    </TokenIdentifier>
    <Path>class_qml_key_injector.html</Path>
    <Abstract>Helper class to inject Key events into offscreen Qml applications. </Abstract>
    <DeclaredIn>QmlKeyInjector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>QmlKeyInjector</Scope>
    </TokenIdentifier>
    <Path>class_qml_key_injector.html</Path>
    <Anchor>a891f852bcd32456b07173fbe87853187</Anchor>
    <Abstract>Send an InputMethodEvent (keyboard input) into an offscreen Qml scene. </Abstract>
    <DeclaredIn>QmlKeyInjector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendToWebengine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>QmlKeyInjector</Scope>
    </TokenIdentifier>
    <Path>class_qml_key_injector.html</Path>
    <Anchor>a27b0dbd0ae7fe2a0fd8da384ccaff785</Anchor>
    <Abstract>Send an InputMethodEvent (keyboard input) to an offscreen WebEngineView. </Abstract>
    <DeclaredIn>QmlKeyInjector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>QtImage</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>QtImage</Scope>
    </TokenIdentifier>
    <Path>class_qt_image.html</Path>
    <Abstract>Image wrapper for QImage. </Abstract>
    <DeclaredIn>QtImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>QtImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>QtImage</Scope>
    </TokenIdentifier>
    <Path>class_qt_image.html</Path>
    <Anchor>af82fe4230e7a5f40a4b59fea7e82ba35</Anchor>
    <Abstract>Constructor, stores the given QImage. </Abstract>
    <DeclaredIn>QtImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>QtImage</Scope>
    </TokenIdentifier>
    <Path>class_qt_image.html</Path>
    <Anchor>a394cd230b7f62af815ca3f6f73c17b81</Anchor>
    <DeclaredIn>QtImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>QtImage</Scope>
    </TokenIdentifier>
    <Path>class_qt_image.html</Path>
    <Anchor>aa86a39ee9e130a789e714ce8520cc197</Anchor>
    <DeclaredIn>QtImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>QtImage</Scope>
    </TokenIdentifier>
    <Path>class_qt_image.html</Path>
    <Anchor>ae6244c7286cca8f50d691c8baa1b0ac2</Anchor>
    <DeclaredIn>QtImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>QtImage</Scope>
    </TokenIdentifier>
    <Path>class_qt_image.html</Path>
    <Anchor>a242ba7d3f95d6b5c1a756891f6ccf75f</Anchor>
    <DeclaredIn>QtImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGLPixelFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>QtImage</Scope>
    </TokenIdentifier>
    <Path>class_qt_image.html</Path>
    <Anchor>aff6b4c1fd77cc162ad618ac291baf829</Anchor>
    <DeclaredIn>QtImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTextureSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>a6334f11fb0d39f06565957b4bf07a94f</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDataSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>a2e1bcd0f0639bf89889daed28aad5213</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRowOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>af75d8761f387cf813b0d0c3a3c7f481c</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getColorSpace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>a49481fa1cc7c6b2ab9a1dec20209076b</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGpuImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>ac3e10f35fb8dd895bda5627f43d96907</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateGpuImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>a8284c68a45d845a6ffd8eb81a4544092</Anchor>
    <Abstract>Generate the GPU image. </Abstract>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is32Bits</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>QtImage</Scope>
    </TokenIdentifier>
    <Path>class_qt_image.html</Path>
    <Anchor>abd7d2845d3a9ec14bc3627c939627570</Anchor>
    <DeclaredIn>QtImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>QuadLineNode</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>QuadLineNode</Scope>
    </TokenIdentifier>
    <Path>class_quad_line_node.html</Path>
    <Abstract>A line quad to draw rectangle borders. </Abstract>
    <DeclaredIn>QuadLineNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>QuadLineNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>QuadLineNode</Scope>
    </TokenIdentifier>
    <Path>class_quad_line_node.html</Path>
    <Anchor>aa9aee354b3655e0ece9760cdf8630684</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>QuadLineNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>QuadLineNode</Scope>
    </TokenIdentifier>
    <Path>class_quad_line_node.html</Path>
    <Anchor>ad0422ea5f0d04a3a93de1236f810e34f</Anchor>
    <Abstract>Set the geometry. </Abstract>
    <DeclaredIn>QuadLineNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLineWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>QuadLineNode</Scope>
    </TokenIdentifier>
    <Path>class_quad_line_node.html</Path>
    <Anchor>a19f9f3248c339ab0c2ed6fd3184ce51d</Anchor>
    <Abstract>Set the line width. </Abstract>
    <DeclaredIn>QuadLineNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>QuadLineNode</Scope>
    </TokenIdentifier>
    <Path>class_quad_line_node.html</Path>
    <Anchor>a0e35d866e0dd76e2d56a8ee02516c4ef</Anchor>
    <Abstract>Set the color of the lines. </Abstract>
    <DeclaredIn>QuadLineNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReceiveBuffer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ReceiveBuffer</Scope>
    </TokenIdentifier>
    <Path>class_receive_buffer.html</Path>
    <Abstract>Utility class to optimize the reception of any type of serialized data. </Abstract>
    <DeclaredIn>ReceiveBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReceiveBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReceiveBuffer</Scope>
    </TokenIdentifier>
    <Path>class_receive_buffer.html</Path>
    <Anchor>a2cbab0d9dd92ce024d19d8fdbad032d0</Anchor>
    <Abstract>Construct an empty buffer. </Abstract>
    <DeclaredIn>ReceiveBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReceiveBuffer</Scope>
    </TokenIdentifier>
    <Path>class_receive_buffer.html</Path>
    <Anchor>a6b622d169bf946d289176a53b18850ec</Anchor>
    <Abstract>Set the new size of the buffer and grow the storage if necessary. </Abstract>
    <DeclaredIn>ReceiveBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReceiveBuffer</Scope>
    </TokenIdentifier>
    <Path>class_receive_buffer.html</Path>
    <Anchor>ac318a09ddc49c104cb9c02c853fe947d</Anchor>
    <DeclaredIn>ReceiveBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReceiveBuffer</Scope>
    </TokenIdentifier>
    <Path>class_receive_buffer.html</Path>
    <Anchor>a6ca0d95e7af7ea46905ebc50fde81060</Anchor>
    <Abstract>Direct write access to the buffer, don&amp;#39;t write beyond size(). </Abstract>
    <DeclaredIn>ReceiveBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ReceiveBuffer</Scope>
    </TokenIdentifier>
    <Path>class_receive_buffer.html</Path>
    <Anchor>ae112467e08b95c08b92f8ed86d0b07f1</Anchor>
    <Abstract>Direct read access to the buffer, don&amp;#39;t read beyond size(). </Abstract>
    <DeclaredIn>ReceiveBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Rectangle</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Rectangle</Scope>
    </TokenIdentifier>
    <Path>class_rectangle.html</Path>
    <Abstract>Exposes the coordinates of a rectangle as QProperties for QML binding. </Abstract>
    <DeclaredIn>Rectangle.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RenderController</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>RenderController</Scope>
    </TokenIdentifier>
    <Path>class_render_controller.html</Path>
    <Abstract>Setup the scene and control the rendering options during runtime. </Abstract>
    <DeclaredIn>RenderController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RestInterface</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>RestInterface</Scope>
    </TokenIdentifier>
    <Path>class_rest_interface.html</Path>
    <Abstract>Enables remote control of Tide through a REST API. </Abstract>
    <DeclaredIn>RestInterface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RestInterface</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RestInterface</Scope>
    </TokenIdentifier>
    <Path>class_rest_interface.html</Path>
    <Anchor>a81682f8408e904fe54ae1942648eb24d</Anchor>
    <Abstract>Construct a REST interface. </Abstract>
    <DeclaredIn>RestInterface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~RestInterface</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RestInterface</Scope>
    </TokenIdentifier>
    <Path>class_rest_interface.html</Path>
    <Anchor>aeafc0fc94ce9d822611933385bfa9325</Anchor>
    <Abstract>Out-of-line destructor. </Abstract>
    <DeclaredIn>RestInterface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exposeStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RestInterface</Scope>
    </TokenIdentifier>
    <Path>class_rest_interface.html</Path>
    <Anchor>ad275168fe19ee55cf5127ed8699bb935</Anchor>
    <Abstract>Expose the statistics gathered by the given activity logger. </Abstract>
    <DeclaredIn>RestInterface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RestInterface</Scope>
    </TokenIdentifier>
    <Path>class_rest_interface.html</Path>
    <Anchor>a2425f837588184009d94f4faf10753ba</Anchor>
    <Abstract>Prevent modifying the wall via the interface. </Abstract>
    <DeclaredIn>RestInterface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RestServer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>RestServer</Scope>
    </TokenIdentifier>
    <Path>class_rest_server.html</Path>
    <Abstract>A non-blocking REST Server for use in a Qt application. </Abstract>
    <DeclaredIn>RestServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RestServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RestServer</Scope>
    </TokenIdentifier>
    <Path>class_rest_server.html</Path>
    <Anchor>a688fd7a30878aea6036b459cfebf657c</Anchor>
    <Abstract>Start a server with an OS-chosen port. </Abstract>
    <DeclaredIn>RestServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RestServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RestServer</Scope>
    </TokenIdentifier>
    <Path>class_rest_server.html</Path>
    <Anchor>a4b44a7efc2c7580ae5ff8e0136b4fa93</Anchor>
    <Abstract>Start a server on a defined port. </Abstract>
    <DeclaredIn>RestServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~RestServer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RestServer</Scope>
    </TokenIdentifier>
    <Path>class_rest_server.html</Path>
    <Anchor>aa7e86bbb70bbc24c9720fe13bc24fc74</Anchor>
    <Abstract>Stop the server. </Abstract>
    <DeclaredIn>RestServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>block</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RestServer</Scope>
    </TokenIdentifier>
    <Path>class_rest_server.html</Path>
    <Anchor>a888ac42d3cc938c30b7b2612a2f771a3</Anchor>
    <Abstract>Block requests for specified method (other than from localhost). </Abstract>
    <DeclaredIn>RestServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unblock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>RestServer</Scope>
    </TokenIdentifier>
    <Path>class_rest_server.html</Path>
    <Anchor>a18602a1a45825262cb9772808d4ac4e7</Anchor>
    <Abstract>Unblock requests for specified method. </Abstract>
    <DeclaredIn>RestServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Scene</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Scene</Scope>
    </TokenIdentifier>
    <Path>class_scene.html</Path>
    <Abstract>Contains all the DisplayGroups for the different surfaces to be rendered. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Scene</Scope>
    </TokenIdentifier>
    <Path>class_scene.html</Path>
    <Anchor>a3c60cb673a1d49a67d983946fb0ebe18</Anchor>
    <Abstract>Emitted whenever an element of the scene changes. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Scene</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Scene</Scope>
    </TokenIdentifier>
    <Path>class_scene.html</Path>
    <Anchor>a3b8cec2e32546713915f8c6303c951f1</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSurfaceCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Scene</Scope>
    </TokenIdentifier>
    <Path>class_scene.html</Path>
    <Anchor>ac619475776a3570db1eba4c92474ffad</Anchor>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSurface</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Scene</Scope>
    </TokenIdentifier>
    <Path>class_scene.html</Path>
    <Anchor>a3a0eae310cd55ce88bfeae90d282ff97</Anchor>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSurfaces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Scene</Scope>
    </TokenIdentifier>
    <Path>class_scene.html</Path>
    <Anchor>a5887dfd2a768a4aeb4c91eb5cbe44093</Anchor>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGroup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Scene</Scope>
    </TokenIdentifier>
    <Path>class_scene.html</Path>
    <Anchor>a1b5a3fd0d7e08897092bb4e6d387454a</Anchor>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWindows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Scene</Scope>
    </TokenIdentifier>
    <Path>class_scene.html</Path>
    <Anchor>a81fb5a5003c6ffb1226ca674e2f1aaf1</Anchor>
    <Abstract>Get all windows from all groups. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveToThread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Scene</Scope>
    </TokenIdentifier>
    <Path>class_scene.html</Path>
    <Anchor>a9383c1dc960bd4cf312640c99b6a6314</Anchor>
    <Abstract>Move this object and its member QObjects to the given QThread. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Scene</Scope>
    </TokenIdentifier>
    <Path>class_scene.html</Path>
    <Anchor>af5fe934b902fdb6101a0d73ca49bdf9e</Anchor>
    <Abstract>Find a window by its id. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findWindowAndGroup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Scene</Scope>
    </TokenIdentifier>
    <Path>class_scene.html</Path>
    <Anchor>a54fe4d99578122ade9b5b06d7a49abc6</Anchor>
    <Abstract>Find a window and the group it belongs to. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SceneController</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SceneController</Scope>
    </TokenIdentifier>
    <Path>class_scene_controller.html</Path>
    <Abstract>Controller for all Scene operations. </Abstract>
    <DeclaredIn>SceneController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SceneController</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SceneController</Scope>
    </TokenIdentifier>
    <Path>class_scene_controller.html</Path>
    <Anchor>acc3732a60d89babdc9ce7ee338d420a5</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>SceneController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apply</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SceneController</Scope>
    </TokenIdentifier>
    <Path>class_scene_controller.html</Path>
    <Anchor>a494df041ca57ad093df2932a0d3aa69a</Anchor>
    <Abstract>Replace the contents by that of another scene. </Abstract>
    <DeclaredIn>SceneController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hideLauncher</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SceneController</Scope>
    </TokenIdentifier>
    <Path>class_scene_controller.html</Path>
    <Anchor>aa17cea719c50c3bb25e9ad2141b955a3</Anchor>
    <Abstract>Hide the Launcher. </Abstract>
    <DeclaredIn>SceneController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SceneRemoteController</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SceneRemoteController</Scope>
    </TokenIdentifier>
    <Path>class_scene_remote_controller.html</Path>
    <Abstract>Remote controller for the scene windows using JSON-RPC. </Abstract>
    <DeclaredIn>SceneRemoteController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SceneRemoteController</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SceneRemoteController</Scope>
    </TokenIdentifier>
    <Path>class_scene_remote_controller.html</Path>
    <Anchor>ae1b2170f25b6d7e1870fc09b752a37e3</Anchor>
    <Abstract>Construct a JSON-RPC scene controller. </Abstract>
    <DeclaredIn>SceneRemoteController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Screen</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Screen</Scope>
    </TokenIdentifier>
    <Path>struct_screen.html</Path>
    <Abstract>Configuration for an individual screen of a render process. </Abstract>
    <DeclaredIn>Screen.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>surfaceIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Screen</Scope>
    </TokenIdentifier>
    <Path>struct_screen.html</Path>
    <Anchor>ac8f83b5c59ad0534e717ba0f49559699</Anchor>
    <Abstract>The index of the surface to which this screen belongs. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>display</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Screen</Scope>
    </TokenIdentifier>
    <Path>struct_screen.html</Path>
    <Anchor>a1c5e1ff3329de63d2be20f47e27fa94f</Anchor>
    <Abstract>Display identifier in string format matching Linux DISPLAY env_var. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>position</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Screen</Scope>
    </TokenIdentifier>
    <Path>struct_screen.html</Path>
    <Anchor>a63888802e102faabfde9a0722176731c</Anchor>
    <Abstract>Coordinates of the screen in pixel units. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>globalIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Screen</Scope>
    </TokenIdentifier>
    <Path>struct_screen.html</Path>
    <Anchor>a31a3ebf809d8455ce181b449c474f7d7</Anchor>
    <Abstract>Global index for the screen starting at {0,0} from the top-left. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stereoMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Screen</Scope>
    </TokenIdentifier>
    <Path>struct_screen.html</Path>
    <Anchor>a0acf984a93505e508f947e0afb8cd61d</Anchor>
    <Abstract>Stereo mode for this screen. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fullscreen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Screen</Scope>
    </TokenIdentifier>
    <Path>struct_screen.html</Path>
    <Anchor>a6a68557cd24dbce7e1cb68534c39ed36</Anchor>
    <Abstract>Display wall windows in fullscreen mode. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScreenLock</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ScreenLock</Scope>
    </TokenIdentifier>
    <Path>class_screen_lock.html</Path>
    <Abstract>Allow wall lock preventing unwanted streams from opening and making Web Interface view-only...</Abstract>
    <DeclaredIn>ScreenLock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lockChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ScreenLock</Scope>
    </TokenIdentifier>
    <Path>class_screen_lock.html</Path>
    <Anchor>a8fa90eb4abf8ba5ecacbe19f8c65a065</Anchor>
    <Abstract>Emitted when the state of the lock changes. </Abstract>
    <DeclaredIn>ScreenLock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>streamListChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ScreenLock</Scope>
    </TokenIdentifier>
    <Path>class_screen_lock.html</Path>
    <Anchor>ab1f77915c87ee20dc5921df6e8a9db5b</Anchor>
    <Abstract>Emitted when the list of stream changes. </Abstract>
    <DeclaredIn>ScreenLock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ScreenLock</Scope>
    </TokenIdentifier>
    <Path>class_screen_lock.html</Path>
    <Anchor>a7f42f4077d8bde01854fda0836f615c2</Anchor>
    <Abstract>Emitted when the lock changes. </Abstract>
    <DeclaredIn>ScreenLock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>streamAccepted</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ScreenLock</Scope>
    </TokenIdentifier>
    <Path>class_screen_lock.html</Path>
    <Anchor>a4e4d0c1d7933a7fc4ef2483f1e3aa89b</Anchor>
    <Abstract>Emitted when a single stream is to be opened (accepted by user). </Abstract>
    <DeclaredIn>ScreenLock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>streamRejected</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ScreenLock</Scope>
    </TokenIdentifier>
    <Path>class_screen_lock.html</Path>
    <Anchor>a5f26f2a2c5f0e60538cffaf3a6099c52</Anchor>
    <Abstract>Emitted when a single stream is to be closed (rejected by user). </Abstract>
    <DeclaredIn>ScreenLock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ScreenLock</Scope>
    </TokenIdentifier>
    <Path>class_screen_lock.html</Path>
    <Anchor>a677a4793db2fe149b84b72531a963cd0</Anchor>
    <Abstract>Lock the screen. </Abstract>
    <DeclaredIn>ScreenLock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unlock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ScreenLock</Scope>
    </TokenIdentifier>
    <Path>class_screen_lock.html</Path>
    <Anchor>a5a5708765d584ef2295b3218ed5c982c</Anchor>
    <Abstract>Unlock the screen. </Abstract>
    <DeclaredIn>ScreenLock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLocked</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ScreenLock</Scope>
    </TokenIdentifier>
    <Path>class_screen_lock.html</Path>
    <Anchor>a3631151869f8527fc72864a64f3212d9</Anchor>
    <Abstract>Check the state of the lock. </Abstract>
    <DeclaredIn>ScreenLock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>acceptStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ScreenLock</Scope>
    </TokenIdentifier>
    <Path>class_screen_lock.html</Path>
    <Anchor>afb90d238c92c22e8ff642764ef7d0577</Anchor>
    <Abstract>Accept the specified stream. </Abstract>
    <DeclaredIn>ScreenLock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rejectStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ScreenLock</Scope>
    </TokenIdentifier>
    <Path>class_screen_lock.html</Path>
    <Anchor>a6275e0a4f7e931b70e134be01143fe22</Anchor>
    <Abstract>Reject the specified stream. </Abstract>
    <DeclaredIn>ScreenLock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestStreamAcceptance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ScreenLock</Scope>
    </TokenIdentifier>
    <Path>class_screen_lock.html</Path>
    <Anchor>a3640b3e1954708081e86c8148c4abe4b</Anchor>
    <Abstract>Request a new stream acceptance. </Abstract>
    <DeclaredIn>ScreenLock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cancelStreamAcceptance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ScreenLock</Scope>
    </TokenIdentifier>
    <Path>class_screen_lock.html</Path>
    <Anchor>a7ee060776830fcff6054b13ff589b16c</Anchor>
    <Abstract>Cancel acceptance of the specified stream. </Abstract>
    <DeclaredIn>ScreenLock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPendingStreams</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ScreenLock</Scope>
    </TokenIdentifier>
    <Path>class_screen_lock.html</Path>
    <Anchor>aca25da8d121dee161d71bf4de194e0c7</Anchor>
    <Abstract>Get the list of registered streams. </Abstract>
    <DeclaredIn>ScreenLock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ScreenLock</Scope>
    </TokenIdentifier>
    <Path>class_screen_lock.html</Path>
    <Anchor>afb0ea91d81d9924808fba5134534c6b9</Anchor>
    <Abstract>Create a shared ScreenLock object. </Abstract>
    <DeclaredIn>ScreenLock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScreenshotAssembler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ScreenshotAssembler</Scope>
    </TokenIdentifier>
    <Path>class_screenshot_assembler.html</Path>
    <Abstract>Assemble screenshots from the wall processes into a single image. </Abstract>
    <DeclaredIn>ScreenshotAssembler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>ScreenshotAssembler</Scope>
    </TokenIdentifier>
    <Path>class_screenshot_assembler.html</Path>
    <Anchor>ac9df68c31b27d63d7dfcdbc71d423eec</Anchor>
    <Abstract>Add an image to the current screenshot. </Abstract>
    <DeclaredIn>ScreenshotAssembler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>screenshotComplete</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ScreenshotAssembler</Scope>
    </TokenIdentifier>
    <Path>class_screenshot_assembler.html</Path>
    <Anchor>a41adce15c84e64d6c0f9bf9afcb79cac</Anchor>
    <Abstract>Emitted when the last image forming the screenshot has been added. </Abstract>
    <DeclaredIn>ScreenshotAssembler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScreenshotAssembler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ScreenshotAssembler</Scope>
    </TokenIdentifier>
    <Path>class_screenshot_assembler.html</Path>
    <Anchor>ae78678f1e8c50bf59a432666045bc453</Anchor>
    <Abstract>Construct a screenshot assembler for a certain surface. </Abstract>
    <DeclaredIn>ScreenshotAssembler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isComplete</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ScreenshotAssembler</Scope>
    </TokenIdentifier>
    <Path>class_screenshot_assembler.html</Path>
    <Anchor>ae546f3221fcf3eed8db798722fba2d7c</Anchor>
    <DeclaredIn>ScreenshotAssembler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SharedNetworkBarrier</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SharedNetworkBarrier</Scope>
    </TokenIdentifier>
    <Path>class_shared_network_barrier.html</Path>
    <Abstract>Adapter to join a global network barrier from multiple local threads. </Abstract>
    <DeclaredIn>SharedNetworkBarrier.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitForAll</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SharedNetworkBarrier</Scope>
    </TokenIdentifier>
    <Path>class_shared_network_barrier.html</Path>
    <Anchor>aace5c308b13293b6a327538aa006cbe5</Anchor>
    <Abstract>Wait for all threads and all processes. </Abstract>
    <DeclaredIn>SharedNetworkBarrier.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>State</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>State</Scope>
    </TokenIdentifier>
    <Path>class_state.html</Path>
    <Abstract>A state is the collection of opened contents which can be saved and restored using this class...</Abstract>
    <DeclaredIn>State.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>State</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>State</Scope>
    </TokenIdentifier>
    <Path>class_state.html</Path>
    <Anchor>ab91bb1dd5aa6260ab2a456581daf9ec2</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>State.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>State</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>State</Scope>
    </TokenIdentifier>
    <Path>class_state.html</Path>
    <Anchor>a8d2c67fa7c524b7e487952b3368e33d5</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>State.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVersion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>State</Scope>
    </TokenIdentifier>
    <Path>class_state.html</Path>
    <Anchor>abbc8de8c5bbedb5da2f5c6776b81d9ef</Anchor>
    <DeclaredIn>State.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScene</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>State</Scope>
    </TokenIdentifier>
    <Path>class_state.html</Path>
    <Anchor>a774c565453a23428cd8ae16bbaee3780</Anchor>
    <DeclaredIn>State.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>legacyLoadXML</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>State</Scope>
    </TokenIdentifier>
    <Path>class_state.html</Path>
    <Anchor>a9d239d0be957febba6229da5a599124e</Anchor>
    <Abstract>Load content windows stored in the given XML file. </Abstract>
    <DeclaredIn>State.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StatePreview</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>StatePreview</Scope>
    </TokenIdentifier>
    <Path>class_state_preview.html</Path>
    <Abstract>A state preview is a thumbnail image saved alongside a state file. </Abstract>
    <DeclaredIn>StatePreview.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StatePreview</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StatePreview</Scope>
    </TokenIdentifier>
    <Path>class_state_preview.html</Path>
    <Anchor>aea9bf32a2c4e97bae3d363e21eca1e33</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>StatePreview.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadFromFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StatePreview</Scope>
    </TokenIdentifier>
    <Path>class_state_preview.html</Path>
    <Anchor>adb7ad5d66ab2b54eb66e5912aa827c9a</Anchor>
    <Abstract>Load the thumbnail image from disk. </Abstract>
    <DeclaredIn>StatePreview.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StatePreview</Scope>
    </TokenIdentifier>
    <Path>class_state_preview.html</Path>
    <Anchor>aa855eb3b0bb12cc534458fe639336c04</Anchor>
    <Abstract>Retrieve the image loaded with loadFromFile() or generated with generateImage(). </Abstract>
    <DeclaredIn>StatePreview.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StatePreview</Scope>
    </TokenIdentifier>
    <Path>class_state_preview.html</Path>
    <Anchor>addedd9c980091f3017cfc3d0eb0cfcca</Anchor>
    <Abstract>Generate the preview image from a list of Windows. </Abstract>
    <DeclaredIn>StatePreview.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>saveToFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StatePreview</Scope>
    </TokenIdentifier>
    <Path>class_state_preview.html</Path>
    <Anchor>ab9451a422ef3233febfffae46eb82b91</Anchor>
    <Abstract>Save the thumbnail created by generateImage() to a file. </Abstract>
    <DeclaredIn>StatePreview.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFileExtension</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>StatePreview</Scope>
    </TokenIdentifier>
    <Path>class_state_preview.html</Path>
    <Anchor>a092ab0b12d351e6380a822fb02118459</Anchor>
    <Abstract>Get the file extension used for state images. </Abstract>
    <DeclaredIn>StatePreview.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StateSerializationHelper</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>StateSerializationHelper</Scope>
    </TokenIdentifier>
    <Path>class_state_serialization_helper.html</Path>
    <Abstract>Helper class to save a scene to a file and restore it later. </Abstract>
    <DeclaredIn>StateSerializationHelper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StateSerializationHelper</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StateSerializationHelper</Scope>
    </TokenIdentifier>
    <Path>class_state_serialization_helper.html</Path>
    <Anchor>a5c8e58fa1def3fb07d1d070f64c69d77</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>StateSerializationHelper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>save</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StateSerializationHelper</Scope>
    </TokenIdentifier>
    <Path>class_state_serialization_helper.html</Path>
    <Anchor>ab4e5e3b6111fe3ed1770d42a644a0a61</Anchor>
    <Abstract>Save the scene to a file. </Abstract>
    <DeclaredIn>StateSerializationHelper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StateSerializationHelper</Scope>
    </TokenIdentifier>
    <Path>class_state_serialization_helper.html</Path>
    <Anchor>a68ac952da91b48895c6cddf0dca3fb66</Anchor>
    <Abstract>Load a scene from a file. </Abstract>
    <DeclaredIn>StateSerializationHelper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findAvailableFilePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>StateSerializationHelper</Scope>
    </TokenIdentifier>
    <Path>class_state_serialization_helper.html</Path>
    <Anchor>a007a830248de748cbeb353d446b733a9</Anchor>
    <Abstract>Find an available filename by appending &quot;_[n]&quot; if needed to the filename. </Abstract>
    <DeclaredIn>StateSerializationHelper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StateThumbnailGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>StateThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_state_thumbnail_generator.html</Path>
    <Abstract>Generate thumbnails for Tide session files. </Abstract>
    <DeclaredIn>StateThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StateThumbnailGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StateThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_state_thumbnail_generator.html</Path>
    <Anchor>a8bee70cf435944ca72d74d3cf15c497d</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>StateThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StateThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_state_thumbnail_generator.html</Path>
    <Anchor>a738aadd37d174137c3555ba57cd2a57c</Anchor>
    <Abstract>Generate a thumbnail for a saved session file. </Abstract>
    <DeclaredIn>StateThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThumbnailGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>a8e1445189917a48c75ddaf992d4e166f</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ThumbnailGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>aa726f0f40d9c5d1e43026260f89d923a</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>ThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createErrorImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>a9fba0be45fafb6dca5ceba86725ae398</Anchor>
    <Abstract>Create a generic placeholder image indicating that an error occured. </Abstract>
    <DeclaredIn>ThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createGradientImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>af950dcda932b1ddc5dc0f6cff98da787</Anchor>
    <Abstract>Create a gradient image, can be used as background for a placeholder. </Abstract>
    <DeclaredIn>ThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>paintText</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>a830215bb774dfa30b8b2d6e812465bd4</Anchor>
    <Abstract>Paint text over an image, for example on top of a placeholder image. </Abstract>
    <DeclaredIn>ThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>a5efbb9ef797b1597b012c0f8f8ebdb31</Anchor>
    <Abstract>Target size for the thumbnails. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_aspectRatioMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>aa5d65a800fb8ae29b3c00ffdb4156786</Anchor>
    <Abstract>Aspect ratio policy for the thumbnails. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StreamImage</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>StreamImage</Scope>
    </TokenIdentifier>
    <Path>class_stream_image.html</Path>
    <Abstract>Image wrapper for a pixel stream image. </Abstract>
    <DeclaredIn>StreamImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StreamImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StreamImage</Scope>
    </TokenIdentifier>
    <Path>class_stream_image.html</Path>
    <Anchor>a4d07d6482c8d99ed2cac85ae3b656a5c</Anchor>
    <Abstract>Constructor, stores the given deflect frame. </Abstract>
    <DeclaredIn>StreamImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StreamImage</Scope>
    </TokenIdentifier>
    <Path>class_stream_image.html</Path>
    <Anchor>a1e84df6ce5bdeb28df4128f1c3491151</Anchor>
    <DeclaredIn>StreamImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StreamImage</Scope>
    </TokenIdentifier>
    <Path>class_stream_image.html</Path>
    <Anchor>a4c34790efbd056bcd25969c4002689b2</Anchor>
    <DeclaredIn>StreamImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StreamImage</Scope>
    </TokenIdentifier>
    <Path>class_stream_image.html</Path>
    <Anchor>abe729fbb5a8498b040dc54770fdf05b8</Anchor>
    <DeclaredIn>StreamImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRowOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StreamImage</Scope>
    </TokenIdentifier>
    <Path>class_stream_image.html</Path>
    <Anchor>a32556af8dd9a6122824a31aaf57cb767</Anchor>
    <DeclaredIn>StreamImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StreamImage</Scope>
    </TokenIdentifier>
    <Path>class_stream_image.html</Path>
    <Anchor>a52b08547ccf62406ac663263c86a8179</Anchor>
    <DeclaredIn>StreamImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getColorSpace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StreamImage</Scope>
    </TokenIdentifier>
    <Path>class_stream_image.html</Path>
    <Anchor>aeae9c956fca3fadc732e50c8260f9a83</Anchor>
    <DeclaredIn>StreamImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StreamImage</Scope>
    </TokenIdentifier>
    <Path>class_stream_image.html</Path>
    <Anchor>a8ea7416b0791b10bffb1f71bb9e88092</Anchor>
    <DeclaredIn>StreamImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StreamImage</Scope>
    </TokenIdentifier>
    <Path>class_stream_image.html</Path>
    <Anchor>afadf2af8cdb7b88f2bd82018e53f27ec</Anchor>
    <Abstract>Copy another image of the same format at the given position. </Abstract>
    <DeclaredIn>StreamImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTextureSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>YUVImage</Scope>
    </TokenIdentifier>
    <Path>class_y_u_v_image.html</Path>
    <Anchor>aff12eaaf9ea107ef010845e1c8df1c27</Anchor>
    <DeclaredIn>YUVImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGLPixelFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>YUVImage</Scope>
    </TokenIdentifier>
    <Path>class_y_u_v_image.html</Path>
    <Anchor>ab6f9b4a259ed32b804b97ebbcf7e8d66</Anchor>
    <DeclaredIn>YUVImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDataSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>a2e1bcd0f0639bf89889daed28aad5213</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGpuImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>ac3e10f35fb8dd895bda5627f43d96907</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateGpuImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>a8284c68a45d845a6ffd8eb81a4544092</Anchor>
    <Abstract>Generate the GPU image. </Abstract>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StreamThumbnailGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>StreamThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_stream_thumbnail_generator.html</Path>
    <Abstract>Generate placeholder images for stream windows. </Abstract>
    <DeclaredIn>StreamThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StreamThumbnailGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StreamThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_stream_thumbnail_generator.html</Path>
    <Anchor>ae3cf7031ee0ff78ee6bc18d374e270f3</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>StreamThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>StreamThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_stream_thumbnail_generator.html</Path>
    <Anchor>a1ec3db0ce7a02442d47ae2cd5f5546cd</Anchor>
    <Abstract>Generate a thumbnail for a stream window. </Abstract>
    <DeclaredIn>StreamThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThumbnailGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>a8e1445189917a48c75ddaf992d4e166f</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ThumbnailGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>aa726f0f40d9c5d1e43026260f89d923a</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>ThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createErrorImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>a9fba0be45fafb6dca5ceba86725ae398</Anchor>
    <Abstract>Create a generic placeholder image indicating that an error occured. </Abstract>
    <DeclaredIn>ThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createGradientImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>af950dcda932b1ddc5dc0f6cff98da787</Anchor>
    <Abstract>Create a gradient image, can be used as background for a placeholder. </Abstract>
    <DeclaredIn>ThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>paintText</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>a830215bb774dfa30b8b2d6e812465bd4</Anchor>
    <Abstract>Paint text over an image, for example on top of a placeholder image. </Abstract>
    <DeclaredIn>ThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>a5efbb9ef797b1597b012c0f8f8ebdb31</Anchor>
    <Abstract>Target size for the thumbnails. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_aspectRatioMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>aa5d65a800fb8ae29b3c00ffdb4156786</Anchor>
    <Abstract>Aspect ratio policy for the thumbnails. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Surface</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Surface</Scope>
    </TokenIdentifier>
    <Path>class_surface.html</Path>
    <Abstract>A uniform display surface, containing (currently) one DisplayGroup. </Abstract>
    <DeclaredIn>Surface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveToThread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Surface</Scope>
    </TokenIdentifier>
    <Path>class_surface.html</Path>
    <Anchor>aa84b86f9775482f22f69d95339f3c183</Anchor>
    <Abstract>Move this object and its member QObjects to the given QThread. </Abstract>
    <DeclaredIn>Surface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SurfaceConfig</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SurfaceConfig</Scope>
    </TokenIdentifier>
    <Path>struct_surface_config.html</Path>
    <Abstract>A uniform display surface, composed of identical displays of the same size. </Abstract>
    <DeclaredIn>SurfaceConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScreenWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>SurfaceConfig</Scope>
    </TokenIdentifier>
    <Path>struct_surface_config.html</Path>
    <Anchor>ad23b0ae6652861e171951c23f529a1da</Anchor>
    <DeclaredIn>SurfaceConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScreenHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>SurfaceConfig</Scope>
    </TokenIdentifier>
    <Path>struct_surface_config.html</Path>
    <Anchor>ac0378d546d9e0778622ccb9912b83a64</Anchor>
    <DeclaredIn>SurfaceConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScreenRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>SurfaceConfig</Scope>
    </TokenIdentifier>
    <Path>struct_surface_config.html</Path>
    <Anchor>ac4e90fdf82dd243d2b3bc1bac8f26c64</Anchor>
    <DeclaredIn>SurfaceConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>SurfaceConfig</Scope>
    </TokenIdentifier>
    <Path>struct_surface_config.html</Path>
    <Anchor>ac395db89254574c1189e798b2f88f360</Anchor>
    <DeclaredIn>SurfaceConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>SurfaceConfig</Scope>
    </TokenIdentifier>
    <Path>struct_surface_config.html</Path>
    <Anchor>ad2bf4052702a681972b4786a2e6949b6</Anchor>
    <DeclaredIn>SurfaceConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>SurfaceConfig</Scope>
    </TokenIdentifier>
    <Path>struct_surface_config.html</Path>
    <Anchor>ab5912982968200f046de980525fc0a60</Anchor>
    <DeclaredIn>SurfaceConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>SurfaceConfig</Scope>
    </TokenIdentifier>
    <Path>struct_surface_config.html</Path>
    <Anchor>ae1609412842fd8b6c4c151d7def5e007</Anchor>
    <DeclaredIn>SurfaceConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toPixelSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>SurfaceConfig</Scope>
    </TokenIdentifier>
    <Path>struct_surface_config.html</Path>
    <Anchor>a501732fc93efccf82c9e35732c14bfd0</Anchor>
    <DeclaredIn>SurfaceConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>background</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>SurfaceConfig</Scope>
    </TokenIdentifier>
    <Path>struct_surface_config.html</Path>
    <Anchor>a6ece8bcbfeab2fad15f07b3209929f70</Anchor>
    <Abstract>Background content and color. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SurfaceConfigValidator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SurfaceConfigValidator</Scope>
    </TokenIdentifier>
    <Path>class_surface_config_validator.html</Path>
    <Abstract>A validator for consistency of the surface configuation parameters. </Abstract>
    <DeclaredIn>SurfaceConfigValidator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>validateDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SurfaceConfigValidator</Scope>
    </TokenIdentifier>
    <Path>class_surface_config_validator.html</Path>
    <Anchor>ae10b12479cea9ef93b72dd274f97642e</Anchor>
    <Abstract>Validate that the dimensions (if set) match the pixel aspect ratio. </Abstract>
    <DeclaredIn>SurfaceConfigValidator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SVG</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SVG</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g.html</Path>
    <Abstract>An SVG document which can be rendered as a QImage. </Abstract>
    <DeclaredIn>SVG.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SVG</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVG</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g.html</Path>
    <Anchor>a3474f26fa7ac0b471564acd9c7b13721</Anchor>
    <Abstract>Open an svg document. </Abstract>
    <DeclaredIn>SVG.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SVG</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVG</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g.html</Path>
    <Anchor>af34129c53df4a18f880e4f2ebfcb9cd8</Anchor>
    <Abstract>Create an svg document from existing data. </Abstract>
    <DeclaredIn>SVG.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SVG</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVG</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g.html</Path>
    <Anchor>ad34298f0fb0cc7bf208c5667b26dd21b</Anchor>
    <Abstract>Close the document. </Abstract>
    <DeclaredIn>SVG.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFilename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVG</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g.html</Path>
    <Anchor>aaf26d6bac8e016b30c1efdb0ccc5e488</Anchor>
    <DeclaredIn>SVG.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVG</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g.html</Path>
    <Anchor>ad47f7ad5b8d6ceb973df825c07124dd8</Anchor>
    <DeclaredIn>SVG.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVG</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g.html</Path>
    <Anchor>aadfc02f573f9e9e3baef4a613b9b7ce8</Anchor>
    <DeclaredIn>SVG.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVG</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g.html</Path>
    <Anchor>aeba95968d27151a97193fa34802a11d5</Anchor>
    <DeclaredIn>SVG.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderToImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVG</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g.html</Path>
    <Anchor>a0caf324174ee21227db6a766d6bcd770</Anchor>
    <Abstract>Render the document to an image. </Abstract>
    <DeclaredIn>SVG.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SVGBackend</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SVGBackend</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_backend.html</Path>
    <Abstract>An abstract interface for SVG backends. </Abstract>
    <DeclaredIn>SVGBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SVGBackend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGBackend</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_backend.html</Path>
    <Anchor>a21adff1c9967b4ccb5fc316ebaefc7bd</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>SVGBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGBackend</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_backend.html</Path>
    <Anchor>a728d496e8eefbcfad4ce6b54b78168db</Anchor>
    <DeclaredIn>SVGBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderToImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGBackend</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_backend.html</Path>
    <Anchor>a39c5b3f29d3f945152c65b9289d1f6de</Anchor>
    <Abstract>Render the document to an image. </Abstract>
    <DeclaredIn>SVGBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SVGContent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SVGContent</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_content.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SVGContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGContent</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_content.html</Path>
    <Anchor>a9813e8e86203ad9d19507fbc0ef7b6fb</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>SVGContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGContent</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_content.html</Path>
    <Anchor>a0e35f76192ca65da445040d82012eb5d</Anchor>
    <Abstract>Get the content type. </Abstract>
    <DeclaredIn>SVGContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMetadata</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGContent</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_content.html</Path>
    <Anchor>ab1498c71f69ee1f0720fb5686bef3ecf</Anchor>
    <Abstract>Read SVG metadata. </Abstract>
    <DeclaredIn>SVGContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VectorialContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>VectorialContent</Scope>
    </TokenIdentifier>
    <Path>class_vectorial_content.html</Path>
    <Anchor>aee9a53f4f5acc149fe99f83b3eb2766e</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>VectorialContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>VectorialContent</Scope>
    </TokenIdentifier>
    <Path>class_vectorial_content.html</Path>
    <Anchor>ab9b1688c1800e0b4e8ab0c12971fd459</Anchor>
    <DeclaredIn>VectorialContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canBeZoomed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>VectorialContent</Scope>
    </TokenIdentifier>
    <Path>class_vectorial_content.html</Path>
    <Anchor>ab37d163ac4b16051baeab22c5d47e2f1</Anchor>
    <DeclaredIn>VectorialContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Content</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ae491288d2efce7fa63d3e777580630b4</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a31ac405053a2cb5e157e5054b1012350</Anchor>
    <Abstract>Make a clone of this Content using binary serialization. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUri</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0ca4482bc84b9be50eb4bbc4a2c4ecac</Anchor>
    <Abstract>Get the content URI. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFilePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a234f77ec77f331f409d65e348a86fb73</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTitle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a57345c59f1ca4a395cfa230bafdc7812</Anchor>
    <Abstract>Get the title of the content. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>aa4681ca97acea99fbe88e20f0e664bc0</Anchor>
    <Abstract>Get the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>add67cf2f0ec836aabd24a088473f9e9d</Anchor>
    <Abstract>Get the width. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>height</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0ac15e1ba630bc6c6f98d47529f4c48c</Anchor>
    <Abstract>Get the height. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a8cf06fbd623453fd2aa349d91ebbca3b</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPreferredDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a508b7f5c09ffa4f5a1a7f3e89cbec489</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a1b7a6f49f447c124b497b0a844fd6ea6</Anchor>
    <Abstract>Set the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a113bd8ba35685e77bcf8a8650fab636a</Anchor>
    <Abstract>Get the aspect ratio. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFixedAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>adceac372a702843a1e0bd207f670680a</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKeyboardState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a41cdb80d25bbb1f3f9e1b36bfb6b2515</Anchor>
    <Abstract>Get the keyboard state from QML. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a461bb62d3989d0eb5b4d1f824e7a66c0</Anchor>
    <Abstract>Get the zoom rectangle in normalized coordinates, [0,0,1,1] default. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0f3e5f9203b97450e3856d39a12807e3</Anchor>
    <Abstract>Set the zoom rectangle in normalized coordinates. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isZoomed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af9177091ab70e17f93b736d77e07bbee</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ad7e55aa12c354279dbe776de66a5635f</Anchor>
    <Abstract>Resets the zoom to [0,0,1,1]. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSizeHints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a70292d652fb37ee21640801fce53c186</Anchor>
    <Abstract>Set optional size hints to constrain resize/scale and 1:1 size. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCaptureInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a7e7c36edf987322675eea81f27e8017d</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCaptureInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a18477814caa57d8f9aa0330fd19487ab</Anchor>
    <Abstract>Tell the content to capture interaction (only for Policy::AUTO). </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>VectorialContent</Scope>
    </TokenIdentifier>
    <Path>class_vectorial_content.html</Path>
    <Anchor>a02ed9ed4fd5cfea1f01912271d06ed95</Anchor>
    <Abstract>Set the maximum factor for zoom and resize; value times base size. </Abstract>
    <DeclaredIn>VectorialContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>VectorialContent</Scope>
    </TokenIdentifier>
    <Path>class_vectorial_content.html</Path>
    <Anchor>ac40105f009e9278f53d4843c75cee9a5</Anchor>
    <DeclaredIn>VectorialContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a87465efbfaf4e2e5b0a5e7e8af0985f2</Anchor>
    <Abstract>Set the maximum factor for zoom and resize; value times content size. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a04642ff3171681aa5fd2c8c8291a7949</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a44c022cb6fed6fb1b0dff45e39ececb9</Anchor>
    <Abstract>Emitted by any Content subclass when its state has been modified. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SVGGpuImage</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SVGGpuImage</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_gpu_image.html</Path>
    <Abstract>Image wrapper for an SVG tile which will be rendered on the GPU. </Abstract>
    <DeclaredIn>SVGGpuImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SVGGpuImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGGpuImage</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_gpu_image.html</Path>
    <Anchor>ae72dc82feae79c1109cc2bc77cb4368a</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>SVGGpuImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGGpuImage</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_gpu_image.html</Path>
    <Anchor>a12e54607104891c93e39442fec16fc51</Anchor>
    <DeclaredIn>SVGGpuImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGGpuImage</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_gpu_image.html</Path>
    <Anchor>a1ad8620e08980a13b8a8b6e5a5737a5b</Anchor>
    <DeclaredIn>SVGGpuImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGGpuImage</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_gpu_image.html</Path>
    <Anchor>aa89b823bd6af64e05318cfdf333b9132</Anchor>
    <DeclaredIn>SVGGpuImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGGpuImage</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_gpu_image.html</Path>
    <Anchor>a859d9f4504e7c78395a6292841c72d6d</Anchor>
    <DeclaredIn>SVGGpuImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGLPixelFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGGpuImage</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_gpu_image.html</Path>
    <Anchor>aba2f9f65ee362a80ffdfd547c435d295</Anchor>
    <DeclaredIn>SVGGpuImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGpuImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGGpuImage</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_gpu_image.html</Path>
    <Anchor>ac344a36d69cb8d45ea8103d8b752de02</Anchor>
    <DeclaredIn>SVGGpuImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateGpuImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGGpuImage</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_gpu_image.html</Path>
    <Anchor>a6db44b92e6c465a0a5d9dc2ba7b90f83</Anchor>
    <Abstract>Generate the GPU image. </Abstract>
    <DeclaredIn>SVGGpuImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTextureSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>a6334f11fb0d39f06565957b4bf07a94f</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDataSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>a2e1bcd0f0639bf89889daed28aad5213</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRowOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>af75d8761f387cf813b0d0c3a3c7f481c</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getColorSpace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>a49481fa1cc7c6b2ab9a1dec20209076b</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SVGQtGpuBackend</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SVGQtGpuBackend</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_qt_gpu_backend.html</Path>
    <Abstract>Renders an svg document into a texure using hardware antialiasing. </Abstract>
    <DeclaredIn>SVGQtGpuBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SVGQtGpuBackend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGQtGpuBackend</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_qt_gpu_backend.html</Path>
    <Anchor>a068829bd34e16dcb2657282731a2c1e0</Anchor>
    <Abstract>Create an SVG renderer. </Abstract>
    <DeclaredIn>SVGQtGpuBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGQtGpuBackend</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_qt_gpu_backend.html</Path>
    <Anchor>acbfeb8cda20f1fbd9883ec405d245aa1</Anchor>
    <DeclaredIn>SVGQtGpuBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderToImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGQtGpuBackend</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_qt_gpu_backend.html</Path>
    <Anchor>ac8edf80dc6457735721d2f082ecde733</Anchor>
    <Abstract>Render the specified area on the GPU and downloads it into core memory. </Abstract>
    <DeclaredIn>SVGQtGpuBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SVGBackend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGBackend</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_backend.html</Path>
    <Anchor>a21adff1c9967b4ccb5fc316ebaefc7bd</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>SVGBackend.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SVGTiler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SVGTiler</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_tiler.html</Path>
    <Abstract>Represent an SVG image as a multi-LOD tiled data source. </Abstract>
    <DeclaredIn>SVGTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SVGTiler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGTiler</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_tiler.html</Path>
    <Anchor>a9b515c3374b8b6fc8fe3784357fc162e</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>SVGTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SVGTiler</Scope>
    </TokenIdentifier>
    <Path>class_s_v_g_tiler.html</Path>
    <Anchor>a20ecbe460d4035a686afdd7594952f41</Anchor>
    <Abstract>Override for SVG GPU images, threadsafe. </Abstract>
    <DeclaredIn>SVGTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>acc15604f255b48ce02dec5d72605e4ee</Anchor>
    <Abstract>Get the coordinates of a tile. </Abstract>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTilesArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>a0e4bab5a5f51e2a550282b7582a4def6</Anchor>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeVisibleSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>a72eb6e5f4f5eb3ba29480494edefe2ba</Anchor>
    <Abstract>Compute the indices of the tiles which are visible in the given area. </Abstract>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxLod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>a5e073ae83bc4589624bfdc0d12371609</Anchor>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNormalizedTileRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>a085c9b2df8260fb774572242b411fdd3</Anchor>
    <Abstract>Get the tile rectangle in normalized coordinates. </Abstract>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CachedDataSource</Scope>
    </TokenIdentifier>
    <Path>class_cached_data_source.html</Path>
    <Anchor>a02e027db47c9407a6235d391a015704b</Anchor>
    <Abstract>Check if the cache contains an image for a tile. </Abstract>
    <DeclaredIn>CachedDataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDynamic</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DataSource</Scope>
    </TokenIdentifier>
    <Path>class_data_source.html</Path>
    <Anchor>a54629350c073612b09217a9084b27951</Anchor>
    <DeclaredIn>DataSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synchronizers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>DataSource</Scope>
    </TokenIdentifier>
    <Path>class_data_source.html</Path>
    <Anchor>a43d2d50fc4971aa75f19e8c0130bc721</Anchor>
    <Abstract>The synchronizers linked to this shared data source. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LodTiler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>LodTiler</Scope>
    </TokenIdentifier>
    <Path>class_lod_tiler.html</Path>
    <Anchor>a6fb20a5bd71ee276d60d95f57a197517</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>LodTiler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SwapSynchronizer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SwapSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_swap_synchronizer.html</Path>
    <Abstract>Synchonizer for OpenGL buffer swap operation. </Abstract>
    <DeclaredIn>SwapSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>globalBarrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SwapSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_swap_synchronizer.html</Path>
    <Anchor>a0222b68f64ec3dd45fe9de77b8ee255b</Anchor>
    <Abstract>Wait for all windows to be ready to swap. </Abstract>
    <DeclaredIn>SwapSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exitBarrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SwapSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_swap_synchronizer.html</Path>
    <Anchor>ac8e109b619414fe465304ea1410ff1da</Anchor>
    <Abstract>Remove a window from the barrier, sequentially for each window. </Abstract>
    <DeclaredIn>SwapSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SwapSynchronizerFactory</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SwapSynchronizerFactory</Scope>
    </TokenIdentifier>
    <Path>class_swap_synchronizer_factory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SwapSynchronizerHardware</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SwapSynchronizerHardware</Scope>
    </TokenIdentifier>
    <Path>class_swap_synchronizer_hardware.html</Path>
    <Abstract>Hardware swap synchonizer using GL extensions (for NVidia Quadro GSync card). </Abstract>
    <DeclaredIn>SwapSynchronizerHardware.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>globalBarrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SwapSynchronizerHardware</Scope>
    </TokenIdentifier>
    <Path>class_swap_synchronizer_hardware.html</Path>
    <Anchor>a8da3746785d688ee5b3969b79230c9b2</Anchor>
    <Abstract>Wait for all windows to be ready to swap. </Abstract>
    <DeclaredIn>SwapSynchronizerHardware.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exitBarrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SwapSynchronizerHardware</Scope>
    </TokenIdentifier>
    <Path>class_swap_synchronizer_hardware.html</Path>
    <Anchor>affb955bf49dd296204acb21750c29b6c</Anchor>
    <Abstract>Remove a window from the barrier, sequentially for each window. </Abstract>
    <DeclaredIn>SwapSynchronizerHardware.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SwapSynchronizerSoftware</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SwapSynchronizerSoftware</Scope>
    </TokenIdentifier>
    <Path>class_swap_synchronizer_software.html</Path>
    <Abstract>Software swap synchonizer (network barrier). </Abstract>
    <DeclaredIn>SwapSynchronizerSoftware.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>globalBarrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SwapSynchronizerSoftware</Scope>
    </TokenIdentifier>
    <Path>class_swap_synchronizer_software.html</Path>
    <Anchor>abfe6ed8b7aa8bb4a7029bc12fad0d2f6</Anchor>
    <Abstract>Wait for all windows to be ready to swap. </Abstract>
    <DeclaredIn>SwapSynchronizerSoftware.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exitBarrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SwapSynchronizerSoftware</Scope>
    </TokenIdentifier>
    <Path>class_swap_synchronizer_software.html</Path>
    <Anchor>a215cfd770e5bfed101ea79935ea168d4</Anchor>
    <Abstract>Remove a window from the barrier, sequentially for each window. </Abstract>
    <DeclaredIn>SwapSynchronizerSoftware.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SwapSyncObject</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>SwapSyncObject</Scope>
    </TokenIdentifier>
    <Path>class_swap_sync_object.html</Path>
    <Abstract>Encapsulate an object to be swapped synchronously accross processes. </Abstract>
    <DeclaredIn>SwapSyncObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SyncCallbackFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>SwapSyncObject</Scope>
    </TokenIdentifier>
    <Path>class_swap_sync_object.html</Path>
    <Anchor>ab3b0b48ae862e426d78a5046d0737b78</Anchor>
    <Abstract>Callback function after synchronization. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SwapSyncObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SwapSyncObject</Scope>
    </TokenIdentifier>
    <Path>class_swap_sync_object.html</Path>
    <Anchor>a63634391069528f5d233d936dff5738e</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>SwapSyncObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SwapSyncObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SwapSyncObject</Scope>
    </TokenIdentifier>
    <Path>class_swap_sync_object.html</Path>
    <Anchor>a60f2b46fe04a66be80eba975a845fdee</Anchor>
    <Abstract>Default value constructor. </Abstract>
    <DeclaredIn>SwapSyncObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SwapSyncObject</Scope>
    </TokenIdentifier>
    <Path>class_swap_sync_object.html</Path>
    <Anchor>a215fc114c1f9b37b6a68e22a72f66e86</Anchor>
    <Abstract>Get the front object. </Abstract>
    <DeclaredIn>SwapSyncObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SwapSyncObject</Scope>
    </TokenIdentifier>
    <Path>class_swap_sync_object.html</Path>
    <Anchor>a13296d551fa83f0a3289422a2da0520b</Anchor>
    <Abstract>Update the back object. </Abstract>
    <DeclaredIn>SwapSyncObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SwapSyncObject</Scope>
    </TokenIdentifier>
    <Path>class_swap_sync_object.html</Path>
    <Anchor>a673c1ece088924c155add4a3dfa6d05c</Anchor>
    <Abstract>Synchronize the object. </Abstract>
    <DeclaredIn>SwapSyncObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SwapSyncObject</Scope>
    </TokenIdentifier>
    <Path>class_swap_sync_object.html</Path>
    <Anchor>abfeacee5c43f6360c4b2747b56ffa0a2</Anchor>
    <Abstract>Set an optional function to call just before swapping. </Abstract>
    <DeclaredIn>SwapSyncObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SwipeDetector</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SwipeDetector</Scope>
    </TokenIdentifier>
    <Path>class_swipe_detector.html</Path>
    <Abstract>Detect two-finger swipe gestures. </Abstract>
    <DeclaredIn>SwipeDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swipeLeft</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>SwipeDetector</Scope>
    </TokenIdentifier>
    <Path>class_swipe_detector.html</Path>
    <Anchor>a28811c95e9a17de4a65f6865744dd81a</Anchor>
    <Abstract>Two-fingers swipe to the left. </Abstract>
    <DeclaredIn>SwipeDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swipeRight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>SwipeDetector</Scope>
    </TokenIdentifier>
    <Path>class_swipe_detector.html</Path>
    <Anchor>a46ca06540814e60b168233bc9f706a7f</Anchor>
    <Abstract>Two-fingers swipe to the right. </Abstract>
    <DeclaredIn>SwipeDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swipeUp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>SwipeDetector</Scope>
    </TokenIdentifier>
    <Path>class_swipe_detector.html</Path>
    <Anchor>a56e9c96c90e6ceb4ddfea3f4638811e6</Anchor>
    <Abstract>Two-fingers swipe up. </Abstract>
    <DeclaredIn>SwipeDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swipeDown</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>SwipeDetector</Scope>
    </TokenIdentifier>
    <Path>class_swipe_detector.html</Path>
    <Anchor>ad087627f859f61222940fdc5ef315b71</Anchor>
    <Abstract>Two-fingers swipe down. </Abstract>
    <DeclaredIn>SwipeDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TapAndHoldDetector</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>TapAndHoldDetector</Scope>
    </TokenIdentifier>
    <Path>class_tap_and_hold_detector.html</Path>
    <Abstract>Detect TapAndHoldGestures. </Abstract>
    <DeclaredIn>TapAndHoldDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tapAndHold</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>TapAndHoldDetector</Scope>
    </TokenIdentifier>
    <Path>class_tap_and_hold_detector.html</Path>
    <Anchor>ac74ae2cad949de85e7983238d1794634</Anchor>
    <Abstract>Emitted after a prolonged non-moving touch with one or more fingers. </Abstract>
    <DeclaredIn>TapAndHoldDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TapDetector</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>TapDetector</Scope>
    </TokenIdentifier>
    <Path>class_tap_detector.html</Path>
    <Abstract>Detect double-tap gestures. </Abstract>
    <DeclaredIn>TapDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>TapDetector</Scope>
    </TokenIdentifier>
    <Path>class_tap_detector.html</Path>
    <Anchor>afc2bca5d6d510c1a573cfac31a4d295e</Anchor>
    <Abstract>Emitted for an n-finger touch and release in-place (i.e. </Abstract>
    <DeclaredIn>TapDetector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TestPattern</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>TestPattern</Scope>
    </TokenIdentifier>
    <Path>class_test_pattern.html</Path>
    <Abstract>Render a test pattern to help setup and debug the display configuration. </Abstract>
    <DeclaredIn>TestPattern.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TestPattern</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TestPattern</Scope>
    </TokenIdentifier>
    <Path>class_test_pattern.html</Path>
    <Anchor>aa9a87351a6bc76073c704d7b120dca9f</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>TestPattern.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>paint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TestPattern</Scope>
    </TokenIdentifier>
    <Path>class_test_pattern.html</Path>
    <Anchor>a7ad9a56b63b91c661dd198a23935b3a7</Anchor>
    <Abstract>Render the test pattern. </Abstract>
    <DeclaredIn>TestPattern.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TextureBorderSwitcher</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>TextureBorderSwitcher</Scope>
    </TokenIdentifier>
    <Path>class_texture_border_switcher.html</Path>
    <Abstract>Texture switcher used to decorate a TextureNode with a border rectangle. </Abstract>
    <DeclaredIn>TextureBorderSwitcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNextImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureSwitcher</Scope>
    </TokenIdentifier>
    <Path>class_texture_switcher.html</Path>
    <Anchor>ac784139a06f8a3835f2b8c9d7770eb3b</Anchor>
    <Abstract>Set the image used to update the back texture in the next update(). </Abstract>
    <DeclaredIn>TextureSwitcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestSwap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureSwitcher</Scope>
    </TokenIdentifier>
    <Path>class_texture_switcher.html</Path>
    <Anchor>ad0e19ee587e90c0dabe75e408f56fd91</Anchor>
    <Abstract>Request a swap of the front/back textures in the next update(). </Abstract>
    <DeclaredIn>TextureSwitcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureSwitcher</Scope>
    </TokenIdentifier>
    <Path>class_texture_switcher.html</Path>
    <Anchor>a77a8034acd3da76489245c52dec265bc</Anchor>
    <Abstract>Update and/or swap a texture node, (re-)creating it if needed. </Abstract>
    <DeclaredIn>TextureSwitcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TextureContent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>TextureContent</Scope>
    </TokenIdentifier>
    <Path>class_texture_content.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TextureContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureContent</Scope>
    </TokenIdentifier>
    <Path>class_texture_content.html</Path>
    <Anchor>a34ede22c00496d1f2309d56c0bfcf70b</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>TextureContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureContent</Scope>
    </TokenIdentifier>
    <Path>class_texture_content.html</Path>
    <Anchor>a8e3a9e17a40f585ab74e37cd15b800fc</Anchor>
    <Abstract>Get the content type. </Abstract>
    <DeclaredIn>TextureContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMetadata</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureContent</Scope>
    </TokenIdentifier>
    <Path>class_texture_content.html</Path>
    <Anchor>aac9af25e443cae0cfef848825719f56f</Anchor>
    <Abstract>Read texture metadata. </Abstract>
    <DeclaredIn>TextureContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canBeZoomed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureContent</Scope>
    </TokenIdentifier>
    <Path>class_texture_content.html</Path>
    <Anchor>aa115d7589db49b1d719c5746f839b8b6</Anchor>
    <DeclaredIn>TextureContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Content</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ae491288d2efce7fa63d3e777580630b4</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a31ac405053a2cb5e157e5054b1012350</Anchor>
    <Abstract>Make a clone of this Content using binary serialization. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUri</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0ca4482bc84b9be50eb4bbc4a2c4ecac</Anchor>
    <Abstract>Get the content URI. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFilePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a234f77ec77f331f409d65e348a86fb73</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTitle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a57345c59f1ca4a395cfa230bafdc7812</Anchor>
    <Abstract>Get the title of the content. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>aa4681ca97acea99fbe88e20f0e664bc0</Anchor>
    <Abstract>Get the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>add67cf2f0ec836aabd24a088473f9e9d</Anchor>
    <Abstract>Get the width. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>height</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0ac15e1ba630bc6c6f98d47529f4c48c</Anchor>
    <Abstract>Get the height. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a8cf06fbd623453fd2aa349d91ebbca3b</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPreferredDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a508b7f5c09ffa4f5a1a7f3e89cbec489</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a70fbc6b9c9dfd95c426819a1c14464f9</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a1b7a6f49f447c124b497b0a844fd6ea6</Anchor>
    <Abstract>Set the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a113bd8ba35685e77bcf8a8650fab636a</Anchor>
    <Abstract>Get the aspect ratio. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFixedAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>adceac372a702843a1e0bd207f670680a</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKeyboardState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a41cdb80d25bbb1f3f9e1b36bfb6b2515</Anchor>
    <Abstract>Get the keyboard state from QML. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a461bb62d3989d0eb5b4d1f824e7a66c0</Anchor>
    <Abstract>Get the zoom rectangle in normalized coordinates, [0,0,1,1] default. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0f3e5f9203b97450e3856d39a12807e3</Anchor>
    <Abstract>Set the zoom rectangle in normalized coordinates. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isZoomed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af9177091ab70e17f93b736d77e07bbee</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ad7e55aa12c354279dbe776de66a5635f</Anchor>
    <Abstract>Resets the zoom to [0,0,1,1]. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSizeHints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a70292d652fb37ee21640801fce53c186</Anchor>
    <Abstract>Set optional size hints to constrain resize/scale and 1:1 size. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCaptureInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a7e7c36edf987322675eea81f27e8017d</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCaptureInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a18477814caa57d8f9aa0330fd19487ab</Anchor>
    <Abstract>Tell the content to capture interaction (only for Policy::AUTO). </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a87465efbfaf4e2e5b0a5e7e8af0985f2</Anchor>
    <Abstract>Set the maximum factor for zoom and resize; value times content size. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a04642ff3171681aa5fd2c8c8291a7949</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a44c022cb6fed6fb1b0dff45e39ececb9</Anchor>
    <Abstract>Emitted by any Content subclass when its state has been modified. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TextureNode</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>TextureNode</Scope>
    </TokenIdentifier>
    <Path>class_texture_node.html</Path>
    <Abstract>An abstract node with a double buffered texture. </Abstract>
    <DeclaredIn>TextureNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCoord</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureNode</Scope>
    </TokenIdentifier>
    <Path>class_texture_node.html</Path>
    <Anchor>a18f175c4d45bbfa35a4f6a407e88a1e4</Anchor>
    <DeclaredIn>TextureNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCoord</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureNode</Scope>
    </TokenIdentifier>
    <Path>class_texture_node.html</Path>
    <Anchor>ae374df1090fe5b368e5b10b2458298be</Anchor>
    <Abstract>Set the surface of the node. </Abstract>
    <DeclaredIn>TextureNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uploadTexture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureNode</Scope>
    </TokenIdentifier>
    <Path>class_texture_node.html</Path>
    <Anchor>a2418605c8a4b73758cb53256e9d230a9</Anchor>
    <Abstract>Upload the given image to the back PBO. </Abstract>
    <DeclaredIn>TextureNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureNode</Scope>
    </TokenIdentifier>
    <Path>class_texture_node.html</Path>
    <Anchor>a7f320a7867a6df480b7b6f287b96f1ce</Anchor>
    <Abstract>Swap the PBOs and update the texture with the back PBO&amp;#39;s contents. </Abstract>
    <DeclaredIn>TextureNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TextureNodeFactory</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>TextureNodeFactory</Scope>
    </TokenIdentifier>
    <Path>class_texture_node_factory.html</Path>
    <Abstract>Abstract TextureNode factory for all supported texture formats. </Abstract>
    <DeclaredIn>TextureNodeFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureNodeFactory</Scope>
    </TokenIdentifier>
    <Path>class_texture_node_factory.html</Path>
    <Anchor>adb40e964d8e44af02cb932e295b84e54</Anchor>
    <DeclaredIn>TextureNodeFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>needToChangeNodeType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureNodeFactory</Scope>
    </TokenIdentifier>
    <Path>class_texture_node_factory.html</Path>
    <Anchor>af550078d8c9595e1d294f6e0c178665a</Anchor>
    <DeclaredIn>TextureNodeFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TextureNodeFactoryImpl</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>TextureNodeFactoryImpl</Scope>
    </TokenIdentifier>
    <Path>class_texture_node_factory_impl.html</Path>
    <Abstract>Concrete factory for [RGBA|YUV] QSG texture nodes. </Abstract>
    <DeclaredIn>TextureNodeFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureNodeFactoryImpl</Scope>
    </TokenIdentifier>
    <Path>class_texture_node_factory_impl.html</Path>
    <Anchor>a16f14b328b2df36538003b57deb23028</Anchor>
    <DeclaredIn>TextureNodeFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>needToChangeNodeType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureNodeFactoryImpl</Scope>
    </TokenIdentifier>
    <Path>class_texture_node_factory_impl.html</Path>
    <Anchor>a83eaf1e2dc94582ce1c905c7c69052a4</Anchor>
    <DeclaredIn>TextureNodeFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TextureNodeRGBA</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>TextureNodeRGBA</Scope>
    </TokenIdentifier>
    <Path>class_texture_node_r_g_b_a.html</Path>
    <Abstract>A node with a double buffered texture. </Abstract>
    <DeclaredIn>TextureNodeRGBA.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TextureNodeRGBA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureNodeRGBA</Scope>
    </TokenIdentifier>
    <Path>class_texture_node_r_g_b_a.html</Path>
    <Anchor>ad94877f9d1889053a0f9976aa19eb424</Anchor>
    <Abstract>Create a textured rectangle for rendering RGBA images on the GPU. </Abstract>
    <DeclaredIn>TextureNodeRGBA.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMipmapFiltering</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureNodeRGBA</Scope>
    </TokenIdentifier>
    <Path>class_texture_node_r_g_b_a.html</Path>
    <Anchor>ac4a363bee152d0a835484149ab345b5d</Anchor>
    <DeclaredIn>TextureNodeRGBA.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCoord</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureNodeRGBA</Scope>
    </TokenIdentifier>
    <Path>class_texture_node_r_g_b_a.html</Path>
    <Anchor>aefe9730d1b0206d543a81f0e412d553c</Anchor>
    <DeclaredIn>TextureNodeRGBA.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCoord</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureNodeRGBA</Scope>
    </TokenIdentifier>
    <Path>class_texture_node_r_g_b_a.html</Path>
    <Anchor>aa9df02e6a9912d34ca2dd698e7dc3cf1</Anchor>
    <Abstract>Set the surface of the node. </Abstract>
    <DeclaredIn>TextureNodeRGBA.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uploadTexture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureNodeRGBA</Scope>
    </TokenIdentifier>
    <Path>class_texture_node_r_g_b_a.html</Path>
    <Anchor>a2bd412dfe20585c22f3609909efb7159</Anchor>
    <Abstract>Upload the given image to the back PBO. </Abstract>
    <DeclaredIn>TextureNodeRGBA.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureNodeRGBA</Scope>
    </TokenIdentifier>
    <Path>class_texture_node_r_g_b_a.html</Path>
    <Anchor>a84c06c6dab4a0cc66352f20e8ec42b1d</Anchor>
    <Abstract>Swap the PBOs and update the texture with the back PBO&amp;#39;s contents. </Abstract>
    <DeclaredIn>TextureNodeRGBA.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TextureNodeYUV</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>TextureNodeYUV</Scope>
    </TokenIdentifier>
    <Path>class_texture_node_y_u_v.html</Path>
    <Abstract>A node with a double buffered YUV texture. </Abstract>
    <DeclaredIn>TextureNodeYUV.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TextureNodeYUV</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureNodeYUV</Scope>
    </TokenIdentifier>
    <Path>class_texture_node_y_u_v.html</Path>
    <Anchor>a60725e472ba30798401a0c49b096faa1</Anchor>
    <Abstract>Create a textured rectangle for rendering YUV images on the GPU. </Abstract>
    <DeclaredIn>TextureNodeYUV.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCoord</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureNodeYUV</Scope>
    </TokenIdentifier>
    <Path>class_texture_node_y_u_v.html</Path>
    <Anchor>a500cb590eb92e43daa1a999d71b5dc6b</Anchor>
    <DeclaredIn>TextureNodeYUV.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCoord</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureNodeYUV</Scope>
    </TokenIdentifier>
    <Path>class_texture_node_y_u_v.html</Path>
    <Anchor>a5059c78c134fb567e4c055c345024a68</Anchor>
    <Abstract>Set the surface of the node. </Abstract>
    <DeclaredIn>TextureNodeYUV.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uploadTexture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureNodeYUV</Scope>
    </TokenIdentifier>
    <Path>class_texture_node_y_u_v.html</Path>
    <Anchor>a87c853fa017c1bbcc8a324412b322973</Anchor>
    <Abstract>Upload the given image to the back PBO. </Abstract>
    <DeclaredIn>TextureNodeYUV.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureNodeYUV</Scope>
    </TokenIdentifier>
    <Path>class_texture_node_y_u_v.html</Path>
    <Anchor>a68fc41f5e7e45e012f9ab537ba41b011</Anchor>
    <Abstract>Swap the PBOs and update the texture with the back PBO&amp;#39;s contents. </Abstract>
    <DeclaredIn>TextureNodeYUV.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TextureSwitcher</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>TextureSwitcher</Scope>
    </TokenIdentifier>
    <Path>class_texture_switcher.html</Path>
    <Abstract>Swap double-buffered textures of various types during rendering. </Abstract>
    <DeclaredIn>TextureSwitcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNextImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureSwitcher</Scope>
    </TokenIdentifier>
    <Path>class_texture_switcher.html</Path>
    <Anchor>ac784139a06f8a3835f2b8c9d7770eb3b</Anchor>
    <Abstract>Set the image used to update the back texture in the next update(). </Abstract>
    <DeclaredIn>TextureSwitcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestSwap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureSwitcher</Scope>
    </TokenIdentifier>
    <Path>class_texture_switcher.html</Path>
    <Anchor>ad0e19ee587e90c0dabe75e408f56fd91</Anchor>
    <Abstract>Request a swap of the front/back textures in the next update(). </Abstract>
    <DeclaredIn>TextureSwitcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TextureSwitcher</Scope>
    </TokenIdentifier>
    <Path>class_texture_switcher.html</Path>
    <Anchor>a77a8034acd3da76489245c52dec265bc</Anchor>
    <Abstract>Update and/or swap a texture node, (re-)creating it if needed. </Abstract>
    <DeclaredIn>TextureSwitcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThumbnailCache</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ThumbnailCache</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_cache.html</Path>
    <Abstract>This class maintains a cache of {512x512} thumbnails for the scene. </Abstract>
    <DeclaredIn>ThumbnailCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThumbnailCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailCache</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_cache.html</Path>
    <Anchor>aaf48e76717166ff97629b361bbfc8a1b</Anchor>
    <Abstract>Construct a thumbnail cache to expose to the REST interface. </Abstract>
    <DeclaredIn>ThumbnailCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getThumbnail</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailCache</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_cache.html</Path>
    <Anchor>a454f07f36548c6fec5b027dfee1566fe</Anchor>
    <Abstract>Get the thumbnail of a window. </Abstract>
    <DeclaredIn>ThumbnailCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThumbnailGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Abstract>Abstract class for generating thumbnails for various content types. </Abstract>
    <DeclaredIn>ThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThumbnailGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>a8e1445189917a48c75ddaf992d4e166f</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ThumbnailGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>aa726f0f40d9c5d1e43026260f89d923a</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>ThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>a343eea8b4904e01cc63346261ffb358d</Anchor>
    <Abstract>Generate a thumbnail for a given file. </Abstract>
    <DeclaredIn>ThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createErrorImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>a9fba0be45fafb6dca5ceba86725ae398</Anchor>
    <Abstract>Create a generic placeholder image indicating that an error occured. </Abstract>
    <DeclaredIn>ThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createGradientImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>af950dcda932b1ddc5dc0f6cff98da787</Anchor>
    <Abstract>Create a gradient image, can be used as background for a placeholder. </Abstract>
    <DeclaredIn>ThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>paintText</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>a830215bb774dfa30b8b2d6e812465bd4</Anchor>
    <Abstract>Paint text over an image, for example on top of a placeholder image. </Abstract>
    <DeclaredIn>ThumbnailGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>a5efbb9ef797b1597b012c0f8f8ebdb31</Anchor>
    <Abstract>Target size for the thumbnails. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_aspectRatioMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ThumbnailGenerator</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator.html</Path>
    <Anchor>aa5d65a800fb8ae29b3c00ffdb4156786</Anchor>
    <Abstract>Aspect ratio policy for the thumbnails. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThumbnailGeneratorFactory</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ThumbnailGeneratorFactory</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator_factory.html</Path>
    <Abstract>Factory for thumbnail generators. </Abstract>
    <DeclaredIn>ThumbnailGeneratorFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ThumbnailGeneratorFactory</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_generator_factory.html</Path>
    <Anchor>ae745159c2f4000f07904138bdf5500e4</Anchor>
    <Abstract>Get the generator for a given file type. </Abstract>
    <DeclaredIn>ThumbnailGeneratorFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThumbnailProvider</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ThumbnailProvider</Scope>
    </TokenIdentifier>
    <Path>class_thumbnail_provider.html</Path>
    <Abstract>Provide thumbnails for files and folders to the Qml FileBrowser. </Abstract>
    <DeclaredIn>ThumbnailProvider.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TiffPyramidReader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>TiffPyramidReader</Scope>
    </TokenIdentifier>
    <Path>class_tiff_pyramid_reader.html</Path>
    <Abstract>Reader for TIFF image pyramid files. </Abstract>
    <DeclaredIn>TiffPyramidReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TiffPyramidReader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiffPyramidReader</Scope>
    </TokenIdentifier>
    <Path>class_tiff_pyramid_reader.html</Path>
    <Anchor>a638f589e9402e9fe6eb08e0e0a5a47ec</Anchor>
    <Abstract>Open an image file for reading. </Abstract>
    <DeclaredIn>TiffPyramidReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~TiffPyramidReader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiffPyramidReader</Scope>
    </TokenIdentifier>
    <Path>class_tiff_pyramid_reader.html</Path>
    <Anchor>a2d45866756f830e4e5d63e5706d7e5aa</Anchor>
    <Abstract>Close the image. </Abstract>
    <DeclaredIn>TiffPyramidReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getImageSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiffPyramidReader</Scope>
    </TokenIdentifier>
    <Path>class_tiff_pyramid_reader.html</Path>
    <Anchor>a109fa3d3565fff1364da1d64522ddd65</Anchor>
    <Abstract>Get the full size of the image. </Abstract>
    <DeclaredIn>TiffPyramidReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTileSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiffPyramidReader</Scope>
    </TokenIdentifier>
    <Path>class_tiff_pyramid_reader.html</Path>
    <Anchor>a21feb217c322e2281cebdb8de02cb800</Anchor>
    <Abstract>Get the size of the image tiles (all tiles have the same size). </Abstract>
    <DeclaredIn>TiffPyramidReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBytesPerPixel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiffPyramidReader</Scope>
    </TokenIdentifier>
    <Path>class_tiff_pyramid_reader.html</Path>
    <Anchor>ad6cfb76c30597cd6dacc05e27d4a3ecd</Anchor>
    <Abstract>Get the number of bytes by pixel. </Abstract>
    <DeclaredIn>TiffPyramidReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findTopPyramidLevel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiffPyramidReader</Scope>
    </TokenIdentifier>
    <Path>class_tiff_pyramid_reader.html</Path>
    <Anchor>adba8e32f05b98218282f42e5644c2790</Anchor>
    <Abstract>Find the index of the top level of the pyramid. </Abstract>
    <DeclaredIn>TiffPyramidReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findLevel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiffPyramidReader</Scope>
    </TokenIdentifier>
    <Path>class_tiff_pyramid_reader.html</Path>
    <Anchor>a9ad7a76ee0d00ca86babe8e7a00684b8</Anchor>
    <Abstract>Find the level of the pyramid whose dimensions are equal to or directly smaller than the target image...</Abstract>
    <DeclaredIn>TiffPyramidReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiffPyramidReader</Scope>
    </TokenIdentifier>
    <Path>class_tiff_pyramid_reader.html</Path>
    <Anchor>a3548956fee327c134918fb05fbb65ac5</Anchor>
    <Abstract>Read a tile at the given indices and level of detail. </Abstract>
    <DeclaredIn>TiffPyramidReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readTopLevelImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiffPyramidReader</Scope>
    </TokenIdentifier>
    <Path>class_tiff_pyramid_reader.html</Path>
    <Anchor>ae1dab67ed7e2115c2be1a807314bb7c4</Anchor>
    <Abstract>Read the image at the top of the pyramid (i.e. </Abstract>
    <DeclaredIn>TiffPyramidReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiffPyramidReader</Scope>
    </TokenIdentifier>
    <Path>class_tiff_pyramid_reader.html</Path>
    <Anchor>a5db70eed319606338693298a76079b07</Anchor>
    <Abstract>Get the size of the pyramid at a certain level of detail. </Abstract>
    <DeclaredIn>TiffPyramidReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiffPyramidReader</Scope>
    </TokenIdentifier>
    <Path>class_tiff_pyramid_reader.html</Path>
    <Anchor>a187c3d86df808c3f5c925f91a5762a0b</Anchor>
    <Abstract>Read an entire level of the pyramid as a single image. </Abstract>
    <DeclaredIn>TiffPyramidReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tile</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Tile</Scope>
    </TokenIdentifier>
    <Path>class_tile.html</Path>
    <Abstract>Qml item to render an image tile with texture double-buffering. </Abstract>
    <DeclaredIn>Tile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateBackTexture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>Tile</Scope>
    </TokenIdentifier>
    <Path>class_tile.html</Path>
    <Anchor>a72c355f2fd017a52db352bdd9496d7b5</Anchor>
    <Abstract>Upload the given image to the back texture. </Abstract>
    <DeclaredIn>Tile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setShowBorder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>Tile</Scope>
    </TokenIdentifier>
    <Path>class_tile.html</Path>
    <Anchor>a6bad45f0c243e03d3ff7cca96eb2a3a8</Anchor>
    <Abstract>Show a border around the tile (for debugging purposes). </Abstract>
    <DeclaredIn>Tile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>Tile</Scope>
    </TokenIdentifier>
    <Path>class_tile.html</Path>
    <Anchor>aa25c497af8534d86245f6fced15579eb</Anchor>
    <Abstract>Swap the front and back texture. </Abstract>
    <DeclaredIn>Tile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showBorderChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Tile</Scope>
    </TokenIdentifier>
    <Path>class_tile.html</Path>
    <Anchor>a028768ac22c3cdea32c1f364b3574237</Anchor>
    <Abstract>Notifier for the showBorder property. </Abstract>
    <DeclaredIn>Tile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestNextFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Tile</Scope>
    </TokenIdentifier>
    <Path>class_tile.html</Path>
    <Anchor>a72e66afddcbbbdb1b4f6afdfff91eafb</Anchor>
    <Abstract>Request a texture update from the DataProvider. </Abstract>
    <DeclaredIn>Tile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readyToSwap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Tile</Scope>
    </TokenIdentifier>
    <Path>class_tile.html</Path>
    <Anchor>aec689d070cb6a64010dceb9a0a8cf55a</Anchor>
    <Abstract>Notify that the back texture has been updated and it can be swapped. </Abstract>
    <DeclaredIn>Tile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getId</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tile</Scope>
    </TokenIdentifier>
    <Path>class_tile.html</Path>
    <Anchor>a6a653b4a1bfe89750a133644af00cc72</Anchor>
    <DeclaredIn>Tile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getShowBorder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tile</Scope>
    </TokenIdentifier>
    <Path>class_tile.html</Path>
    <Anchor>a0fbceb037e1e468b30a8a5fa492f47fa</Anchor>
    <DeclaredIn>Tile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tile</Scope>
    </TokenIdentifier>
    <Path>class_tile.html</Path>
    <Anchor>aa32d44a7e8b178afd2a05b326acfc899</Anchor>
    <Abstract>Request an update of the back texture, resing it if necessary. </Abstract>
    <DeclaredIn>Tile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSizePolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tile</Scope>
    </TokenIdentifier>
    <Path>class_tile.html</Path>
    <Anchor>a441cb2fbdf0fbc0792693a2713a2bfad</Anchor>
    <Abstract>Set the size policy. </Abstract>
    <DeclaredIn>Tile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Tile</Scope>
    </TokenIdentifier>
    <Path>class_tile.html</Path>
    <Anchor>ac6f23c7807989d67d19951fcfa18f7b5</Anchor>
    <Abstract>Create a shared Tile. </Abstract>
    <DeclaredIn>Tile.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TiledSynchronizer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Abstract>A base synchronizer used for tiled content types with optional LOD. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TiledSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a70ae3f4171110fc5308407e870044fcd</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a87ca86829ead6c83dbaba10fb67a2940</Anchor>
    <Abstract>Update the tiles. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onSwapReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a8ae5165f31bd9575d16a2849c46eb256</Anchor>
    <Abstract>Called when a tile is ready to swap. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canSwapTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a25d7a4e588651907f5de2a7d843590d9</Anchor>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swapTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a66b1596107ae5c900f74142247f830ea</Anchor>
    <Abstract>Call to swap tiles when TileSwapPolicy is SwapTilesSynchronously. </Abstract>
    <DeclaredIn>TiledSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aa9b57c8a735fbfb9b35e3e79d9ac9682</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ContentSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aac4d27f2dcb82846eb5e94a8f281aa5f</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>ae4600555d7d806973b3d3106e5f778c7</Anchor>
    <Abstract>Update the Content. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTilesArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a7494f7f7b89c9d981001b08c80379071</Anchor>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a0933ca4f13b67c2d2aa0f3e165076bb3</Anchor>
    <Abstract>Get statistics about this Content. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoomContextVisible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a8abee6251a6c2f9a3640bf3a23d4332a</Anchor>
    <Abstract>Check if the zoom context tile is visible in Qml. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDataSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aa95495c05b817c1e4dc739ee588c3cc4</Anchor>
    <Abstract>Get the data source. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createZoomContextTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a41e88f5e830d43f281b3a938ee664f39</Anchor>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a83072124703f035d6dfa466cc1cf73d5</Anchor>
    <Abstract>Get the view for this synchronizer. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_lod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a6fbe44ca96d25a41cd1db23e6437c696</Anchor>
    <Abstract>LOD used to obtain the list of visible tiles from the data source. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_channel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a397b544b5f7a00e38512b1042719c663</Anchor>
    <Abstract>Channel used to obtain the list of visible tiles. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_visibleTilesArea</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a30b3e4b8fffc7a05ad02567caac47c0d</Anchor>
    <Abstract>Area used to obtain the list of visible tiles from the data source. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_ignoreSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a661e203de9c571ab12a1fb0a2bda0c69</Anchor>
    <Abstract>Tiles to be ignored; must be managed manually. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateExistingTiles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>TiledSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_tiled_synchronizer.html</Path>
    <Anchor>a6562348f5dfdb774990e49e1e817cc29</Anchor>
    <Abstract>Update texture and coordinates of tiles which are already visible. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onRequestNextFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a134db7d6cbe00b6886e5d8c30c7ceac6</Anchor>
    <Abstract>Called when a tile has to be updated, re-emits requestTileUpdate. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZoomContextVisible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a38b82b0163d7871040fa78bf8145a7b7</Anchor>
    <Abstract>Set by the Qml ZoomContext element. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tilesAreaChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aac807a9cb073a52d88a80ceca93b34a3</Anchor>
    <Abstract>Notifier for the tiles area property. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>statisticsChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a8b2131d6b3874d8d932a101ec3dcde05</Anchor>
    <Abstract>Notifier for the statistics property. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zoomContextVisibleChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a7223c8186607dd080abc644b359167a0</Anchor>
    <Abstract>Notifier for the zoomContextVisible property. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a07a22964fedee87ec47fddc4b02a40f0</Anchor>
    <Abstract>Notify the window to add a tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>a755db8af943fc6bd0aab4220320d3a89</Anchor>
    <Abstract>Notify the window to remove a tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>aba03b3c5af16950946e91c893d20eeaf</Anchor>
    <Abstract>Notify to update a tile&amp;#39;s coordinates. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestTileUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>ada17c27d8584a4909d023802ded6b6fa</Anchor>
    <Abstract>Request an update of a specific tile. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zoomContextTileChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>ContentSynchronizer</Scope>
    </TokenIdentifier>
    <Path>class_content_synchronizer.html</Path>
    <Anchor>addacc933144498d3686f4f2fc54d828a</Anchor>
    <Abstract>Notify that the zoom context tile has changed and must be recreated. </Abstract>
    <DeclaredIn>ContentSynchronizer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VectorialContent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>VectorialContent</Scope>
    </TokenIdentifier>
    <Path>class_vectorial_content.html</Path>
    <Abstract>Base class for vectorial content types. </Abstract>
    <DeclaredIn>VectorialContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VectorialContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>VectorialContent</Scope>
    </TokenIdentifier>
    <Path>class_vectorial_content.html</Path>
    <Anchor>aee9a53f4f5acc149fe99f83b3eb2766e</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>VectorialContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>VectorialContent</Scope>
    </TokenIdentifier>
    <Path>class_vectorial_content.html</Path>
    <Anchor>ab9b1688c1800e0b4e8ab0c12971fd459</Anchor>
    <DeclaredIn>VectorialContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canBeZoomed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>VectorialContent</Scope>
    </TokenIdentifier>
    <Path>class_vectorial_content.html</Path>
    <Anchor>ab37d163ac4b16051baeab22c5d47e2f1</Anchor>
    <DeclaredIn>VectorialContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Content</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ae491288d2efce7fa63d3e777580630b4</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a31ac405053a2cb5e157e5054b1012350</Anchor>
    <Abstract>Make a clone of this Content using binary serialization. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUri</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0ca4482bc84b9be50eb4bbc4a2c4ecac</Anchor>
    <Abstract>Get the content URI. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a919b1b95df11fd1ad0cf01d065de577d</Anchor>
    <Abstract>Get the content type. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFilePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a234f77ec77f331f409d65e348a86fb73</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTitle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a57345c59f1ca4a395cfa230bafdc7812</Anchor>
    <Abstract>Get the title of the content. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMetadata</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a6822bf4cf94ae866c561b23e62506303</Anchor>
    <Abstract>Read content metadata from the data source. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>aa4681ca97acea99fbe88e20f0e664bc0</Anchor>
    <Abstract>Get the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>width</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>add67cf2f0ec836aabd24a088473f9e9d</Anchor>
    <Abstract>Get the width. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>height</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0ac15e1ba630bc6c6f98d47529f4c48c</Anchor>
    <Abstract>Get the height. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a8cf06fbd623453fd2aa349d91ebbca3b</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPreferredDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a508b7f5c09ffa4f5a1a7f3e89cbec489</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a1b7a6f49f447c124b497b0a844fd6ea6</Anchor>
    <Abstract>Set the dimensions. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a113bd8ba35685e77bcf8a8650fab636a</Anchor>
    <Abstract>Get the aspect ratio. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasFixedAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>adceac372a702843a1e0bd207f670680a</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKeyboardState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a41cdb80d25bbb1f3f9e1b36bfb6b2515</Anchor>
    <Abstract>Get the keyboard state from QML. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a461bb62d3989d0eb5b4d1f824e7a66c0</Anchor>
    <Abstract>Get the zoom rectangle in normalized coordinates, [0,0,1,1] default. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZoomRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a0f3e5f9203b97450e3856d39a12807e3</Anchor>
    <Abstract>Set the zoom rectangle in normalized coordinates. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isZoomed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>af9177091ab70e17f93b736d77e07bbee</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>ad7e55aa12c354279dbe776de66a5635f</Anchor>
    <Abstract>Resets the zoom to [0,0,1,1]. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSizeHints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a70292d652fb37ee21640801fce53c186</Anchor>
    <Abstract>Set optional size hints to constrain resize/scale and 1:1 size. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCaptureInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a7e7c36edf987322675eea81f27e8017d</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCaptureInteraction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a18477814caa57d8f9aa0330fd19487ab</Anchor>
    <Abstract>Tell the content to capture interaction (only for Policy::AUTO). </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>VectorialContent</Scope>
    </TokenIdentifier>
    <Path>class_vectorial_content.html</Path>
    <Anchor>a02ed9ed4fd5cfea1f01912271d06ed95</Anchor>
    <Abstract>Set the maximum factor for zoom and resize; value times base size. </Abstract>
    <DeclaredIn>VectorialContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>VectorialContent</Scope>
    </TokenIdentifier>
    <Path>class_vectorial_content.html</Path>
    <Anchor>ac40105f009e9278f53d4843c75cee9a5</Anchor>
    <DeclaredIn>VectorialContent.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a87465efbfaf4e2e5b0a5e7e8af0985f2</Anchor>
    <Abstract>Set the maximum factor for zoom and resize; value times content size. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a04642ff3171681aa5fd2c8c8291a7949</Anchor>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Content</Scope>
    </TokenIdentifier>
    <Path>class_content.html</Path>
    <Anchor>a44c022cb6fed6fb1b0dff45e39ececb9</Anchor>
    <Abstract>Emitted by any Content subclass when its state has been modified. </Abstract>
    <DeclaredIn>Content.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VisibilityHelper</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>VisibilityHelper</Scope>
    </TokenIdentifier>
    <Path>class_visibility_helper.html</Path>
    <Abstract>Helper to determine the visible parts of windows on the wall. </Abstract>
    <DeclaredIn>VisibilityHelper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallApplication</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WallApplication</Scope>
    </TokenIdentifier>
    <Path>class_wall_application.html</Path>
    <Abstract>The main application for Wall processes. </Abstract>
    <DeclaredIn>WallApplication.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallApplication</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallApplication</Scope>
    </TokenIdentifier>
    <Path>class_wall_application.html</Path>
    <Anchor>a8b3f627770c09407345a9dbbacb29979</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WallApplication.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~WallApplication</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallApplication</Scope>
    </TokenIdentifier>
    <Path>class_wall_application.html</Path>
    <Anchor>a8178cc81cec13ae323948ade5a76227a</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>WallApplication.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallConfiguration</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WallConfiguration</Scope>
    </TokenIdentifier>
    <Path>struct_wall_configuration.html</Path>
    <Abstract>The configuration parameters for a specific Wall process. </Abstract>
    <DeclaredIn>WallConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallConfiguration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>WallConfiguration</Scope>
    </TokenIdentifier>
    <Path>struct_wall_configuration.html</Path>
    <Anchor>a19f5ea8c2dd2557f9b34cbdd4420c597</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WallConfiguration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>WallConfiguration</Scope>
    </TokenIdentifier>
    <Path>struct_wall_configuration.html</Path>
    <Anchor>a73913c1c2caa45f21a47f98fa01d33ec</Anchor>
    <Abstract>The MPI index of the process. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>surfaces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>WallConfiguration</Scope>
    </TokenIdentifier>
    <Path>struct_wall_configuration.html</Path>
    <Anchor>a3e227cc3edb55bdb59b0941ecdfe0a66</Anchor>
    <Abstract>The list of all the surfaces. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processCountForHost</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>WallConfiguration</Scope>
    </TokenIdentifier>
    <Path>struct_wall_configuration.html</Path>
    <Anchor>a161ef23347a12894c9fa05c933c9020e</Anchor>
    <Abstract>The number of wall processes running on the same host. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>host</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Process</Scope>
    </TokenIdentifier>
    <Path>struct_process.html</Path>
    <Anchor>ad66e481c67a2c46c0dba898558352794</Anchor>
    <Abstract>The name of the host on which this wall process is running. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>screens</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Process</Scope>
    </TokenIdentifier>
    <Path>struct_process.html</Path>
    <Anchor>a4ea5ce8770ae5d6324b6c0f414d0061e</Anchor>
    <Abstract>The screen configurations for this process. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallFromMasterChannel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WallFromMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_from_master_channel.html</Path>
    <Abstract>Receiving channel from the master application to the wall processes. </Abstract>
    <DeclaredIn>WallFromMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processMessages</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>WallFromMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_from_master_channel.html</Path>
    <Anchor>ac31fbc2ac8f416a651cd24b736af42f9</Anchor>
    <Abstract>Process messages until the QUIT message is received. </Abstract>
    <DeclaredIn>WallFromMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>received</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>WallFromMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_from_master_channel.html</Path>
    <Anchor>a2d2db5ceac6c3fe0dc8d602c56996b77</Anchor>
    <Abstract>Emitted when a scene was recieved. </Abstract>
    <DeclaredIn>WallFromMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>received</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>WallFromMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_from_master_channel.html</Path>
    <Anchor>afb6a2af77cb53d4daff226e765de3338</Anchor>
    <Abstract>Emitted when new Options were recieved. </Abstract>
    <DeclaredIn>WallFromMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>received</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>WallFromMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_from_master_channel.html</Path>
    <Anchor>aa921eea8af21f47289e24e7aa4a9a3b1</Anchor>
    <Abstract>Emitted when a new CountdownStatus was received. </Abstract>
    <DeclaredIn>WallFromMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>received</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>WallFromMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_from_master_channel.html</Path>
    <Anchor>a0b75e7467e0bbe15efcb2c93341c3b0c</Anchor>
    <Abstract>Emitted when new ScreenLock was recieved. </Abstract>
    <DeclaredIn>WallFromMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>received</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>WallFromMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_from_master_channel.html</Path>
    <Anchor>a32ac04eade034a8cd78c198a1b6decfd</Anchor>
    <Abstract>Emitted when new Markers were recieved. </Abstract>
    <DeclaredIn>WallFromMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>received</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>WallFromMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_from_master_channel.html</Path>
    <Anchor>a29724225f5005cb960dc49ab21d36306</Anchor>
    <Abstract>Emitted when a new PixelStream frame was recieved. </Abstract>
    <DeclaredIn>WallFromMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receivedScreenshotRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>WallFromMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_from_master_channel.html</Path>
    <Anchor>a49c5e352d07f230a7a26c1bb6b7fa9c2</Anchor>
    <Abstract>Emitted when a screenshot was requested. </Abstract>
    <DeclaredIn>WallFromMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receivedQuit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>WallFromMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_from_master_channel.html</Path>
    <Anchor>af64048387bb958cc6678929489337ebc</Anchor>
    <Abstract>Emitted when the quit message was recieved. </Abstract>
    <DeclaredIn>WallFromMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallFromMasterChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallFromMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_from_master_channel.html</Path>
    <Anchor>a8f799726df2923051e9615728de8ed36</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WallFromMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receiveConfiguration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallFromMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_from_master_channel.html</Path>
    <Anchor>ac4531ec33a0681e410ddd556966f1f56</Anchor>
    <Abstract>Receive the inital Configuration sent by the master process. </Abstract>
    <DeclaredIn>WallFromMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallRenderContext</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WallRenderContext</Scope>
    </TokenIdentifier>
    <Path>struct_wall_render_context.html</Path>
    <Abstract>Context for rendering Qml items in a wall window. </Abstract>
    <DeclaredIn>WallRenderContext.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallSurfaceRenderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WallSurfaceRenderer</Scope>
    </TokenIdentifier>
    <Path>class_wall_surface_renderer.html</Path>
    <Abstract>Render a surface in Qml in the wall application. </Abstract>
    <DeclaredIn>WallSurfaceRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateRenderedFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>WallSurfaceRenderer</Scope>
    </TokenIdentifier>
    <Path>class_wall_surface_renderer.html</Path>
    <Anchor>a70a43321ac37c01f9ea57827e72a07c7</Anchor>
    <Abstract>Increment number of rendered/swapped frames for FPS display. </Abstract>
    <DeclaredIn>WallSurfaceRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallSurfaceRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallSurfaceRenderer</Scope>
    </TokenIdentifier>
    <Path>class_wall_surface_renderer.html</Path>
    <Anchor>af32dbfa84f891b8d9fe7c6f5c20ea1b5</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WallSurfaceRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~WallSurfaceRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallSurfaceRenderer</Scope>
    </TokenIdentifier>
    <Path>class_wall_surface_renderer.html</Path>
    <Anchor>aecdb53b4ac01c1c0544209fcd050bdc2</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>WallSurfaceRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSurface</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallSurfaceRenderer</Scope>
    </TokenIdentifier>
    <Path>class_wall_surface_renderer.html</Path>
    <Anchor>a1f995d932403205b74f4abbd8e291ea6</Anchor>
    <Abstract>Set the Surface to render, replacing the previous one. </Abstract>
    <DeclaredIn>WallSurfaceRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMarkers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallSurfaceRenderer</Scope>
    </TokenIdentifier>
    <Path>class_wall_surface_renderer.html</Path>
    <Anchor>a745c7c3d07d3face1580b836547267ec</Anchor>
    <Abstract>Set the touchpoint&amp;#39;s markers. </Abstract>
    <DeclaredIn>WallSurfaceRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRenderingOptions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallSurfaceRenderer</Scope>
    </TokenIdentifier>
    <Path>class_wall_surface_renderer.html</Path>
    <Anchor>a9cb0c3fe1898a1964ef1c8bd7caace9a</Anchor>
    <Abstract>Set different options used for rendering. </Abstract>
    <DeclaredIn>WallSurfaceRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScreenLock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallSurfaceRenderer</Scope>
    </TokenIdentifier>
    <Path>class_wall_surface_renderer.html</Path>
    <Anchor>aa2a5f2e6b668f7bfb0108b85b01af592</Anchor>
    <Abstract>Set the ScreenLock replacing the previous one. </Abstract>
    <DeclaredIn>WallSurfaceRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCountdownStatus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallSurfaceRenderer</Scope>
    </TokenIdentifier>
    <Path>class_wall_surface_renderer.html</Path>
    <Anchor>a77fb9db18ff874e9bd404b907276bf01</Anchor>
    <Abstract>Set countdown status used to display the inactivity timeout. </Abstract>
    <DeclaredIn>WallSurfaceRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>needRedraw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallSurfaceRenderer</Scope>
    </TokenIdentifier>
    <Path>class_wall_surface_renderer.html</Path>
    <Anchor>a16badebcf2c48f17481d237173bbc5d9</Anchor>
    <DeclaredIn>WallSurfaceRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallToMasterChannel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WallToMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_master_channel.html</Path>
    <Abstract>Sending channel from a wall process to the master application. </Abstract>
    <DeclaredIn>WallToMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendRequestFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>WallToMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_master_channel.html</Path>
    <Anchor>a74fb74cce59cd3a2bd40b1a87e0e418e</Anchor>
    <Abstract>Send a request frame message for the given pixel stream. </Abstract>
    <DeclaredIn>WallToMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendPixelStreamClose</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>WallToMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_master_channel.html</Path>
    <Anchor>a17d5e18025e9c05d4cd255a8438bff02</Anchor>
    <Abstract>Send a request to the master application to close the given pixel stream. </Abstract>
    <DeclaredIn>WallToMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendScreenshot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>WallToMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_master_channel.html</Path>
    <Anchor>ac6b8cf0bdad9e84d7c61da26807ef46e</Anchor>
    <Abstract>Send a screenshot to the master application. </Abstract>
    <DeclaredIn>WallToMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendQuit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>slot</Type>
      <Scope>WallToMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_master_channel.html</Path>
    <Anchor>a41e1681f9d52ad4debdcf1b41ade7fc5</Anchor>
    <Abstract>Send quit message to the master application to stop the receiver. </Abstract>
    <DeclaredIn>WallToMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallToMasterChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToMasterChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_master_channel.html</Path>
    <Anchor>a566e3c97ead7e0578a81e11d2d24adcd</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WallToMasterChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallToWallChannel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Abstract>Communication channel between the Wall processes. </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallToWallChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>aba4b1dba030d03dde3e677ded75a688f</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRank</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>a3a7e61b7880b49c94d48b9d196104d3d</Anchor>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>globalSum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>a01ed3dfc790638a104438814b6302a1d</Anchor>
    <Abstract>Get the sum of the given local values across all processes. </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>ae2cde7fe2d3fcbc7afb2de6b009355f4</Anchor>
    <Abstract>Check if all processes are ready to perform a common action. </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>ac706401a3e22bc99cdf8ec71960b2275</Anchor>
    <Abstract>Get the current timestamp, synchronized accross processes. </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synchronizeClock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>a10fc64c27e001a7399fba31effaba473</Anchor>
    <Abstract>Synchronize clock time across all processes. </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>globalBarrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>a13ea371fe1bbfdcb91055f47ffa4f705</Anchor>
    <Abstract>Block execution until all programs have reached the barrier. </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkVersion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>addd62ca5f6199f4ca0c31c23d282066d</Anchor>
    <Abstract>Check that all processes have the same version of an object. </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>electLeader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>a947d17d21cade981e36a68f5bc7407ad</Anchor>
    <Abstract>Elect a leader amongst wall processes. </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>broadcast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>a47179cece5d95ee61d438b737700e971</Anchor>
    <Abstract>Broadcast a timestamp. </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receiveTimestampBroadcast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallToWallChannel</Scope>
    </TokenIdentifier>
    <Path>class_wall_to_wall_channel.html</Path>
    <Anchor>a67047a61902842ac5e330b0474333d8d</Anchor>
    <Abstract>Receive a timestamp broadcasted by broadcast(timestamp). </Abstract>
    <DeclaredIn>WallToWallChannel.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WallWindow</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WallWindow</Scope>
    </TokenIdentifier>
    <Path>class_wall_window.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>imageGrabbed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>WallWindow</Scope>
    </TokenIdentifier>
    <Path>class_wall_window.html</Path>
    <Anchor>a594fe1a5cf3b0466ec8721110fad1726</Anchor>
    <Abstract>Emitted after syncAndRender() has been called with grab set to true. </Abstract>
    <DeclaredIn>WallWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSurfaceIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallWindow</Scope>
    </TokenIdentifier>
    <Path>class_wall_window.html</Path>
    <Anchor>a9301f97052680ddcefd4efd17099a420</Anchor>
    <DeclaredIn>WallWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSwapSynchronizer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallWindow</Scope>
    </TokenIdentifier>
    <Path>class_wall_window.html</Path>
    <Anchor>a455fc5c47c63f83c1488f480de499f37</Anchor>
    <Abstract>Set a swap synchronizer. </Abstract>
    <DeclaredIn>WallWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallWindow</Scope>
    </TokenIdentifier>
    <Path>class_wall_window.html</Path>
    <Anchor>a2d9a30967d6e1340aadb984e35520161</Anchor>
    <Abstract>Synchronize scene objects with render thread and trigger frame rendering. </Abstract>
    <DeclaredIn>WallWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSurface</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallWindow</Scope>
    </TokenIdentifier>
    <Path>class_wall_window.html</Path>
    <Anchor>a0e4575ac553893f15fbc8b4e49094311</Anchor>
    <Abstract>Set new surface. </Abstract>
    <DeclaredIn>WallWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScreenLock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallWindow</Scope>
    </TokenIdentifier>
    <Path>class_wall_window.html</Path>
    <Anchor>a1df506900449515e8c79b6c8623f39f4</Anchor>
    <Abstract>Set new screen lock. </Abstract>
    <DeclaredIn>WallWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCountdownStatus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallWindow</Scope>
    </TokenIdentifier>
    <Path>class_wall_window.html</Path>
    <Anchor>a2cdeb435b2432c693151090eb7ff19e2</Anchor>
    <Abstract>Set new countdown status. </Abstract>
    <DeclaredIn>WallWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMarkers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallWindow</Scope>
    </TokenIdentifier>
    <Path>class_wall_window.html</Path>
    <Anchor>adbd10915534ee8eecdfd476a68f34c38</Anchor>
    <Abstract>Set new touchpoint&amp;#39;s markers. </Abstract>
    <DeclaredIn>WallWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRenderOptions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WallWindow</Scope>
    </TokenIdentifier>
    <Path>class_wall_window.html</Path>
    <Anchor>ad5f47bfad5bbab58dec6e0d951d8d16c</Anchor>
    <Abstract>Set new render options. </Abstract>
    <DeclaredIn>WallWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>WallWindow</Scope>
    </TokenIdentifier>
    <Path>class_wall_window.html</Path>
    <Anchor>a3c81d109e1f94d071f5e81f0d7abe6cd</Anchor>
    <Abstract>Create a wall window. </Abstract>
    <DeclaredIn>WallWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createWindows</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>WallWindow</Scope>
    </TokenIdentifier>
    <Path>class_wall_window.html</Path>
    <Anchor>a8cd2691a136c83caaf46be1969cbb3c6</Anchor>
    <Abstract>Create all the windows for the wall process. </Abstract>
    <DeclaredIn>WallWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Window</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Window</Scope>
    </TokenIdentifier>
    <Path>class_window.html</Path>
    <Abstract>A window for displaying Content on the Wall. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contentModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Window</Scope>
    </TokenIdentifier>
    <Path>class_window.html</Path>
    <Anchor>ae64c2821736f0d8777486eee1691050b</Anchor>
    <Abstract>Emitted when the Content signals that it has been modified. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Window</Scope>
    </TokenIdentifier>
    <Path>class_window.html</Path>
    <Anchor>a8c6cf76fd05d8906df9eca7b6d41f301</Anchor>
    <Abstract>Emitted whenever this object is modified. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>coordinatesChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>signal</Type>
      <Scope>Window</Scope>
    </TokenIdentifier>
    <Path>class_window.html</Path>
    <Anchor>a247e2dd615a834cfe7be285d86b89784</Anchor>
    <Abstract>Emitted when setCoordinates has been called. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Window</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Window</Scope>
    </TokenIdentifier>
    <Path>class_window.html</Path>
    <Anchor>ac97ec2620292e4177e64adcb7c7623e4</Anchor>
    <Abstract>Create a new window. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Window</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Window</Scope>
    </TokenIdentifier>
    <Path>class_window.html</Path>
    <Anchor>afca36f69bb39806aac25789bf361f771</Anchor>
    <Abstract>Create a new window. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Window</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Window</Scope>
    </TokenIdentifier>
    <Path>class_window.html</Path>
    <Anchor>a245d821e6016fa1f6970ccbbedd635f6</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Window</Scope>
    </TokenIdentifier>
    <Path>class_window.html</Path>
    <Anchor>a32425222b3ae8c64911046559838d1f2</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPanel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Window</Scope>
    </TokenIdentifier>
    <Path>class_window.html</Path>
    <Anchor>ac9901f376045690b18c63f3ae2d69572</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Window</Scope>
    </TokenIdentifier>
    <Path>class_window.html</Path>
    <Anchor>abb3ea96f846d356c50f77508a024e5d5</Anchor>
    <Abstract>Get the content. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getContentPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Window</Scope>
    </TokenIdentifier>
    <Path>class_window.html</Path>
    <Anchor>a1ad2ff1fd57a03a78a77ad19320e777b</Anchor>
    <Abstract>Get the content from QML. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Window</Scope>
    </TokenIdentifier>
    <Path>class_window.html</Path>
    <Anchor>a9fc5315561ed4faa55bd6cc6134e20a4</Anchor>
    <Abstract>Set the content, replacing the existing one. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCoordinates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Window</Scope>
    </TokenIdentifier>
    <Path>class_window.html</Path>
    <Anchor>a171eee28e880bb1a51cd1309dcdf22f7</Anchor>
    <Abstract>Set the coordinates in pixel units. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getActiveHandle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Window</Scope>
    </TokenIdentifier>
    <Path>class_window.html</Path>
    <Anchor>ab955119825a1377c608afd29131ddb29</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getResizePolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Window</Scope>
    </TokenIdentifier>
    <Path>class_window.html</Path>
    <Anchor>a6991a8876db8423d16290a0daabdd01d</Anchor>
    <Abstract>Get the current resize policy. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Window</Scope>
    </TokenIdentifier>
    <Path>class_window.html</Path>
    <Anchor>ad8f8b6359089f93facb342c98650dac4</Anchor>
    <Abstract>Get the current state. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Window</Scope>
    </TokenIdentifier>
    <Path>class_window.html</Path>
    <Anchor>a20eca8972fd9a5022076251ef57bb76a</Anchor>
    <Abstract>Set the current mode. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFocused</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Window</Scope>
    </TokenIdentifier>
    <Path>class_window.html</Path>
    <Anchor>a60def4b725b043de2212a89f61dee968</Anchor>
    <Abstract>Is the window focused. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFullscreen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Window</Scope>
    </TokenIdentifier>
    <Path>class_window.html</Path>
    <Anchor>a0b62ec2815986e6412cd6cc388ac4fd7</Anchor>
    <Abstract>Is the window fullscreen. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFocusedCoordinates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Window</Scope>
    </TokenIdentifier>
    <Path>class_window.html</Path>
    <Anchor>ab9b5e3a36f98f32b9a2826e6c021f965</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFocusedCoordinates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Window</Scope>
    </TokenIdentifier>
    <Path>class_window.html</Path>
    <Anchor>a3e42d838aac5997ae071b54f2f949cb9</Anchor>
    <Abstract>Set the focused coordinates of this window. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFullscreenCoordinates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Window</Scope>
    </TokenIdentifier>
    <Path>class_window.html</Path>
    <Anchor>a83bf9fd14cca96ddc029a1634cf9b05a</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFullscreenCoordinates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Window</Scope>
    </TokenIdentifier>
    <Path>class_window.html</Path>
    <Anchor>aa22b4f85b5030b4cc47a2b74cdf2d8f2</Anchor>
    <Abstract>Set the fullscreen coordinates of this window. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDisplayCoordinates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Window</Scope>
    </TokenIdentifier>
    <Path>class_window.html</Path>
    <Anchor>a9ae5c757022501527231234983e8474d</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDisplayCoordinates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Window</Scope>
    </TokenIdentifier>
    <Path>class_window.html</Path>
    <Anchor>adffd2e1569a44db4dfbeca7b0d580a06</Anchor>
    <Abstract>Set the actual display coordinates (depending on the mode). </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Window</Scope>
    </TokenIdentifier>
    <Path>class_window.html</Path>
    <Anchor>a58c31c631dcee92cff5c3b2d2392e419</Anchor>
    <Abstract>Get the current state. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isIdle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Window</Scope>
    </TokenIdentifier>
    <Path>class_window.html</Path>
    <Anchor>a25700a700a654ec21d5879ed036dd7a9</Anchor>
    <Abstract>Check if the window is idle. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMoving</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Window</Scope>
    </TokenIdentifier>
    <Path>class_window.html</Path>
    <Anchor>a2146c15461b88f71df97207a31805a7a</Anchor>
    <Abstract>Check if moving. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isResizing</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Window</Scope>
    </TokenIdentifier>
    <Path>class_window.html</Path>
    <Anchor>a29ad1b41c0739445ee4b49f03242dc3d</Anchor>
    <Abstract>Check if resizing. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isHidden</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Window</Scope>
    </TokenIdentifier>
    <Path>class_window.html</Path>
    <Anchor>a44d30890d5e2db014bb477f80ad889f1</Anchor>
    <Abstract>Check if hidden. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSelected</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Window</Scope>
    </TokenIdentifier>
    <Path>class_window.html</Path>
    <Anchor>a8a3cf4d17caab70f2acc8df5417d3615</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSelected</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Window</Scope>
    </TokenIdentifier>
    <Path>class_window.html</Path>
    <Anchor>a93d2b7ac296d8286ff2241334acc2522</Anchor>
    <Abstract>Select or deselect the window. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVersion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Window</Scope>
    </TokenIdentifier>
    <Path>class_window.html</Path>
    <Anchor>a6c9a0ba947ee78f2b2a2fc95c538a732</Anchor>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>backupModeAndZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Window</Scope>
    </TokenIdentifier>
    <Path>class_window.html</Path>
    <Anchor>a68ceb81f3556bb4d2bec345b5a0710e5</Anchor>
    <Abstract>Backup the mode and zoom rectangle (before making fullscreen). </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>restoreModeAndZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Window</Scope>
    </TokenIdentifier>
    <Path>class_window.html</Path>
    <Anchor>a1ee0e91879205515ca3737523e8048df</Anchor>
    <Abstract>Restore the mode and zoom rectangle (after exiting fullscreen). </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setActiveHandle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Window</Scope>
    </TokenIdentifier>
    <Path>class_window.html</Path>
    <Anchor>a4b02c53edb18348aaf01d61d7bf0f834</Anchor>
    <Abstract>Set the current active resize handle. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setResizePolicy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Window</Scope>
    </TokenIdentifier>
    <Path>class_window.html</Path>
    <Anchor>a40d04bfb5e5fe0a6450f904968ec5eb4</Anchor>
    <Abstract>Set the resize policy. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Window</Scope>
    </TokenIdentifier>
    <Path>class_window.html</Path>
    <Anchor>aee1625836be98582ece614b7ee958718</Anchor>
    <Abstract>Set the current state. </Abstract>
    <DeclaredIn>Window.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>window_not_found_error</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>window_not_found_error</Scope>
    </TokenIdentifier>
    <Path>classwindow__not__found__error.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WindowController</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WindowController</Scope>
    </TokenIdentifier>
    <Path>class_window_controller.html</Path>
    <Abstract>Controller for moving and resizing windows. </Abstract>
    <DeclaredIn>WindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WindowController</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WindowController</Scope>
    </TokenIdentifier>
    <Path>class_window_controller.html</Path>
    <Anchor>a342bcc2a323e9c508c7d12c00c202254</Anchor>
    <Abstract>Create a controller for a window. </Abstract>
    <DeclaredIn>WindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WindowController</Scope>
    </TokenIdentifier>
    <Path>class_window_controller.html</Path>
    <Anchor>aa9a9e9497b93edd14f75b3162a960924</Anchor>
    <Abstract>Resize the window. </Abstract>
    <DeclaredIn>WindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resizeRelative</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WindowController</Scope>
    </TokenIdentifier>
    <Path>class_window_controller.html</Path>
    <Anchor>a4429d850a12a9c000c4e926a45527b8f</Anchor>
    <Abstract>Resize the window relative to the current active window border. </Abstract>
    <DeclaredIn>WindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WindowController</Scope>
    </TokenIdentifier>
    <Path>class_window_controller.html</Path>
    <Anchor>a3e86a0fd011d578220ba0c2e69162153</Anchor>
    <Abstract>Scale the window by the given pixel delta (around the given center). </Abstract>
    <DeclaredIn>WindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>adjustSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WindowController</Scope>
    </TokenIdentifier>
    <Path>class_window_controller.html</Path>
    <Anchor>a1d69530b741e45286e7f505232ff83c6</Anchor>
    <Abstract>Adjust the window coordinates to match the desired state. </Abstract>
    <DeclaredIn>WindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toogleFullscreenMaxSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WindowController</Scope>
    </TokenIdentifier>
    <Path>class_window_controller.html</Path>
    <Anchor>a5d73b9e606e5b0776edd99ea80dc8660</Anchor>
    <Abstract>Toggle between SIZE_FULLSCREEN and SIZE_FULLSCREEN_MAX. </Abstract>
    <DeclaredIn>WindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toggleSelected</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WindowController</Scope>
    </TokenIdentifier>
    <Path>class_window_controller.html</Path>
    <Anchor>a81de343492d52fe1835b0758f0722799</Anchor>
    <Abstract>Toggle the selected state of the window. </Abstract>
    <DeclaredIn>WindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WindowController</Scope>
    </TokenIdentifier>
    <Path>class_window_controller.html</Path>
    <Anchor>a056f9372e1fd66c3c573b80f72b3bd62</Anchor>
    <Abstract>Move the window to the desired position. </Abstract>
    <DeclaredIn>WindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveCenterTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WindowController</Scope>
    </TokenIdentifier>
    <Path>class_window_controller.html</Path>
    <Anchor>aca2e4de9d33e9f041bb564212667c601</Anchor>
    <Abstract>Move the center of the window to the desired position. </Abstract>
    <DeclaredIn>WindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveBy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WindowController</Scope>
    </TokenIdentifier>
    <Path>class_window_controller.html</Path>
    <Anchor>a332bba0bbee2ef1ea786b0cf6affd159</Anchor>
    <Abstract>Move the window by the given delta. </Abstract>
    <DeclaredIn>WindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WindowController</Scope>
    </TokenIdentifier>
    <Path>class_window_controller.html</Path>
    <Anchor>a8767d7223b14ced711721a7ed1803f6b</Anchor>
    <DeclaredIn>WindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WindowController</Scope>
    </TokenIdentifier>
    <Path>class_window_controller.html</Path>
    <Anchor>a812c47f46dbfa60b7a668608814a02f9</Anchor>
    <DeclaredIn>WindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>constrainSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WindowController</Scope>
    </TokenIdentifier>
    <Path>class_window_controller.html</Path>
    <Anchor>a4e1806c3ab55a06c9862fa86a51a535f</Anchor>
    <Abstract>Constrain the given size between getMinSize() and getMaxSize(). </Abstract>
    <DeclaredIn>WindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinSizeAspectRatioCorrect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WindowController</Scope>
    </TokenIdentifier>
    <Path>class_window_controller.html</Path>
    <Anchor>a632e255ad4acb1a4ff13bc8d33df4b54</Anchor>
    <DeclaredIn>WindowController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WindowListWidgetItem</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WindowListWidgetItem</Scope>
    </TokenIdentifier>
    <Path>class_window_list_widget_item.html</Path>
    <Abstract>Represent a Window in a QListView. </Abstract>
    <DeclaredIn>WindowListWidgetItem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WindowListWidgetItem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WindowListWidgetItem</Scope>
    </TokenIdentifier>
    <Path>class_window_list_widget_item.html</Path>
    <Anchor>a5b92274cb279a4cbf097d353055650d8</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WindowListWidgetItem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWindow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WindowListWidgetItem</Scope>
    </TokenIdentifier>
    <Path>class_window_list_widget_item.html</Path>
    <Anchor>a0faad4cf4dfa835416b02186831ab407</Anchor>
    <Abstract>Get the associated Window. </Abstract>
    <DeclaredIn>WindowListWidgetItem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WindowRenderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WindowRenderer</Scope>
    </TokenIdentifier>
    <Path>class_window_renderer.html</Path>
    <Abstract>Provide a Qml representation of a Window on the Wall. </Abstract>
    <DeclaredIn>WindowRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WindowRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WindowRenderer</Scope>
    </TokenIdentifier>
    <Path>class_window_renderer.html</Path>
    <Anchor>ace9faa98cf93f02468421d7c70dab12f</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>WindowRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~WindowRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WindowRenderer</Scope>
    </TokenIdentifier>
    <Path>class_window_renderer.html</Path>
    <Anchor>a9daed3b6182947278310e20d9fd58f80</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>WindowRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WindowRenderer</Scope>
    </TokenIdentifier>
    <Path>class_window_renderer.html</Path>
    <Anchor>a763de5a582c1ce9ac178b1887317640e</Anchor>
    <Abstract>Update the qml object with a new data model. </Abstract>
    <DeclaredIn>WindowRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getQuickItem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WindowRenderer</Scope>
    </TokenIdentifier>
    <Path>class_window_renderer.html</Path>
    <Anchor>abe78ce287297a08b4f088f857ce5485c</Anchor>
    <Abstract>Get the QML item. </Abstract>
    <DeclaredIn>WindowRenderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WindowTouchController</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>WindowTouchController</Scope>
    </TokenIdentifier>
    <Path>class_window_touch_controller.html</Path>
    <Abstract>Controller for interacting with the window on a touch surface. </Abstract>
    <DeclaredIn>WindowTouchController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WindowTouchController</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>WindowTouchController</Scope>
    </TokenIdentifier>
    <Path>class_window_touch_controller.html</Path>
    <Anchor>a15012ee2fc61260d3a9f05647b4936ea</Anchor>
    <Abstract>Create a touch controller for a window. </Abstract>
    <DeclaredIn>WindowTouchController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>XmlParser</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>XmlParser</Scope>
    </TokenIdentifier>
    <Path>class_xml_parser.html</Path>
    <Abstract>Parse information from an xml file. </Abstract>
    <DeclaredIn>XmlParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>YUVImage</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>YUVImage</Scope>
    </TokenIdentifier>
    <Path>class_y_u_v_image.html</Path>
    <Abstract>A common interface for YUV images. </Abstract>
    <DeclaredIn>YUVImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTextureSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>YUVImage</Scope>
    </TokenIdentifier>
    <Path>class_y_u_v_image.html</Path>
    <Anchor>aff12eaaf9ea107ef010845e1c8df1c27</Anchor>
    <DeclaredIn>YUVImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGLPixelFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>YUVImage</Scope>
    </TokenIdentifier>
    <Path>class_y_u_v_image.html</Path>
    <Anchor>ab6f9b4a259ed32b804b97ebbcf7e8d66</Anchor>
    <DeclaredIn>YUVImage.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>a0a9fde6eb7f6f19ffd670385ae142671</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>ac82f68c4a8ef0f5a3ea2a3d1048f5ab6</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>abcd77ea99f53831911ded4b8467be0b6</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDataSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>a2e1bcd0f0639bf89889daed28aad5213</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRowOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>af75d8761f387cf813b0d0c3a3c7f481c</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>a7444680c426d1e73fe370287bf45e2ad</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getColorSpace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>a49481fa1cc7c6b2ab9a1dec20209076b</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGpuImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>ac3e10f35fb8dd895bda5627f43d96907</Anchor>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateGpuImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Image</Scope>
    </TokenIdentifier>
    <Path>class_image.html</Path>
    <Anchor>a8284c68a45d845a6ffd8eb81a4544092</Anchor>
    <Abstract>Generate the GPU image. </Abstract>
    <DeclaredIn>Image.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ZoomController</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ZoomController</Scope>
    </TokenIdentifier>
    <Path>class_zoom_controller.html</Path>
    <Abstract>Handle user interaction with a zoomable content. </Abstract>
    <DeclaredIn>ZoomController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ZoomController</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ZoomController</Scope>
    </TokenIdentifier>
    <Path>class_zoom_controller.html</Path>
    <Anchor>a035c13220e40d213d5816f97f5ce0944</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>ZoomController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>adjustZoomToContentAspectRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ZoomController</Scope>
    </TokenIdentifier>
    <Path>class_zoom_controller.html</Path>
    <Anchor>a154a8cd5a99be532f438bcd864dd9a9b</Anchor>
    <Abstract>Adjust the zoom of the window to the aspect ratio of the content. </Abstract>
    <DeclaredIn>ZoomController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ContentController</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentController</Scope>
    </TokenIdentifier>
    <Path>class_content_controller.html</Path>
    <Anchor>ad47bedf89f88c7fc2d9b732732943901</Anchor>
    <Abstract>Construct a default content controller that does nothing. </Abstract>
    <DeclaredIn>ContentController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ContentController</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ContentController</Scope>
    </TokenIdentifier>
    <Path>class_content_controller.html</Path>
    <Anchor>ae4414680c4cb122ddebf84df4bed777c</Anchor>
    <Abstract>Virtual destructor. </Abstract>
    <DeclaredIn>ContentController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>ContentController</Scope>
    </TokenIdentifier>
    <Path>class_content_controller.html</Path>
    <Anchor>a8955b4735b19c373bdbaf77ca09dccae</Anchor>
    <Abstract>Construct a content controller for the given window. </Abstract>
    <DeclaredIn>ContentController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ZoomHelper</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ZoomHelper</Scope>
    </TokenIdentifier>
    <Path>class_zoom_helper.html</Path>
    <Abstract>A helper class to convert zoom rectangle to and from scene coordinates. </Abstract>
    <DeclaredIn>ZoomHelper.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boost::serialization::implementation_level&lt; std::chrono::duration&lt; Rep, Period &gt; &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>boost::serialization::implementation_level&lt; std::chrono::duration&lt; Rep, Period &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>structboost_1_1serialization_1_1implementation__level_3_01std_1_1chrono_1_1duration_3_01_rep_00_01_period_01_4_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boost::serialization::implementation_level&lt; std::chrono::time_point&lt; C, D &gt; &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>boost::serialization::implementation_level&lt; std::chrono::time_point&lt; C, D &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>structboost_1_1serialization_1_1implementation__level_3_01std_1_1chrono_1_1time__point_3_01_c_00_01_d_01_4_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boost::serialization::is_bitwise_serializable&lt; std::chrono::duration&lt; Rep, Period &gt; &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>boost::serialization::is_bitwise_serializable&lt; std::chrono::duration&lt; Rep, Period &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>structboost_1_1serialization_1_1is__bitwise__serializable_3_01std_1_1chrono_1_1duration_3_01_rep_00_01_period_01_4_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boost::serialization::is_bitwise_serializable&lt; std::chrono::time_point&lt; C, D &gt; &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>boost::serialization::is_bitwise_serializable&lt; std::chrono::time_point&lt; C, D &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>structboost_1_1serialization_1_1is__bitwise__serializable_3_01std_1_1chrono_1_1time__point_3_01_c_00_01_d_01_4_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boost::serialization::tracking_level&lt; std::chrono::duration&lt; Rep, Period &gt; &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>boost::serialization::tracking_level&lt; std::chrono::duration&lt; Rep, Period &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>structboost_1_1serialization_1_1tracking__level_3_01std_1_1chrono_1_1duration_3_01_rep_00_01_period_01_4_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boost::serialization::tracking_level&lt; std::chrono::time_point&lt; C, D &gt; &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>boost::serialization::tracking_level&lt; std::chrono::time_point&lt; C, D &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>structboost_1_1serialization_1_1tracking__level_3_01std_1_1chrono_1_1time__point_3_01_c_00_01_d_01_4_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>geometry</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>geometry</Scope>
    </TokenIdentifier>
    <Path>namespacegeometry.html</Path>
    <Abstract>Set of geometry functions. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAdjustedSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>geometry</Scope>
    </TokenIdentifier>
    <Path>namespacegeometry.html</Path>
    <Anchor>ae1ab446bded965c45a064ab7618736b8</Anchor>
    <Abstract>Get the size of a surface scaled to fit inside another one. </Abstract>
    <DeclaredIn>geometry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getExpandedSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>geometry</Scope>
    </TokenIdentifier>
    <Path>namespacegeometry.html</Path>
    <Anchor>ab1c3e3d394b9841e9b211cbb0ed6f1c3</Anchor>
    <Abstract>Get the size of a surface scaled to fit around another one. </Abstract>
    <DeclaredIn>geometry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>adjustAndCenter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>geometry</Scope>
    </TokenIdentifier>
    <Path>namespacegeometry.html</Path>
    <Anchor>a0c0237eb8f534c1d4e055e7a61cc7b1c</Anchor>
    <Abstract>Adjust a surface to exactly fit inside another one, preserving aspect ratio. </Abstract>
    <DeclaredIn>geometry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resizeAroundPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>geometry</Scope>
    </TokenIdentifier>
    <Path>namespacegeometry.html</Path>
    <Anchor>a954a0cdcba05798d7ba90fa47dcf175b</Anchor>
    <Abstract>Resize a rectangle around a point of interest. </Abstract>
    <DeclaredIn>geometry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>constrain</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>geometry</Scope>
    </TokenIdentifier>
    <Path>namespacegeometry.html</Path>
    <Anchor>a4a93d0fbf1c6449cb565e746734d5436</Anchor>
    <Abstract>Constrain a size between min and max values. </Abstract>
    <DeclaredIn>geometry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>json</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>json</Scope>
    </TokenIdentifier>
    <Path>namespacejson.html</Path>
    <Abstract>Json helper functions. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>json</Scope>
    </TokenIdentifier>
    <Path>namespacejson.html</Path>
    <Anchor>ac1b53f6824e0942f11ba6142782a2e44</Anchor>
    <Abstract>Parse a json document. </Abstract>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>json</Scope>
    </TokenIdentifier>
    <Path>namespacejson.html</Path>
    <Anchor>a17f7af4db8e0fa034595736c0dc2710c</Anchor>
    <Abstract>Parse a file to an object. </Abstract>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>json</Scope>
    </TokenIdentifier>
    <Path>namespacejson.html</Path>
    <Anchor>a18a89d3140c6db399e296fa9b9e9d71f</Anchor>
    <Abstract>Write an object to a file. </Abstract>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>json</Scope>
    </TokenIdentifier>
    <Path>namespacejson.html</Path>
    <Anchor>a0ba4af16049162aaecf60d7f13aabe7f</Anchor>
    <Abstract>Serialize a json array. </Abstract>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>json</Scope>
    </TokenIdentifier>
    <Path>namespacejson.html</Path>
    <Anchor>a8cdc8931858e2efcf3ee1e951a714830</Anchor>
    <Abstract>Serialize a json object. </Abstract>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pack</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>json</Scope>
    </TokenIdentifier>
    <Path>namespacejson.html</Path>
    <Anchor>a1c08a5f8a963797c41d61f9cdbeca1c0</Anchor>
    <Abstract>Pack a json object to Qt&amp;#39;s binary format. </Abstract>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unpack</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>json</Scope>
    </TokenIdentifier>
    <Path>namespacejson.html</Path>
    <Anchor>aa2c15ef88e23e45c26cfc356e0b9b186</Anchor>
    <Abstract>Unpack a json object in Qt&amp;#39;s binary format. </Abstract>
    <DeclaredIn>json.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>json</Scope>
    </TokenIdentifier>
    <Path>namespacejson.html</Path>
    <Anchor>af32e66674894103351987bdc5685feb0</Anchor>
    <Abstract>Serialize a collection of objects to a JSON array. </Abstract>
    <DeclaredIn>core/json/templates.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>json</Scope>
    </TokenIdentifier>
    <Path>namespacejson.html</Path>
    <Anchor>af02c2631dbe20833136c63e801402489</Anchor>
    <DeclaredIn>core/json/templates.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pack</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>json</Scope>
    </TokenIdentifier>
    <Path>namespacejson.html</Path>
    <Anchor>ae5a32e9c242384e39df2364fc4d3e9c4</Anchor>
    <DeclaredIn>core/json/templates.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>json</Scope>
    </TokenIdentifier>
    <Path>namespacejson.html</Path>
    <Anchor>ad3cb959548499ba2df00ff95d45933b9</Anchor>
    <DeclaredIn>core/json/templates.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>json</Scope>
    </TokenIdentifier>
    <Path>namespacejson.html</Path>
    <Anchor>a0967138b7ad6bf5625bc03d2419770f6</Anchor>
    <Abstract>Deserialize a vector of objects from a JSON array. </Abstract>
    <DeclaredIn>core/json/templates.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>json</Scope>
    </TokenIdentifier>
    <Path>namespacejson.html</Path>
    <Anchor>ad2b9767fc729b24d3e9470b796db4c3b</Anchor>
    <Abstract>Deserialize an object from a JSON text representation. </Abstract>
    <DeclaredIn>core/json/templates.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MathUtils</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>MathUtils</Scope>
    </TokenIdentifier>
    <Path>namespace_math_utils.html</Path>
    <Abstract>Utility math functions used by multitouch gesture detectors. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBoundingRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MathUtils</Scope>
    </TokenIdentifier>
    <Path>namespace_math_utils.html</Path>
    <Anchor>adc409c20cf0becd7af0ac82c350a7d4b</Anchor>
    <Abstract>Get the minimal bounding rectangle around two points. </Abstract>
    <DeclaredIn>MathUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDist</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MathUtils</Scope>
    </TokenIdentifier>
    <Path>namespace_math_utils.html</Path>
    <Anchor>a26d481346c917ed080f940ef2fa51f1c</Anchor>
    <Abstract>Get the euclidean distance between two points. </Abstract>
    <DeclaredIn>MathUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCenter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MathUtils</Scope>
    </TokenIdentifier>
    <Path>namespace_math_utils.html</Path>
    <Anchor>a8c9dfd1cf1562a7fbf9fe125c6560d3a</Anchor>
    <Abstract>Get the center of two points. </Abstract>
    <DeclaredIn>MathUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeCenter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MathUtils</Scope>
    </TokenIdentifier>
    <Path>namespace_math_utils.html</Path>
    <Anchor>a444f37ad2d3e5cce1c74358af01163df</Anchor>
    <Abstract>Compute the center of a list of positions. </Abstract>
    <DeclaredIn>MathUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasMoved</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MathUtils</Scope>
    </TokenIdentifier>
    <Path>namespace_math_utils.html</Path>
    <Anchor>a67e1c703df8094b68695378c074fb6d1</Anchor>
    <Abstract>Check if any point has moved by more than a given threshold. </Abstract>
    <DeclaredIn>MathUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>qml</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>qml</Scope>
    </TokenIdentifier>
    <Path>namespaceqml.html</Path>
    <Abstract>Qml utility functions. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>qml</Scope>
    </TokenIdentifier>
    <Path>namespaceqml.html</Path>
    <Anchor>a378a6e0fd2c09c10ceb16c8e740ba142</Anchor>
    <Abstract>Register types for use in Qml. </Abstract>
    <DeclaredIn>QmlTypeRegistration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>qscreens</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>qscreens</Scope>
    </TokenIdentifier>
    <Path>namespaceqscreens.html</Path>
    <Abstract>QScreen utility functions. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>qscreens</Scope>
    </TokenIdentifier>
    <Path>namespaceqscreens.html</Path>
    <Anchor>a5ed19351ef660811603037944dc256fb</Anchor>
    <Abstract>Get a QScreen corresponding to a certain display (X11 only). </Abstract>
    <DeclaredIn>qscreens.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialization</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>serialization</Scope>
    </TokenIdentifier>
    <Path>namespaceserialization.html</Path>
    <Abstract>Free utility functions for serializing objects using boost::serialization. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>serialization</Scope>
    </TokenIdentifier>
    <Path>namespaceserialization.html</Path>
    <Anchor>acfddf04704a140070b000ff7ee8bf9a1</Anchor>
    <Abstract>Get an object of type T, stored in a container in binary serialized form. </Abstract>
    <DeclaredIn>utils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromBinary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>serialization</Scope>
    </TokenIdentifier>
    <Path>namespaceserialization.html</Path>
    <Anchor>aa24d755e1234ca14bc68c4377f674299</Anchor>
    <Abstract>Deserialize object(s) from a string of binary serialized data. </Abstract>
    <DeclaredIn>utils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toBinary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>serialization</Scope>
    </TokenIdentifier>
    <Path>namespaceserialization.html</Path>
    <Anchor>a7eadfd0d7b91d68aa47700a219f985a4</Anchor>
    <Abstract>Serialize object(s) to a string of binary serialized data. </Abstract>
    <DeclaredIn>utils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>binaryCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>serialization</Scope>
    </TokenIdentifier>
    <Path>namespaceserialization.html</Path>
    <Anchor>abce197c425fd8d15ba9d64d0285f095a</Anchor>
    <Abstract>Copy an object using its binary serialization + deserialization methods. </Abstract>
    <DeclaredIn>utils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xmlCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>serialization</Scope>
    </TokenIdentifier>
    <Path>namespaceserialization.html</Path>
    <Anchor>a107c73edfa060d10556deffc1677ca7d</Anchor>
    <Abstract>Copy an object using its xml serialization + deserialization methods. </Abstract>
    <DeclaredIn>utils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromXmlFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>serialization</Scope>
    </TokenIdentifier>
    <Path>namespaceserialization.html</Path>
    <Anchor>a00c40e41ef0c2fdd90c49aafbc1ece9b</Anchor>
    <Abstract>Restore an object that was previously serialized to the given xml file. </Abstract>
    <DeclaredIn>utils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toXmlFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>serialization</Scope>
    </TokenIdentifier>
    <Path>namespaceserialization.html</Path>
    <Anchor>adcd3a4acf763ce23192c136ac0d816d7</Anchor>
    <Abstract>Store an object to a target xml file. </Abstract>
    <DeclaredIn>utils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialization::detail</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>serialization::detail</Scope>
    </TokenIdentifier>
    <Path>namespaceserialization_1_1detail.html</Path>
    <Abstract>Implementation details (template metaprograming). </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialization::detail::serialize</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>serialization::detail::serialize</Scope>
    </TokenIdentifier>
    <Path>structserialization_1_1detail_1_1serialize.html</Path>
    <Abstract>Recursive method to serialize n arguments into an archive. </Abstract>
    <DeclaredIn>utils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialization::detail::serialize&lt; 0 &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>serialization::detail::serialize&lt; 0 &gt;</Scope>
    </TokenIdentifier>
    <Path>structserialization_1_1detail_1_1serialize_3_010_01_4.html</Path>
    <Abstract>End of recursion. </Abstract>
    <DeclaredIn>utils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textureUtils</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>textureUtils</Scope>
    </TokenIdentifier>
    <Path>namespacetexture_utils.html</Path>
    <Abstract>Texture utility functions. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createTexture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>textureUtils</Scope>
    </TokenIdentifier>
    <Path>namespacetexture_utils.html</Path>
    <Anchor>a593fcc0a15b3ec21947711e4fee04eb1</Anchor>
    <Abstract>Create a 8-bit texture. </Abstract>
    <DeclaredIn>textureUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createTextureRgba</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>textureUtils</Scope>
    </TokenIdentifier>
    <Path>namespacetexture_utils.html</Path>
    <Anchor>aa01b9fd9e3e04a6ad049904d93eb853f</Anchor>
    <Abstract>Create a 32-bit RGBA texture. </Abstract>
    <DeclaredIn>textureUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createPbo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>textureUtils</Scope>
    </TokenIdentifier>
    <Path>namespacetexture_utils.html</Path>
    <Anchor>abaea3d5464bea8797a2c9e468fb3c64f</Anchor>
    <Abstract>Create a Pixel Buffer Object. </Abstract>
    <DeclaredIn>textureUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>upload</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>textureUtils</Scope>
    </TokenIdentifier>
    <Path>namespacetexture_utils.html</Path>
    <Anchor>a3fe7a9a522e44a67bcc93c0ae9682bb2</Anchor>
    <Abstract>Upload an image to a PBO. </Abstract>
    <DeclaredIn>textureUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>textureUtils</Scope>
    </TokenIdentifier>
    <Path>namespacetexture_utils.html</Path>
    <Anchor>abcf681f6d1e36a7ff58f542af713d206</Anchor>
    <Abstract>Copy a PBO to a GPU texture. </Abstract>
    <DeclaredIn>textureUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>thumbnail</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>thumbnail</Scope>
    </TokenIdentifier>
    <Path>namespacethumbnail.html</Path>
    <Abstract>Utility functions for thumbnail generation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>thumbnail</Scope>
    </TokenIdentifier>
    <Path>namespacethumbnail.html</Path>
    <Anchor>ac6540caaac13eae8ebf7da2f3fff4be0</Anchor>
    <Abstract>Create a thumbnail for a given content. </Abstract>
    <DeclaredIn>thumbnail.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>thumbnail</Scope>
    </TokenIdentifier>
    <Path>namespacethumbnail.html</Path>
    <Anchor>a75e7a0f3d12c6c2f0c8e0ead50961246</Anchor>
    <Abstract>Create a thumbnail for a given filename. </Abstract>
    <DeclaredIn>thumbnail.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tide::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Abstract>Information about the current TideCore version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>a8839ec9495649dc52b6f1cbc3e6e48f8</Anchor>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>ae38ec59f6d1c305d5737a21e3e574394</Anchor>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>ac9dd21fa66e56caa86f6a41dcbca2ba4</Anchor>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>a803e009bd02d601bc708e9ac276e16f1</Anchor>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>af938b3d986124ce5dea77f03548b87fc</Anchor>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>afdf47bdc2db574072947ff605eb4afc6</Anchor>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>a667071293731b328a5c44b574e794680</Anchor>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>a6db9588b945925020747cffdfc464db7</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSchema</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>a9ffd7f983f989c1c25f15ad7e35cb218</Anchor>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toJSON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>a59657063b95a825f8d1daf8022e2919c</Anchor>
    <DeclaredIn>core/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>a8839ec9495649dc52b6f1cbc3e6e48f8</Anchor>
    <DeclaredIn>master/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>ae38ec59f6d1c305d5737a21e3e574394</Anchor>
    <DeclaredIn>master/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>ac9dd21fa66e56caa86f6a41dcbca2ba4</Anchor>
    <DeclaredIn>master/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>a803e009bd02d601bc708e9ac276e16f1</Anchor>
    <DeclaredIn>master/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>af938b3d986124ce5dea77f03548b87fc</Anchor>
    <DeclaredIn>master/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>afdf47bdc2db574072947ff605eb4afc6</Anchor>
    <DeclaredIn>master/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>a667071293731b328a5c44b574e794680</Anchor>
    <DeclaredIn>master/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>a6db9588b945925020747cffdfc464db7</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>master/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSchema</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>a9ffd7f983f989c1c25f15ad7e35cb218</Anchor>
    <DeclaredIn>master/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toJSON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>a59657063b95a825f8d1daf8022e2919c</Anchor>
    <DeclaredIn>master/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>a8839ec9495649dc52b6f1cbc3e6e48f8</Anchor>
    <DeclaredIn>wall/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>ae38ec59f6d1c305d5737a21e3e574394</Anchor>
    <DeclaredIn>wall/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>ac9dd21fa66e56caa86f6a41dcbca2ba4</Anchor>
    <DeclaredIn>wall/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>a803e009bd02d601bc708e9ac276e16f1</Anchor>
    <DeclaredIn>wall/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>af938b3d986124ce5dea77f03548b87fc</Anchor>
    <DeclaredIn>wall/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>afdf47bdc2db574072947ff605eb4afc6</Anchor>
    <DeclaredIn>wall/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>a667071293731b328a5c44b574e794680</Anchor>
    <DeclaredIn>wall/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>a6db9588b945925020747cffdfc464db7</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>wall/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSchema</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>a9ffd7f983f989c1c25f15ad7e35cb218</Anchor>
    <DeclaredIn>wall/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toJSON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>tide::Version</Scope>
    </TokenIdentifier>
    <Path>classtide_1_1_version.html</Path>
    <Anchor>a59657063b95a825f8d1daf8022e2919c</Anchor>
    <DeclaredIn>wall/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>yuv</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>yuv</Scope>
    </TokenIdentifier>
    <Path>namespaceyuv.html</Path>
    <Abstract>Helper functions for yuv textures. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUVSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>yuv</Scope>
    </TokenIdentifier>
    <Path>namespaceyuv.html</Path>
    <Anchor>af055861df21638388b75f66133ea0b01</Anchor>
    <DeclaredIn>yuv.h</DeclaredIn>
  </Token>
</Tokens>
