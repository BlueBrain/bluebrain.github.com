<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>FIVOX_VERSION_MAJOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>livre_2version_8h.html</Path>
    <Anchor>ae725abfee838f2efbd43ec6b03ad7de0</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>livre/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIVOX_VERSION_MINOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>livre_2version_8h.html</Path>
    <Anchor>a006bcaaddb06b38f1dd6f29584f7c881</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>livre/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIVOX_VERSION_PATCH</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>livre_2version_8h.html</Path>
    <Anchor>a9610fba0f43b6c7409013bac83e41bd6</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>livre/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIVOX_VERSION_REVISION</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>livre_2version_8h.html</Path>
    <Anchor>a77a33e45a2f6d55e67b474f24ff1d532</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>livre/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIVOX_VERSION_ABI</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>livre_2version_8h.html</Path>
    <Anchor>aad799dd8b9fd21024697eee04459860b</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>livre/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIVOX_VERSION_GT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>livre_2version_8h.html</Path>
    <Anchor>a01241eb8c43d9ec372109189a4359771</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>livre/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIVOX_VERSION_GE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>livre_2version_8h.html</Path>
    <Anchor>a24735dc5774387a9df6876185b5600b8</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>livre/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIVOX_VERSION_LT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>livre_2version_8h.html</Path>
    <Anchor>a1a0ed382934eee2a308dafc956b03aec</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>livre/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIVOX_VERSION_LE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>livre_2version_8h.html</Path>
    <Anchor>a33795fc26ac88b05d1cef75956127e4c</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>livre/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIVOX_VERSION_MAJOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>ae725abfee838f2efbd43ec6b03ad7de0</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIVOX_VERSION_MINOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a006bcaaddb06b38f1dd6f29584f7c881</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIVOX_VERSION_PATCH</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a9610fba0f43b6c7409013bac83e41bd6</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIVOX_VERSION_REVISION</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a77a33e45a2f6d55e67b474f24ff1d532</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIVOX_VERSION_ABI</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>aad799dd8b9fd21024697eee04459860b</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIVOX_VERSION_GT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a01241eb8c43d9ec372109189a4359771</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIVOX_VERSION_GE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a24735dc5774387a9df6876185b5600b8</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIVOX_VERSION_LT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a1a0ed382934eee2a308dafc956b03aec</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIVOX_VERSION_LE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a33795fc26ac88b05d1cef75956127e4c</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>changelog</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>changelog.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fivox</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>fivox</Scope>
    </TokenIdentifier>
    <Path>namespacefivox.html</Path>
    <Abstract>Field Voxelization Library. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FUNCTOR_DENSITY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>fivox</Scope>
    </TokenIdentifier>
    <Path>namespacefivox.html</Path>
    <Anchor>afb62d6fb959abf801014c895658768a3a5a73dd2347296b0361afe6ec0045e6b9</Anchor>
    <Abstract>sum( magnitude of events in voxel ) / volume of voxel </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FUNCTOR_FIELD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>fivox</Scope>
    </TokenIdentifier>
    <Path>namespacefivox.html</Path>
    <Anchor>afb62d6fb959abf801014c895658768a3abbf4f042cc6ee071adcc9d248e085c04</Anchor>
    <Abstract>quadratic falloff of magnitude in space </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FUNCTOR_FREQUENCY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>fivox</Scope>
    </TokenIdentifier>
    <Path>namespacefivox.html</Path>
    <Anchor>afb62d6fb959abf801014c895658768a3abe084cfd62ddca20bb41b31eb94be9c8</Anchor>
    <Abstract>maximum magnitude of all events in voxel </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SOURCE_EVENT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>fivox</Scope>
    </TokenIdentifier>
    <Path>namespacefivox.html</Path>
    <Anchor>afc42aa0bf971ea7c85afbcb4ed8d3455a7200dc8ddd06d88c5461ccba6c7a6d64</Anchor>
    <Abstract>e.g. spikes reports </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SOURCE_FRAME</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>fivox</Scope>
    </TokenIdentifier>
    <Path>namespacefivox.html</Path>
    <Anchor>afc42aa0bf971ea7c85afbcb4ed8d3455ababae87167c79d2972e92838d1fbd136</Anchor>
    <Abstract>e.g. compartment reports </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TYPE_UNKNOWN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>fivox</Scope>
    </TokenIdentifier>
    <Path>namespacefivox.html</Path>
    <Anchor>a82525812b4d046489a4e3f920714b9fcac4d5045725e77c183a4833a523fe7302</Anchor>
    <Abstract>Unknown URI scheme. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TYPE_COMPARTMENTS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>fivox</Scope>
    </TokenIdentifier>
    <Path>namespacefivox.html</Path>
    <Anchor>a82525812b4d046489a4e3f920714b9fca4a903a9b179ab218400ee90e0c9c726a</Anchor>
    <Abstract>BBP compartment simulation reports. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TYPE_SOMAS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>fivox</Scope>
    </TokenIdentifier>
    <Path>namespacefivox.html</Path>
    <Anchor>a82525812b4d046489a4e3f920714b9fcad490d859ae89e59c9d161cd6bb9e2152</Anchor>
    <Abstract>BBP soma simulation reports. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TYPE_SPIKES</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>fivox</Scope>
    </TokenIdentifier>
    <Path>namespacefivox.html</Path>
    <Anchor>a82525812b4d046489a4e3f920714b9fca54aa3de119569aa1e123558a6c66ef5f</Anchor>
    <Abstract>BBP spike simulation reports. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TYPE_SYNAPSES</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>fivox</Scope>
    </TokenIdentifier>
    <Path>namespacefivox.html</Path>
    <Anchor>a82525812b4d046489a4e3f920714b9fca5eded0390e70140d6868efefa249bbe7</Anchor>
    <Abstract>BBP synapse positions. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TYPE_VSD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>fivox</Scope>
    </TokenIdentifier>
    <Path>namespacefivox.html</Path>
    <Anchor>a82525812b4d046489a4e3f920714b9fcad72b609ea8ee29ce8f03733251df553b</Anchor>
    <Abstract>BBP voltage sensitive dye simulation reports. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fivox::AttenuationCurve</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>fivox::AttenuationCurve</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_attenuation_curve.html</Path>
    <Abstract>Attentuation curve access for depth-based interpolation. </Abstract>
    <DeclaredIn>attenuationCurve.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AttenuationCurve</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::AttenuationCurve</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_attenuation_curve.html</Path>
    <Anchor>a18db6a2e1b1bd420f6faa76784cd4b5d</Anchor>
    <Abstract>Construct an empty attenuation curve. </Abstract>
    <DeclaredIn>attenuationCurve.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AttenuationCurve</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::AttenuationCurve</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_attenuation_curve.html</Path>
    <Anchor>a66436862f197101d002633be373ee779</Anchor>
    <DeclaredIn>attenuationCurve.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAttenuation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::AttenuationCurve</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_attenuation_curve.html</Path>
    <Anchor>ae2a9b590f60531cae1d7e5844bf6d77c</Anchor>
    <Abstract>Get the attenuation for the given depth. </Abstract>
    <DeclaredIn>attenuationCurve.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fivox::CompartmentLoader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>fivox::CompartmentLoader</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_compartment_loader.html</Path>
    <Abstract>Loads BBP compartment report data to be sampled by an EventFunctor. </Abstract>
    <DeclaredIn>compartmentLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompartmentLoader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::CompartmentLoader</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_compartment_loader.html</Path>
    <Anchor>abbfdb52657e1d9bd6bdd7923c3f1bfeb</Anchor>
    <Abstract>Construct a new compartment event source. </Abstract>
    <DeclaredIn>compartmentLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~CompartmentLoader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::CompartmentLoader</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_compartment_loader.html</Path>
    <Anchor>a69c34c4d7a5139c3cd81e4846037efd6</Anchor>
    <Abstract>Destruct this compartment event source. </Abstract>
    <DeclaredIn>compartmentLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEvents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>ab6167c8e5539b4ea112457fda83e0bad</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findEvents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a6f2d236b1b7b7be757b41901219ff3d3</Anchor>
    <Abstract>Find all events in the given area. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBoundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a36cd3f9e13e20bbebfd84a08116234ea</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>ae357a3da2b92194af5b16528404e865c</Anchor>
    <Abstract>Clear all stored events and bounding box. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a4658884ce8f9d34c4c72397fd0db61d5</Anchor>
    <Abstract>Add a new event and update the bounding box. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a42e3976a99967a0535801230814a05b6</Anchor>
    <Abstract>Update the value of an existing event. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a8e9af6242a546992ba1789bbc0432c04</Anchor>
    <Abstract>Given a frame number, update the event source with new events to be sampled. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a4fcc419924fb5889e21a259fce45bd7a</Anchor>
    <Abstract>Given a timestamp, update the event source with new events to be sampled. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>aef0553017c50ba4f338c986252940c9d</Anchor>
    <Abstract>Gets the valid frame range according to data. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInFrameRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a27a6c48f2b2d0ec7053b171c46b4b8a8</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a8b0b9afd1cd85d9ca7d12cd81dea02fc</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a7bc0e2bc80f3536ecea7e865696d1198</Anchor>
    <Abstract>Set the dt that the datasource is using to correctly compute frame number from time in load()...</Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fivox::DensityFunctor</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>fivox::DensityFunctor</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_density_functor.html</Path>
    <Abstract>Samples events into the given voxel counting magnitude per volume. </Abstract>
    <DeclaredIn>densityFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforeGenerate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventFunctor</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_functor.html</Path>
    <Anchor>af1502f221288374242a5b6b4186235d4</Anchor>
    <Abstract>Called before threads are starting to voxelize. </Abstract>
    <DeclaredIn>eventFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fivox::Event</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>fivox::Event</Scope>
    </TokenIdentifier>
    <Path>structfivox_1_1_event.html</Path>
    <Abstract>A positional event with a value to be sampled. </Abstract>
    <DeclaredIn>event.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fivox::EventFunctor</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>fivox::EventFunctor</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_functor.html</Path>
    <Abstract>Samples spatial events into the given voxel. </Abstract>
    <DeclaredIn>eventFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforeGenerate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventFunctor</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_functor.html</Path>
    <Anchor>af1502f221288374242a5b6b4186235d4</Anchor>
    <Abstract>Called before threads are starting to voxelize. </Abstract>
    <DeclaredIn>eventFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fivox::EventSource</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Abstract>Base class for an Event source. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEvents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>ab6167c8e5539b4ea112457fda83e0bad</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findEvents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a6f2d236b1b7b7be757b41901219ff3d3</Anchor>
    <Abstract>Find all events in the given area. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBoundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a36cd3f9e13e20bbebfd84a08116234ea</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>ae357a3da2b92194af5b16528404e865c</Anchor>
    <Abstract>Clear all stored events and bounding box. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a4658884ce8f9d34c4c72397fd0db61d5</Anchor>
    <Abstract>Add a new event and update the bounding box. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a42e3976a99967a0535801230814a05b6</Anchor>
    <Abstract>Update the value of an existing event. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a8e9af6242a546992ba1789bbc0432c04</Anchor>
    <Abstract>Given a frame number, update the event source with new events to be sampled. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a4fcc419924fb5889e21a259fce45bd7a</Anchor>
    <Abstract>Given a timestamp, update the event source with new events to be sampled. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>aef0553017c50ba4f338c986252940c9d</Anchor>
    <Abstract>Gets the valid frame range according to data. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInFrameRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a27a6c48f2b2d0ec7053b171c46b4b8a8</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a8b0b9afd1cd85d9ca7d12cd81dea02fc</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a7bc0e2bc80f3536ecea7e865696d1198</Anchor>
    <Abstract>Set the dt that the datasource is using to correctly compute frame number from time in load()...</Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_getTimeRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>af478df497a7bff17aa52530957ec7408</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a61e981d9c784cd2fcc7396ba6e3ec598</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>abe2549881adda3d3ab360f25296dc10b</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_hasEnded</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a6f945e5d011d7083fb59e557c282d546</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fivox::FieldFunctor</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>fivox::FieldFunctor</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_field_functor.html</Path>
    <Abstract>Samples spatial events into the given pixel using a squared falloff. </Abstract>
    <DeclaredIn>fieldFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforeGenerate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::FieldFunctor</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_field_functor.html</Path>
    <Anchor>a5a96f1ab8b32b2f9d48a44573283a520</Anchor>
    <Abstract>Called before threads are starting to voxelize. </Abstract>
    <DeclaredIn>fieldFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fivox::FrequencyFunctor</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>fivox::FrequencyFunctor</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_frequency_functor.html</Path>
    <Abstract>Projects maximum frequency of events into the given voxel. </Abstract>
    <DeclaredIn>frequencyFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beforeGenerate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventFunctor</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_functor.html</Path>
    <Anchor>af1502f221288374242a5b6b4186235d4</Anchor>
    <Abstract>Called before threads are starting to voxelize. </Abstract>
    <DeclaredIn>eventFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fivox::ImageSource</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Abstract>ITK image source using an EventFunctor on each pixel to generate the output. </Abstract>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Self</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a0f201fd40bef7e95187f3f69b5d9a9f5</Anchor>
    <Abstract>Standard class typedefs. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImageType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>ac2e4662ecd36eedbe248ae8338ca4696</Anchor>
    <Abstract>Typedef to describe the output image region types. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImagePixelType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a59eb3ae9016c17df2aaa9a57c56e9ea4</Anchor>
    <Abstract>Typedef to describe the type of pixel. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ImageIndexType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a903d80e9ab5cdc3f6f824c9f1530e836</Anchor>
    <Abstract>Typedef to describe the output and input image index and size types. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>itkNewMacro</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a56b4bb1268023f1b18a9dd5652d9d782</Anchor>
    <Abstract>Method for creation through the object factory. </Abstract>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>itkTypeMacro</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a1730a052c8d932262858c5e7d60cb387</Anchor>
    <Abstract>Run-time type information (and related methods). </Abstract>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>itkStaticConstMacro</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a85254497bc383a3e86c8d95aca3cc9db</Anchor>
    <Abstract>ImageDimension enumeration. </Abstract>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFunctor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a86316f1f56759c9a88bf9d5dd8d46d74</Anchor>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFunctor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>af3ca3005321e6d954ae6aa9e98966cc0</Anchor>
    <Abstract>Set a new functor. </Abstract>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showProgress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>ae4c3ecafc8f9ad1aadae6878e75df0c9</Anchor>
    <Abstract>Enable display of progress bar during voxelization. </Abstract>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThreadedGenerateData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ImageSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_image_source.html</Path>
    <Anchor>a90ff18a12e03393622e0e8d59be3c6e5</Anchor>
    <Abstract>ImageSource is implemented as a multithreaded filter. </Abstract>
    <DeclaredIn>imageSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fivox::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>fivox::Version</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_version.html</Path>
    <Abstract>Information about the current LivreFivoxSource version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>fivox::Version</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_version.html</Path>
    <Anchor>ac9f4e74af906258ba1fa6624944ce592</Anchor>
    <DeclaredIn>livre/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>fivox::Version</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_version.html</Path>
    <Anchor>a8bcf951c8c14d7e0f5e01c004ca6c916</Anchor>
    <DeclaredIn>livre/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>fivox::Version</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_version.html</Path>
    <Anchor>a268eaaeac25024e98105256728001749</Anchor>
    <DeclaredIn>livre/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>fivox::Version</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_version.html</Path>
    <Anchor>a205b597ac703c03cb828c240f77ea53e</Anchor>
    <DeclaredIn>livre/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>fivox::Version</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_version.html</Path>
    <Anchor>a94f45590b48b3539e6c455bd094710f6</Anchor>
    <DeclaredIn>livre/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>fivox::Version</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_version.html</Path>
    <Anchor>a6d258bd9a6a01c5f9e4ebe4f7fb19f80</Anchor>
    <DeclaredIn>livre/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>fivox::Version</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_version.html</Path>
    <Anchor>a66a4bd35cf85420c6cc92c5d0a70ace2</Anchor>
    <DeclaredIn>livre/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>fivox::Version</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_version.html</Path>
    <Anchor>a65572d35b2db7e801011d76a069cd7a5</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>livre/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>fivox::Version</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_version.html</Path>
    <Anchor>ac9f4e74af906258ba1fa6624944ce592</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>fivox::Version</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_version.html</Path>
    <Anchor>a8bcf951c8c14d7e0f5e01c004ca6c916</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>fivox::Version</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_version.html</Path>
    <Anchor>a268eaaeac25024e98105256728001749</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>fivox::Version</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_version.html</Path>
    <Anchor>a205b597ac703c03cb828c240f77ea53e</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>fivox::Version</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_version.html</Path>
    <Anchor>a94f45590b48b3539e6c455bd094710f6</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>fivox::Version</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_version.html</Path>
    <Anchor>a6d258bd9a6a01c5f9e4ebe4f7fb19f80</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>fivox::Version</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_version.html</Path>
    <Anchor>a66a4bd35cf85420c6cc92c5d0a70ace2</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>fivox::Version</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_version.html</Path>
    <Anchor>a65572d35b2db7e801011d76a069cd7a5</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fivox::ProgressObserver</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>fivox::ProgressObserver</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_progress_observer.html</Path>
    <Abstract>Displays the progress of an ITK filter on std::cout. </Abstract>
    <DeclaredIn>progressObserver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::ProgressObserver</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_progress_observer.html</Path>
    <Anchor>a2b034e9151c6391a8a5086dbcdb3e90a</Anchor>
    <Abstract>Resets the progress display for a new iteration. </Abstract>
    <DeclaredIn>progressObserver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fivox::SomaLoader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>fivox::SomaLoader</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_soma_loader.html</Path>
    <Abstract>Loads BBP soma report data to be sampled by an EventFunctor. </Abstract>
    <DeclaredIn>somaLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SomaLoader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::SomaLoader</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_soma_loader.html</Path>
    <Anchor>a337fcd7644e87478989c016dbfe4aa77</Anchor>
    <Abstract>Construct a new soma event source. </Abstract>
    <DeclaredIn>somaLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEvents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>ab6167c8e5539b4ea112457fda83e0bad</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findEvents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a6f2d236b1b7b7be757b41901219ff3d3</Anchor>
    <Abstract>Find all events in the given area. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBoundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a36cd3f9e13e20bbebfd84a08116234ea</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>ae357a3da2b92194af5b16528404e865c</Anchor>
    <Abstract>Clear all stored events and bounding box. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a4658884ce8f9d34c4c72397fd0db61d5</Anchor>
    <Abstract>Add a new event and update the bounding box. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a42e3976a99967a0535801230814a05b6</Anchor>
    <Abstract>Update the value of an existing event. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a8e9af6242a546992ba1789bbc0432c04</Anchor>
    <Abstract>Given a frame number, update the event source with new events to be sampled. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a4fcc419924fb5889e21a259fce45bd7a</Anchor>
    <Abstract>Given a timestamp, update the event source with new events to be sampled. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>aef0553017c50ba4f338c986252940c9d</Anchor>
    <Abstract>Gets the valid frame range according to data. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInFrameRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a27a6c48f2b2d0ec7053b171c46b4b8a8</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a8b0b9afd1cd85d9ca7d12cd81dea02fc</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a7bc0e2bc80f3536ecea7e865696d1198</Anchor>
    <Abstract>Set the dt that the datasource is using to correctly compute frame number from time in load()...</Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fivox::SpikeLoader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>fivox::SpikeLoader</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_spike_loader.html</Path>
    <Abstract>Loads BBP or NEST spike report data to be sampled by an EventFunctor. </Abstract>
    <DeclaredIn>spikeLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpikeLoader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::SpikeLoader</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_spike_loader.html</Path>
    <Anchor>a7145e50d6dd6756a3defff13aa570b15</Anchor>
    <Abstract>Construct a new spike event source. </Abstract>
    <DeclaredIn>spikeLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEvents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>ab6167c8e5539b4ea112457fda83e0bad</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findEvents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a6f2d236b1b7b7be757b41901219ff3d3</Anchor>
    <Abstract>Find all events in the given area. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBoundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a36cd3f9e13e20bbebfd84a08116234ea</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>ae357a3da2b92194af5b16528404e865c</Anchor>
    <Abstract>Clear all stored events and bounding box. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a4658884ce8f9d34c4c72397fd0db61d5</Anchor>
    <Abstract>Add a new event and update the bounding box. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a42e3976a99967a0535801230814a05b6</Anchor>
    <Abstract>Update the value of an existing event. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a8e9af6242a546992ba1789bbc0432c04</Anchor>
    <Abstract>Given a frame number, update the event source with new events to be sampled. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a4fcc419924fb5889e21a259fce45bd7a</Anchor>
    <Abstract>Given a timestamp, update the event source with new events to be sampled. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>aef0553017c50ba4f338c986252940c9d</Anchor>
    <Abstract>Gets the valid frame range according to data. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInFrameRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a27a6c48f2b2d0ec7053b171c46b4b8a8</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a8b0b9afd1cd85d9ca7d12cd81dea02fc</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a7bc0e2bc80f3536ecea7e865696d1198</Anchor>
    <Abstract>Set the dt that the datasource is using to correctly compute frame number from time in load()...</Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fivox::SynapseLoader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>fivox::SynapseLoader</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_synapse_loader.html</Path>
    <Abstract>Loads BBP synapse files to be sampled by an EventFunctor. </Abstract>
    <DeclaredIn>synapseLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SynapseLoader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::SynapseLoader</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_synapse_loader.html</Path>
    <Anchor>a4256a9c1b66f9d6e3391bdf2abedbd48</Anchor>
    <Abstract>Construct a new synapse event source. </Abstract>
    <DeclaredIn>synapseLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEvents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>ab6167c8e5539b4ea112457fda83e0bad</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findEvents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a6f2d236b1b7b7be757b41901219ff3d3</Anchor>
    <Abstract>Find all events in the given area. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBoundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a36cd3f9e13e20bbebfd84a08116234ea</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>ae357a3da2b92194af5b16528404e865c</Anchor>
    <Abstract>Clear all stored events and bounding box. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a4658884ce8f9d34c4c72397fd0db61d5</Anchor>
    <Abstract>Add a new event and update the bounding box. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a42e3976a99967a0535801230814a05b6</Anchor>
    <Abstract>Update the value of an existing event. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a8e9af6242a546992ba1789bbc0432c04</Anchor>
    <Abstract>Given a frame number, update the event source with new events to be sampled. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a4fcc419924fb5889e21a259fce45bd7a</Anchor>
    <Abstract>Given a timestamp, update the event source with new events to be sampled. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>aef0553017c50ba4f338c986252940c9d</Anchor>
    <Abstract>Gets the valid frame range according to data. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInFrameRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a27a6c48f2b2d0ec7053b171c46b4b8a8</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a8b0b9afd1cd85d9ca7d12cd81dea02fc</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a7bc0e2bc80f3536ecea7e865696d1198</Anchor>
    <Abstract>Set the dt that the datasource is using to correctly compute frame number from time in load()...</Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fivox::URIHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>fivox::URIHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_u_r_i_handler.html</Path>
    <Abstract>Process an URI to provide all the parameters specified in it. </Abstract>
    <DeclaredIn>uriHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>URIHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::URIHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_u_r_i_handler.html</Path>
    <Anchor>a6943e85339c4075db0302a3c68b94d16</Anchor>
    <Abstract>Construct a new URI handler. </Abstract>
    <DeclaredIn>uriHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~URIHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::URIHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_u_r_i_handler.html</Path>
    <Anchor>a54e53bdbffa6cbe9ff8b11d65bfed0f2</Anchor>
    <Abstract>Destruct this parameter processor. </Abstract>
    <DeclaredIn>uriHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::URIHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_u_r_i_handler.html</Path>
    <Anchor>a196ed4ada76f5b316eb6ebb22c89a040</Anchor>
    <Abstract>Get the specified BlueConfig file path. </Abstract>
    <DeclaredIn>uriHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTarget</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::URIHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_u_r_i_handler.html</Path>
    <Anchor>ab324d0fd37f52bd595a5dced320be32d</Anchor>
    <Abstract>Get the specified target name. </Abstract>
    <DeclaredIn>uriHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getReport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::URIHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_u_r_i_handler.html</Path>
    <Anchor>aeab4555ad69f10c935c1d2f83e76f6d8</Anchor>
    <Abstract>Get the specified report name. </Abstract>
    <DeclaredIn>uriHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::URIHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_u_r_i_handler.html</Path>
    <Anchor>a0cf08598c30cf1df02634b4a4a2aa776</Anchor>
    <Abstract>Get the specified timestep (dt). </Abstract>
    <DeclaredIn>uriHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSpikes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::URIHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_u_r_i_handler.html</Path>
    <Anchor>abb682a65e3544a28adf31156e0b0cdf2</Anchor>
    <DeclaredIn>uriHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::URIHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_u_r_i_handler.html</Path>
    <Anchor>acae4cf6c1736a55ec44a119eb4f89a97</Anchor>
    <Abstract>Get the specified duration. </Abstract>
    <DeclaredIn>uriHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMagnitude</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::URIHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_u_r_i_handler.html</Path>
    <Anchor>a139b7fd47e053c958f092d741aef5741</Anchor>
    <Abstract>Get the magnitude value which is mulitplied on each sampled voxel value. </Abstract>
    <DeclaredIn>uriHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDyeCurve</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::URIHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_u_r_i_handler.html</Path>
    <Anchor>af3392e9096cea586d758b44ba8bc194e</Anchor>
    <Abstract>Get the specified path to a dye curve file. </Abstract>
    <DeclaredIn>uriHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getResolution</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::URIHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_u_r_i_handler.html</Path>
    <Anchor>ae4b1444288b0c08a3151f8cdd64899b4</Anchor>
    <Abstract>Get the specified resolution in voxels per unit (typically um). </Abstract>
    <DeclaredIn>uriHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxBlockSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::URIHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_u_r_i_handler.html</Path>
    <Anchor>a98ecf0123ffd1d0a10aef2c380a6e435</Anchor>
    <Abstract>Get the specified maximum size per block (bytes). </Abstract>
    <DeclaredIn>uriHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::URIHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_u_r_i_handler.html</Path>
    <Anchor>a6d107532e45291a38f2d1a78173ac91d</Anchor>
    <Abstract>Get the specified maximum absolute error. </Abstract>
    <DeclaredIn>uriHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::URIHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_u_r_i_handler.html</Path>
    <Anchor>abf6d8df653ba4dafbca65b47f9cf389f</Anchor>
    <Abstract>Get the type of the volume that is being loaded (present in the URI schema) </Abstract>
    <DeclaredIn>uriHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFunctorType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::URIHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_u_r_i_handler.html</Path>
    <Anchor>aebf008427ee3f0db8977d93777b80b6b</Anchor>
    <Abstract>Available functors are &amp;quot;density&amp;quot;, &amp;quot;field&amp;quot; and &amp;quot;frequency&amp;quot;. </Abstract>
    <DeclaredIn>uriHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newImageSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::URIHandler</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_u_r_i_handler.html</Path>
    <Anchor>a21e60106402c2a5133edf190187b2690</Anchor>
    <DeclaredIn>uriHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fivox::VSDLoader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>fivox::VSDLoader</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_v_s_d_loader.html</Path>
    <Abstract>Loads BBP report data for voltage sensitive dye sampling. </Abstract>
    <DeclaredIn>vsdLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VSDLoader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::VSDLoader</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_v_s_d_loader.html</Path>
    <Anchor>af8b4b591f60627c4a35a9880a6759de4</Anchor>
    <Abstract>Construct a new vsd event source. </Abstract>
    <DeclaredIn>vsdLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~VSDLoader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::VSDLoader</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_v_s_d_loader.html</Path>
    <Anchor>a9e54766cac5507770449a9100e9b45b6</Anchor>
    <Abstract>Destruct this vsd event source. </Abstract>
    <DeclaredIn>vsdLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCurve</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::VSDLoader</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_v_s_d_loader.html</Path>
    <Anchor>a47dfc2bd8fbb7c24aa2ecfde9c7c4d9e</Anchor>
    <Abstract>Set the attenuation curve that will be applied to the computed events. </Abstract>
    <DeclaredIn>vsdLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEvents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>ab6167c8e5539b4ea112457fda83e0bad</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findEvents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a6f2d236b1b7b7be757b41901219ff3d3</Anchor>
    <Abstract>Find all events in the given area. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBoundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a36cd3f9e13e20bbebfd84a08116234ea</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>ae357a3da2b92194af5b16528404e865c</Anchor>
    <Abstract>Clear all stored events and bounding box. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a4658884ce8f9d34c4c72397fd0db61d5</Anchor>
    <Abstract>Add a new event and update the bounding box. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a42e3976a99967a0535801230814a05b6</Anchor>
    <Abstract>Update the value of an existing event. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a8e9af6242a546992ba1789bbc0432c04</Anchor>
    <Abstract>Given a frame number, update the event source with new events to be sampled. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a4fcc419924fb5889e21a259fce45bd7a</Anchor>
    <Abstract>Given a timestamp, update the event source with new events to be sampled. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>aef0553017c50ba4f338c986252940c9d</Anchor>
    <Abstract>Gets the valid frame range according to data. </Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInFrameRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a27a6c48f2b2d0ec7053b171c46b4b8a8</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a8b0b9afd1cd85d9ca7d12cd81dea02fc</Anchor>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>fivox::EventSource</Scope>
    </TokenIdentifier>
    <Path>classfivox_1_1_event_source.html</Path>
    <Anchor>a7bc0e2bc80f3536ecea7e865696d1198</Anchor>
    <Abstract>Set the dt that the datasource is using to correctly compute frame number from time in load()...</Abstract>
    <DeclaredIn>eventSource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>itk::Image</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>itk::Image</Scope>
    </TokenIdentifier>
    <Path>classitk_1_1_image.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>itk::SmartPointer</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>itk::SmartPointer</Scope>
    </TokenIdentifier>
    <Path>classitk_1_1_smart_pointer.html</Path>
  </Token>
</Tokens>
