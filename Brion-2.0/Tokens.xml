<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>brion::enums</Scope>
    </TokenIdentifier>
    <Path>enums_8h.html</Path>
    <Anchor>ae7a4cd836afe68a46533496f3b423fe4</Anchor>
    <Abstract>Output stream formatter for MorphologyVersion. </Abstract>
    <DeclaredIn>enums.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MESH_SPINES</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>brion::enums</Scope>
    </TokenIdentifier>
    <Path>enums_8h.html</Path>
    <Anchor>ac4afacea7110530930497a334e6a0904aedde395de26a420b2c5592bfc63d7e3f</Anchor>
    <Abstract>spines </Abstract>
    <DeclaredIn>enums.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MESH_BOUTONS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>brion::enums</Scope>
    </TokenIdentifier>
    <Path>enums_8h.html</Path>
    <Anchor>ac4afacea7110530930497a334e6a0904a92fa19b9e053de92f046e5a631565670</Anchor>
    <Abstract>boutons </Abstract>
    <DeclaredIn>enums.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MESH_PSD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>brion::enums</Scope>
    </TokenIdentifier>
    <Path>enums_8h.html</Path>
    <Anchor>ac4afacea7110530930497a334e6a0904a208433ed63383dd3e71396624722dfaf</Anchor>
    <Abstract>post-synaptic densities </Abstract>
    <DeclaredIn>enums.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MESH_AZ</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>brion::enums</Scope>
    </TokenIdentifier>
    <Path>enums_8h.html</Path>
    <Anchor>ac4afacea7110530930497a334e6a0904a839487e812ac932aedc9ef68be5a0f9c</Anchor>
    <Abstract>active zones </Abstract>
    <DeclaredIn>enums.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MESH_ENDO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>brion::enums</Scope>
    </TokenIdentifier>
    <Path>enums_8h.html</Path>
    <Anchor>ac4afacea7110530930497a334e6a0904aee6367301ccddaebf92fc8b8ee7ffd7e</Anchor>
    <Abstract>endoplasmic reticulum </Abstract>
    <DeclaredIn>enums.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NEURONCLASS_MTYPE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>brion::enums</Scope>
    </TokenIdentifier>
    <Path>enums_8h.html</Path>
    <Anchor>a6b560de97d78ca83260ef07d8e1e4571a0cac3273939280288da1ece4a3e8de19</Anchor>
    <Abstract>L2PC, L5CSPC, ... </Abstract>
    <DeclaredIn>enums.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NEURONCLASS_MORPHOLOGY_CLASS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>brion::enums</Scope>
    </TokenIdentifier>
    <Path>enums_8h.html</Path>
    <Anchor>a6b560de97d78ca83260ef07d8e1e4571a861f0d6ed93fae08ac8add4eca8fa991</Anchor>
    <Abstract>PYR, INT. </Abstract>
    <DeclaredIn>enums.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NEURONCLASS_FUNCTION_CLASS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>brion::enums</Scope>
    </TokenIdentifier>
    <Path>enums_8h.html</Path>
    <Anchor>a6b560de97d78ca83260ef07d8e1e4571a786d672793c2517d52c6de1324d10aa5</Anchor>
    <Abstract>EXC, INH. </Abstract>
    <DeclaredIn>enums.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NEURONCLASS_ETYPE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>brion::enums</Scope>
    </TokenIdentifier>
    <Path>enums_8h.html</Path>
    <Anchor>a6b560de97d78ca83260ef07d8e1e4571a68906f326d6918506bed1652172acffa</Anchor>
    <Abstract>cAD, dAL, ... </Abstract>
    <DeclaredIn>enums.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SECTION_SOMA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>brion::enums</Scope>
    </TokenIdentifier>
    <Path>enums_8h.html</Path>
    <Anchor>adbb154f3c78c0209ce2f3d33b628b5a1af81231ec35cefa2bd00b7250ad8a3198</Anchor>
    <Abstract>neuron cell body </Abstract>
    <DeclaredIn>enums.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SECTION_DENDRITE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>brion::enums</Scope>
    </TokenIdentifier>
    <Path>enums_8h.html</Path>
    <Anchor>adbb154f3c78c0209ce2f3d33b628b5a1add1dc7730c5982d2440438a7ce81f320</Anchor>
    <Abstract>general or basal dendrite (near to soma) </Abstract>
    <DeclaredIn>enums.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SECTION_APICAL_DENDRITE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>brion::enums</Scope>
    </TokenIdentifier>
    <Path>enums_8h.html</Path>
    <Anchor>adbb154f3c78c0209ce2f3d33b628b5a1a5148c4e4922ea7417a2cbc4caa96bbfb</Anchor>
    <Abstract>apical dendrite (far from soma) </Abstract>
    <DeclaredIn>enums.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_MAJOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brion_2version_8h.html</Path>
    <Anchor>aa5be9a4351e20d44fa19574e589b2fb3</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_MINOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brion_2version_8h.html</Path>
    <Anchor>aa5a2357f391cbb650d1d8894ee1b526f</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_PATCH</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brion_2version_8h.html</Path>
    <Anchor>ab7df48db132552459d856511d31fec71</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_REVISION</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brion_2version_8h.html</Path>
    <Anchor>a6044ab3ac01614da058254ed01b5b206</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_ABI</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brion_2version_8h.html</Path>
    <Anchor>a7920884b61851f5f7492f448ee8bc30a</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_GT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brion_2version_8h.html</Path>
    <Anchor>aaa5bc7bf409d096ebd5fb23a6affc8a1</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_GE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brion_2version_8h.html</Path>
    <Anchor>a570eddc11c0836577c6e34d667fae3c7</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_LT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brion_2version_8h.html</Path>
    <Anchor>a925fa2a36cd05656ca996f6429e87044</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRION_VERSION_LE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brion_2version_8h.html</Path>
    <Anchor>a6ae6f2b8ab1104630022af37169d053c</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAIN_VERSION_MAJOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brain_2version_8h.html</Path>
    <Anchor>a427a3c0f762ebebccc518760bda4f56b</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAIN_VERSION_MINOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brain_2version_8h.html</Path>
    <Anchor>a5136efd056f5d33648833945fdc64898</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAIN_VERSION_PATCH</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brain_2version_8h.html</Path>
    <Anchor>a3418e370c6278025871bd9f779f63cc4</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAIN_VERSION_REVISION</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brain_2version_8h.html</Path>
    <Anchor>aa9caa3a96315ec3a2f071008e61efe02</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAIN_VERSION_ABI</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brain_2version_8h.html</Path>
    <Anchor>a43f616dc38b671e3b6afa09ea65d6ed0</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAIN_VERSION_GT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brain_2version_8h.html</Path>
    <Anchor>a16578e1b8002c2a9fe11a530f1c14b3f</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAIN_VERSION_GE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brain_2version_8h.html</Path>
    <Anchor>a12bdd529113976a8e97f0886e5855ca7</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAIN_VERSION_LT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brain_2version_8h.html</Path>
    <Anchor>a1db2452a085d9ea60c329408b3e0f5b1</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAIN_VERSION_LE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>brain_2version_8h.html</Path>
    <Anchor>a5837bd4b4b0672135b22fb09666775b7</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Changelog</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>Changelog.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>data_compartments</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>data_compartments.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>data</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>data.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>data_spikes</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>data_spikes.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compartment_report</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>compartment_report.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compartment_report_mpi</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>compartment_report_mpi.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compartment_report_py</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>compartment_report_py.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rfcs</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>rfcs.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>morphology11</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>morphology11.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>spike_reports</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>spike_reports.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain_synapses</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>brain_synapses.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>md__jenkins_02_workspace_oss.Brion.documentation_build_type_Debug_platform_cscsviz-vm_sources_doc_user_caching</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>md__jenkins_02_workspace_oss.Brion.documentation_build_type_Debug_platform_cscsviz-vm_sources_doc_user_caching.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apps</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>apps.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compartmentConverter</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>compartmentConverter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>morphologyConverter</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>morphologyConverter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>spikeConverter</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>spikeConverter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>env</Name>
      <APILanguage>unknown</APILanguage>
    </TokenIdentifier>
    <Path>env.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deprecated</Name>
      <APILanguage>unknown</APILanguage>
    </TokenIdentifier>
    <Path>deprecated.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>brain</Scope>
    </TokenIdentifier>
    <Path>namespacebrain.html</Path>
    <Abstract>Algorithmic interface to Blue Brain data model. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SynapseGID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brain</Scope>
    </TokenIdentifier>
    <Path>namespacebrain.html</Path>
    <Anchor>a8e059fc6fd4901d37fc4683b73c652e6</Anchor>
    <Abstract>The GID of a synapse is the a tuple of two numbers: </Abstract>
    <DeclaredIn>brain/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>none</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>brain</Scope>
    </TokenIdentifier>
    <Path>namespacebrain.html</Path>
    <Anchor>a9465fc0a732855959304f34a970b3a21a334c4a4c42fdb79d7ebc3e73b517e6f8</Anchor>
    <Abstract>only loads pre- and post GIDs </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>brain</Scope>
    </TokenIdentifier>
    <Path>namespacebrain.html</Path>
    <Anchor>a9465fc0a732855959304f34a970b3a21a736b91750e516139acc13c5eb6564f92</Anchor>
    <Abstract>topological information (section, segment, distance) and model attributes </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>positions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>brain</Scope>
    </TokenIdentifier>
    <Path>namespacebrain.html</Path>
    <Anchor>a9465fc0a732855959304f34a970b3a21a365a4a972db646c76d115b3897f2d4de</Anchor>
    <Abstract>pre/post surface/center positions </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>all</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>brain</Scope>
    </TokenIdentifier>
    <Path>namespacebrain.html</Path>
    <Anchor>a9465fc0a732855959304f34a970b3a21aa181a603769c1f98ad927e7367c7aa51</Anchor>
    <Abstract>all synapse data </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::Circuit</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Abstract>Read access to a circuit database. </Abstract>
    <DeclaredIn>circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Circuit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>ad8018f3c4aaf467133ca254295ba53af</Anchor>
    <Abstract>Opens a circuit for read access. </Abstract>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Circuit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>aa333684a12851014e36ee5c897599599</Anchor>
    <Abstract>Opens a circuit for read access. </Abstract>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>a36ee80e8f35795978c648acfd79253a5</Anchor>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>a5480f86410d5c4aff618735090f98cf5</Anchor>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRandomGIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>a6780629e47b81063a4893f7b7cd5e415</Anchor>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRandomGIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>aa822f3a660884ad01a8e1622c7dbd860</Anchor>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMorphologyURIs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>a2af6cc4a5ae4691771980d15d72a56f6</Anchor>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadMorphologies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>ad0d46e2775f1aaf8495b384e50e190ee</Anchor>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPositions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>a1b05989eb2e2a76c477982021d4039a9</Anchor>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMorphologyTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>acdaadb6bbf5c998085f3d284e22a14fa</Anchor>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMorphologyTypeNames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>a85ab1b14918ec3d2015d9fe4e79c457b</Anchor>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getElectrophysiologyTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>a1ef23f6f2ca7e62bf1102b5b31324bc6</Anchor>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getElectrophysiologyTypeNames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>a55e006f47d22c19b383752e55e04ec19</Anchor>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTransforms</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>a4e21485b8bce2a643944e51808ee51c1</Anchor>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRotations</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>a457e6f64353f0b20bb1a6524c88ea3af</Anchor>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumNeurons</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>a69480d5a0edcb1ded3627d618204289c</Anchor>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAfferentSynapses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>a75f300dea500c142ec5f3ee1c1d2456a</Anchor>
    <Abstract>Access all afferent synapses of the given GIDs. </Abstract>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getExternalAfferentSynapses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>a9b6e7545ef29d0214544f6ec2d975aed</Anchor>
    <Abstract>Access all afferent synapses projected from another circuit into the given GIDs. </Abstract>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEfferentSynapses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>acd51c99352dcde8dad828891aa483b81</Anchor>
    <Abstract>Access all efferent synapses of the given GIDs. </Abstract>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProjectedSynapses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_circuit.html</Path>
    <Anchor>a8096625c8fd6ab4d40a2ab672bc62fbd</Anchor>
    <Abstract>Access all synapses along the projection from the pre- to the postGIDs. </Abstract>
    <DeclaredIn>brain/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::CompartmentReport</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_compartment_report.html</Path>
    <Abstract>Reader for compartment reports. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompartmentReport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_compartment_report.html</Path>
    <Anchor>a7ab1a5fdac1a225dba917bd4a3ede529</Anchor>
    <Abstract>Open a report in read mode. </Abstract>
    <DeclaredIn>brain/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMetaData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_compartment_report.html</Path>
    <Anchor>afa6aea2ede3b80934f32945eb8e17419</Anchor>
    <DeclaredIn>brain/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_compartment_report.html</Path>
    <Anchor>a6ec0d6b2312a50471991a2829449ee2a</Anchor>
    <Abstract>Create a view of a subset of neurons. </Abstract>
    <DeclaredIn>brain/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_compartment_report.html</Path>
    <Anchor>a9257b45fb0346c4cc62b89a6cda7e968</Anchor>
    <Abstract>Create a view with all the neurons in the report. </Abstract>
    <DeclaredIn>brain/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::CompartmentReportFrame</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::CompartmentReportFrame</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_compartment_report_frame.html</Path>
    <Abstract>A simulation data frame. </Abstract>
    <DeclaredIn>compartmentReportFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimestamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::CompartmentReportFrame</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_compartment_report_frame.html</Path>
    <Anchor>a1b11d1ffe188b61151c0afddfc06820f</Anchor>
    <DeclaredIn>compartmentReportFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>empty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::CompartmentReportFrame</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_compartment_report_frame.html</Path>
    <Anchor>a87eb3398d37ba2bff8fc869116e7c4e5</Anchor>
    <DeclaredIn>compartmentReportFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::CompartmentReportFrame</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_compartment_report_frame.html</Path>
    <Anchor>a6df28e36718f3f86c9a226c940a42b10</Anchor>
    <DeclaredIn>compartmentReportFrame.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::CompartmentReportMapping</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::CompartmentReportMapping</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_compartment_report_mapping.html</Path>
    <Abstract>Data mapping of a compartment report frame. </Abstract>
    <DeclaredIn>compartmentReportMapping.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::CompartmentReportMapping</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_compartment_report_mapping.html</Path>
    <Anchor>a3e32a91ab6aae9de02aede46ec2826d0</Anchor>
    <DeclaredIn>compartmentReportMapping.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOffsets</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::CompartmentReportMapping</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_compartment_report_mapping.html</Path>
    <Anchor>a5e68dc56888805c5069596d8aebd1632</Anchor>
    <Abstract>Get the current mapping of each section of each neuron in each simulation frame buffer. </Abstract>
    <DeclaredIn>compartmentReportMapping.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCompartmentCounts</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::CompartmentReportMapping</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_compartment_report_mapping.html</Path>
    <Anchor>ac8b9598beaed736b44eb1f9c00c6a9fe</Anchor>
    <Abstract>Get the number of compartments for each section of each neuron in the view. </Abstract>
    <DeclaredIn>compartmentReportMapping.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumCompartments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::CompartmentReportMapping</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_compartment_report_mapping.html</Path>
    <Anchor>a98597909d3cf9a0bd87721ab55edc2c3</Anchor>
    <Abstract>Get the number of compartments for the given neuron. </Abstract>
    <DeclaredIn>compartmentReportMapping.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::CompartmentReportMapping::IndexEntry</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::CompartmentReportMapping::IndexEntry</Scope>
    </TokenIdentifier>
    <Path>structbrain_1_1_compartment_report_mapping_1_1_index_entry.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::CompartmentReportMetaData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::CompartmentReportMetaData</Scope>
    </TokenIdentifier>
    <Path>structbrain_1_1_compartment_report_meta_data.html</Path>
    <Abstract>Compartment report meta data. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brain::CompartmentReportMetaData</Scope>
    </TokenIdentifier>
    <Path>structbrain_1_1_compartment_report_meta_data.html</Path>
    <Anchor>a392795c6c7f60bc5b402dd850b0cf474</Anchor>
    <Abstract>The start time of the report. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>endTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brain::CompartmentReportMetaData</Scope>
    </TokenIdentifier>
    <Path>structbrain_1_1_compartment_report_meta_data.html</Path>
    <Anchor>a31d41273774f94c41ff11107d1bc4830</Anchor>
    <Abstract>The end time of the report. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>timeStep</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brain::CompartmentReportMetaData</Scope>
    </TokenIdentifier>
    <Path>structbrain_1_1_compartment_report_meta_data.html</Path>
    <Anchor>a95054dbda30be63a7de378e725134832</Anchor>
    <Abstract>The sampling time interval of the report. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>timeUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brain::CompartmentReportMetaData</Scope>
    </TokenIdentifier>
    <Path>structbrain_1_1_compartment_report_meta_data.html</Path>
    <Anchor>ae37c7d5288f710c42f5c0f9925951d54</Anchor>
    <Abstract>The time unit of the report. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dataUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brain::CompartmentReportMetaData</Scope>
    </TokenIdentifier>
    <Path>structbrain_1_1_compartment_report_meta_data.html</Path>
    <Anchor>aafb4d6d47cfdecf4bf1aeb6312a59a19</Anchor>
    <Abstract>The data unit of the report. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::CompartmentReportView</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::CompartmentReportView</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_compartment_report_view.html</Path>
    <Abstract>Compartment report view. </Abstract>
    <DeclaredIn>compartmentReportView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getReader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::CompartmentReportView</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_compartment_report_view.html</Path>
    <Anchor>ab663f8c8ebee9b8eb37e2b4523610be2</Anchor>
    <DeclaredIn>compartmentReportView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::CompartmentReportView</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_compartment_report_view.html</Path>
    <Anchor>a05b7cacd867eba2af388464e5a2ec747</Anchor>
    <DeclaredIn>compartmentReportView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMapping</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::CompartmentReportView</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_compartment_report_view.html</Path>
    <Anchor>a1f605897e864167866815d5e512787df</Anchor>
    <DeclaredIn>compartmentReportView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::CompartmentReportView</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_compartment_report_view.html</Path>
    <Anchor>a781aa5f07b8458f35c9f640484b345e1</Anchor>
    <Abstract>Load a frame at the given time stamp. </Abstract>
    <DeclaredIn>compartmentReportView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::CompartmentReportView</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_compartment_report_view.html</Path>
    <Anchor>a0087990218d44ebe2a293037870926d3</Anchor>
    <Abstract>Load frames between start and end time stamps. </Abstract>
    <DeclaredIn>compartmentReportView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadAll</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::CompartmentReportView</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_compartment_report_view.html</Path>
    <Anchor>a0b5a81e3a2bc40d25247ae095d912b3b</Anchor>
    <Abstract>Load all the frames. </Abstract>
    <DeclaredIn>compartmentReportView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::SpikeReportReader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::SpikeReportReader</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_reader.html</Path>
    <Abstract>Reader for Spike data. </Abstract>
    <DeclaredIn>spikeReportReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpikeReportReader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SpikeReportReader</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_reader.html</Path>
    <Anchor>a9669093776a1285091c5a2d4632d3990</Anchor>
    <Abstract>Construct a new reader opening a spike data source. </Abstract>
    <DeclaredIn>spikeReportReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpikeReportReader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SpikeReportReader</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_reader.html</Path>
    <Anchor>a7407e8549d22155752a4b6f216b88ff7</Anchor>
    <Abstract>Construct a new reader opening a spike data source. </Abstract>
    <DeclaredIn>spikeReportReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SpikeReportReader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SpikeReportReader</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_reader.html</Path>
    <Anchor>a338b13e992d590e1cf68833775711b6c</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>spikeReportReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSpikes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SpikeReportReader</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_reader.html</Path>
    <Anchor>a926de0b93358023c9d60ff7a2c154146</Anchor>
    <Abstract>Get all spikes inside a time window. </Abstract>
    <DeclaredIn>spikeReportReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEndTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SpikeReportReader</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_reader.html</Path>
    <Anchor>a594924c010b39a9240214129654624ea</Anchor>
    <DeclaredIn>spikeReportReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasEnded</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SpikeReportReader</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_reader.html</Path>
    <Anchor>a6bbf3933ab90509b51468a69d1f9def7</Anchor>
    <DeclaredIn>spikeReportReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SpikeReportReader</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_reader.html</Path>
    <Anchor>aefb0598576af03e0470ee99cdf74d23f</Anchor>
    <Abstract>Close the data source. </Abstract>
    <DeclaredIn>spikeReportReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::SpikeReportWriter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::SpikeReportWriter</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_writer.html</Path>
    <Abstract>Writer for spike data. </Abstract>
    <DeclaredIn>spikeReportWriter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpikeReportWriter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SpikeReportWriter</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_writer.html</Path>
    <Anchor>ad3b1e9aacd2ed848eda5a5f754101d7b</Anchor>
    <Abstract>Construct a new writer for the given URI. </Abstract>
    <DeclaredIn>spikeReportWriter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SpikeReportWriter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SpikeReportWriter</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_writer.html</Path>
    <Anchor>a22226ecc396de2fa8443d34c533f0a21</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>spikeReportWriter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeSpikes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SpikeReportWriter</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_writer.html</Path>
    <Anchor>a622cb89fdf6f5747f0485a0c3309de82</Anchor>
    <Abstract>Writes the spike times and cell GIDs. </Abstract>
    <DeclaredIn>spikeReportWriter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SpikeReportWriter</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_writer.html</Path>
    <Anchor>a52b1aad09aa330ee9bafd347f4a9c666</Anchor>
    <Abstract>Get the URI where the writer is publishing. </Abstract>
    <DeclaredIn>spikeReportWriter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SpikeReportWriter</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_spike_report_writer.html</Path>
    <Anchor>a490d30db02568611990cfff67b4adb5d</Anchor>
    <Abstract>Closes the report. </Abstract>
    <DeclaredIn>spikeReportWriter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::Synapse</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapse.html</Path>
    <Abstract>A proxy object returned by the Synapses container to access data for a particular synapse...</Abstract>
    <DeclaredIn>synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapse.html</Path>
    <Anchor>a8034dcede2d9bf91b6b5579279280db5</Anchor>
    <DeclaredIn>brain/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPresynapticGID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapse.html</Path>
    <Anchor>a74e8b9f01ae89b34bba222e316aa7a71</Anchor>
    <DeclaredIn>brain/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPresynapticSectionID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapse.html</Path>
    <Anchor>aa958f14d552b063d0653c95088c1a36b</Anchor>
    <DeclaredIn>brain/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPresynapticSegmentID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapse.html</Path>
    <Anchor>a07bea90ac92874ee09bd0792a2c241aa</Anchor>
    <DeclaredIn>brain/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPresynapticDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapse.html</Path>
    <Anchor>a4898082159810e3304b3ffc567948d1b</Anchor>
    <DeclaredIn>brain/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPresynapticSurfacePosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapse.html</Path>
    <Anchor>a9df3c6b505e59b373c19cd57bde9c288</Anchor>
    <DeclaredIn>brain/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPresynapticCenterPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapse.html</Path>
    <Anchor>a990cc78b968db64b7685b27445b19868</Anchor>
    <DeclaredIn>brain/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPostsynapticGID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapse.html</Path>
    <Anchor>a4bd99630edf5d300efed321937fefd30</Anchor>
    <DeclaredIn>brain/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPostsynapticSectionID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapse.html</Path>
    <Anchor>aa391148484d130ffc24a449a7b40e189</Anchor>
    <DeclaredIn>brain/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPostsynapticSegmentID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapse.html</Path>
    <Anchor>a521ba0a99029a44e18784aed8226c356</Anchor>
    <DeclaredIn>brain/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPostsynapticDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapse.html</Path>
    <Anchor>a742120825b5257d1c9ff2555ffc0de8c</Anchor>
    <DeclaredIn>brain/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPostsynapticSurfacePosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapse.html</Path>
    <Anchor>abad3697a8ec293f8936c7e6dd5af24c0</Anchor>
    <DeclaredIn>brain/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPostsynapticCenterPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapse.html</Path>
    <Anchor>a3be421387e279755538c930691a40b4a</Anchor>
    <DeclaredIn>brain/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDelay</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapse.html</Path>
    <Anchor>ad908fbe18c8434f5d0ae094ecb405e39</Anchor>
    <DeclaredIn>brain/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConductance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapse.html</Path>
    <Anchor>a30eeea2c548b91408f1db6a055665db0</Anchor>
    <DeclaredIn>brain/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUtilization</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapse.html</Path>
    <Anchor>af9a396b4d5875737ee3de0132e3260e4</Anchor>
    <DeclaredIn>brain/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDepression</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapse.html</Path>
    <Anchor>a890e234d1b1a85300a3101c17295c9b4</Anchor>
    <DeclaredIn>brain/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFacilitation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapse.html</Path>
    <Anchor>aab3271220feaa0fa70495812103265ec</Anchor>
    <DeclaredIn>brain/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDecay</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapse.html</Path>
    <Anchor>adbbdf1a6338150cf92ed39165b421718</Anchor>
    <DeclaredIn>brain/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEfficacy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapse.html</Path>
    <Anchor>ab2de5165c63a310942844fe5df6adfb5</Anchor>
    <DeclaredIn>brain/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::Synapses</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Abstract>A container providing read-only access to Synapses retrieved by getXXXSynapses() functions from brain...</Abstract>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Synapses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>ac71a1ae8225861fd4cfa58a83551f668</Anchor>
    <Abstract>Frees all memory on destruction of last copy. </Abstract>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Synapses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a3dd7dc84c2a1ccda1ebf6be16dbe7005</Anchor>
    <Abstract>Conversion constructor for direct access from getXXXSynapses(). </Abstract>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a0b9ad156a0f451db5eada7365451f7e9</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>empty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a7e678a61149c15e862817857837b2d49</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a1c392ff82ffe765f5cbd9c8724460120</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>ae1389b3ea053954ebdda1a96baacff30</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator[]</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a66c675e88d9ed62de775e5604d9703e4</Anchor>
    <Abstract>return the Synapse at the index-th position. </Abstract>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>indices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a1ce3519ad8b7fbcc292302343e01acdc</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preGIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a2f417e18d968a6bae3d5c4c12def30fd</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preSectionIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a27efe01d118683e78b4a1963b21f57e5</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preSegmentIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>ab8ab9fe628d02c784ecc9db81f1911cd</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preDistances</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a4b628aab66e5fe3395f8f05a9f26533f</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preSurfaceXPositions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a392e0250053b706d8c2df8fefc600227</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preSurfaceYPositions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>ae91f5ccdd4167e9c15f69a3cbd846d43</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preSurfaceZPositions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a856afd3afb5d3d5ea3dd3b142e3e7fd6</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preCenterXPositions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>ab9f43541c5e2fc181436548f8e12ea4c</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preCenterYPositions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a9658c877eaf113fd71820a08ba727178</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preCenterZPositions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>ad6fb0a2444b4bb579f7daa0acdbcd359</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postGIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a58fe962dd9ced01426affc1769a76b29</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postSectionIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a98a52207f93b1fafb98837ae465cc2c6</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postSegmentIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a19760babcb0a456ba0696f1fd450330e</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postDistances</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>ad7c74a11274b65f207fd9aabaaab91b3</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postSurfaceXPositions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a7e3dd56c1821957aff61e036d9a2c68e</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postSurfaceYPositions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a4914a738167d32177b40f62f11125981</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postSurfaceZPositions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>aaf8b511ae6f82d09c7eeeb582a46bc1f</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postCenterXPositions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a611b7bb1046740ff4e18365790ae7092</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postCenterYPositions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a86b0addaedd837ac918b446c638b121b</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postCenterZPositions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>aad5165c52ae8791c401ea590718081d2</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delays</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>ab204f49e0e762bc7baeddfcb0abcd065</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>conductances</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>ae1aef670cad058fe953fe50b4f511a94</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>utilizations</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a080f16f481d0fc569eabaa746ef4aba9</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>depressions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>ad62fa81d8dcaac6b73447a7da08f9339</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>facilitations</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a104281e66a52d94af251dfcab9327f47</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decays</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>a3d370a963f47aec79ac9fc3be6551273</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>efficacies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::Synapses</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses.html</Path>
    <Anchor>ae82c0dbf439f38c502751472ddf18892</Anchor>
    <DeclaredIn>synapses.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::Synapses::BaseImpl</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::Synapses::BaseImpl</Scope>
    </TokenIdentifier>
    <Path>structbrain_1_1_synapses_1_1_base_impl.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::SynapsesIterator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::SynapsesIterator</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses_iterator.html</Path>
    <Abstract>A forward iterator for the Synapses container. </Abstract>
    <DeclaredIn>synapsesIterator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::SynapsesStream</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::SynapsesStream</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses_stream.html</Path>
    <Abstract>A class which allows sequential and forward-only iterations through the synapses from the involved GI...</Abstract>
    <DeclaredIn>synapsesStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SynapsesStream</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses_stream.html</Path>
    <Anchor>a94d6a47d3b66064f6269d1f2c65300aa</Anchor>
    <DeclaredIn>synapsesStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRemaining</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SynapsesStream</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses_stream.html</Path>
    <Anchor>a755792a56bcc3607e480b41e159098f4</Anchor>
    <DeclaredIn>synapsesStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::SynapsesStream</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_synapses_stream.html</Path>
    <Anchor>a6797d5dba82d6ea60cfe60ca838211d2</Anchor>
    <Abstract>Starts an asynchronous read of the data for the next fraction of synapses of the requested GIDs...</Abstract>
    <DeclaredIn>synapsesStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::Version</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_version.html</Path>
    <Abstract>Information about the current Brain version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brain::Version</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_version.html</Path>
    <Anchor>a91407ad262621f2b25c4174398fa7f61</Anchor>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brain::Version</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_version.html</Path>
    <Anchor>a276cd79796e68f291ecb809b93f656d0</Anchor>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brain::Version</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_version.html</Path>
    <Anchor>a0cb8e05a1caccacf4eff6cf82b760cdf</Anchor>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brain::Version</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_version.html</Path>
    <Anchor>a24ea5374f707688abcc431d380bd8109</Anchor>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brain::Version</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_version.html</Path>
    <Anchor>afbc17aacb199a42ca23b5a4a17df9615</Anchor>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brain::Version</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_version.html</Path>
    <Anchor>a8b48e21632ecfa1cf41397bf44ae85eb</Anchor>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brain::Version</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_version.html</Path>
    <Anchor>a7f55ce56cbfa739ce329161583a0f5ef</Anchor>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brain::Version</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_version.html</Path>
    <Anchor>aac35171c72a47a9ccd35c7e0d2ef29b5</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSchema</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brain::Version</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_version.html</Path>
    <Anchor>a0021a79d6d45b29ded0d7bdce890ce0e</Anchor>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toJSON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brain::Version</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1_version.html</Path>
    <Anchor>a02712f5fb5e479153827acb235bb59d4</Anchor>
    <DeclaredIn>brain/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::neuron</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>brain::neuron</Scope>
    </TokenIdentifier>
    <Path>namespacebrain_1_1neuron.html</Path>
    <Abstract>High-level interface to neuron morphologies. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::neuron::Morphology</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Abstract>Wrapper around brion::Morphology with higher level functions. </Abstract>
    <DeclaredIn>morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Morphology</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Anchor>ac554c1df7bac1fd79b26e875bf9b3871</Anchor>
    <Abstract>Create a morphology from a URI, load all the data and transform the points. </Abstract>
    <DeclaredIn>brain/neuron/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Morphology</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Anchor>af2fe6fd75004bdece3ded721b7b79c1d</Anchor>
    <Abstract>Create a morphology from a brion::Morphology, load all the data and transform the points...</Abstract>
    <DeclaredIn>brain/neuron/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Morphology</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Anchor>ad00e9441cb95fa2262e28c8717decccc</Anchor>
    <Abstract>Create a morphology from a URI and load all the data. </Abstract>
    <DeclaredIn>brain/neuron/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Morphology</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Anchor>a237b4f4a4b9d9eee85388953c999fe8a</Anchor>
    <Abstract>Create a morphology from a brion::Morphology and load all the data. </Abstract>
    <DeclaredIn>brain/neuron/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Anchor>a3b95d896d5f8d5a39c96f308a1dea5ae</Anchor>
    <DeclaredIn>brain/neuron/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Anchor>a6eb9ac2ec96c83dd85d6794884b44edb</Anchor>
    <DeclaredIn>brain/neuron/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSectionTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Anchor>aa73946933a24ddce7ce6d1da36c41d50</Anchor>
    <DeclaredIn>brain/neuron/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getApicals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Anchor>a2203b49753545a0e4e35b498c1dd2002</Anchor>
    <DeclaredIn>brain/neuron/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSectionIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Anchor>a4790bc90bad094f27bdfd738237a1869</Anchor>
    <Abstract>Return the list of ids for the given section types. </Abstract>
    <DeclaredIn>brain/neuron/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Anchor>a77a7acf9e2f42f9e5aa015d13fc0fe1d</Anchor>
    <Abstract>Return the sections which have the given section type. </Abstract>
    <DeclaredIn>brain/neuron/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Anchor>a5f7434645c61ded7b7e24129e6f5946d</Anchor>
    <Abstract>Return the sections which have any of the given section types. </Abstract>
    <DeclaredIn>brain/neuron/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Anchor>aa6f8ac2ead5f027398cecf3250f9ef66</Anchor>
    <Abstract>Return the Section with the given id. </Abstract>
    <DeclaredIn>brain/neuron/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSoma</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Anchor>a5a39426d02be2db103f6f485f641129d</Anchor>
    <Abstract>Return the object with the information about the neuron soma. </Abstract>
    <DeclaredIn>brain/neuron/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTransformation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_morphology.html</Path>
    <Anchor>af58a9add66624770aa386286d7b85239</Anchor>
    <Abstract>Returnthe transformation that was passed to the constructor or the identity matrix is no transformati...</Abstract>
    <DeclaredIn>brain/neuron/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::neuron::Section</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::neuron::Section</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_section.html</Path>
    <Abstract>A class to represent a morphological section. </Abstract>
    <DeclaredIn>section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Section</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_section.html</Path>
    <Anchor>a7a4724ee3a8483293cf7af337bf5114e</Anchor>
    <Abstract>Return the ID of this section. </Abstract>
    <DeclaredIn>section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Section</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_section.html</Path>
    <Anchor>af729520de464e3ad975ca256c9954cfd</Anchor>
    <Abstract>Return the morphological type of this section (dendrite, axon, ...). </Abstract>
    <DeclaredIn>section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Section</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_section.html</Path>
    <Anchor>af3a4e804a2f2f5e3d064744249250453</Anchor>
    <Abstract>Return the total length of this section in microns. </Abstract>
    <DeclaredIn>section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Section</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_section.html</Path>
    <Anchor>a36f7f7b4c3ab43def5c24b401fbf625c</Anchor>
    <Abstract>Return the list of all point samples that define this section. </Abstract>
    <DeclaredIn>section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSamples</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Section</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_section.html</Path>
    <Anchor>a267e6b57b5d726a09a62b7d677dc44cb</Anchor>
    <Abstract>Return a list of points sampling this section at discrete locations. </Abstract>
    <DeclaredIn>section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDistanceToSoma</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Section</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_section.html</Path>
    <Anchor>a929e71da9372a82ab12fc650360163e4</Anchor>
    <Abstract>Return the absolute distance from the start of the section to the soma. </Abstract>
    <DeclaredIn>section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSampleDistancesToSoma</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Section</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_section.html</Path>
    <Anchor>aa05f5214f028540b0d8bd84f35087ed3</Anchor>
    <Abstract>Return the absolute distances to the soma in microns for all sample positions. </Abstract>
    <DeclaredIn>section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Section</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_section.html</Path>
    <Anchor>a1f6b597370a7ef211244b89d86712dac</Anchor>
    <Abstract>Return true if this section has a parent section, false otherwise. </Abstract>
    <DeclaredIn>section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Section</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_section.html</Path>
    <Anchor>a2b6f7b82059159c7af9cefc7e68e94af</Anchor>
    <Abstract>Return the parent section of this section. </Abstract>
    <DeclaredIn>section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChildren</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Section</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_section.html</Path>
    <Anchor>ac34c25b88f6e3acf9b524ed0fe2a67b8</Anchor>
    <Abstract>Return a vector with all the direct children of this section. </Abstract>
    <DeclaredIn>section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brain::neuron::Soma</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brain::neuron::Soma</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_soma.html</Path>
    <Abstract>A class to represent a neuron soma. </Abstract>
    <DeclaredIn>soma.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProfilePoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Soma</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_soma.html</Path>
    <Anchor>a4afc335bd476f8e9992359740ee49715</Anchor>
    <Abstract>Return the x,y,z and radius of the points of the soma profile. </Abstract>
    <DeclaredIn>soma.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMeanRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Soma</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_soma.html</Path>
    <Anchor>a87541ea5e6f8fb237a1b94105e55a8fd</Anchor>
    <Abstract>Return the mean distance between the profile points and the centroid. </Abstract>
    <DeclaredIn>soma.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCentroid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Soma</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_soma.html</Path>
    <Anchor>ab825fd483b4b64b11eecb25d65dcefe3</Anchor>
    <Abstract>Return the average of the profile points. </Abstract>
    <DeclaredIn>soma.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChildren</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brain::neuron::Soma</Scope>
    </TokenIdentifier>
    <Path>classbrain_1_1neuron_1_1_soma.html</Path>
    <Anchor>a6b4d2f2e244fe48bbbfbf11d40c7d6b4</Anchor>
    <Abstract>Return the first order sections starting from the soma. </Abstract>
    <DeclaredIn>soma.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Abstract>Blue Brain File IO classes. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpikeReportInitData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>af701814b1be5579bfdd3923b534cf4f8</Anchor>
    <Abstract>Basic plugin init data for SpikeReportPlugin. </Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GIDSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>a357e1817d1c46828b8a3d2ac91f635bc</Anchor>
    <Abstract>Ordered set of GIDs of neurons. </Abstract>
    <DeclaredIn>brion/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SectionOffsets</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>a268d3accc549127a85d860c49c9bbd55</Anchor>
    <Abstract>The offset for the voltage per section for each neuron, uin64_t max for sections with no compartments...</Abstract>
    <DeclaredIn>brion/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompartmentCounts</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>a84184b855330ee09971e540d456f33da</Anchor>
    <Abstract>The number of compartments per section for each neuron. </Abstract>
    <DeclaredIn>brion/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NeuronMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>abf82853aadcb10654d3f2838a78ed9ed</Anchor>
    <Abstract>Data matrix storing NeuronAttributes for each neuron. </Abstract>
    <DeclaredIn>brion/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SynapseMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>ab4bc13477e92d9125cf9a3f81df0fe62</Anchor>
    <Abstract>Data matrix storing SynapseAttributes for each neuron. </Abstract>
    <DeclaredIn>brion/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SynapseSummaryMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>af4847fbee66c5b7005aeb91d35767b60</Anchor>
    <Abstract>Data matrix storing GID, numEfferent, numAfferent for each neuron. </Abstract>
    <DeclaredIn>brion/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Spike</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>aa5761fbfeed13e3001d6b682ecee81cf</Anchor>
    <Abstract>A spike. </Abstract>
    <DeclaredIn>brion/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpikeMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>af983412386efb45c2c18973af8d8ebf5</Anchor>
    <Abstract>A list of Spikes events per cell gid, indexed by spikes times. </Abstract>
    <DeclaredIn>brion/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>ab2e98fe0210aa6815bc153e42a734c37</Anchor>
    <Abstract>Stream out content of BlueConfig or CircuitConfig file. </Abstract>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>a0187c76d308ba70d777e58993ac9ed00</Anchor>
    <Abstract>Stream out content of target file. </Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UNDEFINED_TIMESTAMP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>ad046cead8718797e24e848ba108d0160</Anchor>
    <Abstract>A value for undefined timestamps. </Abstract>
    <DeclaredIn>brion/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RESTING_VOLTAGE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>a8ae1d136d8ee3a42852723c5d323b9f7</Anchor>
    <Abstract>Resting voltage in mV. </Abstract>
    <DeclaredIn>brion/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MINIMUM_VOLTAGE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brion</Scope>
    </TokenIdentifier>
    <Path>namespacebrion.html</Path>
    <Anchor>a5bd25464986914e035b86467e29dee94</Anchor>
    <Abstract>Lowest voltage after hyperpolarisation. </Abstract>
    <DeclaredIn>brion/types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::BlueConfig</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Abstract>Read access to a BlueConfig or CircuitConfig file. </Abstract>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~BlueConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>a9f4f9b12ba5193f3cbbd16b91e26fdd8</Anchor>
    <Abstract>Close BlueConfig or CircuitConfig file. </Abstract>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BlueConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>afbac59429e4019abf307e9f415efdace</Anchor>
    <Abstract>Open given filepath to a BlueConfig or CircuitConfig for reading. </Abstract>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSectionNames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>a5a98e5c0ba84ee166cc28dc73a14d447</Anchor>
    <Abstract>Get names of given section type. </Abstract>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>a30a249fc4948e6fa7c269c34fe5155b8</Anchor>
    <Abstract>Get value as string for key in given section. </Abstract>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>aa58d9cf3d2a4462939a5a0586bbf7008</Anchor>
    <Abstract>Get value as type T for key in given section. </Abstract>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTargets</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>ad7a6a9a938e57413802e8022df62a198</Anchor>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCircuitSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>a6c9d6dd253e94e73800b474b446822b3</Anchor>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSynapseSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>a15ca4b93088443b660df47d4cd865e9c</Anchor>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProjectionSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>a0d172776265bfdd7d0866d5f2bef6cc7</Anchor>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMorphologySource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>a759864b8fa6bcd76d756e1043eaa107d</Anchor>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getReportSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>a30f64c0386fc846429a3dda70b5214cb</Anchor>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSpikeSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>a50d0101e7336a7f04259124ea91da51d</Anchor>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTargetSources</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>a9ea0c357557e7e6c3c6f7fbd7ccc4ec6</Anchor>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCircuitTarget</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>ae46b4d84d8ececad808bcde505973271</Anchor>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseTarget</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>a098c87b49809e5e23d1b40b63e381cbd</Anchor>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimestep</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>a2e3c4ab0dcd34d3639c4e58a16d68767</Anchor>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>brion::BlueConfig</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_blue_config.html</Path>
    <Anchor>aaf062876e0c67fbb50609662f4edcb6e</Anchor>
    <Abstract>Stream out content of BlueConfig or CircuitConfig file. </Abstract>
    <DeclaredIn>blueConfig.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::Circuit</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_circuit.html</Path>
    <Abstract>Read access to a Circuit file. </Abstract>
    <DeclaredIn>circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Circuit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_circuit.html</Path>
    <Anchor>a3dbdbcb1eb256932b68b2471e36374d0</Anchor>
    <Abstract>Close circuit file. </Abstract>
    <DeclaredIn>brion/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Circuit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_circuit.html</Path>
    <Anchor>af64a9ed2225c8fc2a8f34a946892c3db</Anchor>
    <Abstract>Open given filepath to a circuit file for reading. </Abstract>
    <DeclaredIn>brion/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Circuit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_circuit.html</Path>
    <Anchor>ae550b508b82967cd9b3035d960aede77</Anchor>
    <Abstract>Open given filepath to a circuit file for reading. </Abstract>
    <DeclaredIn>brion/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_circuit.html</Path>
    <Anchor>a7a188cd1a46b554e9a7220f876ad8b9c</Anchor>
    <Abstract>Retrieve neuron attributes for set of neurons. </Abstract>
    <DeclaredIn>brion/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumNeurons</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_circuit.html</Path>
    <Anchor>af7ed47392549f914b7ab7625f493176e</Anchor>
    <DeclaredIn>brion/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Circuit</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_circuit.html</Path>
    <Anchor>aeed587930d6b50536bc915e62c7c2fbd</Anchor>
    <Abstract>Get type information for the neurons in the circuit. </Abstract>
    <DeclaredIn>brion/circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::CompartmentReport</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Abstract>Read &amp; write access to a CompartmentReport. </Abstract>
    <DeclaredIn>compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~CompartmentReport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>aa062e1099c64f3dcde183766f07524f2</Anchor>
    <Abstract>Close compartment report. </Abstract>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompartmentReport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a1068892309907490436a2f5b23e3f252</Anchor>
    <Abstract>Open given URI to a compartment report for reading and/or writing. </Abstract>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateMapping</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a6ee6420e43db4ac5319a86b074d94ba4</Anchor>
    <Abstract>Update compartment mapping wrt the given GIDs. </Abstract>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a3589cf28e6cdd2f4879f6bf7cbd264e3</Anchor>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a63b0eb41e226f19bbd0b30c45804d3e5</Anchor>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOffsets</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a91a580dd34e4eb7c9a34c3b96d003781</Anchor>
    <Abstract>Get the current mapping of each section of each neuron in each simulation frame buffer. </Abstract>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCompartmentCounts</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a1457c2180362fb3ac924edd9b7114b1d</Anchor>
    <Abstract>Get the number of compartments for each section of each neuron provided by the GID set via updateMapp...</Abstract>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumCompartments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>ace0923ed2cb001197da414284383ec7b</Anchor>
    <Abstract>Get the number of compartments for the given neuron. </Abstract>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStartTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>add9d4f7e6d2bacdb68d64f3f70ee96af</Anchor>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEndTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a2b2e504eb004361a5172c6709d457c85</Anchor>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimestep</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a9eb569f6bf02eb22139f56c364a58436</Anchor>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDataUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>afd2cadc160af1e98ccf30b3489a2bd84</Anchor>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimeUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>aa52854139ec3214ba63da0a0cf568b1f</Anchor>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a75a2757c72b283f1e723e4302ec0d10d</Anchor>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>ac20d74941bf0b7f61480efbeffabc619</Anchor>
    <Abstract>Load report values at the given time stamp. </Abstract>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNeuronSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>abed91c0656f8bbff498a728437581f0f</Anchor>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadNeuron</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>af84c6903043a492c5da537a1a2f74f08</Anchor>
    <Abstract>Load report values for the given neuron. </Abstract>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBufferSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a8721d04fa5ef8d8b1c69b8865fcb0917</Anchor>
    <Abstract>Set the size of the stream buffer for loaded frames. </Abstract>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBufferSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a646267af418b901b2b618e27cf0079ef</Anchor>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a30882f15ba7f42ebe56e044d4a956082</Anchor>
    <Abstract>Clears all buffered frames to free memory. </Abstract>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeHeader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a5dd9a3b9cb25b6d6cfe6d6e6200579d9</Anchor>
    <Abstract>Write the header information of this report. </Abstract>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeCompartments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a5bd85b1c9847c5800215e4bb8aeda1eb</Anchor>
    <Abstract>Write the compartment counts for each section for one cell. </Abstract>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>a837605b1c593cc8eb039f804726e9a15</Anchor>
    <Abstract>Write the values for one cell at a point in time. </Abstract>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>aada18371df36d46de253b2df4495ecb5</Anchor>
    <Abstract>Flush data to output. </Abstract>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>erase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>af8c5d7918256836a01754294ff1163d5</Anchor>
    <Abstract>Remove all data of the report from storage. </Abstract>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDescriptions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::CompartmentReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report.html</Path>
    <Anchor>acb895dd1b653688292796e1f2c4377e9</Anchor>
    <DeclaredIn>brion/compartmentReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::CompartmentReportInitData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::CompartmentReportInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_init_data.html</Path>
    <Abstract>Basic plugin init data for CompartmentReportPlugin. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CompartmentReportInitData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_init_data.html</Path>
    <Anchor>a268487758574e1da6febf4666a235d6b</Anchor>
    <Abstract>Create a CompartmentReportInitData object given a URI, access mode and GIDs. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGids</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_init_data.html</Path>
    <Anchor>a62cbdfafa3bd2a3bdcf7f4ad5c503285</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PluginInitData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>a2b26dd7348cc1ce830935b97079a97ef</Anchor>
    <Abstract>Create a PluginInitData object given a URI and access mode. </Abstract>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>a5e5dff9830e0e4d7adfd9e3aead696fc</Anchor>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAccessMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>ac110912b104b28967b171f2065fbb93f</Anchor>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::CompartmentReportPlugin</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Abstract>Base interface for compartment report readers and writers. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a0431a868381da6c7349bb3e8488c9f25</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStartTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a237ed37ac7dee4ee24102f04a0f97fcc</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEndTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>aad88d388ecea4b065d1282afe8f6c975</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimestep</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a9fd222011b8aa7dee3cbdb8580e57c9a</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDataUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a5db9d3f9e159223e455d8b806a04ff29</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimeUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>adc2bbece2d1d8bd8498c30a7f0f171ae</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGIDs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a2d60182e608a36d2c3882aa9e19f1568</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOffsets</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a5965b7ec251440a8b0af14248a1be537</Anchor>
    <Abstract>Get the current mapping of each section of each neuron in each simulation frame buffer. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumCompartments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a3288f5deda7263bf1ff47954011abac4</Anchor>
    <Abstract>Get the number of compartments for the given neuron. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCompartmentCounts</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a76f5e223ca77148089b09b6149a7cdf1</Anchor>
    <Abstract>Get the number of compartments for each section of each neuron provided by the GID set via updateMapp...</Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a57f07a09d52695271012e4c6a2f0cf85</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a33b56d3b899babfa39f535502d4f3644</Anchor>
    <Abstract>Load report values at the given time stamp. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadNeuron</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>aa7a61195aa5f2b8cceb444162178bc25</Anchor>
    <Abstract>Load report values for the given neuron. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateMapping</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a979a0f56cfe3fc560eadc776dd865910</Anchor>
    <Abstract>Update compartment mapping wrt the given GIDs. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBufferSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>afd8862671b3a459bb0d891e96ff1ee24</Anchor>
    <Abstract>Set the size of the stream buffer for loaded frames. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a7fe02b55cdecf384aa1ec33aff7a3620</Anchor>
    <Abstract>Clears all buffered frames to free memory. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBufferSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>ab8a1a38a2cc4ecbd0b8a55285a61545d</Anchor>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeHeader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a1f4097c67462043601b6736e9c349706</Anchor>
    <Abstract>Write the header information of this report. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeCompartments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a1ee8f2b01df7aec46ea21b8925e359eb</Anchor>
    <Abstract>Write the compartment counts for each section for one cell. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>ad3d70d5d37cbcecc426652d026e74c60</Anchor>
    <Abstract>Write the values for one cell at a point in time. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a29f488ea011b60d69788eb5f28d39de8</Anchor>
    <Abstract>Flush data to output. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>erase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::CompartmentReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_compartment_report_plugin.html</Path>
    <Anchor>a40e2f1fbf74a169f96caaf3cf5d71091</Anchor>
    <Abstract>Remove all data of the report from storage. </Abstract>
    <DeclaredIn>compartmentReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::Mesh</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Abstract>Read &amp; write access to a Mesh file. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Mesh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a55332d0f5514bc5f2da06a7c7683a7d2</Anchor>
    <Abstract>Close mesh file. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Mesh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>ae37cce9604ced319d85b6a5a0c14fe90</Anchor>
    <Abstract>Open the given source to a mesh file for reading. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVersion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a4d91f35bc6ddc7e0d6d381db1c2ca44b</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumVertices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a147b439bf0614b838289edeb2405024e</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readVertices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>ad26774b45b0182cffe3398622a8be1e6</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readVertexSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a8030c1ee2238659ae3dfe7a9749011e4</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readVertexDistances</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>ae55ff5c5a296ee5594b7c463ac28a1bf</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumTriangles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>ae381bb48056d2dc2bc804fd7a34db12b</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readTriangles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>af195ee3aaffc21d69443969c89a7169a</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readTriangleSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>ac4ff32aa44c10d0913c74edc94214c27</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readTriangleDistances</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a814a9196b7fa9ce5953585c42dfd5b48</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTriStripLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a636ec40aaad18512e451d7ec89c6cdfd</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readTriStrip</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a93a549722a2c9ac3fcf9383556bebc54</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumNormals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a0e2ebd5da50e066a96afe7c971825da7</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readNormals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a9369029be5c50db3851b02159f9da018</Anchor>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumStructures</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a396288b2de57235ad00ffd8a93ac902b</Anchor>
    <Abstract>Get the number of structural meshes of the given type. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readStructureVertices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a43d8b24e6c25b2b347d672687bab5379</Anchor>
    <Abstract>Get the vertices of the given structure. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readStructureTriangles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a5573f1698efd85526511b0881365fbaf</Anchor>
    <Abstract>Get the triangles of the given structure. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readStructureTriStrip</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a1baf2473e7242abddafa726d7cc26287</Anchor>
    <Abstract>Get the triangle strip of the given structure. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Mesh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>abe93f5c80142b3c65f819c40eafca775</Anchor>
    <Abstract>Open the given mesh file for write access. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeVertices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>aa812af0661e5f85c24956581776d0535</Anchor>
    <Abstract>Write vertices describing the surface/membrane mesh of a neuron. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeVertexSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a6e151efb6675540e580e66ce9747b2a3</Anchor>
    <Abstract>Write section indices for each vertex of the surface/membrane mesh. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeVertexDistances</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a323d2eece34198b700a7e8417446defe</Anchor>
    <Abstract>Write relative distances in the section for each vertex of the surface/membrane mesh. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTriangles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>aaabe742fe4f8fb784928e1b178f02d80</Anchor>
    <Abstract>Write triangles describing the surface/membrane mesh of a neuron. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTriangleSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a1176166ce871e285faf9703f440f4952</Anchor>
    <Abstract>Write section indices for each triangle of the surface/membrane mesh. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTriangleDistances</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>af1987188c851cdb5dadd8429eea631ae</Anchor>
    <Abstract>Write relative distances in the section for each triangle of the surface/membrane mesh...</Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTriStrip</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a460e23ea6d110b000459c7dad874880a</Anchor>
    <Abstract>Write triangle strip describing the surface/membrane mesh of a neuron. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeNormals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a5aca35c6cf7190594b9241c38d1265d0</Anchor>
    <Abstract>Write per-vertex normals for the surface/membrane mesh of a neuron. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeStructureVertices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a36a308a361a5a788a9e222cdee99fdc7</Anchor>
    <Abstract>Write vertices for one type of structural mesh. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeStructureTriangles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a6eb740ca0a36bc24f2235d1d857b03bd</Anchor>
    <Abstract>Write triangles for one type of structural mesh. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeStructureTriStrip</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a7dadc6750f82db506395a63839b70baf</Anchor>
    <Abstract>Write the triangle strip for one type of structural mesh. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Mesh</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_mesh.html</Path>
    <Anchor>a268f1c164a98bb286b5ae71e1e84ab7f</Anchor>
    <Abstract>Flush data to output. </Abstract>
    <DeclaredIn>mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::Morphology</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Abstract>Read &amp; write access to a Morphology file. </Abstract>
    <DeclaredIn>morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Morphology</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>acfb9f9d4db5bd0818bc3aad2f348a74a</Anchor>
    <Abstract>Close morphology file. </Abstract>
    <DeclaredIn>brion/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Morphology</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>a235efab2eac5b23ee3fed5fb34681b97</Anchor>
    <Abstract>Open the given source to a morphology file for reading. </Abstract>
    <DeclaredIn>brion/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCellFamily</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>ac73c240bc561a005f9e0a62b1ae0f4b2</Anchor>
    <DeclaredIn>brion/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readPoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>aa701775cc9582921eb67c881a5883cd1</Anchor>
    <Abstract>Read points of morphology, representing x,y,z coordinates + diameter. </Abstract>
    <DeclaredIn>brion/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>abcad3892ae6c95675f2b1ca9280e5ed1</Anchor>
    <Abstract>Read sections of morphology, representing section start index and index of the parent section...</Abstract>
    <DeclaredIn>brion/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readSectionTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>a403f9c4ae379feeae3610f973c213995</Anchor>
    <Abstract>Read section types of morphology. </Abstract>
    <DeclaredIn>brion/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readApicals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>a8bc8172057581f9e03b72ab1da560eb7</Anchor>
    <Abstract>Read apical points of morphology, representing section and point index. </Abstract>
    <DeclaredIn>brion/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readPerimeters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>acebbe28ddcd0d9493536b088a878b6c2</Anchor>
    <DeclaredIn>brion/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Morphology</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>aa0f096527c6e81089fcd4ca0fdf96fae</Anchor>
    <Abstract>Open the given morphology file for write access. </Abstract>
    <DeclaredIn>brion/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Morphology</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>a9adfd90622b00f8d315faedb95d2b743</Anchor>
    <Abstract>Open the given morphology file for write access. </Abstract>
    <DeclaredIn>brion/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writePoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>aae36886a00863864d2d48fe18ef73fdb</Anchor>
    <Abstract>Write points of morphology, representing x,y,z coordinates + diameter. </Abstract>
    <DeclaredIn>brion/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>a4547ecbcf1641df1af0073638a07a04e</Anchor>
    <Abstract>Write sections of morphology, representing section start index and index of parent the section...</Abstract>
    <DeclaredIn>brion/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeSectionTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>a4e10777e7caed13c668b1a4428735780</Anchor>
    <Abstract>Write section types of morphology. </Abstract>
    <DeclaredIn>brion/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeApicals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>a27999dfcdbc884321edf3374a085a531</Anchor>
    <Abstract>Write apical points of morphology, representing section and point index. </Abstract>
    <DeclaredIn>brion/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writePerimeters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>a4714d17120b1f596f30e2343feaff192</Anchor>
    <Abstract>Write perimeters of morphology. </Abstract>
    <DeclaredIn>brion/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Morphology</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology.html</Path>
    <Anchor>a875995889e7e94dbe0959475aec03924</Anchor>
    <Abstract>Flush data to output. </Abstract>
    <DeclaredIn>brion/morphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::MorphologyInitData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::MorphologyInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_init_data.html</Path>
    <Abstract>Basic plugin init data for MorphologyPlugin. </Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PluginInitData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>a2b26dd7348cc1ce830935b97079a97ef</Anchor>
    <Abstract>Create a PluginInitData object given a URI and access mode. </Abstract>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>a5e5dff9830e0e4d7adfd9e3aead696fc</Anchor>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAccessMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>ac110912b104b28967b171f2065fbb93f</Anchor>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::MorphologyPlugin</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Abstract>Base interface for morphology readers plugins. </Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCellFamily</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>a166671d6b2f1c6e33b0be02dba4155fd</Anchor>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readPoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>a6aba7b6ef05a894d8b80455cd71a771d</Anchor>
    <Abstract>Read points of morphology, representing x,y,z coordinates + diameter. </Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>ab8511190c31b222515cea86c09e27420</Anchor>
    <Abstract>Read sections of morphology, representing section start index and index of the parent section...</Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readSectionTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>a98479a79f58c856951fc96a33faa6a7b</Anchor>
    <Abstract>Read section types of morphology. </Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readApicals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>a3a2cf2407d5f36796c2471a322afd0a6</Anchor>
    <Abstract>Read apical points of morphology, representing section and point index. </Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readPerimeters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>ab3412d7dfc11d6a290da995b8de6e886</Anchor>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writePoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>a66b542efcf23d913e49ce4489e314ef4</Anchor>
    <Abstract>Write points of morphology, representing x,y,z coordinates + diameter. </Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>aeb554f30f9d08646bc6af7120dd2479e</Anchor>
    <Abstract>Write sections of morphology, representing section start index and index of parent the section...</Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeSectionTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>ab83fc61f7379ea0ffc5b7c2c26db49df</Anchor>
    <Abstract>Write section types of morphology. </Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeApicals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>af21f35f221ca068d5cca1a418ac0359a</Anchor>
    <Abstract>Write apical points of morphology, representing section and point index. </Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writePerimeters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>a18e4e2a3aca16bab2f6c650adc8b9029</Anchor>
    <Abstract>Write perimeters of morphology. </Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::MorphologyPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_morphology_plugin.html</Path>
    <Anchor>a7e46021d144fc5dad9faa3e23ea0b20d</Anchor>
    <Abstract>Flush data to output. </Abstract>
    <DeclaredIn>morphologyPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::PluginInitData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Abstract>Basic plugin init data for Brion plugin classes. </Abstract>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PluginInitData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>a2b26dd7348cc1ce830935b97079a97ef</Anchor>
    <Abstract>Create a PluginInitData object given a URI and access mode. </Abstract>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>a5e5dff9830e0e4d7adfd9e3aead696fc</Anchor>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAccessMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::PluginInitData</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_plugin_init_data.html</Path>
    <Anchor>ac110912b104b28967b171f2065fbb93f</Anchor>
    <DeclaredIn>pluginInitData.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::SpikeReport</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Abstract>Read/writes access to a spike report. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpikeReport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>abc848e1631c8293dbb2c0a5787656b3b</Anchor>
    <Abstract>Create a SpikeReport object given a URI. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpikeReport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a7eec8b54b3b74f8c21bf80a8690fa780</Anchor>
    <Abstract>Open a report in read mode with a subset selection. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SpikeReport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a50beeeb2c939998028f2e5e32d121364</Anchor>
    <Abstract>Release all resources. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a5610cfd2b4f663e5c9e6393af63a472c</Anchor>
    <Abstract>Close the report. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isClosed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>aabe018d69760b2546f886877d267fcf7</Anchor>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>interrupt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>acad20c31f6b65356a837051ad6378fbb</Anchor>
    <Abstract>Interrupt any pending read/seek operation. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a4dc05e732f005032f8080f88e88bd168</Anchor>
    <Abstract>Get the URI used to instantiate the report. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>ab199bcf8e3244591b88ada47fb8162b3</Anchor>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEndTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a5f90cebedf6f79bd3c8e15de3c2861aa</Anchor>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a7245fa5e202c79bfea1c46e2f32f60e3</Anchor>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a0cf6257a24b2e1608e0a2a2a72e3e6cf</Anchor>
    <Abstract>Read spikes until getCurrentTime becomes &gt; min, the end of the report is reached or the report closed...</Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readUntil</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a19ae7991ad9563d38d0060f43e839258</Anchor>
    <Abstract>Read spikes until getCurrentTime() &gt;= max, the end of the report is reached or the report closed...</Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>seek</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a2e1f18b9e172bec7c5aaf495f1edc590</Anchor>
    <Abstract>Seek to a given absolute timestamp. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>ab8efdf2da32129eff184b9bd260b4c49</Anchor>
    <Abstract>Write the given spikes to the output. </Abstract>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsBackwardSeek</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>aa112549e40ecbaecae371a87a054d991</Anchor>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDescriptions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::SpikeReport</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report.html</Path>
    <Anchor>a4c0e9bb690a41e19ca9ab55da707d54f</Anchor>
    <DeclaredIn>spikeReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::SpikeReportPlugin</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Abstract>Base interface for spike report readers plugins. </Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>a972c34269c7b114a27f01d13363bddad</Anchor>
    <Abstract>Close the report. </Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>a20b5f1d4e25470ba33ef0fce77f4d327</Anchor>
    <Abstract>Read spikes until getCurrentTime becomes &gt; min, the end of the report is reached or the report closed...</Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readUntil</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>afd5f606b2e1cf96b7fbb89cbac5645f9</Anchor>
    <Abstract>Read spikes until getCurrentTime() &gt;= max, the end of the report is reached or the report closed...</Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readSeek</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>a75861b455cb78d7e6540c1e63efc9f96</Anchor>
    <Abstract>Seek to a given absolute timestamp. </Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeSeek</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>ad444291f4eea4274e058d9748be2a37e</Anchor>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>ae6c691a8519a52daabad6069dbc47176</Anchor>
    <Abstract>Write the given spikes to the output. </Abstract>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>supportsBackwardSeek</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SpikeReportPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_spike_report_plugin.html</Path>
    <Anchor>ae3fa94ea29d5acd876a4dc4df0d55efc</Anchor>
    <DeclaredIn>spikeReportPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::Synapse</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse.html</Path>
    <Abstract>Read access to a Synapse file. </Abstract>
    <DeclaredIn>synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Synapse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse.html</Path>
    <Anchor>a967b1d9adb7f49fbff371130291c0b7d</Anchor>
    <Abstract>Close synapse file. </Abstract>
    <DeclaredIn>brion/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Synapse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse.html</Path>
    <Anchor>afa0d5cf421b259daf8820890efe248c6</Anchor>
    <Abstract>Open the given source to a synapse file for reading. </Abstract>
    <DeclaredIn>brion/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse.html</Path>
    <Anchor>a62371ecb873ea2ff7be426306fb5d6db</Anchor>
    <Abstract>Read requested synapse attributes for a given neuron. </Abstract>
    <DeclaredIn>brion/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumSynapses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse.html</Path>
    <Anchor>a7c29b99d2f20edc860860d6b286d0f90</Anchor>
    <Abstract>Get the number of synapses for a set of neurons. </Abstract>
    <DeclaredIn>brion/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumAttributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Synapse</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse.html</Path>
    <Anchor>abfae772ef7b2c7af3f219b2f2e4e140a</Anchor>
    <Abstract>Return the number of columns of the synapse file. </Abstract>
    <DeclaredIn>brion/synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::SynapseSummary</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::SynapseSummary</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse_summary.html</Path>
    <Abstract>Read access to a Synapse summary file. </Abstract>
    <DeclaredIn>synapseSummary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SynapseSummary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SynapseSummary</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse_summary.html</Path>
    <Anchor>a6c88b279a52cb43f3b21f958bbd4ddb7</Anchor>
    <Abstract>Close synapse summary file. </Abstract>
    <DeclaredIn>synapseSummary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SynapseSummary</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SynapseSummary</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse_summary.html</Path>
    <Anchor>af20d4491231e172d332a2850fb957842</Anchor>
    <Abstract>Open the given source to a synapse summary file for reading. </Abstract>
    <DeclaredIn>synapseSummary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::SynapseSummary</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_synapse_summary.html</Path>
    <Anchor>a267ab334b59f7bda02f91c259ed7767b</Anchor>
    <Abstract>Read afferent and efferent information for a given neuron. </Abstract>
    <DeclaredIn>synapseSummary.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::Target</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Abstract>Read access to a Target file. </Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Target</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Anchor>a967607b68d715c7191d56cf2d19ad6ca</Anchor>
    <Abstract>Copy-construct a target file. </Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Target</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Anchor>ab8d2a8b976e2b52b4b8617edfc8e6a2f</Anchor>
    <Abstract>Close target file. </Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Anchor>a5ee36b021b1a08f7baf94651822be7fc</Anchor>
    <Abstract>Assign a different target. </Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Anchor>aea9917cbbc18242f7738a1e57ff70274</Anchor>
    <Abstract>Stream out content of target file. </Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Target</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Anchor>a2c1de15976a2e1f569b0083bb56d0480</Anchor>
    <Abstract>Open the given source to a target file for reading. </Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTargetNames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Anchor>a92130c8c0608723dcb538a9e4d4c317c</Anchor>
    <Abstract>Get list of targets for the desired type. </Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Anchor>aa58924378a7389ae2a44867ce5e8be20</Anchor>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Anchor>a413c895cc24f25e7c85ed00818395d90</Anchor>
    <Abstract>Get targets and/or GIDSet grouped by the given target. </Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Target</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_target.html</Path>
    <Anchor>af9dfd3b852d9a457e627d05ffb5bf30c</Anchor>
    <Abstract>Parse a given target into a GID set. </Abstract>
    <DeclaredIn>target.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brion::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Abstract>Information about the current Brion version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>a7724662e5f6b8e067440ac22acec9657</Anchor>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>abfeb86012f499e974116645aa4682830</Anchor>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>abb649c2122bcb69b00e2485d6695fdee</Anchor>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>a100387ecec439ad9a41c6125d4584288</Anchor>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>ad3457e9ccb29f7cb33a0aaaa88db1ab2</Anchor>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>a08a68ae8561176060e77710c79cad778</Anchor>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>a0529b8442a3578b60213b46007be4624</Anchor>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>a899ec6e0102c68a690e8b9143c7908c4</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSchema</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>a1d222a0670a0df9f7b70415ec501602a</Anchor>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toJSON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brion::Version</Scope>
    </TokenIdentifier>
    <Path>classbrion_1_1_version.html</Path>
    <Anchor>a4852c8bfeec845a82718d1a42250c16a</Anchor>
    <DeclaredIn>brion/version.h</DeclaredIn>
  </Token>
</Tokens>
