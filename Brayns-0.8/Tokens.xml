<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_MAJOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>common_2version_8h.html</Path>
    <Anchor>af6fac12cc372fa2c0d4a7276646db3e2</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_MINOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>common_2version_8h.html</Path>
    <Anchor>ad1d30abb92c583df9555702986df6cd5</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_PATCH</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>common_2version_8h.html</Path>
    <Anchor>aec3b431747b4611d046a5be799c36a85</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_REVISION</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>common_2version_8h.html</Path>
    <Anchor>a4d697b7dac7e97b28fecf7714fea4d8f</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_ABI</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>common_2version_8h.html</Path>
    <Anchor>a689d3561485abd45ee50411137295ee0</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_STRING</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>common_2version_8h.html</Path>
    <Anchor>aae1fd1122c42331f598c0152baa6572a</Anchor>
    <Abstract>The current major.minor.version as a string. </Abstract>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_REV_STRING</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>common_2version_8h.html</Path>
    <Anchor>abdfd5d63377bd1606cf51a0437943637</Anchor>
    <Abstract>The current major.minor.version.revision as a string. </Abstract>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_GT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>common_2version_8h.html</Path>
    <Anchor>ae06db9b236b4f8ed1de4c3d1cbf55fe5</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_GE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>common_2version_8h.html</Path>
    <Anchor>a4453b9a10c85cfaf4e3a599a6105fcea</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_LT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>common_2version_8h.html</Path>
    <Anchor>aa92a565dac0a7e3edbc52f24802aa925</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_LE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>common_2version_8h.html</Path>
    <Anchor>acbda0067085f5d239bc8e6c0f3ec2d12</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_MAJOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>parameters_2version_8h.html</Path>
    <Anchor>af6fac12cc372fa2c0d4a7276646db3e2</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_MINOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>parameters_2version_8h.html</Path>
    <Anchor>ad1d30abb92c583df9555702986df6cd5</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_PATCH</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>parameters_2version_8h.html</Path>
    <Anchor>aec3b431747b4611d046a5be799c36a85</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_REVISION</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>parameters_2version_8h.html</Path>
    <Anchor>a4d697b7dac7e97b28fecf7714fea4d8f</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_ABI</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>parameters_2version_8h.html</Path>
    <Anchor>a689d3561485abd45ee50411137295ee0</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_STRING</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>parameters_2version_8h.html</Path>
    <Anchor>aae1fd1122c42331f598c0152baa6572a</Anchor>
    <Abstract>The current major.minor.version as a string. </Abstract>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_REV_STRING</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>parameters_2version_8h.html</Path>
    <Anchor>abdfd5d63377bd1606cf51a0437943637</Anchor>
    <Abstract>The current major.minor.version.revision as a string. </Abstract>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_GT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>parameters_2version_8h.html</Path>
    <Anchor>ae06db9b236b4f8ed1de4c3d1cbf55fe5</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_GE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>parameters_2version_8h.html</Path>
    <Anchor>a4453b9a10c85cfaf4e3a599a6105fcea</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_LT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>parameters_2version_8h.html</Path>
    <Anchor>aa92a565dac0a7e3edbc52f24802aa925</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_LE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>parameters_2version_8h.html</Path>
    <Anchor>acbda0067085f5d239bc8e6c0f3ec2d12</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_MAJOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>tasks_2version_8h.html</Path>
    <Anchor>af6fac12cc372fa2c0d4a7276646db3e2</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_MINOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>tasks_2version_8h.html</Path>
    <Anchor>ad1d30abb92c583df9555702986df6cd5</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_PATCH</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>tasks_2version_8h.html</Path>
    <Anchor>aec3b431747b4611d046a5be799c36a85</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_REVISION</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>tasks_2version_8h.html</Path>
    <Anchor>a4d697b7dac7e97b28fecf7714fea4d8f</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_ABI</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>tasks_2version_8h.html</Path>
    <Anchor>a689d3561485abd45ee50411137295ee0</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_STRING</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>tasks_2version_8h.html</Path>
    <Anchor>aae1fd1122c42331f598c0152baa6572a</Anchor>
    <Abstract>The current major.minor.version as a string. </Abstract>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_REV_STRING</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>tasks_2version_8h.html</Path>
    <Anchor>abdfd5d63377bd1606cf51a0437943637</Anchor>
    <Abstract>The current major.minor.version.revision as a string. </Abstract>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_GT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>tasks_2version_8h.html</Path>
    <Anchor>ae06db9b236b4f8ed1de4c3d1cbf55fe5</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_GE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>tasks_2version_8h.html</Path>
    <Anchor>a4453b9a10c85cfaf4e3a599a6105fcea</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_LT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>tasks_2version_8h.html</Path>
    <Anchor>aa92a565dac0a7e3edbc52f24802aa925</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_LE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>tasks_2version_8h.html</Path>
    <Anchor>acbda0067085f5d239bc8e6c0f3ec2d12</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_MAJOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>af6fac12cc372fa2c0d4a7276646db3e2</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_MINOR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>ad1d30abb92c583df9555702986df6cd5</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_PATCH</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>aec3b431747b4611d046a5be799c36a85</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_REVISION</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a4d697b7dac7e97b28fecf7714fea4d8f</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_ABI</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a689d3561485abd45ee50411137295ee0</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_STRING</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>aae1fd1122c42331f598c0152baa6572a</Anchor>
    <Abstract>The current major.minor.version as a string. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_REV_STRING</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>abdfd5d63377bd1606cf51a0437943637</Anchor>
    <Abstract>The current major.minor.version.revision as a string. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_GT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>ae06db9b236b4f8ed1de4c3d1cbf55fe5</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_GE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a4453b9a10c85cfaf4e3a599a6105fcea</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_LT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>aa92a565dac0a7e3edbc52f24802aa925</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BRAYNS_VERSION_LE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>acbda0067085f5d239bc8e6c0f3ec2d12</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>md__jenkins_03_workspace_oss.Brayns.documentation_build_type_Debug_platform_cscsviz-vm_sources_doc_UserGuide</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>md__jenkins_03_workspace_oss.Brayns.documentation_build_type_Debug_platform_cscsviz-vm_sources_doc_UserGuide.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>md__jenkins_03_workspace_oss.Brayns.documentation_build_type_Debug_platform_cscsviz-vm_sources_Changelog</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>md__jenkins_03_workspace_oss.Brayns.documentation_build_type_Debug_platform_cscsviz-vm_sources_Changelog.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apps</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>apps.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>braynsBenchmark</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>braynsBenchmark.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>braynsService</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>braynsService.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>braynsViewer</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>braynsViewer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cone</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Cone</Scope>
    </TokenIdentifier>
    <Path>struct_cone.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cylinder</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Cylinder</Scope>
    </TokenIdentifier>
    <Path>struct_cylinder.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Sphere</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Sphere</Scope>
    </TokenIdentifier>
    <Path>struct_sphere.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::AbstractManipulator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Abstract>Base class for camera manipulators. </Abstract>
    <DeclaredIn>AbstractManipulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_camera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>aae08537e81adbbd7275c7d6fd9ec8ed6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_keyboardHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>a1ddb4ed7cefbbb93422d8f26b5911245</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_motionSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>a8097c2eedefc3455aa6fef5da8e37c86</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rotationSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>a24eb133da465bb9d841a18cf58a72a34</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::AbstractParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Abstract>Base class defining command line parameters. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>af8c4e3e33c6d75a71893d7d48f0e4fec</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>a26266de9ad202855a31e167a16524f9e</Anchor>
    <Abstract>Parses parameters managed by the class. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>a998b0175fc8d8a20c08d1e5ee4bb147e</Anchor>
    <Abstract>Displays values of registered parameters. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::AbstractSimulationHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Abstract>The AbstractSimulationHandler class handles simulation frames for the current circuit. </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a17cee8a8500abfebc5f9783bb92ec48d</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~AbstractSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a60e89a35d6ca992d20697637d8b7560c</Anchor>
    <Abstract>Default desctuctor. </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attachSimulationToCacheFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>afbda00e17fa6bd162a4263f89a55c379</Anchor>
    <Abstract>Attaches a memory mapped file to the scene so that renderers can access the data as if it was in memo...</Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeHeader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a4d0f24d63fde4da927ac66a274322ef9</Anchor>
    <Abstract>Writes the header to a stream. </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a5090a2dbe98efbec2a7c3009332d32ee</Anchor>
    <Abstract>Writes a frame to a stream. </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a26ac8e6f42732daa22d3a703816ba47c</Anchor>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a42ef39d3b16dc58751231d4e027b731c</Anchor>
    <Abstract>returns a void pointer to the simulation data for the given frame or nullptr if the frame is not load...</Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a94eb882faba3d4a6f4cecdfa7f3af5d8</Anchor>
    <Abstract>getFrameSize return the size of the current simulation frame </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a8fa6e6c15ed6b6aad1e30004cf2c2983</Anchor>
    <Abstract>setFrameSize Sets the size of the current simulation frame </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNbFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a63756f6adb15211c556a20a04d651536</Anchor>
    <Abstract>getNbFrames returns the number of frame for the current simulation </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNbFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a6d97bbea1b840d24c754068d0b6c2cd8</Anchor>
    <Abstract>setNbFrames sets the number of frame for the current simulation </Abstract>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a85da5dd39cdbcffec3e93effe92d64ec</Anchor>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>a40e02361912fd67a9cae1afd91210f8a</Anchor>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReady</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_simulation_handler.html</Path>
    <Anchor>aad7e9c57e1a9095c0f3c05b3fc33d332</Anchor>
    <DeclaredIn>AbstractSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::AbstractTask</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Abstract>A task is an operation that can be scheduled (directly, async, ...) and has support for progress repo...</Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cancel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>af1019fe39fea3201341ea4301186a911</Anchor>
    <Abstract>Cancels the task if is either waiting to be scheduled or already running. </Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finishCancel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a12c64d0b0aa5bc8916d656fbffd5e8dd</Anchor>
    <Abstract>Indicate that cancel processing has finished and call the function given to cancel(). </Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canceled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a108ebfd245dbddf0df673e9624702f1f</Anchor>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>schedule</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>ad0836f14b82f490ec6d12a043f9f7cee</Anchor>
    <Abstract>Schedule the execution of the task. </Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>progress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a9c4958935de14f9db7480e9bb3566735</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ActionInterface</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ActionInterface</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_action_interface.html</Path>
    <Abstract>Interface for registering actions, namely notifications which have no return values with an optional ...</Abstract>
    <DeclaredIn>ActionInterface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerNotification</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ActionInterface</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_action_interface.html</Path>
    <Anchor>aacd58476c54ade7d0d8ed55256008878</Anchor>
    <Abstract>Register an action with no parameter and no return value. </Abstract>
    <DeclaredIn>ActionInterface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerNotification</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ActionInterface</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_action_interface.html</Path>
    <Anchor>a4c0fb32efb1cb55e86ac6aa7e71aadea</Anchor>
    <Abstract>Register an action with a property map as the parameter and no return value. </Abstract>
    <DeclaredIn>ActionInterface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ActionInterface</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_action_interface.html</Path>
    <Anchor>a0da0eee98242370652ed2e454f5e3076</Anchor>
    <Abstract>Register an action with a property map as the parameter and a property map as the return value...</Abstract>
    <DeclaredIn>ActionInterface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ActionInterface</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_action_interface.html</Path>
    <Anchor>a55dbc4122e6d3a27c77b7683f38a75ba</Anchor>
    <Abstract>Register an action with no parameter and a property map as the return value. </Abstract>
    <DeclaredIn>ActionInterface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerNotification</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ActionInterface</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_action_interface.html</Path>
    <Anchor>a95e883e26046da3bb55228e683826fcd</Anchor>
    <Abstract>Register an action with no parameter and no return value. </Abstract>
    <DeclaredIn>ActionInterface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerNotification</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ActionInterface</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_action_interface.html</Path>
    <Anchor>ae77375d7cf3277aa2a876d58bb519c59</Anchor>
    <Abstract>Register an action with a parameter and no return value. </Abstract>
    <DeclaredIn>ActionInterface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ActionInterface</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_action_interface.html</Path>
    <Anchor>aa848f4a0c303b0686ccdcc72c9e1d6c7</Anchor>
    <Abstract>Register an action with a parameter and a return value. </Abstract>
    <DeclaredIn>ActionInterface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ActionInterface</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_action_interface.html</Path>
    <Anchor>a67f15a5be2bc8ece423e2bb494dee99c</Anchor>
    <Abstract>Register an action with no parameter and a return value. </Abstract>
    <DeclaredIn>ActionInterface.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::AddModelFromBlobTask</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::AddModelFromBlobTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_add_model_from_blob_task.html</Path>
    <Abstract>A task which receives a file blob, triggers loading of the received blob and adds the loaded model to...</Abstract>
    <DeclaredIn>AddModelFromBlobTask.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Task</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task&lt; ModelDescriptorPtr &gt;</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>adb4c824ce065c30129e25c2973b5760b</Anchor>
    <Abstract>Create an empty task; use task() and async++ to do something meaningful. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Task</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task&lt; ModelDescriptorPtr &gt;</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>ac5558024a92ce91fe5c6d8cc3ffd84ee</Anchor>
    <Abstract>Create and schedule a task with the given functor or lambda. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>schedule</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task&lt; ModelDescriptorPtr &gt;</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>abfc3f1e06d95e8923df75e9651b1f0f4</Anchor>
    <Abstract>NOP for this task; tasks are running after construction. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>result</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task&lt; ModelDescriptorPtr &gt;</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>a9a6c0675ba8c6321bff7ffbf044fdc99</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task&lt; ModelDescriptorPtr &gt;</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>aa4f761290010bd3a0c7a026629524042</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cancel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>af1019fe39fea3201341ea4301186a911</Anchor>
    <Abstract>Cancels the task if is either waiting to be scheduled or already running. </Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finishCancel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a12c64d0b0aa5bc8916d656fbffd5e8dd</Anchor>
    <Abstract>Indicate that cancel processing has finished and call the function given to cancel(). </Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canceled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a108ebfd245dbddf0df673e9624702f1f</Anchor>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>progress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a9c4958935de14f9db7480e9bb3566735</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::AddModelTask</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::AddModelTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_add_model_task.html</Path>
    <Abstract>A task which loads data from the path of the given params and adds the loaded model to the engines&amp;#39; s...</Abstract>
    <DeclaredIn>AddModelTask.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Task</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task&lt; ModelDescriptorPtr &gt;</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>adb4c824ce065c30129e25c2973b5760b</Anchor>
    <Abstract>Create an empty task; use task() and async++ to do something meaningful. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Task</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task&lt; ModelDescriptorPtr &gt;</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>ac5558024a92ce91fe5c6d8cc3ffd84ee</Anchor>
    <Abstract>Create and schedule a task with the given functor or lambda. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>schedule</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task&lt; ModelDescriptorPtr &gt;</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>abfc3f1e06d95e8923df75e9651b1f0f4</Anchor>
    <Abstract>NOP for this task; tasks are running after construction. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>result</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task&lt; ModelDescriptorPtr &gt;</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>a9a6c0675ba8c6321bff7ffbf044fdc99</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task&lt; ModelDescriptorPtr &gt;</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>aa4f761290010bd3a0c7a026629524042</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cancel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>af1019fe39fea3201341ea4301186a911</Anchor>
    <Abstract>Cancels the task if is either waiting to be scheduled or already running. </Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finishCancel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a12c64d0b0aa5bc8916d656fbffd5e8dd</Anchor>
    <Abstract>Indicate that cancel processing has finished and call the function given to cancel(). </Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canceled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a108ebfd245dbddf0df673e9624702f1f</Anchor>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>progress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a9c4958935de14f9db7480e9bb3566735</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::AnimationParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::AnimationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_animation_parameters.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AnimationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_animation_parameters.html</Path>
    <Anchor>af192debb91abc150a4ef5ac29cac9f1f</Anchor>
    <Abstract>Displays values of registered parameters. </Abstract>
    <DeclaredIn>AnimationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AnimationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_animation_parameters.html</Path>
    <Anchor>ad02a32b00ac4b5eee7638ab207e2c821</Anchor>
    <Abstract>Reset to a &amp;#39;no animation&amp;#39; state: 0 for dt, start and end. </Abstract>
    <DeclaredIn>AnimationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AnimationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_animation_parameters.html</Path>
    <Anchor>a5f1e6be0449b3580a19b499bada01665</Anchor>
    <Abstract>The current frame number of the animation. </Abstract>
    <DeclaredIn>AnimationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDelta</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AnimationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_animation_parameters.html</Path>
    <Anchor>a9b0f3a0e5bdf2d4e249ba6402e0a7697</Anchor>
    <Abstract>The (frame) delta to apply for animations to select the next frame. </Abstract>
    <DeclaredIn>AnimationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AnimationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_animation_parameters.html</Path>
    <Anchor>a2dbb659ccdc63fb48ef3b42372f3260c</Anchor>
    <Abstract>The dt of a simulation. </Abstract>
    <DeclaredIn>AnimationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AnimationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_animation_parameters.html</Path>
    <Anchor>a12336a99cdeb76802b4f795d22290873</Anchor>
    <Abstract>The time unit of a simulation. </Abstract>
    <DeclaredIn>AnimationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIsReadyCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AnimationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_animation_parameters.html</Path>
    <Anchor>a6de92c1166679c8876cd77d6658cf87b</Anchor>
    <Abstract>Set a callback to report if the current animation frame is ready (e.g. </Abstract>
    <DeclaredIn>AnimationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeIsReadyCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AnimationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_animation_parameters.html</Path>
    <Anchor>a21695789a923fd71b81bf09ebf069e25</Anchor>
    <Abstract>Remove the given callback from the list of IsReadyCallbacks. </Abstract>
    <DeclaredIn>AnimationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AnimationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_animation_parameters.html</Path>
    <Anchor>a1bfe4fd272a873fd9a1fe1655a7956c3</Anchor>
    <Abstract>Update the current frame if delta is set and all listeners are ready. </Abstract>
    <DeclaredIn>AnimationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>jumpFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AnimationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_animation_parameters.html</Path>
    <Anchor>a200419599ede2850b35be72896300e1a</Anchor>
    <Abstract>Jump &amp;#39;frames&amp;#39; from current frame if all listeners are ready. </Abstract>
    <DeclaredIn>AnimationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>af8c4e3e33c6d75a71893d7d48f0e4fec</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ApplicationParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Abstract>Manages application parameters. </Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>aa2e0d98422af63c78df7f14a65fa4b6c</Anchor>
    <Abstract>Displays values of registered parameters. </Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEngine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>a565d40424b69fe4a2f199902f70374f2</Anchor>
    <Abstract>Engine. </Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOsprayModules</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>aec9000eed1c924e9a1681e1ba3bd7b73</Anchor>
    <Abstract>OSPRay modules. </Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWindowSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>a1ee6735655020055be53a2140348d353</Anchor>
    <Abstract>window size </Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBenchmarking</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>a0baa53fd46c9a6aecddeec70d2546ce2</Anchor>
    <Abstract>Benchmarking. </Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setJpegCompression</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>a9fdb360a50c27ab8242fff3d0f2170cb</Anchor>
    <Abstract>JPEG compression quality. </Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getImageStreamFPS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>a0746ff08049a8588d79f8633e33e899a</Anchor>
    <Abstract>Image stream FPS. </Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxRenderFPS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>a2948987f88eb8e73b3ff6b37f816cc8d</Anchor>
    <Abstract>Max render FPS to limit. </Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTmpFolder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>a4c2e7a22aad865a23b1be1eb8b1d6175</Anchor>
    <Abstract>Folder used by the application to store temporary files. </Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSynchronousMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>adad26e22e52a305f855514bfe011bf28</Anchor>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>af8c4e3e33c6d75a71893d7d48f0e4fec</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ApplicationParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_application_parameters.html</Path>
    <Anchor>a5be6af2d2178a0a5c6696692e5a1f394</Anchor>
    <Abstract>Parses parameters managed by the class. </Abstract>
    <DeclaredIn>ApplicationParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::BaseObject</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::BaseWindow</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forceRedraw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>a8066e55a1117d1a1921719459c287117</Anchor>
    <DeclaredIn>BaseWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTitle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>a8f917d5d11eb4d7dc70cb49b6d808920</Anchor>
    <DeclaredIn>BaseWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTitle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>a3e56ecff8226f4585ea9cf0b79e1a198</Anchor>
    <DeclaredIn>BaseWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>display</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>a2424df86e37a3ecc9032511153b27855</Anchor>
    <DeclaredIn>BaseWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>activate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>a1be84537c702138c4b1af159bdef0cc9</Anchor>
    <DeclaredIn>BaseWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearPixels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>ae0e94dfedc88deaadf55573801a51321</Anchor>
    <DeclaredIn>BaseWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>saveFrameToDisk</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>a8ce72982bdec9284b615da1e19cbe60f</Anchor>
    <Abstract>Saves current frame to disk. </Abstract>
    <DeclaredIn>BaseWindow.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_defaultInitSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>addd591463e1330d7e9233e0ee20f4f47</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_currMousePos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>a33a00f1cd06ce75f249593f148cf439b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_mouse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::BaseWindow</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_window.html</Path>
    <Anchor>aadc33e9b2cec154eefd08b1179426e02</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::BinaryParam</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::BinaryParam</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_binary_param.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::BinaryParam</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_binary_param.html</Path>
    <Anchor>a50964aa1d6ec351c6f186ffe924da95b</Anchor>
    <Abstract>size in bytes of file </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::BinaryParam</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_binary_param.html</Path>
    <Anchor>a8a398a1478bc43ad918b91be5d83ca0b</Anchor>
    <Abstract>file extension or type (MESH, POINTS, CIRCUIT) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Blob</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Blob</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_blob.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Brayns</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Abstract>Brayns is a minimalistic library that allows optimized ray-tracing rendering of meshes and parametric...</Abstract>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Brayns</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>ab1202cd9f6bcc02bd8f25f9d269be53d</Anchor>
    <Abstract>Brayns instance initialization. </Abstract>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEngine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>acc8b3d8d54f59a2b5bb1ca70c07c7047</Anchor>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParametersManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>ad68939e00e940e6df3255bbf9e8a761f</Anchor>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKeyboardHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>a8af015ef5e738482177f3e4a9dfc4699</Anchor>
    <Abstract>Gets the keyboard handler. </Abstract>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCameraManipulator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>a86278a6f267a457c0473e85cef65c54f</Anchor>
    <Abstract>Gets the camera manipulator. </Abstract>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitAndRender</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>ab596057d6defd530d6d01819196646cc</Anchor>
    <Abstract>Renders color and depth buffers of the current scene, according to specified parameters. </Abstract>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitAndRender</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>a8a163f5e8f5d500465d62c0468dba7b1</Anchor>
    <Abstract>Renders color and depth buffers of the current scene, according to default parameters. </Abstract>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>a5bce1db1cacf9c749dce8542805d97ea</Anchor>
    <Abstract>Handle events, update animation, call preRender() on plugins and commit changes on the engine...</Abstract>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>a422f64427d348600f7ad59f9041f8248</Anchor>
    <Abstract>Render a frame into the current framebuffer. </Abstract>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postRender</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Brayns</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_brayns.html</Path>
    <Anchor>add9f68bde6583471ac00f32f20e53933</Anchor>
    <Abstract>Call postRender() on engine and plugins to signal finish of render(). </Abstract>
    <DeclaredIn>Brayns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::BrickedVolume</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::BrickedVolume</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_bricked_volume.html</Path>
    <Abstract>A volume type where the voxels are copied for each added brick. </Abstract>
    <DeclaredIn>BrickedVolume.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::CADiffusionSimulationHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::CADiffusionSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_c_a_diffusion_simulation_handler.html</Path>
    <Abstract>The CADiffusionSimulationHandler class handles simulation frames for Calcium diffusion. </Abstract>
    <DeclaredIn>CADiffusionSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CADiffusionSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::CADiffusionSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_c_a_diffusion_simulation_handler.html</Path>
    <Anchor>a53ecc8e7dafa8e277c33991808060f24</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>CADiffusionSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::CADiffusionSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_c_a_diffusion_simulation_handler.html</Path>
    <Anchor>ad960ca0302cf21edcfbd940b01364b85</Anchor>
    <Abstract>setFrame Sets the frame to load </Abstract>
    <DeclaredIn>CADiffusionSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNbFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::CADiffusionSimulationHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_c_a_diffusion_simulation_handler.html</Path>
    <Anchor>ad5c1e8fb12d05ae0b40b8dbca0f7a422</Anchor>
    <DeclaredIn>CADiffusionSimulationHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Camera</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Abstract>Camera object. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a9cf7494323dd49d8edec85979221dad9</Anchor>
    <Abstract>Sets position, and quaternion. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a6e4b5133301f4956bc2a8f63bdac63fb</Anchor>
    <Abstract>Sets camera position. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTarget</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>af878100b0ef7dc7d9eec47918073be89</Anchor>
    <Abstract>Sets camera target. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>aaf1f10807d52ba440e45a24b1f8cc832</Anchor>
    <Abstract>Gets camera position. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTarget</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>aab4e601f431bcdb17620626463a253d9</Anchor>
    <Abstract>Gets camera target. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrientation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a7298e558e81b36b6b1b60661ee258973</Anchor>
    <Abstract>Sets camera orientation quaternion. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOrientation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>add4849a8715b6cf9830a584e9243cfce</Anchor>
    <Abstract>Gets the camera orientation quaternion. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a063a6910bde97fe29b7b31ada55e5c57</Anchor>
    <Abstract>Commits the changes held by the camera object so that attributes become available to the underlying r...</Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>a0378b8d85d011a5b524746f4e23e34e6</Anchor>
    <Abstract>Resets the camera to its initial values. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnvironmentMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Camera</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_camera.html</Path>
    <Anchor>ab15da040b0164a18d30faed9740237b5</Anchor>
    <Abstract>Enable/disables environment mapping. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCurrentType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a7be001331636293e20b0ad923bd0d47c</Anchor>
    <Abstract>Set the current type to use for &amp;#39;type-less&amp;#39; queries and updates. </Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>aa734499cbc7b731d3067febc6404c547</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateProperty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>ae67bcb6d6c60185279b614b4e7f9e90d</Anchor>
    <Abstract>Update the value of the given property for the current type. </Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasProperty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a94e40fa3615655b17e2ebb0ece1feb8b</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProperty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a193f26124fd6b17361712bf73d3e3d37</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProperties</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a9d0d4a64b6c56f5e6391bc7ff9d7097b</Anchor>
    <Abstract>Assign a new set of properties to the current type. </Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProperties</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>ae47c1492190d22b89eeecce803eed03c</Anchor>
    <Abstract>Assign a new set of properties to the given type. </Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateProperties</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>af063e495e86c76a2373a8157a0be190d</Anchor>
    <Abstract>Update or add all the properties from the given map to the current type. </Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasProperties</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>addb6e267bc0577f6ba167e80c0fbf8ef</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPropertyMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a86305e70af8a31b766e5ec125d823a8c</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPropertyMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>aa9ab71e30aff45b137836bb1154f1f86</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a1cb66705acbb0ec08d305b4b08d65c05</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clonePropertiesFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a8d6ad46b65b32439443194e49fac2b9c</Anchor>
    <Abstract>Clear all current properties and clone new properties from object. </Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Chunk</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Chunk</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_chunk.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::CircuitConfiguration</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::CircuitConfiguration</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_circuit_configuration.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ClipPlane</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ClipPlane</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_clip_plane.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ColorMap</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ColorMap</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_color_map.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::DeferredTask</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>brayns::DeferredTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_deferred_task.html</Path>
    <Abstract>A task type which allows for deferred scheduling after construction using schedule(). </Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>schedule</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::DeferredTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_deferred_task.html</Path>
    <Anchor>aa0c6a2de0df76b4bcf74c80413514bd0</Anchor>
    <Abstract>NOP for this task; tasks are running after construction. </Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Task</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>adb4c824ce065c30129e25c2973b5760b</Anchor>
    <Abstract>Create an empty task; use task() and async++ to do something meaningful. </Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Task</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>ac5558024a92ce91fe5c6d8cc3ffd84ee</Anchor>
    <Abstract>Create and schedule a task with the given functor or lambda. </Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>result</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>a9a6c0675ba8c6321bff7ffbf044fdc99</Anchor>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>aa4f761290010bd3a0c7a026629524042</Anchor>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cancel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>af1019fe39fea3201341ea4301186a911</Anchor>
    <Abstract>Cancels the task if is either waiting to be scheduled or already running. </Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finishCancel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a12c64d0b0aa5bc8916d656fbffd5e8dd</Anchor>
    <Abstract>Indicate that cancel processing has finished and call the function given to cancel(). </Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canceled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a108ebfd245dbddf0df673e9624702f1f</Anchor>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>progress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a9c4958935de14f9db7480e9bb3566735</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::DirectionalLight</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::DirectionalLight</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_directional_light.html</Path>
    <Abstract>Directional light. </Abstract>
    <DeclaredIn>DirectionalLight.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DirectionalLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::DirectionalLight</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_directional_light.html</Path>
    <Anchor>a104db0999b3e707e9c62b60f333e9708</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>DirectionalLight.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDirection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::DirectionalLight</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_directional_light.html</Path>
    <Anchor>a7b30ca18ef5beeb3ad887dfec000e28f</Anchor>
    <Abstract>Light source direction. </Abstract>
    <DeclaredIn>DirectionalLight.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Light</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_light.html</Path>
    <Anchor>ac418f89179bfb0698b73c001729d9423</Anchor>
    <Abstract>Light source RGB color. </Abstract>
    <DeclaredIn>Light.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIntensity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Light</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_light.html</Path>
    <Anchor>a7219ba01bccbf75a30e2be20b3f62fb7</Anchor>
    <Abstract>Light source intensity. </Abstract>
    <DeclaredIn>Light.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Engine</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Abstract>Abstract implementation of the ray-tracing engine. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Engine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a9b750d4a7b2e945f2f7cb0726540f27d</Anchor>
    <Abstract>Engine constructor. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>ae0c323db5ffc02b9c774038d2a3305a2</Anchor>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>aa0652f4c99164ea4127d8db5ad5fe502</Anchor>
    <Abstract>Commits changes to the engine. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>addcc1b550a6783cf5ea893a58cdc4faa</Anchor>
    <Abstract>Renders the current scene and populates the frame buffer accordingly. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preRender</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>ae4df6a7c3480fd5a2c99d2669d7ddbee</Anchor>
    <Abstract>Executes engine specific pre-render operations. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postRender</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a75dcc0f335ea1f2b268d0085ad2f4ce1</Anchor>
    <Abstract>Executes engine specific post-render operations. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScene</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>aa7447c013f31279eecf99d3420ce641d</Anchor>
    <Abstract>Gets the scene. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a651d4f6e12e6f6ea73089150ee37b8b0</Anchor>
    <Abstract>Gets the frame buffer. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCamera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a05478fdf6ae8dd3b0716bc8be93c83f9</Anchor>
    <Abstract>Gets the camera. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>af961a55c58767fdc61b67497abcbf7bb</Anchor>
    <Abstract>Gets the renderer. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reshape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a840980ce1525d0e767140ca591deafb0</Anchor>
    <Abstract>Reshapes the current frame buffers. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeMaterials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a4d39c844e28b872a2513edf2df42f9c0</Anchor>
    <Abstract>Initializes materials for the current scene. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSupportedFrameSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a8b9003e3d1a9349f3212d3cf4f5945e6</Anchor>
    <Abstract>Adapts the size of the frame buffer according to camera requirements. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinimumFrameSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>aa8ae6d776485d6b2275cc16fb1032e2f</Anchor>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>haveDeflectPixelOp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a49c13d75aac81d4ce47e50ceb95a7b1a</Anchor>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setKeepRunning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a9eeb56f21e8fc9c34eb926f6d706a546</Anchor>
    <Abstract>Keep continue to run the engine, aka the user did not request to stop rendering. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKeepRunning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a415ac09f74a17fd73e3b6b616d2d8a11</Anchor>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>continueRendering</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a84b7fb62801d98aa94c325dc8f725313</Anchor>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createFrameBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>a3ad20ce149c67448d40110da4f573f35</Anchor>
    <Abstract>Factory method to create an engine-specific framebuffer. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createCamera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>af4b41c12e75c19f4ce9160c4a8484330</Anchor>
    <Abstract>Factory method to create an engine-specific camera. </Abstract>
    <DeclaredIn>Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>triggerRender</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::Engine</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_engine.html</Path>
    <Anchor>acc472e64b447113d098d54273244f4b6</Anchor>
    <Abstract>Callback when a new frame shall be triggered. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ExtensionPlugin</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ExtensionPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_extension_plugin.html</Path>
    <Abstract>Defines the abstract representation of an extension plug-in. </Abstract>
    <DeclaredIn>ExtensionPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ExtensionPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_extension_plugin.html</Path>
    <Anchor>a96647a3a0a342c3c14a4dab14f67a777</Anchor>
    <Abstract>Called from Brayns::Brayns right after the engine has been created. </Abstract>
    <DeclaredIn>ExtensionPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preRender</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ExtensionPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_extension_plugin.html</Path>
    <Anchor>a67dab4a796a7de090ff4c28e8be39bc9</Anchor>
    <Abstract>Called from Brayns::preRender() to prepare the engine based on the plugins&amp;#39; need for an upcoming rend...</Abstract>
    <DeclaredIn>ExtensionPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postRender</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ExtensionPlugin</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_extension_plugin.html</Path>
    <Anchor>a6e17e99715fadee1d5a883168b3c9764</Anchor>
    <Abstract>Called from Brayns::postRender() after render() has finished. </Abstract>
    <DeclaredIn>ExtensionPlugin.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::FlyingModeManipulator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::FlyingModeManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_flying_mode_manipulator.html</Path>
    <Abstract>Defines a flying mode camera manipulator, like in a flight simulator. </Abstract>
    <DeclaredIn>FlyingModeManipulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_camera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>aae08537e81adbbd7275c7d6fd9ec8ed6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_keyboardHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>a1ddb4ed7cefbbb93422d8f26b5911245</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_motionSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>a8097c2eedefc3455aa6fef5da8e37c86</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rotationSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>a24eb133da465bb9d841a18cf58a72a34</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::FrameBuffer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::FrameBuffer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_frame_buffer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::GeometryParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Abstract>Manages geometry parameters. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GeometryParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a96a7875f7d452448da35b193921725dc</Anchor>
    <Abstract>Parse the command line parameters and populates according class members. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a8c92a909fef870a14d015a6e838f3f63</Anchor>
    <Abstract>Displays values of registered parameters. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLoadCacheFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a4074a7994afbeddbf8d96cf4786a3f0b</Anchor>
    <Abstract>Binary representation of a scene to load. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSaveCacheFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a714f28f1069bc6ea579b96300214f23f</Anchor>
    <Abstract>Binary representation of a scene to save. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCircuitTargets</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a25a7829d755ede1f39504a3d1480f85b</Anchor>
    <Abstract>Circuit targets. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCircuitReport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a5e8e6c69f07fa54bcb6a9f6b3d68e190</Anchor>
    <Abstract>Circuit compartment report. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCircuitMeshFolder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a1b417a74dbc460c91c08fec66a3073a0</Anchor>
    <Abstract>Defines the folder where morphologies meshes are stored. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCircuitDensity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a997c8833a1dbc94925bf051f4bd25292</Anchor>
    <Abstract>ensity of cells in the circuit in percent (Mainly for testing purposes) </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCircuitBoundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a83782bbc10222c23110d44f2b16ddd60</Anchor>
    <Abstract>Defines a bounding box outside of which geometry of a circuit will not be loaded. ...</Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCircuitUseSimulationModel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a8030ea887fe8686908ed37f5f3c2885b</Anchor>
    <Abstract>Defines if a different model is used to handle the simulation geometry. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCircuitMeshFilenamePattern</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>abfd90a72db2701ab4cc8fbef0906d2ea</Anchor>
    <Abstract>Return the filename pattern use to load meshes. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRadiusMultiplier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a39e145c39048b4ae3c8be29999bb89a4</Anchor>
    <Abstract>Radius multiplier applied to spheres, cones and cylinders. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRadiusCorrection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a6bbfa8e688f9395347b8d3d535b93834</Anchor>
    <Abstract>Radius correction applied to spheres and cylinders. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getColorScheme</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a0cefb9cea6665e61900ebc08846bc6e3</Anchor>
    <Abstract>Enables a different color for every molecule/morphology/mesh when loading them from a given folder...</Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGeometryQuality</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a30dd81996271f03f798942c4d69703ec</Anchor>
    <Abstract>Morphology quality. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMorphologySectionTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a8e659f352d620e67764b3721aa478934</Anchor>
    <Abstract>Morphology section types. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMorphologyLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a6ff28e9ddeb7faf36d074fd7538a7a80</Anchor>
    <Abstract>Morphology layout. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCircuitEndSimulationTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a81db92e082e45cf5f00eaf82bf46b2a6</Anchor>
    <Abstract>Defines the range of frames to be loaded for the simulation. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCircuitRandomSeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a6f7bfdd45f28384b26d759580251e4f8</Anchor>
    <Abstract>Random seed of the circuit. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMetaballsGridSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>af08fd8f25c3ad8caf65c121fad5c5419</Anchor>
    <Abstract>Metaballs grid size. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMetaballsThreshold</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>aa81c5eec8288be8852085101d48d9832</Anchor>
    <Abstract>Metaballs threshold. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMetaballsSamplesFromSoma</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>ac1a28b8320f3b27633cdc5621f259ae8</Anchor>
    <Abstract>Metaballs samples from soma. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useRealisticSomas</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a8c7aa469406719775f1eb2fac2f69c6f</Anchor>
    <Abstract>Realistic somas enabled? </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMemoryMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a42ed816fb28e78cdb9322c70f1ac4ff4</Anchor>
    <Abstract>Defines what memory mode should be used between Brayns and the underlying renderer. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>af8c4e3e33c6d75a71893d7d48f0e4fec</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::GeometryParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_geometry_parameters.html</Path>
    <Anchor>a73ac7de16c966b974774c339df0cc881</Anchor>
    <Abstract>Parses parameters managed by the class. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ImageManager</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ImageManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_image_manager.html</Path>
    <Abstract>The ImageManager class uses the FreeImage libray to manipulate images. </Abstract>
    <DeclaredIn>ImageManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exportFrameBufferToFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::ImageManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_image_manager.html</Path>
    <Anchor>a839c00f53751fd524c2ac4d8c1d1bf24</Anchor>
    <Abstract>Exports the contents of a frame buffer to a file. </Abstract>
    <DeclaredIn>ImageManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importTextureFromFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::ImageManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_image_manager.html</Path>
    <Anchor>a99321a976fee5f2efddd773066b2a55d</Anchor>
    <Abstract>Import a Texture from file. </Abstract>
    <DeclaredIn>ImageManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::InspectCenterManipulator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::InspectCenterManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_inspect_center_manipulator.html</Path>
    <Abstract>Camera manipulator to rotate and zoom around a central point. </Abstract>
    <DeclaredIn>InspectCenterManipulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_camera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>aae08537e81adbbd7275c7d6fd9ec8ed6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_keyboardHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>a1ddb4ed7cefbbb93422d8f26b5911245</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_motionSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>a8097c2eedefc3455aa6fef5da8e37c86</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_rotationSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractManipulator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_manipulator.html</Path>
    <Anchor>a24eb133da465bb9d841a18cf58a72a34</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::KeyboardHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::KeyboardHandler</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_keyboard_handler.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Light</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Light</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_light.html</Path>
    <Abstract>Light object. </Abstract>
    <DeclaredIn>Light.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Light</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_light.html</Path>
    <Anchor>ac418f89179bfb0698b73c001729d9423</Anchor>
    <Abstract>Light source RGB color. </Abstract>
    <DeclaredIn>Light.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIntensity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Light</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_light.html</Path>
    <Anchor>a7219ba01bccbf75a30e2be20b3f62fb7</Anchor>
    <Abstract>Light source intensity. </Abstract>
    <DeclaredIn>Light.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Loader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Loader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader.html</Path>
    <Abstract>A base class for data loaders to unify loading data from blobs and files, and provide progress feedba...</Abstract>
    <DeclaredIn>Loader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importFromBlob</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Loader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader.html</Path>
    <Anchor>a0a133f3883dc43088753f0de797ee0dd</Anchor>
    <Abstract>Import the data from the blob and return the created model. </Abstract>
    <DeclaredIn>Loader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importFromFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Loader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader.html</Path>
    <Anchor>ab03d3f27958296a0ecb5b21f2c9662a5</Anchor>
    <Abstract>Import the data from the given file and return the created model. </Abstract>
    <DeclaredIn>Loader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSupported</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Loader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader.html</Path>
    <Anchor>a6eb952419b2faf619e167f85c9e52c5a</Anchor>
    <Abstract>Query the loader if it can load the given file. </Abstract>
    <DeclaredIn>Loader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::LoaderProgress</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::LoaderProgress</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader_progress.html</Path>
    <Abstract>A class for providing progress feedback. </Abstract>
    <DeclaredIn>Loader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CallbackFn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brayns::LoaderProgress</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader_progress.html</Path>
    <Anchor>a98db540024614df9c8d98e660b6180ad</Anchor>
    <Abstract>The callback for each progress update with the signature (message, fraction of progress in 0...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateProgress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LoaderProgress</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader_progress.html</Path>
    <Anchor>a75dd468f6286bceefc60824698a24b53</Anchor>
    <Abstract>Update the current progress of an operation and call the callback. </Abstract>
    <DeclaredIn>Loader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::LoaderRegistry</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::LoaderRegistry</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader_registry.html</Path>
    <Abstract>Holds information about registered loaders and helps invoking the appropriate loader for a given blob...</Abstract>
    <DeclaredIn>LoaderRegistry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerLoader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LoaderRegistry</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader_registry.html</Path>
    <Anchor>ad97da244840fb0449ffc11114e90df5a</Anchor>
    <Abstract>Register the given loader. </Abstract>
    <DeclaredIn>LoaderRegistry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSupportedFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LoaderRegistry</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader_registry.html</Path>
    <Anchor>a8db8487e443905f2d1e95a5de050b95c</Anchor>
    <DeclaredIn>LoaderRegistry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSupportedType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LoaderRegistry</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader_registry.html</Path>
    <Anchor>a813352165402a89627da301dc5134410</Anchor>
    <DeclaredIn>LoaderRegistry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLoaderFromFilename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LoaderRegistry</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader_registry.html</Path>
    <Anchor>a514bfcbf9cb36646ad6a7b70e9698c2e</Anchor>
    <Abstract>Get a loader that can load the given filename. </Abstract>
    <DeclaredIn>LoaderRegistry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLoaderFromFiletype</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LoaderRegistry</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader_registry.html</Path>
    <Anchor>aae92cdd8903cbec233cfbdaa3e4a0317</Anchor>
    <Abstract>Get a loader that can load the given filetype. </Abstract>
    <DeclaredIn>LoaderRegistry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::LoaderRegistry</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_loader_registry.html</Path>
    <Anchor>a9fd05d8a7b669b15fad4abf8e8d270b8</Anchor>
    <Abstract>Load the given file or folder into the given scene by choosing the first matching loader based on the...</Abstract>
    <DeclaredIn>LoaderRegistry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::LoadModelFunctor</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::LoadModelFunctor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_load_model_functor.html</Path>
    <Abstract>A task functor which loads data from blob or file path and adds the loaded data to the scene...</Abstract>
    <DeclaredIn>LoadModelFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProgressFunc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::TaskFunctor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task_functor.html</Path>
    <Anchor>ad8283ae7984fbd41e7d5e61e57238ad3</Anchor>
    <Abstract>Set the function when progress() is called. </Abstract>
    <DeclaredIn>TaskFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>progress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::TaskFunctor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task_functor.html</Path>
    <Anchor>a0dab436f8eb57c24de929b894069f2cd</Anchor>
    <Abstract>Report progress using the provided callback from setProgressFunc() and also check if the execution ha...</Abstract>
    <DeclaredIn>TaskFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCancelToken</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::TaskFunctor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task_functor.html</Path>
    <Anchor>a0463073aa21dd20ffa10309757d2e52b</Anchor>
    <Abstract>Set the cancel token from e.g. </Abstract>
    <DeclaredIn>TaskFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cancelCheck</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::TaskFunctor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task_functor.html</Path>
    <Anchor>ac32d29d096272b4f62383f83eaae88e4</Anchor>
    <Abstract>Checks if the execution has been cancelled. </Abstract>
    <DeclaredIn>TaskFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProgressFunc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brayns::TaskFunctor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task_functor.html</Path>
    <Anchor>af5ae54477aeecf3b89c696867171a980</Anchor>
    <Abstract>message, increment, amount </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Material</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Material</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_material.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Material</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_material.html</Path>
    <Anchor>a09778f0633b347188536eeb0c9634761</Anchor>
    <Abstract>Called after material change. </Abstract>
    <DeclaredIn>Material.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCurrentType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a7be001331636293e20b0ad923bd0d47c</Anchor>
    <Abstract>Set the current type to use for &amp;#39;type-less&amp;#39; queries and updates. </Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>aa734499cbc7b731d3067febc6404c547</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateProperty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>ae67bcb6d6c60185279b614b4e7f9e90d</Anchor>
    <Abstract>Update the value of the given property for the current type. </Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasProperty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a94e40fa3615655b17e2ebb0ece1feb8b</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProperty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a193f26124fd6b17361712bf73d3e3d37</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProperties</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a9d0d4a64b6c56f5e6391bc7ff9d7097b</Anchor>
    <Abstract>Assign a new set of properties to the current type. </Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProperties</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>ae47c1492190d22b89eeecce803eed03c</Anchor>
    <Abstract>Assign a new set of properties to the given type. </Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateProperties</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>af063e495e86c76a2373a8157a0be190d</Anchor>
    <Abstract>Update or add all the properties from the given map to the current type. </Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasProperties</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>addb6e267bc0577f6ba167e80c0fbf8ef</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPropertyMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a86305e70af8a31b766e5ec125d823a8c</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPropertyMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>aa9ab71e30aff45b137836bb1154f1f86</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a1cb66705acbb0ec08d305b4b08d65c05</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clonePropertiesFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a8d6ad46b65b32439443194e49fac2b9c</Anchor>
    <Abstract>Clear all current properties and clone new properties from object. </Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::MetaballsGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::MetaballsGenerator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_metaballs_generator.html</Path>
    <Abstract>Generated a mesh according to given set of metaballs. </Abstract>
    <DeclaredIn>MetaballsGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateMesh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::MetaballsGenerator</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_metaballs_generator.html</Path>
    <Anchor>a8377721da02038259ab534e4337f95f8</Anchor>
    <Abstract>Generates a triangle based mesh model according to provided metaballs, grid granularity and threshold...</Abstract>
    <DeclaredIn>MetaballsGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Model</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Abstract>The abstract Model class holds the geometry attached to an asset of the scene (mesh, circuit, volume, etc). </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>empty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>aa686c6b25b25c7664f2a020c0b5d4f3a</Anchor>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a4680a60790707b4fd9b843aa4b961ccf</Anchor>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBounds</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>adc147e65d2322a8cf68a0045f27cf394</Anchor>
    <Abstract>Returns the bounds for the Model. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSpheres</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>ae7035d942be429cbb3848ffd09ed5c4b</Anchor>
    <Abstract>Returns spheres handled by the Model. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSphere</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a850d89a566652c7194081aae85773aa7</Anchor>
    <Abstract>Adds a sphere to the model. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCylinders</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a59b0b6f4392961f3e99477dfad782a73</Anchor>
    <Abstract>Returns cylinders handled by the model. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addCylinder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a11568ec350edbaa36305f927e1eb2178</Anchor>
    <Abstract>Adds a cylinder to the model. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCones</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a68ab8bbc6e1246abd305cbfb969bea33</Anchor>
    <Abstract>Returns cones handled by the model. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addCone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a3d2d006a3ee2f20a1ac875faa7039e83</Anchor>
    <Abstract>Adds a cone to the model. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addStreamline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a4120048ceaf47ad3e72303c48e5bc967</Anchor>
    <Abstract>Adds a streamline to the model. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSDFGeometry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a884fb214767b5ca7700e05e49d66f615</Anchor>
    <Abstract>Adds a SDFGeometry to the scene. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateSDFGeometryNeighbours</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>ad81368b78bef55126b476fc3bc439557</Anchor>
    <Abstract>Update the list of neighbours for a SDF geometry. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTrianglesMeshes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a72aaed48d0f52416cb3576b3f5958f9f</Anchor>
    <Abstract>Returns triangle meshes handled by the model. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addVolume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a0cf2f3bd716ddcb9e68701b9b9ce41b0</Anchor>
    <Abstract>Add a volume to the model. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeVolume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a0dcbdba6c5b454ef420edfa126ebae76</Anchor>
    <Abstract>Remove a volume from the model. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logInformation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>ab0edfc4d1a5f0ca5ae2a66ea5a51b59d</Anchor>
    <Abstract>logInformation Logs information about the model, like the number of primitives, and the associated me...</Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaterialsColorMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a22b6060a15871d0a6a16d6f2a1e9a897</Anchor>
    <Abstract>Sets the materials handled by the model, and available to the geometry. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMaterial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a0156b8880c15bda28f3610fc36947f7c</Anchor>
    <Abstract>Factory method to create an engine-specific material. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createSharedDataVolume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>af0e267adcb93f5b76dd59b2061ba9d91</Anchor>
    <Abstract>Create a volume with the given dimensions, voxel spacing and data type where the are voxels are set v...</Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createBrickedVolume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a71564e34f8fd96859bf99d1f1934e3b9</Anchor>
    <Abstract>Create a volume with the given dimensions, voxel spacing and data type where the voxels are copied vi...</Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createMissingMaterials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a560bb63289ddf5e2aa4e8bf717aff7bf</Anchor>
    <Abstract>createMissingMaterials Checks that all materials exist for existing geometry in the model...</Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaterials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a42395676f75406327be584ce89e1f296</Anchor>
    <Abstract>getMaterials Returns a reference to the map of materials handled by the model </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaterial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a857aaf14d279e72aa3f1c2d640b70847</Anchor>
    <Abstract>getMaterial Returns a pointer to a specific material </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTransferFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>afbc989c6cdc1a9ce350112599dc9eb51</Anchor>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTransferFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>aadac31108c958c76147c1b69041c124c</Anchor>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a6e8a4711e1287dcb9bc67e641fa2013d</Anchor>
    <Abstract>Returns the simulutation handler. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>af56361ad6a7852418d44edc0a0064c95</Anchor>
    <Abstract>Sets the simulation handler. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSizeInBytes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Model</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model.html</Path>
    <Anchor>a029cbe6154b1ca5903486132c414cfe5</Anchor>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Model::SDFGeometryData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Model::SDFGeometryData</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_model_1_1_s_d_f_geometry_data.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ModelDescriptor</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ModelDescriptor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model_descriptor.html</Path>
    <Abstract>The ModelDescriptor struct defines the metadata attached to a model. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onRemoved</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ModelDescriptor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model_descriptor.html</Path>
    <Anchor>af2e8ee4410d6a70bdaf6f221bd4bc874</Anchor>
    <Abstract>Set a function that is called when this model is about to be removed. </Abstract>
    <DeclaredIn>Model.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ModelInstance</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ModelInstance</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model_instance.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ModelParams</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ModelParams</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_model_params.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::MolecularSystemReader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::MolecularSystemReader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_molecular_system_reader.html</Path>
    <Abstract>The MolecularSystemReader class loads proteins and meshes according to parameters defined in a Molecu...</Abstract>
    <DeclaredIn>MolecularSystemReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSupported</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::MolecularSystemReader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_molecular_system_reader.html</Path>
    <Anchor>a540361ac6951ad0feeecba584e594ee5</Anchor>
    <Abstract>Query the loader if it can load the given file. </Abstract>
    <DeclaredIn>MolecularSystemReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importFromFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::MolecularSystemReader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_molecular_system_reader.html</Path>
    <Anchor>af049a61f02c7ef20138bfdff6ac27545</Anchor>
    <Abstract>Import the data from the given file and return the created model. </Abstract>
    <DeclaredIn>MolecularSystemReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importFromBlob</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::MolecularSystemReader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_molecular_system_reader.html</Path>
    <Anchor>a00f2b7291d9d94ac0c1d44b7bd1e9131</Anchor>
    <Abstract>Import the data from the blob and return the created model. </Abstract>
    <DeclaredIn>MolecularSystemReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::MorphologyLayout</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::MorphologyLayout</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_morphology_layout.html</Path>
    <Abstract>Defines how morphologies should be organized in space when the layout mode is selected. </Abstract>
    <DeclaredIn>GeometryParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ParametersManager</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Abstract>Class managing all parameters registered by the application. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>af1446cfbea9a2fb9348a8625bd69bb18</Anchor>
    <Abstract>Registers specific parameters to the manager. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>usage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>a2fc48e699c64648868460809b3343a51</Anchor>
    <Abstract>Displays usage of registered parameters. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>a0a0967c0597705f2c6f936a2cfc98b3c</Anchor>
    <Abstract>Displays values registered parameters. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>a512452ae6195a30b5c733f75c7ea1c54</Anchor>
    <Abstract>Parses registered parameters. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAnimationParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>a7d8bac86d95437486b9e8bb2e1e26254</Anchor>
    <Abstract>Gets animation parameters. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRenderingParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>a3558f229417081e9ed7eee77acfa73f0</Anchor>
    <Abstract>Gets rendering parameters. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGeometryParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>a42770db58f8d661744cd2e029b314295</Anchor>
    <Abstract>Gets geometry parameters. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getApplicationParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>aa1bd17b18fd4fe6d75abf1165e19830a</Anchor>
    <Abstract>Gets application parameters. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSceneParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>a2bc6a8dbef296ff837e33911cf3e4e55</Anchor>
    <Abstract>Gets scene parameters. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStreamParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>af0a2f6ace6b34e1d9782841eec23180b</Anchor>
    <Abstract>Gets stream parameters. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVolumeParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>af96aa3d61e0e96870b7027570c832829</Anchor>
    <Abstract>Gets volume parameters. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>a1d25e34639dbb420f9a3405b556a88b0</Anchor>
    <Abstract>Sets a parameter (application, geometry, rendering, etc). </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>a0c96d24bee61aaa727c92db0aeeeb0c0</Anchor>
    <Abstract>Call resetModified on all parameters. </Abstract>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAnyModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ParametersManager</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_parameters_manager.html</Path>
    <Anchor>a56137d99df36dc76edb3ffd9d285c88e</Anchor>
    <DeclaredIn>ParametersManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::PluginAPI</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::PluginAPI</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_plugin_a_p_i.html</Path>
    <Abstract>The API that plugins can use to interact with Brayns. </Abstract>
    <DeclaredIn>PluginAPI.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getScene</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PluginAPI</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_plugin_a_p_i.html</Path>
    <Anchor>af60f973776379660bb8e439c1a825f44</Anchor>
    <DeclaredIn>PluginAPI.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getParametersManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PluginAPI</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_plugin_a_p_i.html</Path>
    <Anchor>aaea89cf1573db310a3622430159680ee</Anchor>
    <DeclaredIn>PluginAPI.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getActionInterface</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PluginAPI</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_plugin_a_p_i.html</Path>
    <Anchor>a6015a4863d500bcb3cc6ae319fa40326</Anchor>
    <DeclaredIn>PluginAPI.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKeyboardHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PluginAPI</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_plugin_a_p_i.html</Path>
    <Anchor>aab6259aa4eba7dba2fc14ecb665fcada</Anchor>
    <DeclaredIn>PluginAPI.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCameraManipulator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PluginAPI</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_plugin_a_p_i.html</Path>
    <Anchor>a62b48682ae9c377730c78af26e02d232</Anchor>
    <DeclaredIn>PluginAPI.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCamera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PluginAPI</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_plugin_a_p_i.html</Path>
    <Anchor>a434a7c355627ff17f36a71d054ee0914</Anchor>
    <DeclaredIn>PluginAPI.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PluginAPI</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_plugin_a_p_i.html</Path>
    <Anchor>a363076cb3d4521194f83a55ffeb8fa07</Anchor>
    <DeclaredIn>PluginAPI.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>triggerRender</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PluginAPI</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_plugin_a_p_i.html</Path>
    <Anchor>a43e972666a64360189a030dfab7e39ce</Anchor>
    <Abstract>Triggers a new preRender() and potentially render() and postRender(). </Abstract>
    <DeclaredIn>PluginAPI.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setActionInterface</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PluginAPI</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_plugin_a_p_i.html</Path>
    <Anchor>a742986a27ab0594d779804f798249bcb</Anchor>
    <Abstract>Set the action interface to be used by Brayns main loop. </Abstract>
    <DeclaredIn>PluginAPI.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::PointLight</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::PointLight</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_point_light.html</Path>
    <Abstract>Point light object. </Abstract>
    <DeclaredIn>PointLight.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PointLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PointLight</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_point_light.html</Path>
    <Anchor>ac360885334a6778949e00d7070c8a9ae</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>PointLight.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PointLight</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_point_light.html</Path>
    <Anchor>a14c49779d4e61b944511e07c7f7cad13</Anchor>
    <Abstract>Light source position. </Abstract>
    <DeclaredIn>PointLight.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCutoffDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PointLight</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_point_light.html</Path>
    <Anchor>a782a3fb04f2cf4a089a738e5bc105698</Anchor>
    <Abstract>Light source cutoff distance. </Abstract>
    <DeclaredIn>PointLight.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Light</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_light.html</Path>
    <Anchor>ac418f89179bfb0698b73c001729d9423</Anchor>
    <Abstract>Light source RGB color. </Abstract>
    <DeclaredIn>Light.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIntensity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Light</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_light.html</Path>
    <Anchor>a7219ba01bccbf75a30e2be20b3f62fb7</Anchor>
    <Abstract>Light source intensity. </Abstract>
    <DeclaredIn>Light.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Progress</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Progress</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_progress.html</Path>
    <Abstract>A progress object which offers thread-safe progress updates and thread-safe consumption of the curren...</Abstract>
    <DeclaredIn>Progress.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Progress</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_progress.html</Path>
    <Anchor>a11abbe394dc77f68ce0d5c4fd3a366d6</Anchor>
    <Abstract>Update the progress with a new absolute amount. </Abstract>
    <DeclaredIn>Progress.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>increment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Progress</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_progress.html</Path>
    <Anchor>a040143c55476623a620e1f28c2fdc903</Anchor>
    <Abstract>Update the progress with the given increment. </Abstract>
    <DeclaredIn>Progress.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>consume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Progress</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_progress.html</Path>
    <Anchor>a3e56606ed9283c4e4189b0d5b3b6b7cf</Anchor>
    <Abstract>Call the provided callback with the current progress if it has changed since the last invokation...</Abstract>
    <DeclaredIn>Progress.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::PropertyMap</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::PropertyMap</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_map.html</Path>
    <Abstract>Container class for holding properties that are mapped by name to a supported C++ type and their resp...</Abstract>
    <DeclaredIn>PropertyMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateProperty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyMap</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_map.html</Path>
    <Anchor>ad18c6f4de0f7670e4dc95b253de0d1e2</Anchor>
    <Abstract>Update the property of the given name. </Abstract>
    <DeclaredIn>PropertyMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProperty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyMap</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_map.html</Path>
    <Anchor>a9ec43c008e2aa8f72aba98136559bea2</Anchor>
    <Abstract>Update or add the given property. </Abstract>
    <DeclaredIn>PropertyMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProperty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyMap</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_map.html</Path>
    <Anchor>abff4d982f13851b7ade090d65fd57ff2</Anchor>
    <DeclaredIn>PropertyMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProperty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyMap</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_map.html</Path>
    <Anchor>ae7867c0a4185bbf8178b7ef5fcb068d8</Anchor>
    <DeclaredIn>PropertyMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasProperty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyMap</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_map.html</Path>
    <Anchor>afc2b3657e822d98ea96880376cbf40df</Anchor>
    <DeclaredIn>PropertyMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEnums</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyMap</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_map.html</Path>
    <Anchor>a174cd634dd8a1be505b80cf522db3ccf</Anchor>
    <DeclaredIn>PropertyMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPropertyType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyMap</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_map.html</Path>
    <Anchor>a1817d24daf0744629c11dc8d74f2bf72</Anchor>
    <DeclaredIn>PropertyMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProperties</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyMap</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_map.html</Path>
    <Anchor>a7a198b621bb18514984930624e199d23</Anchor>
    <DeclaredIn>PropertyMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::PropertyMap::Property</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::PropertyMap::Property</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_property_map_1_1_property.html</Path>
    <Abstract>Defines a single property which always has a name, a label for e.g. </Abstract>
    <DeclaredIn>PropertyMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Property</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>brayns::PropertyMap::Property</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_property_map_1_1_property.html</Path>
    <Anchor>a27e38a559b53ee0c43517c893bd19408</Anchor>
    <Abstract>Specialized for enum properties: type is int32_t, and the possible enum values are passed in enums_...</Abstract>
    <DeclaredIn>PropertyMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>brayns::PropertyMap::Property</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_property_map_1_1_property.html</Path>
    <Anchor>aa54eed2d392bd12505ea6c9b392b7e20</Anchor>
    <Abstract>Set a function that is called after this property has been changed. </Abstract>
    <DeclaredIn>PropertyMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>markReadOnly</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>brayns::PropertyMap::Property</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_property_map_1_1_property.html</Path>
    <Anchor>a2af337dab4513042f33958765272b73c</Anchor>
    <Abstract>Read-only property shall not be modified from the outside aka web API via JSON. </Abstract>
    <DeclaredIn>PropertyMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>label</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::PropertyMap::Property</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_property_map_1_1_property.html</Path>
    <Anchor>abba00791cb38864ac81de9039337f41f</Anchor>
    <Abstract>user-friendly name of the property </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enums</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::PropertyMap::Property</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_property_map_1_1_property.html</Path>
    <Anchor>ad78a7ed871bdf8543a509b4739ee7db9</Anchor>
    <Abstract>Name of enum values that are mapped to the integer value based on the index. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::PropertyObject</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Abstract>Maps generic properties to user-defined types/keys/names and tracks the current type/key/name for que...</Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCurrentType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a7be001331636293e20b0ad923bd0d47c</Anchor>
    <Abstract>Set the current type to use for &amp;#39;type-less&amp;#39; queries and updates. </Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>aa734499cbc7b731d3067febc6404c547</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateProperty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>ae67bcb6d6c60185279b614b4e7f9e90d</Anchor>
    <Abstract>Update the value of the given property for the current type. </Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasProperty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a94e40fa3615655b17e2ebb0ece1feb8b</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProperty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a193f26124fd6b17361712bf73d3e3d37</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProperties</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a9d0d4a64b6c56f5e6391bc7ff9d7097b</Anchor>
    <Abstract>Assign a new set of properties to the current type. </Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProperties</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>ae47c1492190d22b89eeecce803eed03c</Anchor>
    <Abstract>Assign a new set of properties to the given type. </Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateProperties</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>af063e495e86c76a2373a8157a0be190d</Anchor>
    <Abstract>Update or add all the properties from the given map to the current type. </Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasProperties</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>addb6e267bc0577f6ba167e80c0fbf8ef</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPropertyMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a86305e70af8a31b766e5ec125d823a8c</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPropertyMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>aa9ab71e30aff45b137836bb1154f1f86</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a1cb66705acbb0ec08d305b4b08d65c05</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clonePropertiesFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a8d6ad46b65b32439443194e49fac2b9c</Anchor>
    <Abstract>Clear all current properties and clone new properties from object. </Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ProteinLoader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ProteinLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_protein_loader.html</Path>
    <Abstract>Loads protein from PDB files http://www.rcsb.org. </Abstract>
    <DeclaredIn>ProteinLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSupported</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ProteinLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_protein_loader.html</Path>
    <Anchor>a5bce1264df58d6ee83d07c30fdf732bb</Anchor>
    <Abstract>Query the loader if it can load the given file. </Abstract>
    <DeclaredIn>ProteinLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importFromFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ProteinLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_protein_loader.html</Path>
    <Anchor>abdc4eff1e719168b0f83e48dd17af020</Anchor>
    <Abstract>Import the data from the given file and return the created model. </Abstract>
    <DeclaredIn>ProteinLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importFromBlob</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::ProteinLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_protein_loader.html</Path>
    <Anchor>a6150747dc7a5962adbafaf25d5fc4095</Anchor>
    <Abstract>Import the data from the blob and return the created model. </Abstract>
    <DeclaredIn>ProteinLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Renderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Renderer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_renderer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVariance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Renderer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_renderer.html</Path>
    <Anchor>ab4e9a833c165e3e679d8eb7fe9eb18e6</Anchor>
    <DeclaredIn>Renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCurrentType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a7be001331636293e20b0ad923bd0d47c</Anchor>
    <Abstract>Set the current type to use for &amp;#39;type-less&amp;#39; queries and updates. </Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>aa734499cbc7b731d3067febc6404c547</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateProperty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>ae67bcb6d6c60185279b614b4e7f9e90d</Anchor>
    <Abstract>Update the value of the given property for the current type. </Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasProperty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a94e40fa3615655b17e2ebb0ece1feb8b</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProperty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a193f26124fd6b17361712bf73d3e3d37</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProperties</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a9d0d4a64b6c56f5e6391bc7ff9d7097b</Anchor>
    <Abstract>Assign a new set of properties to the current type. </Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProperties</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>ae47c1492190d22b89eeecce803eed03c</Anchor>
    <Abstract>Assign a new set of properties to the given type. </Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateProperties</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>af063e495e86c76a2373a8157a0be190d</Anchor>
    <Abstract>Update or add all the properties from the given map to the current type. </Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasProperties</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>addb6e267bc0577f6ba167e80c0fbf8ef</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPropertyMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a86305e70af8a31b766e5ec125d823a8c</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPropertyMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>aa9ab71e30aff45b137836bb1154f1f86</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a1cb66705acbb0ec08d305b4b08d65c05</Anchor>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clonePropertiesFrom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::PropertyObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_property_object.html</Path>
    <Anchor>a8d6ad46b65b32439443194e49fac2b9c</Anchor>
    <Abstract>Clear all current properties and clone new properties from object. </Abstract>
    <DeclaredIn>PropertyObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Renderer::PickResult</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Renderer::PickResult</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_renderer_1_1_pick_result.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::RenderingParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Abstract>Manages rendering parameters. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a59da280f420719c169f81144aabe97a4</Anchor>
    <Abstract>Displays values of registered parameters. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCurrentRenderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a7ba1506ea090b166032c788387490bfd</Anchor>
    <Abstract>OSPRay renderer. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRenderers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>ada4015fc7688f21664d7b9dc28132cb5</Anchor>
    <Abstract>OSPRay supported renderers. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeDefaultCameras</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>aae0ed47a19b6f78280ec32e6c190598f</Anchor>
    <Abstract>Camera type. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSamplesPerPixel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>abcf9f98c39218db3f8c95b6aa7df3b6c</Anchor>
    <Abstract>Number of samples per pixel. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeadLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a5a0b99764433a5484679dcde5489fd89</Anchor>
    <Abstract>Light source follow camera origin. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAccumulation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a2df3b549c61199b65ddf134b334a2de5</Anchor>
    <Abstract>If the rendering should be refined by accumulating multiple passes. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVarianceThreshold</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a75ac12ab8e75cb2c8cf3cec68cb1e0b9</Anchor>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVarianceThreshold</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a087247fdb304016359646ed7c07fedcc</Anchor>
    <Abstract>The threshold where accumulation stops if the variance error reaches this value. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxAccumFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a98779393dd60f8ed99638cdb049a1f9a</Anchor>
    <Abstract>The maximum number of accumulation frames before engine signals to stop continuation of rendering...</Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>af8c4e3e33c6d75a71893d7d48f0e4fec</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::RenderingParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_rendering_parameters.html</Path>
    <Anchor>a0597328ac9cf2d922dde652eeb1f8eb9</Anchor>
    <Abstract>Parses parameters managed by the class. </Abstract>
    <DeclaredIn>RenderingParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::RenderInput</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::RenderInput</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_render_input.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::RenderOutput</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::RenderOutput</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_render_output.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::RpcDescription</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::RpcDescription</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_rpc_description.html</Path>
    <Abstract>Description for RPC with no parameter. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::RpcParameterDescription</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::RpcParameterDescription</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_rpc_parameter_description.html</Path>
    <Abstract>Description for RPC with one parameter. </Abstract>
    <DeclaredIn>types.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Scene</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Abstract>Scene object. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Scene</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>afa8438c41871f9d73e10968182a9c53f</Anchor>
    <Abstract>Creates a scene object responsible for handling models, simulations and light sources. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ac87b6e21aa844c490f10382b4ae8cd76</Anchor>
    <Abstract>Called after scene-related changes have been made before rendering the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitLights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a0319ce64948a242a206b8c7cdd7d0a2f</Anchor>
    <Abstract>Commits lights to renderers. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBounds</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>afa739d6732e613642f740b6a8e8e062d</Anchor>
    <Abstract>Returns the bounding box of the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a7d89afe05548c882153522a0a4f751ac</Anchor>
    <Abstract>Attaches a light source to the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>aa918d868eaed44684a990f669b333249</Anchor>
    <Abstract>Gets a light source from the scene for a given index. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a681a8a7e95f279226a0ac02f2b8f4201</Anchor>
    <Abstract>Removes a light source from the scene for a given index. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearLights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a922c519f4acc99228313732f25ee5ec6</Anchor>
    <Abstract>Removes all light sources from the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addModel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ae7ff498e3f3fa699b087577959af8f5a</Anchor>
    <Abstract>Adds a model to the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeModel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>afb25f042c88d717e0c1ab46f35055bdc</Anchor>
    <Abstract>Removes a model from the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildDefault</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a13667f2db068b46530102270f3b0e0ce</Anchor>
    <Abstract>Builds a default scene made of a Cornell box, a reflective cube, and a transparent sphere...</Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>empty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a637be3e4e463527da2f316b520c20bcd</Anchor>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addClipPlane</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>af7e90042add8f01ded6e8c5c972c23a5</Anchor>
    <Abstract>Add a clip plane to the scene. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getClipPlane</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ae2c9fa6474cbf7cd5241018edb915f95</Anchor>
    <Abstract>Get a clip plane by its ID. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeClipPlane</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a81bc82673b624f1fd0eab1d93e3bf1f3</Anchor>
    <Abstract>Remove a clip plane by its ID, or nop if not found. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getClipPlanes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ac93106413e783f9717fab918ca061df3</Anchor>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCADiffusionSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a6dd8458feefbd6d61c5e9a44b477acdd</Anchor>
    <Abstract>Sets the Calcium diffusion simulation handler. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCADiffusionSimulationHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ae18fcfd7021a6ef3c5624c0e466dbc3c</Anchor>
    <Abstract>Gets the Calcium diffusion simulation handler. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadFromCacheFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>ade17e86cbdea01b469f9ad6fbaa4a794</Anchor>
    <Abstract>Loads geometry a binary cache file defined by the –load-cache-file command line parameter. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>saveToCacheFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a0d835b82330c961a0d7967ac08f96567</Anchor>
    <Abstract>Saves geometry a binary cache file defined by the –save-cache-file command line parameter. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSizeInBytes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a361219416ee29d355f3c8e2101a449c7</Anchor>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumModels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a1bb0d2bf02bd495f33cdcb8b3c0d7ad2</Anchor>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaterialsColorMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a52fa731a8e9151be10333853a44aad0d</Anchor>
    <Abstract>initializeMaterials Initializes materials for all models in the scene </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadModel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a902709b60ac0a1f861b23591ae3a3864</Anchor>
    <Abstract>Load the model from the given blob. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadModel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a3e284b4aed6a859c8c90dcfc9a3c954b</Anchor>
    <Abstract>Load the model from the given file. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLoaderRegistry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a654d1a0eb616ba1e7e1f95c672b9cfac</Anchor>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildEnvironmentMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Scene</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene.html</Path>
    <Anchor>a9c1e23cc6a44d8ead66774d7846d3a39</Anchor>
    <Abstract>Builds environment map according to command line parameter –environment-map. </Abstract>
    <DeclaredIn>Scene.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::SceneParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::SceneParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene_parameters.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::SceneParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene_parameters.html</Path>
    <Anchor>ae69b42b281f99d368ef62167a3a63a8f</Anchor>
    <Abstract>Displays values of registered parameters. </Abstract>
    <DeclaredIn>SceneParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEnvironmentMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::SceneParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene_parameters.html</Path>
    <Anchor>a365e760a80a1eb586614a95cd53ec696</Anchor>
    <Abstract>file name of the environment map </Abstract>
    <DeclaredIn>SceneParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>af8c4e3e33c6d75a71893d7d48f0e4fec</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::SceneParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_scene_parameters.html</Path>
    <Anchor>a60f38dbe23eabee57fb2b4d8db149260</Anchor>
    <Abstract>Parses parameters managed by the class. </Abstract>
    <DeclaredIn>SceneParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ScreenSpaceProcessor</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ScreenSpaceProcessor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_screen_space_processor.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ScreenSpaceProcessorData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ScreenSpaceProcessorData</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_screen_space_processor_data.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::SDFGeometry</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::SDFGeometry</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_s_d_f_geometry.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::SharedDataVolume</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::SharedDataVolume</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_shared_data_volume.html</Path>
    <Abstract>A volume type where the voxels are set once and only referenced from the source location. </Abstract>
    <DeclaredIn>SharedDataVolume.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mapData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::SharedDataVolume</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_shared_data_volume.html</Path>
    <Anchor>a12d75505a58e8f7be177bba1590fc388</Anchor>
    <Abstract>Convenience functions to use voxels from given file and pass them to setVoxels(). ...</Abstract>
    <DeclaredIn>SharedDataVolume.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::ShortcutInformation</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::ShortcutInformation</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_shortcut_information.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Statistics</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Statistics</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_statistics.html</Path>
    <Abstract>Captures various statistics about rendering, scenes, etc. </Abstract>
    <DeclaredIn>Statistics.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Streamline</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Streamline</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_streamline.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::StreamlinesData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::StreamlinesData</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_streamlines_data.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::StreamParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::StreamParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_stream_parameters.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::StreamParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_stream_parameters.html</Path>
    <Anchor>aadc8ce7e7a5a74ac8b8bb6f89dbc53bc</Anchor>
    <Abstract>Displays values of registered parameters. </Abstract>
    <DeclaredIn>StreamParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEnabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::StreamParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_stream_parameters.html</Path>
    <Anchor>a4cdd3d732b39cc934bb71b3203578b85</Anchor>
    <Abstract>Streaming enabled. </Abstract>
    <DeclaredIn>StreamParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCompression</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::StreamParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_stream_parameters.html</Path>
    <Anchor>a249dd6d75a30e1052a54a2d9a4aed910</Anchor>
    <Abstract>Stream compression enabled. </Abstract>
    <DeclaredIn>StreamParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getQuality</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::StreamParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_stream_parameters.html</Path>
    <Anchor>a15f5932a44ab771bd516ae7a54a50d4e</Anchor>
    <Abstract>Stream compression quality, 1 (worst) to 100 (best) </Abstract>
    <DeclaredIn>StreamParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getId</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::StreamParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_stream_parameters.html</Path>
    <Anchor>a9b27e23cec72ce3d6826edb9e24d370e</Anchor>
    <Abstract>Stream ID; defaults to DEFLECT_ID if empty. </Abstract>
    <DeclaredIn>StreamParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHostname</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::StreamParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_stream_parameters.html</Path>
    <Anchor>ae3e75a5d3fbf3196437a0fad09bbed3f</Anchor>
    <Abstract>Stream hostname; defaults to DEFLECT_HOST if empty. </Abstract>
    <DeclaredIn>StreamParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::StreamParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_stream_parameters.html</Path>
    <Anchor>a0ac4da4e8b03ecfa7d60e3c1a3fb0c86</Anchor>
    <Abstract>Stream port; defaults to 1701 if empty. </Abstract>
    <DeclaredIn>StreamParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getResizing</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::StreamParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_stream_parameters.html</Path>
    <Anchor>a15a8a4dd27a9ed0bf6e545f81c1b9694</Anchor>
    <Abstract>Stream resizing enabled. </Abstract>
    <DeclaredIn>StreamParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>af8c4e3e33c6d75a71893d7d48f0e4fec</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Task</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>brayns::Task</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Abstract>A task type which is directly scheduled after creation. </Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Task</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>adb4c824ce065c30129e25c2973b5760b</Anchor>
    <Abstract>Create an empty task; use task() and async++ to do something meaningful. </Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Task</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>ac5558024a92ce91fe5c6d8cc3ffd84ee</Anchor>
    <Abstract>Create and schedule a task with the given functor or lambda. </Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>schedule</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>abfc3f1e06d95e8923df75e9651b1f0f4</Anchor>
    <Abstract>NOP for this task; tasks are running after construction. </Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>result</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>a9a6c0675ba8c6321bff7ffbf044fdc99</Anchor>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Task</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task.html</Path>
    <Anchor>aa4f761290010bd3a0c7a026629524042</Anchor>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cancel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>af1019fe39fea3201341ea4301186a911</Anchor>
    <Abstract>Cancels the task if is either waiting to be scheduled or already running. </Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finishCancel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a12c64d0b0aa5bc8916d656fbffd5e8dd</Anchor>
    <Abstract>Indicate that cancel processing has finished and call the function given to cancel(). </Abstract>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>canceled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a108ebfd245dbddf0df673e9624702f1f</Anchor>
    <DeclaredIn>Task.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>progress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>brayns::AbstractTask</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_task.html</Path>
    <Anchor>a9c4958935de14f9db7480e9bb3566735</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::TaskFunctor</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::TaskFunctor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task_functor.html</Path>
    <Abstract>A base class for functors that can be used for Tasks. </Abstract>
    <DeclaredIn>TaskFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ProgressFunc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>brayns::TaskFunctor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task_functor.html</Path>
    <Anchor>af5ae54477aeecf3b89c696867171a980</Anchor>
    <Abstract>message, increment, amount </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProgressFunc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::TaskFunctor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task_functor.html</Path>
    <Anchor>ad8283ae7984fbd41e7d5e61e57238ad3</Anchor>
    <Abstract>Set the function when progress() is called. </Abstract>
    <DeclaredIn>TaskFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>progress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::TaskFunctor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task_functor.html</Path>
    <Anchor>a0dab436f8eb57c24de929b894069f2cd</Anchor>
    <Abstract>Report progress using the provided callback from setProgressFunc() and also check if the execution ha...</Abstract>
    <DeclaredIn>TaskFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCancelToken</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::TaskFunctor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task_functor.html</Path>
    <Anchor>a0463073aa21dd20ffa10309757d2e52b</Anchor>
    <Abstract>Set the cancel token from e.g. </Abstract>
    <DeclaredIn>TaskFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cancelCheck</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::TaskFunctor</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task_functor.html</Path>
    <Anchor>ac32d29d096272b4f62383f83eaae88e4</Anchor>
    <Abstract>Checks if the execution has been cancelled. </Abstract>
    <DeclaredIn>TaskFunctor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::TaskRuntimeError</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::TaskRuntimeError</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_task_runtime_error.html</Path>
    <Abstract>An exception type that shall be thrown at any point during the task execution to provide useful error...</Abstract>
    <DeclaredIn>TaskRuntimeError.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Texture2D</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Texture2D</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_texture2_d.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Timer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Timer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_timer.html</Path>
    <Abstract>Simple timer class to measure time spent in a portion of the code. </Abstract>
    <DeclaredIn>Timer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Timer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_timer.html</Path>
    <Anchor>aa4b955ae78d2e06e444eb7b4ecba62d4</Anchor>
    <Abstract>(Re)Start the timer at &amp;#39;now&amp;#39; </Abstract>
    <DeclaredIn>Timer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>elapsed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Timer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_timer.html</Path>
    <Anchor>a9930775f8b5623553604bbddf92a304a</Anchor>
    <DeclaredIn>Timer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Timer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_timer.html</Path>
    <Anchor>ab45e9548afa774cc5eaf70cb6c54975d</Anchor>
    <Abstract>Stops the timer and records the interval + a smoothed value over time. </Abstract>
    <DeclaredIn>Timer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>milliseconds</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Timer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_timer.html</Path>
    <Anchor>a8f5a63abdf4ac864d12f08e422db17c9</Anchor>
    <DeclaredIn>Timer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>seconds</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Timer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_timer.html</Path>
    <Anchor>a0a291f3215e7fb699f15e634bcbde374</Anchor>
    <DeclaredIn>Timer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>perSecond</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Timer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_timer.html</Path>
    <Anchor>a293726bf5766ee48ee904a157c0dde3a</Anchor>
    <DeclaredIn>Timer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>perSecondSmoothed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::Timer</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_timer.html</Path>
    <Anchor>a7d9c329c5310b950435de63138586a1d</Anchor>
    <DeclaredIn>Timer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::TransferFunction</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::TransferFunction</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_transfer_function.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::TransferFunction</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_transfer_function.html</Path>
    <Anchor>a4dd7b9c4ac8e4942617a50f412bc6d44</Anchor>
    <Abstract>Reset to gray-scale with opacity [0..1] and value range [0,255]. </Abstract>
    <DeclaredIn>TransferFunction.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Transformation</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Transformation</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_transformation.html</Path>
    <Abstract>Defines the translation, rotation and scale parameters to be applied to a scene asset. </Abstract>
    <DeclaredIn>Transformation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::TrianglesMesh</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::TrianglesMesh</Scope>
    </TokenIdentifier>
    <Path>structbrayns_1_1_triangles_mesh.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Abstract>Information about the current braynsCommon version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ad4caded283f86362198a2ba1eb478eba</Anchor>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ac28a55327f904d62ab90dc172be1b440</Anchor>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a74c8402e7ceed27e0c773cf39e8e01b0</Anchor>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a7230a3f09fc682b33cf1cfff19bebce7</Anchor>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ab23018d1ff96bba3a16b1b5a595115d3</Anchor>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>af99a8b1956c6cb800290c9f8d303f36a</Anchor>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a6b194dfa87bafdc9a6512fe7ad57794c</Anchor>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a4b4666df38d8c345e91425821c18c8e0</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSchema</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>af7fbd75a18a0d7b20f875b0669f3609c</Anchor>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toJSON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a2288688dd599d92fcaec2f4d4e89a72d</Anchor>
    <DeclaredIn>common/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ad4caded283f86362198a2ba1eb478eba</Anchor>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ac28a55327f904d62ab90dc172be1b440</Anchor>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a74c8402e7ceed27e0c773cf39e8e01b0</Anchor>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a7230a3f09fc682b33cf1cfff19bebce7</Anchor>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ab23018d1ff96bba3a16b1b5a595115d3</Anchor>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>af99a8b1956c6cb800290c9f8d303f36a</Anchor>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a6b194dfa87bafdc9a6512fe7ad57794c</Anchor>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a4b4666df38d8c345e91425821c18c8e0</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSchema</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>af7fbd75a18a0d7b20f875b0669f3609c</Anchor>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toJSON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a2288688dd599d92fcaec2f4d4e89a72d</Anchor>
    <DeclaredIn>parameters/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ad4caded283f86362198a2ba1eb478eba</Anchor>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ac28a55327f904d62ab90dc172be1b440</Anchor>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a74c8402e7ceed27e0c773cf39e8e01b0</Anchor>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a7230a3f09fc682b33cf1cfff19bebce7</Anchor>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ab23018d1ff96bba3a16b1b5a595115d3</Anchor>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>af99a8b1956c6cb800290c9f8d303f36a</Anchor>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a6b194dfa87bafdc9a6512fe7ad57794c</Anchor>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a4b4666df38d8c345e91425821c18c8e0</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSchema</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>af7fbd75a18a0d7b20f875b0669f3609c</Anchor>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toJSON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a2288688dd599d92fcaec2f4d4e89a72d</Anchor>
    <DeclaredIn>tasks/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ad4caded283f86362198a2ba1eb478eba</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ac28a55327f904d62ab90dc172be1b440</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a74c8402e7ceed27e0c773cf39e8e01b0</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a7230a3f09fc682b33cf1cfff19bebce7</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>ab23018d1ff96bba3a16b1b5a595115d3</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>af99a8b1956c6cb800290c9f8d303f36a</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a6b194dfa87bafdc9a6512fe7ad57794c</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a4b4666df38d8c345e91425821c18c8e0</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSchema</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>af7fbd75a18a0d7b20f875b0669f3609c</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toJSON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>brayns::Version</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_version.html</Path>
    <Anchor>a2288688dd599d92fcaec2f4d4e89a72d</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::Volume</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::Volume</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume.html</Path>
    <Abstract>A base class for volumes to share common properties. </Abstract>
    <DeclaredIn>Volume.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::VolumeLoader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::VolumeLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_loader.html</Path>
    <Abstract>A volume loader for raw (*.raw with params for dimensions or *.mhd) volumes. </Abstract>
    <DeclaredIn>VolumeLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSupported</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_loader.html</Path>
    <Anchor>a1b72b0fdf94708acac545b2f0ce2a91a</Anchor>
    <Abstract>Query the loader if it can load the given file. </Abstract>
    <DeclaredIn>VolumeLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importFromBlob</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_loader.html</Path>
    <Anchor>af011d2e872bf38e2ddf558632aed93b9</Anchor>
    <Abstract>Import the data from the blob and return the created model. </Abstract>
    <DeclaredIn>VolumeLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importFromFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_loader.html</Path>
    <Anchor>a0dac68cf5fd03dc028b58016241833e2</Anchor>
    <Abstract>Import the data from the given file and return the created model. </Abstract>
    <DeclaredIn>VolumeLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::VolumeParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::VolumeParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_parameters.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_parameters.html</Path>
    <Anchor>a1fcb2d4b35ba14948765e01671691b4b</Anchor>
    <Abstract>Displays values of registered parameters. </Abstract>
    <DeclaredIn>VolumeParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDimensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_parameters.html</Path>
    <Anchor>aac205c6e87fabd2c003a14b59292d221</Anchor>
    <Abstract>Volume dimensions. </Abstract>
    <DeclaredIn>VolumeParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getElementSpacing</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_parameters.html</Path>
    <Anchor>a17b161ea204ba047536f890f0d26e6d1</Anchor>
    <Abstract>Volume scale. </Abstract>
    <DeclaredIn>VolumeParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_parameters.html</Path>
    <Anchor>a8262ccf63cd0135cfbf15c3ca08463e3</Anchor>
    <Abstract>Volume offset. </Abstract>
    <DeclaredIn>VolumeParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AbstractParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::AbstractParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_abstract_parameters.html</Path>
    <Anchor>af8c4e3e33c6d75a71893d7d48f0e4fec</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>AbstractParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad8cae51bd6d7195f8e6e593876cc4d29</Anchor>
    <Abstract>Custom copy constructor to not copy changedCallback and solve non-copyable atomic modified state...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a62ed05bd20c3117d7ed6a881b2a723e8</Anchor>
    <Abstract>Custom assignment operator that does not copy the changedCallback. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad5e3f16c81e260c2fdfcf5aa00fca6fd</Anchor>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a9ab1fecf6b6f5259defb3080198a4587</Anchor>
    <Abstract>Reset the modified state, typically done after changes have been applied. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onModified</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>ad1df6f6092c696b75304d8863fd3dfaa</Anchor>
    <Abstract>Set a function that is called after this object has been modified. </Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::VolumeParameters</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_volume_parameters.html</Path>
    <Anchor>a1452a93f050be72357eaca1098a4db25</Anchor>
    <Abstract>Parses parameters managed by the class. </Abstract>
    <DeclaredIn>VolumeParameters.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_updateValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::BaseObject</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_base_object.html</Path>
    <Anchor>a74ec06119ffce28516d53565d9c39fe1</Anchor>
    <Abstract>Helper function for derived classes to update a parameter and mark it modified if it has changed...</Abstract>
    <DeclaredIn>BaseObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>brayns::XYZBLoader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>brayns::XYZBLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_x_y_z_b_loader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSupported</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::XYZBLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_x_y_z_b_loader.html</Path>
    <Anchor>a4a9529cc096bd37c0cd047cd34e86a91</Anchor>
    <Abstract>Query the loader if it can load the given file. </Abstract>
    <DeclaredIn>XYZBLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importFromBlob</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::XYZBLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_x_y_z_b_loader.html</Path>
    <Anchor>ad6d15fd676a34027407c40dc116a4b88</Anchor>
    <Abstract>Import the data from the blob and return the created model. </Abstract>
    <DeclaredIn>XYZBLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>importFromFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>brayns::XYZBLoader</Scope>
    </TokenIdentifier>
    <Path>classbrayns_1_1_x_y_z_b_loader.html</Path>
    <Anchor>a8abb5c9d2904c2c62b3335eb1eb9e968</Anchor>
    <Abstract>Import the data from the given file and return the created model. </Abstract>
    <DeclaredIn>XYZBLoader.h</DeclaredIn>
  </Token>
</Tokens>
